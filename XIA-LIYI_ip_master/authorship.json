[
  {
    "path": "src/main/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "T | 0 |  read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "T | 0 |  return book"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 2
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\tprivate String byDateString;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\tprivate LocalDate byDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\tpublic Deadline(String taskContent, String byDateString) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\tsuper(taskContent);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\tthis.byDateString \u003d byDateString;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\tpublic Deadline(String taskContent, LocalDate byDate) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\tsuper(taskContent);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\tthis.byDate \u003d byDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\tpublic String getType() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\treturn \"D\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        if (byDateString !\u003d null) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            return byDateString;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            return byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\treturn \"[D]\" + super.toString() + \" (by: \" + getDate() + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 34
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * Duke is a small educational project which acts"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * based on user input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * @author Xia Liyi"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    \tScanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        // String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        //         + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        //         + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        //         + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        //         + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        Storage file \u003d new Storage(\"../data/duke.txt\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        ui.showLine(\"Hello! I\u0027m Duke\\nWhat can I do for you\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        TaskList taskList \u003d new TaskList(file.getTasks());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \tString input \u003d sc.next();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \tif (input.equals(new String(\"bye\"))) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\tbreak;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \tif (input.equals(new String(\"list\"))) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\tint num \u003d 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\tui.showLine(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\tfor (Task task: taskList.getList()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\t\tui.showLine(num + \".\" + task.toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\t\tnum++;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\t}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t} else if (input.equals(new String(\"done\"))) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\tint index \u003d sc.nextInt();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\tTask currentTask \u003d taskList.get(index - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\tcurrentTask.markAsDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\tui.showLine(\"Nice! I\u0027ve marked this task as done:\\n\" + currentTask.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t} else if (input.equals(new String(\"todo\"))) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\tString taskContent \u003d sc.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\tToDo newTask \u003d new ToDo(taskContent);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\ttry {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\t\tnewTask.test();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\t} catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\t\tSystem.out.println(e.getMsg());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\t\tcontinue;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\t}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    \t\t\ttaskList.add(newTask);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    \t\t\tui.showLine(\"Got it. I\u0027ve added this task:\\n\" + newTask.toString() + \"\\nNow you have \" "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                        + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t} else if (input.equals(new String(\"deadline\"))) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\tString task  \u003d sc.nextLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\tint index \u003d task.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\tString taskContent \u003d task.substring(0, index - 1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\tString dateString \u003d task.substring(index + 4);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\tTask newTask;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    LocalDate taskDeadline \u003d LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    newTask \u003d new Deadline(task, taskDeadline);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    newTask \u003d new Deadline(task, dateString);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\ttaskList.add(newTask);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\tui.showLine(\"Got it. I\u0027ve added this task:\\n\" + newTask.toString() + \"\\nNow you have \" "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                        + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t} else if (input.equals(new String(\"event\"))) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\tString task  \u003d sc.nextLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\tint index \u003d task.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\tString taskContent \u003d task.substring(0, index - 1);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\tString taskTime \u003d task.substring(index + 4);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\tEvent newTask \u003d new Event(taskContent, taskTime);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\ttaskList.add(newTask);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\tui.showLine(\"Got it. I\u0027ve added this task:\\n\" + newTask.toString() + \"\\nNow you have \" "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                        + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t} else if (input.equals(new String(\"delete\"))) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\tint index \u003d sc.nextInt();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\tTask currentTask \u003d taskList.get(index - 1);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                taskList.remove(index - 1);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\tui.showLine(\"Noted. I\u0027ve removed this task:\\n\" + currentTask.toString() + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t} else if (input.equals(\"find\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                String condition \u003d sc.nextLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                ArrayList\u003cTask\u003e newTaskList \u003d taskList.find(condition);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                int num \u003d 1;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                for (Task task: newTaskList) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    ui.showLine(num + \".\" + task.toString());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    num++;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\tSystem.out.println(\"added: \" + input);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t\ttaskList.add(new Task(input));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \t}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \tfile.write(taskList.getList());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        ui.showLine(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 95,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\tString msg;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\tpublic DukeException(String msg) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\tthis.msg \u003d msg;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\tpublic String getMsg() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\treturn msg;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\tprivate String eventTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\tpublic Event(String taskContent, String eventTime) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\tsuper(taskContent);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\tthis.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\tpublic String getType() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\treturn \"E\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\tpublic String getDate() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\treturn this.eventTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\treturn \"[E]\" + super.toString() + \" (at: \" + this.eventTime + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 21
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * Parser deals with making sense of the user command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 6
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * Stroage deals with loading tasks from the file "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * and saving tasks in the file"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private String path;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    Storage(String path) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        File file \u003d new File(path);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            this.file \u003d file;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            this.path \u003d path;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                this.file \u003d file;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                this.path \u003d path;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                System.out.println(\"Failed to create\" + this.path);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     * This method wites all of tasks onto the disk."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     * @return nothing."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     */ "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    void write(ArrayList\u003c? extends Task\u003e tasks) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            FileWriter writer \u003d new FileWriter(path, false);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            for (Task task: tasks) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                String taskInfo \u003d task.getType() + \" | \" + (task.isDone() ? 1 : 0) "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                        + \" | \" + task.getContent();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                if (task.getDate() !\u003d \"\") {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    taskInfo \u003d taskInfo + \" | \" + task.getDate();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                taskInfo \u003d taskInfo + \"\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                writer.write(taskInfo);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            System.out.println(\"Failed to write into \" + this.path);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     * This method fetches all of tasks stored in disk."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     * @return an ArrayList."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     */ "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            Scanner sc \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                String taskContent \u003d sc.nextLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                String[] taskInfo \u003d taskContent.split(\" | \");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                if (taskInfo[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    ToDo task \u003d new ToDo(taskInfo[2]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    if (taskInfo[2].equals(\"1\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                        task.markAsDone();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    tasks.add(task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                } else if (taskInfo[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    Event task \u003d new Event(taskInfo[2], taskInfo[3]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    if (taskInfo[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                        task.markAsDone();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    tasks.add(task);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                } else if (taskInfo[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    Deadline task;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                        LocalDate taskDeadline \u003d LocalDate.parse(taskInfo[3]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                        task \u003d new Deadline(taskInfo[2], taskDeadline);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                        task \u003d new Deadline(taskInfo[2], taskInfo[3]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    if (taskInfo[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                        task.markAsDone();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    tasks.add(task);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            System.out.println(\"Failed to load \" + this.path);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 101
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\tprivate boolean isDone;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\tprivate String taskContent;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\tpublic Task(String taskContent) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\tthis.taskContent \u003d taskContent;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\tthis.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\tpublic void markAsDone() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\tthis.isDone \u003d true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\tpublic void test() throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\tif (taskContent.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\t\tthrow new DukeException(\"☹ OOPS!!! The description of a task cannot be empty.\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\tpublic String getType() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\treturn \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\tpublic boolean isDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\treturn this.isDone;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\tpublic String  getContent() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\treturn this.taskContent;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\tpublic String  getDate() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\treturn \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\tif (isDone) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\t\treturn \"[\" + \"\\u2713\" + \"] \" + this.taskContent; "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\t\treturn \"[\" + \"\\u2718\" + \"] \" + this.taskContent;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\t// if (isDone) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\t// \treturn \"[true]\" + this.taskContent;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\t// } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\t// \treturn \"[false]\" + this.taskContent;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\t// }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 42
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * TaskList contains the task list e.g., "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * it has operations to add/delete tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    void add(Task task) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    void remove(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    Task get(int index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    \treturn taskList.get(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    int size() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    \treturn taskList.size();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    ArrayList\u003cTask\u003e find(String condition) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        ArrayList\u003cTask\u003e newTaskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        for (Task task: taskList) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            if (task.getContent().contains(condition)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                newTaskList.add(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return newTaskList;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 43
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\tpublic ToDo(String taskContent){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\tsuper(taskContent);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\tpublic String getType() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\treturn \"T\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\treturn \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 14
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * Ui deals with interactions with the user."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\tpublic static void showLine(String msg) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t\tSystem.out.println(msg);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 8
    }
  },
  {
    "path": "src/test/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    Task toDo \u003d new ToDo(\"Read Book\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    Task event \u003d new Event(\"Project Meeting\", \"today\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    Task deadline \u003d new Deadline(\"Return Book\", \"2020-09-01\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public void ToDoTest(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        assertEquals(\"Read Book\", toDo.getTask());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public void EventTest() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        assertEquals(\"today\", event.getDate());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public void DeadlineTest() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        assertEquals(\"Sep 9, 2020\", deadline.getDate());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 23
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 1,
      "-": 20
    }
  }
]
