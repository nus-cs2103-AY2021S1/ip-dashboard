[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String STRING_FORMAT \u003d \"[D][%s] %s (by: %s)\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    protected String dueDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public Deadline(String description, String dueDate) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return String.format(Deadline.STRING_FORMAT, getStatusIcon(), description, dueDate);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 15
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String STRING_FORMAT \u003d \"[E][%s] %s (at: %s)\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    protected String eventTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public Event(String description, String eventTime) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return String.format(Event.STRING_FORMAT, getStatusIcon(), description, eventTime);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 15
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String STRING_FORMAT \u003d \"[%s] %s\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        //return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return String.format(Task.STRING_FORMAT, getStatusIcon(), description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 25
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String STRING_FORMAT \u003d \"[T][%s] %s\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return String.format(Todo.STRING_FORMAT, getStatusIcon(), description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 12
    }
  },
  {
    "path": "src/main/java/Viscount.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class Viscount {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String VISCOUNT_LOGO \u003d"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            \"        _  _____  _____                  _    \\n\" +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            \"       (_)/ ____|/ ____|                | |   \\n\" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            \" __   ___| (___ | |     ___  _   _ _ __ | |_  \\n\" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            \" \\\\ \\\\ / / |\\\\___ \\\\| |    / _ \\\\| | | | \u0027_ \\\\| __| \\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            \"  \\\\ V /| |____) | |___| (_) | |_| | | | | |_  \\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            \"   \\\\_/ |_|_____/ \\\\_____\\\\___/ \\\\__,_|_| |_|\\\\__|\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String HORIZONTAL_LINE \u003d \"__________________________________________________\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static void printLogo() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        System.out.println(Viscount.VISCOUNT_LOGO);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static void speak(String message) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        System.out.println(Viscount.HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        System.out.println(Viscount.HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static String convertTaskListToString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            result +\u003d (i \u003d\u003d tasks.size() - 1)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                ? String.format(\"%d.%s\", i + 1, tasks.get(i).toString())"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                : String.format(\"%d.%s\\n\", i + 1, tasks.get(i).toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static void addToTaskList(Task task) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Viscount.speak(\"Very well. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                + task.toString()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                + String.format(\"\\nNow you have %d tasks in the list.\", tasks.size()));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static void removeFromTaskList(int taskIndex) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Task task \u003d tasks.get(taskIndex);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Viscount.speak(\"Very well. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                + task.toString()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                + String.format(\"\\nNow you have %d tasks in the list.\", tasks.size()));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static void markAsDone(Task task) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        task.setDone(true);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Viscount.speak(\"Very good! I have marked this task as done:\\n\" + task.toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static void parseInput(List\u003cString\u003e arguments) throws ViscountException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String command \u003d arguments.get(0);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            Viscount.speak(\"Here are the tasks in your list:\\n\" + Viscount.convertTaskListToString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } else if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            String description \u003d String.join(\" \", arguments.subList(1, arguments.size()));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            if (description.isEmpty()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                throw new ViscountMissingDescriptionException(\"todo\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                Viscount.addToTaskList(todo);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            int indexOfDueDate \u003d arguments.indexOf(\"/by\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            if (indexOfDueDate \u003d\u003d -1) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                throw new ViscountMissingArgumentException(\"/by\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                String description \u003d String.join(\" \", arguments.subList(1, indexOfDueDate));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                String dueDate \u003d String.join(\" \", arguments.subList(indexOfDueDate + 1, arguments.size()));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                if (description.isEmpty()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    throw new ViscountMissingDescriptionException(\"deadline\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                } else if (dueDate.isEmpty()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    throw new ViscountMissingArgumentDescriptionException(\"/by\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    Deadline deadline \u003d new Deadline(description, dueDate);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    Viscount.addToTaskList(deadline);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            int indexOfEventTime \u003d arguments.indexOf(\"/at\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            if (indexOfEventTime \u003d\u003d -1) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                throw new ViscountMissingArgumentException(\"/at\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                String description \u003d String.join(\" \", arguments.subList(1, indexOfEventTime));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                String eventTime \u003d String.join(\" \", arguments.subList(indexOfEventTime + 1, arguments.size()));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                if (description.isEmpty()) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    throw new ViscountMissingDescriptionException(\"event\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                } else if (eventTime.isEmpty()) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    throw new ViscountMissingArgumentDescriptionException(\"/at\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    Event event \u003d new Event(description, eventTime);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    Viscount.addToTaskList(event);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            if (arguments.size() \u003c 2) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                throw new ViscountMissingArgumentException(\"task number\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                int indexOfTask \u003d 0;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    indexOfTask \u003d Integer.parseInt(arguments.get(1));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    Viscount.markAsDone(tasks.get(indexOfTask - 1));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    throw new ViscountNumberFormatException(arguments.get(1));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    throw new ViscountIndexOutOfBoundsException(indexOfTask);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            if (arguments.size() \u003c 2) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                throw new ViscountMissingArgumentException(\"task number\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                int indexOfTask \u003d 0;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    indexOfTask \u003d Integer.parseInt(arguments.get(1));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    Viscount.removeFromTaskList(indexOfTask - 1);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    throw new ViscountNumberFormatException(arguments.get(1));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    throw new ViscountIndexOutOfBoundsException(indexOfTask);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throw new ViscountUnknownCommandException(command);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static void chat() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            List\u003cString\u003e arguments \u003d Arrays.asList(input.split(\" \"));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                Viscount.parseInput(arguments);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            } catch (ViscountException e) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                Viscount.speak(e.toString());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Viscount.printLogo();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Viscount.speak(\"Good day to you! I\u0027m Viscount.\\nWhat can I do for you on this blessed day?\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Viscount.chat();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Viscount.speak(\"Farewell my friend, I hope to see you again!\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 175
    }
  },
  {
    "path": "src/main/java/ViscountException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class ViscountException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"Alas, I do apologise but I don\u0027t know what that means.\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public ViscountException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return ViscountException.ERROR_MESSAGE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 12
    }
  },
  {
    "path": "src/main/java/ViscountIndexOutOfBoundsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class ViscountIndexOutOfBoundsException extends ViscountException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"Alas, your task list does not contain a task number %d.\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public ViscountIndexOutOfBoundsException(int index) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return String.format(ViscountIndexOutOfBoundsException.ERROR_MESSAGE, index);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 15
    }
  },
  {
    "path": "src/main/java/ViscountMissingArgumentDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class ViscountMissingArgumentDescriptionException extends ViscountException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"Alas, the description of the %s argument cannot be empty.\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private String argument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public ViscountMissingArgumentDescriptionException(String argument) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return String.format(ViscountMissingArgumentDescriptionException.ERROR_MESSAGE, argument);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 15
    }
  },
  {
    "path": "src/main/java/ViscountMissingArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class ViscountMissingArgumentException extends ViscountException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"Alas, you need to specify the %s argument.\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private String missingArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public ViscountMissingArgumentException(String missingArgument) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.missingArgument \u003d missingArgument;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return String.format(ViscountMissingArgumentException.ERROR_MESSAGE, missingArgument);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 15
    }
  },
  {
    "path": "src/main/java/ViscountMissingDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class ViscountMissingDescriptionException extends ViscountException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"Alas, the description of a %s cannot be empty.\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public ViscountMissingDescriptionException(String taskType) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return String.format(ViscountMissingDescriptionException.ERROR_MESSAGE, taskType);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 15
    }
  },
  {
    "path": "src/main/java/ViscountNumberFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class ViscountNumberFormatException extends ViscountException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"Alas, \u0027%s\u0027 is not a valid task number.\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private String argument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public ViscountNumberFormatException(String argument) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return String.format(ViscountNumberFormatException.ERROR_MESSAGE, argument);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 15
    }
  },
  {
    "path": "src/main/java/ViscountUnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class ViscountUnknownCommandException extends ViscountException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"Alas, I do apologise but I don\u0027t know what \u0027%s\u0027 means.\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public ViscountUnknownCommandException(String command) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return String.format(ViscountUnknownCommandException.ERROR_MESSAGE, command);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "blah"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "deadline /by"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "deadline return book /by"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "deadline return book /by wednesday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "event"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "event /at"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "event project meeting /at"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "event project meeting /at 6pm"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "done"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "done a"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "delete"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "delete a"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 25
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "java -classpath ..\\bin Viscount \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Viscount.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 1,
      "-": 37
    }
  }
]
