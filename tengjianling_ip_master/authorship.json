[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.1\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    mainClassName \u003d \"duke.javafx.Launcher\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    toolVersion \u003d \u00278.35\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 44,
      "tengjianling": 18
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " * Represents the main class for the Duke application"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public static final String FILENAME \u003d System.getProperty(\"user.dir\") + \"/data/duke.txt\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Creates a new Duke object with the specified file path."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param filePath Path of the file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Runs the duke application."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            if (c instanceof ExitCommand) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                Platform.exit();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                response \u003d c.executeToString(tasks, ui, storage);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            response \u003d e.getMessage();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        new Duke(FILENAME).run();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "tengjianling": 95
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " * Represents a user command that adds a task to the task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " * This includes user input of todo, deadline, and event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public AddCommand(String userInput) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    // checks if the program should exit."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Checks for the type of task added by the user based on the user input, and"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * adds the appropriate type of task to the task list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param tasks List of \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param ui Ui object created by Duke."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param storage Storage object created by Duke."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Task t \u003d new Task(userInput);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            t.validate();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            String fileString \u003d tasks.listToString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            if (t.isTodo()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                // add to do to fileString"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                ToDo todo \u003d t.convertToTodo();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                tasks.add(todo);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                fileString +\u003d todo.taskToText() + \"\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                // saves fileString to txt file"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                Storage.save(Duke.FILENAME, fileString);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                // print template message"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                System.out.println(\"    Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        + \"        \" + todo + \u0027\\n\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        + \"    Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            } else if (t.isDeadline()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                Deadline d \u003d t.convertToDeadline();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                tasks.add(d);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                fileString +\u003d d.taskToText() + \"\\n\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                // saves fileString to txt file"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                Storage.save(Duke.FILENAME, fileString);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                System.out.println(\"    Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        + \"        \" + d + \u0027\\n\u0027"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        + \"    Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            } else if (t.isEvent()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                Event e \u003d t.convertToEvent();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                tasks.add(e);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                fileString +\u003d e.taskToText() + \"\\n\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                // saves fileString to txt file"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                Storage.save(Duke.FILENAME, fileString);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                System.out.println(\"    Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        + \"        \" + e + \u0027\\n\u0027"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        + \"    Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public String executeToString(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Task t \u003d new Task(userInput);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            t.validate();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            String fileString \u003d tasks.listToString();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            if (t.isTodo()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "//                // add to do to fileString"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                ToDo todo \u003d t.convertToTodo();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                tasks.add(todo);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                fileString +\u003d todo.taskToText() + \"\\n\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                // saves fileString to txt file"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                Storage.save(Duke.FILENAME, fileString);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                // print template message"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                return \"    Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        + \"        \" + todo + \u0027\\n\u0027"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        + \"    Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            } else if (t.isDeadline()) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                Deadline d \u003d t.convertToDeadline();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                tasks.add(d);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                fileString +\u003d d.taskToText() + \"\\n\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                // saves fileString to txt file"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                Storage.save(Duke.FILENAME, fileString);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                return \"    Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        + \"        \" + d + \u0027\\n\u0027"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        + \"    Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            } else if (t.isEvent()) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                Event e \u003d t.convertToEvent();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                tasks.add(e);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                fileString +\u003d e.taskToText() + \"\\n\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                // saves fileString to txt file"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                Storage.save(Duke.FILENAME, fileString);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                return \"    Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        + \"        \" + e + \u0027\\n\u0027"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        + \"    Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            result \u003d e.getMessage();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tengjianling": 141
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " * Represents an abstract object from which all commands extend from."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public abstract String executeToString(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tengjianling": 16
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " * Represents a user command that deletes a task from the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public DeleteCommand(String userInput) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Checks for the number specified by the user, and deletes the task at that"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * number accordingly."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param tasks List of \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param ui Ui object created by Duke."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param storage Storage object created by Duke."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String fileString \u003d tasks.listToString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(userInput.substring(7));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Task curr \u003d tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String taskToBeDeleted \u003d curr.taskToText();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        System.out.println(\"    Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                + \"        \" + tasks.get(taskNumber - 1));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        fileString \u003d fileString.replace(taskToBeDeleted + \"\\n\", \"\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        // saves fileString to txt file"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Storage.save(Duke.FILENAME, fileString);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public String executeToString(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String fileString \u003d tasks.listToString();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(userInput.substring(7));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Task curr \u003d tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String taskToBeDeleted \u003d curr.taskToText();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        result \u003d \"    Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                + \"        \" + tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        result +\u003d (\"\\n    Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        fileString \u003d fileString.replace(taskToBeDeleted + \"\\n\", \"\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        // saves fileString to txt file"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Storage.save(Duke.FILENAME, fileString);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tengjianling": 67
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " * Represents a user command that marks the specified task as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public DoneCommand(String userInput) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Checks for the number specified by the user, and marks the task attached to"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * that number as done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param tasks List of \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param ui Ui object created by Duke."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param storage Storage object created by Duke."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String fileString \u003d tasks.listToString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(userInput.substring(5));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Task curr \u003d tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String beforeDone \u003d curr.taskToText();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        curr.markAsDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String afterDone \u003d curr.taskToText();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        // mark this task as done in fileString"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        fileString \u003d fileString.replace(beforeDone, afterDone);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        // saves fileString to txt file"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Storage.save(Duke.FILENAME, fileString);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        System.out.println(\"    Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                + \"        \" + tasks.get(taskNumber - 1));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public String executeToString(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String fileString \u003d tasks.listToString();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(userInput.substring(5));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Task curr \u003d tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String beforeDone \u003d curr.taskToText();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        curr.markAsDone();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String afterDone \u003d curr.taskToText();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        // mark this task as done in fileString"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        fileString \u003d fileString.replace(beforeDone, afterDone);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        // saves fileString to txt file"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Storage.save(Duke.FILENAME, fileString);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return \"    Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                + \"        \" + tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tengjianling": 69
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " * Represents a user command to exit the Duke program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public ExitCommand(String userInput) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Prints the template for exiting the Duke program."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param tasks List of \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param ui Ui object created by Duke."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param storage Storage object created by Duke."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        System.out.println(\"    Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public String executeToString(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return \"    Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tengjianling": 37
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " * Represents a user command to find all tasks that contain the specified word."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public FindCommand(String userInput) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Lists out the tasks in \u003ccode\u003etasks\u003c/code\u003e that contain the string"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * specified by the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param tasks List of \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param ui Ui object created by Duke."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param storage Storage object created by Duke."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        System.out.println(\"    Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String wordToFind \u003d userInput.substring(5);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            Task curr \u003d tasks.get(i);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            if (curr.getDescription().contains(wordToFind)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                System.out.println(\"    \" + (i + 1) + \". \" + curr);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public String executeToString(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String result \u003d \"    Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String wordToFind \u003d userInput.substring(5);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            Task curr \u003d tasks.get(i);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            if (curr.getDescription().contains(wordToFind)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                result +\u003d \"\\n    \" + (i + 1) + \". \" + curr;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return  result;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengjianling": 55
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " * Represents a user command to list out the tasks currently in the task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public ListCommand(String userInput) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Lists out the tasks in \u003ccode\u003etasks\u003c/code\u003e."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param tasks List of \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param ui Ui object created by Duke."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param storage Storage object created by Duke."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        System.out.println(\"    Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            System.out.println(\"    \" + (i + 1) + \". \" + tasks.get(i));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public String executeToString(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String result \u003d \"    Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            result +\u003d \"\\n    \" + (i + 1) + \". \" + tasks.get(i);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tengjianling": 44
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " * Represents an exception that is thrown when the task inputted by the user is not valid."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tengjianling": 11
    }
  },
  {
    "path": "src/main/java/duke/javafx/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "package duke.javafx;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengjianling": 62
    }
  },
  {
    "path": "src/main/java/duke/javafx/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "package duke.javafx;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengjianling": 12
    }
  },
  {
    "path": "src/main/java/duke/javafx/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "package duke.javafx;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    private Duke duke \u003d new Duke(Duke.FILENAME);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengjianling": 32
    }
  },
  {
    "path": "src/main/java/duke/javafx/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "package duke.javafx;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " * Controller for duke.javafx.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengjianling": 55
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " * Represents an object that deals with making sense of the user command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Returns a \u003ccode\u003eCommand\u003c/code\u003e object based on what the user command is."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * e.g. if user inputs \u003ccode\u003edone 1\u003c/code\u003e, a \u003ccode\u003eDoneCommand\u003c/code\u003e object"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * is created with the user input as the parameter."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param userInput User input that is typed into the command line."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @return \u003ccode\u003eCommand\u003c/code\u003e object based on user input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public static Command parse(String userInput) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Task t \u003d new Task(userInput);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        if (userInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            return new ListCommand(userInput);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        } else if (t.getFirstWord().equals(\"done\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            return new DoneCommand(userInput);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        } else if (t.getFirstWord().equals(\"delete\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            return new DeleteCommand(userInput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        } else if (userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            return new ExitCommand(userInput);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        } else if (t.getFirstWord().equals(\"find\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            return new FindCommand(userInput);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            return new AddCommand(userInput);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tengjianling": 43
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " * Represents an object that deals with loading tasks from the file and saving"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " * tasks in the file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Returns a \u003ccode\u003eTask\u003c/code\u003e based on the input format from the txt file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * e.g. input \u003d \"D | 0 | do this | 2020-01-01\" will return"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * \u003ccode\u003enew Task(\"deadline do this /by 2020-01-01\")\u003c/code\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @return Task derived from the input format in the txt file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public static Task textToTask(String input) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String des \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Character first \u003d input.charAt(0);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Character num \u003d input.charAt(4);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        if (first \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            des \u003d \"todo \";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            des +\u003d input.substring(8);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            String temp \u003d input.substring(8);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            String taskDescription \u003d temp.substring(0, temp.indexOf(\" |\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            String date \u003d temp.substring(temp.indexOf(\"|\") + 2);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            if (first \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                des \u003d \"deadline \" + taskDescription + \" /by \" + date;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            } else if (first \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                des \u003d \"event \" + taskDescription + \" /at \" + date;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Task t \u003d new Task(des);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        if (num \u003d\u003d \u00270\u0027) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            return t;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            t.markAsDone();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            return t;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Adds each line of the file specified to the \u003ccode\u003etasksStrings\u003c/code\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * array list as a different item."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param tasksStrings String from txt file is added to this ArrayList."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @throws FileNotFoundException If the file specified cannot be found."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public void fileContentToArrayList(ArrayList\u003cString\u003e tasksStrings) throws FileNotFoundException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            String input \u003d s.nextLine();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            tasksStrings.add(input);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Returns an ArrayList of \u003ccode\u003eTask\u003c/code\u003e objects based on the String in"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * the txt file."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @return ArrayList of \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @throws DukeException If any of the \u003ccode\u003eTask\u003c/code\u003e objects is not valid."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        // converts text to tasks, duke exception to check if is valid task"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        ArrayList\u003cTask\u003e tasksArray \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        ArrayList\u003cString\u003e tasksStrings \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            fileContentToArrayList(tasksStrings);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            System.out.println(\"File not found.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        for (int i \u003d 0; i \u003c tasksStrings.size(); i++) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            String currString \u003d tasksStrings.get(i);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            Task t \u003d textToTask(currString);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            t.validate();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            if (t.isTodo()) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                tasksArray.add(t.convertToTodo());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            } else if (t.isDeadline()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                tasksArray.add(t.convertToDeadline());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                tasksArray.add(t.convertToEvent());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return tasksArray;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Writes \u003ccode\u003eString textToAdd\u003c/code\u003e to the file specified in"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * \u003ccode\u003eString filePath\u003c/code\u003e."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param filePath Path of the file to write to."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param textToAdd Text to be written to the file specified in \u003ccode\u003efilePath\u003c/code\u003e."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    private static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Saves the text from \u003ccode\u003eString textToAdd\u003c/code\u003e to the file specified"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * in \u003ccode\u003eString filePath\u003c/code\u003e."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param filePath Path of the file to write to."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param textToAdd Text to be written to the file specified in \u003ccode\u003efilePath\u003c/code\u003e."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public static void save(String filePath, String textToAdd) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        // writes fileString to .txt file"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            writeToFile(Duke.FILENAME, textToAdd);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            System.out.println(\"Oops, something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tengjianling": 140
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " * Represents a type of task, where a date must be specified"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Creates a Deadline object with the specified \u003ccode\u003edescription\u003c/code\u003e and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * \u003ccode\u003eby\u003c/code\u003e."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param by Date by which this task should be completed."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        LocalDate d \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String reformattedDate \u003d d.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + reformattedDate + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengjianling": 30
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " * Represents a type of \u003ccode\u003eTask\u003c/code\u003e, where a date must be specified."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Creates an Event with the specified \u003ccode\u003edescription\u003c/code\u003e and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * \u003ccode\u003eat\u003c/code\u003e."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param at Date at which this event should occur."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        LocalDate d \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String reformattedDate \u003d d.format(DateTimeFormatter.ofPattern(\"MMM d yyy\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + reformattedDate + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengjianling": 30
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " * Represents a task entry from the user. A \u003ccode\u003eTask\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " * either a to do, deadline, or event."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Creates a task with the specified String \u003ccode\u003edescription\u003c/code\u003e and is"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * marked as undone."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Returns the checked or unchecked symbol depending on where this task is done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @return Checked or unchecked symbol."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Returns the first word of the user input."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @return First word of user input"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public String getFirstWord() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String[] arr \u003d this.description.split(\" \", 2);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String firstWord \u003d arr[0];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return firstWord;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public boolean isTodo() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return this.getFirstWord().equals(\"todo\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public boolean isDeadline() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return this.getFirstWord().equals(\"deadline\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public boolean isEvent() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return this.getFirstWord().equals(\"event\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Returns the date specified by the user for deadlines and events."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * If this task is a to do, return an empty string."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @return Date of task."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String des \u003d this.getDescription();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        if (des.indexOf(\u0027/\u0027) \u003d\u003d -1) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return des.substring(des.indexOf(\u0027/\u0027) + 4);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Checks if the task description is a single word."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @return True if description is a single word and false otherwise."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public boolean isSingleWord() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return !this.description.contains(\" \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Checks if the task is either a to do, deadline or event."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @return True if the task is neither a to do, deadline, or event and false otherwise"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public boolean isInvalidTask() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String firstWord \u003d this.getFirstWord();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return !(firstWord.equals(\"todo\") || firstWord.equals(\"deadline\") || firstWord.equals(\"event\"));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Checks if user input is a valid one. A valid input should be either a to do,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * deadline, or event, with a description following it. For deadlines and events,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * a date must also be specified."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @throws DukeException If user input is not valid"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public void validate() throws DukeException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        if (this.isInvalidTask()) { // checks if input is not to do, deadline, or event"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            throw new DukeException(\"   ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        if (this.isSingleWord()) { // checks if input is only the type of task, but no description"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            throw new DukeException(\"   ☹ OOPS!!! The description of a \" + this.getFirstWord() + \" cannot be empty.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        if (!this.getDescription().contains(\"/by\") \u0026\u0026 this.isDeadline()) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            // \"/by\" is not in the description, i.e no date"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            throw new DukeException(\"   ☹ OOPS!!! The description of a deadline must contain a date.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        if (!this.getDescription().contains(\"/at\") \u0026\u0026 this.isEvent()) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            // \"/at\" is not in the description, i.e no date"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            throw new DukeException(\"   ☹ OOPS!!! The description of an event must contain a date.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Returns the task in a String format that is stored in the txt file."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * e.g., \u003ccode\u003enew Task(\"deadline do this /by 2020-01-01\")\u003c/code\u003e will"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * return \"D | 0 | do this | 2020-01-01\"."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @return Task reformatted as a String"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public String taskToText() { // converts description text to file text"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String des \u003d this.description;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String task \u003d des.substring(des.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        if (this.isTodo()) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            return (this.isDone ? \"T | 1 | \" + task"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    : \"T | 0 | \" + task);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        } else if (this.isDeadline()) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            return (this.isDone ? \"D | 1 | \" + task.substring(0, task.indexOf(\u0027/\u0027) - 1)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    + \" | \" + this.getDate()"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    : \"D | 0 | \" + task.substring(0, task.indexOf(\u0027/\u0027) - 1)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    + \" | \" + this.getDate());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        } else if (this.isEvent()) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            return (this.isDone ? \"E | 1 | \" + task.substring(0, task.indexOf(\u0027/\u0027) - 1)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    + \" | \" + this.getDate()"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    : \"E | 0 | \" + task.substring(0, task.indexOf(\u0027/\u0027) - 1)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    + \" | \" + this.getDate());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Converts this task to a Todo."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @return Todo with this task\u0027s description"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public ToDo convertToTodo() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        ToDo todo \u003d new ToDo(this.description);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        todo.isDone \u003d this.isDone;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return todo;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Converts this task to a Deadline."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @return Deadline with this task\u0027s description"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public Deadline convertToDeadline() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Deadline d \u003d new Deadline(this.description, this.getDate());"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        d.isDone \u003d this.isDone;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return d;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Converts this task to an Event."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @return Event with this task\u0027s description"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public Event convertToEvent() {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Event e \u003d new Event(this.description, this.getDate());"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        e.isDone \u003d this.isDone;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return e;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        if (!(o instanceof Task)) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Task t \u003d (Task) o;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        if (this.description.equals(t.description) \u0026\u0026 this.isDone \u003d\u003d t.isDone) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String des \u003d this.description;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String task \u003d des.substring(des.indexOf(\" \"));"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        if (this.isTodo()) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            return \"[\" + this.getStatusIcon() + \"] \" + task;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            return \"[\" + this.getStatusIcon() + \"] \" + task.substring(0, task.indexOf(\u0027/\u0027) - 1);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengjianling": 214
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " * Represents a type of \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Creates a todo with the specified description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengjianling": 21
    }
  },
  {
    "path": "src/main/java/duke/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " * Represents a list of tasks. A \u003ccode\u003eTaskList\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " * a list of todos, deadlines, and events based on user input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return this.tasks.get(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public void add(Task t) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        this.tasks.add(t);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public void remove(int index) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        this.tasks.remove(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Returns the list of tasks in the \u003ccode\u003eTaskList\u003c/code\u003e as a string,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * where each line of the string corresponds to a \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @return String where each line corresponds to a different task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public String listToString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String str \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            str +\u003d tasks.get(i).taskToText() + \"\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tengjianling": 52
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " * Represents a class that deals with interactions with the user"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        System.out.println(\"Something went wrong\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Prints the welcome message for the Duke application"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        // print welcome message"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        System.out.println(\"    _________________________________\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                + \"    Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                + \"    What can I do for you?\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                + \"    _________________________________\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Prints a line divider"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        System.out.println(\"    _________________________________\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Returns the user command entered into the command line as a string"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @return user command"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * Prints the error message of the exception caught"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     * @param message error message of the exception caught"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengjianling": 47
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            \u003cFont name\u003d\"American Typewriter\" size\u003d\"13.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            \u003cInsets right\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "         \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "tengjianling": 23
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.javafx.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "tengjianling": 19
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public void runTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    Duke d \u003d new Duke(\"assa\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengjianling": 13
    }
  },
  {
    "path": "src/test/java/duke/command/AddCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public void executeTest() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String userInput \u003d \"todo do something\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String filePath \u003d \"/\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Command c \u003d new AddCommand(userInput);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        ArrayList\u003cTask\u003e taskArray \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        TaskList tasks \u003d  new TaskList(taskArray);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        assertEquals(tasks.get(tasks.size() - 1), new Task(userInput));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengjianling": 36
    }
  },
  {
    "path": "src/test/java/duke/command/DeleteCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class DeleteCommandTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public void executeTest() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String userInput \u003d \"delete 1\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Command c \u003d new DeleteCommand(userInput);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        ArrayList\u003cTask\u003e taskArray \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        TaskList tasks \u003d  new TaskList(taskArray);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        tasks.add(new Task(\"todo do this\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        tasks.add(new Task(\"todo do that\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Storage storage \u003d new Storage(\"/\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        assertEquals(tasks.size(), 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengjianling": 36
    }
  },
  {
    "path": "src/test/java/duke/command/DoneCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class DoneCommandTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public void executeTest() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String userInput \u003d \"done 1\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Command c \u003d new DoneCommand(userInput);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        ArrayList\u003cTask\u003e taskArray \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        TaskList tasks \u003d  new TaskList(taskArray);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        tasks.add(new Task(\"todo do this\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Storage storage \u003d new Storage(\"/\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        assertEquals(tasks.get(tasks.size() - 1).isDone(), true);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengjianling": 37
    }
  },
  {
    "path": "src/test/java/duke/command/ExitCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class ExitCommandTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public void executeTest() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String userInput \u003d \"bye\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Command c \u003d new ExitCommand(userInput);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        ArrayList\u003cTask\u003e taskArray \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        TaskList tasks \u003d  new TaskList(taskArray);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Storage storage \u003d new Storage(\"/\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        assertEquals(tasks.size(), 0);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengjianling": 37
    }
  },
  {
    "path": "src/test/java/duke/exception/DukeExceptionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class DukeExceptionTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public void testExpectedException() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            Task t \u003d new Task(\"asdfg\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            t.validate();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        });"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengjianling": 15
    }
  },
  {
    "path": "src/test/java/duke/storage/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public void textToTaskTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String fileText \u003d \"T | 1 | do something\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Task expected \u003d new Task(\"todo do something\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        expected.markAsDone();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Task actual \u003d Storage.textToTask(fileText);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengjianling": 21
    }
  },
  {
    "path": "src/test/java/duke/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public void taskToTextTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        assertEquals(\"T | 0 | do something\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                , new Task(\"todo do something\").taskToText());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        assertEquals(\"D | 0 | finish homework | 2020-10-10\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                , new Task(\"deadline finish homework /by 2020-10-10\").taskToText());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengjianling": 22
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "todo borrow book"
      }
    ],
    "authorContributionMap": {
      "tengjianling": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "tengjianling": 5
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "../src/main/java/ToDo.java"
      }
    ],
    "authorContributionMap": {
      "tengjianling": 5
    }
  }
]
