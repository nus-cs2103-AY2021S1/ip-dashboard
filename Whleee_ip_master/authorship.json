[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Whleee"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Whleee"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Whleee"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Whleee"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    version \u003d \"14\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.base\u0027, \u0027javafx.fxml\u0027, \u0027javafx.graphics\u0027 ]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Whleee"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Whleee"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Whleee"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Whleee"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Whleee"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Whleee"
        },
        "content": "mainClassName \u003d \u0027duke.Duke\u0027"
      }
    ],
    "authorContributionMap": {
      "Whleee": 38
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": "[T][✘] adder"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "[D][✘] adder /by 2019-09-08 1800"
      }
    ],
    "authorContributionMap": {
      "Whleee": 3
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": "[T][✘] testing"
      }
    ],
    "authorContributionMap": {
      "Whleee": 2
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Whleee"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Whleee"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Whleee"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Whleee"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Whleee"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Whleee"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Whleee"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Whleee"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Whleee"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Whleee"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Whleee"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Whleee"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Whleee"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Whleee"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Whleee"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Whleee"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Whleee"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Whleee"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Whleee"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Whleee"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Whleee"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Whleee"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Whleee"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Whleee"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Whleee"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Whleee"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Whleee"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Whleee"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Whleee"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Whleee"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Whleee"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Whleee"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Whleee"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Whleee"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Whleee"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Whleee"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Whleee"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Whleee"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Whleee"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Whleee"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Whleee"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Whleee"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Whleee"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Whleee"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Whleee"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Whleee"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Whleee"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Whleee"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Whleee"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Whleee"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Whleee"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Whleee"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Whleee"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Whleee"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Whleee"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Whleee"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Whleee"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Whleee"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Whleee"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Whleee"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Whleee"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Whleee"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Whleee"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Whleee"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Whleee"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Whleee"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Whleee"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Whleee"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Whleee"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Whleee"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Whleee"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Whleee"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Whleee"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "Whleee": 100
    }
  },
  {
    "path": "src/main/java/duke/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Whleee"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Class constructor with description of task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public Deadlines(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.type \u003d \"Deadlines\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Sets the Deadline to the desired String."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param deadline the deadline."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public void setDeadline(String deadline) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Returns the deadline."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @return deadline in the form of a String."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        return this.deadline;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Sets the LocalDate of the Deadline."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public void setDateTime() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        int index \u003d this.deadline.indexOf(\" \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        String dateTemp \u003d this.deadline.substring(0, index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(dateTemp);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        //System.out.println(date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        int dateIndex \u003d dateTemp.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        String dateOnly \u003d dateTemp.substring(0, dateIndex);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        if (dateOnly.length() \u003c 2) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            char adder \u003d \u00270\u0027;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            dateOnly \u003d adder + dateOnly;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        int monIndex \u003d dateTemp.indexOf(\u0027/\u0027, dateTemp.indexOf(\u0027/\u0027) + 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        String monOnly \u003d dateTemp.substring(dateTemp.indexOf(\u0027/\u0027) + 1, monIndex);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        if (monOnly.length() \u003c 2) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            char adder \u003d \u00270\u0027;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            monOnly \u003d adder + monOnly;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        String yearOnly \u003d dateTemp.substring(monIndex + 1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        dateTemp \u003d dateOnly + \"/\" + monOnly + \"/\" + yearOnly;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        System.out.println(dateTemp);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(dateTemp, formatter);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Whleee"
        },
        "content": "         */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Returns string description of deadline."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @return String description of deadline"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        return \"  [D][\" + this.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                + this.getDescription().substring(0, description.indexOf(\"/\")) + \"(by: \" + this.getDeadline() + \")\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Whleee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Whleee": 73
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Whleee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Whleee"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Whleee"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Whleee"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Whleee"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Whleee"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * DialogBox constructor"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param l"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param iv"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Gets the user dialog."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param l"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param iv"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @return the resulting user DialogBox"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Gets the user dialog."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param l"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param iv"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @return the resulting duke DialogBox"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Whleee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Whleee": 69
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Whleee"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public Duke() {}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Class Constructor specifying filepath."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param filepath"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public Duke(String filepath) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        } catch (IOException | ClassNotFoundException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Runs the main logic of Duke."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @throws ClassNotFoundException"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public void run() throws DukeException, IOException, ClassNotFoundException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        ui.start(storage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                handleUserInput();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        });"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                handleUserInput();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        });"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private void handleUserInput() throws DukeException, IOException, ClassNotFoundException {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        );"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public String getResponse(String input) throws DukeException, IOException, ClassNotFoundException {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.storage \u003d new Storage(\"store.ser\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        Storage store \u003d storage;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        TaskList tasks \u003d new TaskList(store.load());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        Parser parse \u003d new Parser(tasks);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        String result \u003d parse.parseStr(input);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Main method."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @throws ClassNotFoundException"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public static void main(String[] args) throws DukeException, IOException, ClassNotFoundException {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        new Duke(\"store.ser\").run();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Whleee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Whleee": 191
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Whleee"
        },
        "content": "public class DukeException extends Exception implements Serializable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    DukeException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Whleee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Whleee": 10
    }
  },
  {
    "path": "src/main/java/duke/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Whleee"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private String start;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Class constructor specifying the Task start date."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public Events(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.type \u003d \"Events\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Sets the start time to the specified string."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param start"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public void setStart(String start) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.start \u003d start;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Returns the start time of the Event."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @return the start time in String."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public String getStart() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        return this.start;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Sets the LocalDate of the Event."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public void setDateTime() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        int index \u003d this.start.indexOf(\" \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        String dateTemp \u003d this.start.substring(0, index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-mm-dd\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(dateTemp);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        int index \u003d this.start.indexOf(\" \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        String dateTemp \u003d this.start.substring(0, index);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        int dateIndex \u003d dateTemp.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        String dateOnly \u003d dateTemp.substring(0, dateIndex);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        if (dateOnly.length() \u003c 2) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            char adder \u003d \u00270\u0027;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            dateOnly \u003d adder + dateOnly;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        int monIndex \u003d dateTemp.indexOf(\u0027/\u0027, dateTemp.indexOf(\u0027/\u0027) + 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        String monOnly \u003d dateTemp.substring(dateTemp.indexOf(\u0027/\u0027) + 1, monIndex);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        if (monOnly.length() \u003c 2) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            char adder \u003d \u00270\u0027;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            monOnly \u003d adder + monOnly;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        int yearIndex \u003d dateTemp.indexOf(\u0027/\u0027, monIndex + 1 );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        String yearOnly \u003d dateTemp.substring(monIndex + 1,yearIndex);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        dateTemp \u003d dateOnly + \"/\" + monOnly + \"/\" + yearOnly;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(dateTemp, formatter);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        System.out.println(date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Whleee"
        },
        "content": "         */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Returns string description of event."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @return String description of event"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        return \"  [\" + this.getType() + \"][\" + this.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                + this.getDescription().substring(0, description.indexOf(\"/\")) + \"(at: \" + this.getStart() + \")\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Whleee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Whleee": 78
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Whleee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Whleee"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Whleee"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Whleee"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Whleee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Whleee": 13
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Whleee"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Class constructor specifying the TaskList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public Parser(TaskList tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Parses the specified String as required."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param str the String to be parsed."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @throws ClassNotFoundException"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public void parse(String str) throws DukeException, IOException, ClassNotFoundException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        ArrayList\u003cTask\u003e store \u003d this.tasks.getList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        if (str.equals(\"blah\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        while (str !\u003d null) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            if (str.equals(\"list\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                int counter \u003d 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                for (Task task : store) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    if (task.getDescription() !\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        System.out.println(counter + \". [\" + task.getType()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                                + \"][\" + task.getStatusIcon() + \"] \" + task.getDescription());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        counter++;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } else if (str.contains(\"done\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                if (str.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    throw new DukeException(\"\\u2639 OOPS!!! Please state what task has been completed.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                int num \u003d Integer.parseInt(str.substring(5)) - 1;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                Task curr \u003d store.get(num);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                curr.markAsDone();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"  [\" + curr.getStatusIcon() + \"] \" + curr.getDescription());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } else if (str.contains(\"todo\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    if (str.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        throw new DukeException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    ToDos curr \u003d new ToDos(str.substring(5));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    store.add(curr);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"  [\" + curr.getType() + \"][\" + curr.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            + curr.getDescription());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"Now you have \" + store.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Path relativePath \u003d Paths.get(\"duke.txt\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Path absolutePath \u003d relativePath.toAbsolutePath();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    BufferedWriter writer \u003d new BufferedWriter(new FileWriter(\"\" + absolutePath));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    StringBuilder result \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    for (Task task : store) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        if (task.getDescription() !\u003d null) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            result.append(\"[\" + task.getType() + \"]\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                                    + \"[\" + task.getStatusIcon() + \"] \" + task.getDescription());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            result.append(\"\\n\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.append(result);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.close();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    File yourFile \u003d new File(\"duke.txt\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    yourFile.createNewFile();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    FileOutputStream oFile \u003d new FileOutputStream(yourFile, false);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } else if (str.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Deadlines curr \u003d new Deadlines(str.substring(9));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    String description \u003d curr.getDescription();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    int index \u003d description.indexOf(\"/\") + 4;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    curr.setDeadline(description.substring(index));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    curr.setDateTime();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    store.add(curr);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"  [\" + curr.getType() + \"][\" + curr.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            + curr.getDescription().substring(0, description.indexOf(\"/\"))"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            + \"(by: \" + curr.getDeadline() + \")\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"Now you have \" + store.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Path relativePath \u003d Paths.get(\"duke.txt\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Path absolutePath \u003d relativePath.toAbsolutePath();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    BufferedWriter writer \u003d new BufferedWriter(new FileWriter(\"\" + absolutePath));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    StringBuilder result \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    for (Task task : store) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        if (task.getDescription() !\u003d null) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            result.append(\"[\" + task.getType() + \"]\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                                    + \"[\" + task.getStatusIcon() + \"] \" + task.getDescription());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            result.append(\"\\n\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.append(result);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.close();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    File yourFile \u003d new File(\"duke.txt\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    yourFile.createNewFile();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } else if (str.contains(\"event\")) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Events curr \u003d new Events(str.substring(6));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    String description \u003d curr.getDescription();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    int index \u003d description.indexOf(\"/\") + 4;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    curr.setStart(description.substring(index));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    curr.setDateTime();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    store.add(curr);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"  [\" + curr.getType() + \"][\" + curr.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            + curr.getDescription().substring(0, description.indexOf(\"/\"))"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            + \"(at: \" + curr.getStart() + \")\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"Now you have \" + store.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Path relativePath \u003d Paths.get(\"data/duke.txt\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Path absolutePath \u003d relativePath.toAbsolutePath();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    BufferedWriter writer \u003d new BufferedWriter(new FileWriter(\"\" + absolutePath));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    StringBuilder result \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    for (Task task : store) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        if (task.getDescription() !\u003d null) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            result.append(\"[\" + task.getType() + \"]\" + \"[\" + task.getStatusIcon()"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                                    + \"] |\" + task.getDescription());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            result.append(\"\\n\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.append(result);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.close();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    File yourFile \u003d new File(\"duke.txt\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    yourFile.createNewFile();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } else if (str.contains(\"delete\")) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                if (str.length() \u003d\u003d 6) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    throw new DukeException(\"\\u2639 OOPS!!! Please specify what task to delete.\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                int num \u003d Integer.parseInt(str.substring(7)) - 1;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                Task curr \u003d store.get(num);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                store.remove(curr);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"Noted! I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(curr);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"Now you have \" + store.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } else if (str.contains(\"find\")) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                TaskList tasks \u003d new TaskList(store);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                int index \u003d str.indexOf(\" \") + 1;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                String query \u003d str.substring(index);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                tasks.find(query);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } else if (!str.equals(\"bye\")) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"added: \" + str);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                store.add(new Task(str));"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Returns the result string after parsing."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param str"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @return the result string"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @throws ClassNotFoundException"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public String parseStr(String str) throws DukeException, IOException, ClassNotFoundException {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        ArrayList\u003cTask\u003e store \u003d this.tasks.getList();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        if (str.equals(\"blah\")) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        while (str !\u003d null) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            if (str.equals(\"list\")) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                int counter \u003d 1;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                for (Task task : store) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    if (task.getDescription() !\u003d null) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        result \u003d result + counter + \". [\" + task.getType()"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                                + \"][\" + task.getStatusIcon() + \"] \" + task.getDescription() + \"\\n\";"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        counter++;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                return result;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } else if (str.contains(\"done\")) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                if (str.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    throw new DukeException(\"\\u2639 OOPS!!! Please state what task has been completed.\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                int num \u003d Integer.parseInt(str.substring(5)) - 1;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                Task curr \u003d store.get(num);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                curr.markAsDone();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                result \u003d result + \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                result \u003d result + \"  [\" + curr.getStatusIcon() + \"] \" + curr.getDescription() + \"\\n\";"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                return result;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } else if (str.contains(\"todo\")) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    if (str.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        throw new DukeException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    ToDos curr \u003d new ToDos(str.substring(5));"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    store.add(curr);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    result \u003d result + \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    result \u003d result + \"  [\" + curr.getType() + \"][\" + curr.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            + curr.getDescription() + \"\\n\";"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    result \u003d result + \"Now you have \" + store.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Path relativePath \u003d Paths.get(\"duke.txt\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Path absolutePath \u003d relativePath.toAbsolutePath();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    BufferedWriter writer \u003d new BufferedWriter(new FileWriter(\"\" + absolutePath));"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    StringBuilder res \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    for (Task task : store) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        if (task.getDescription() !\u003d null) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            res.append(\"[\" + task.getType() + \"]\""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                                    + \"[\" + task.getStatusIcon() + \"] \" + task.getDescription());"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            res.append(\"\\n\");"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.append(res);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.close();"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    return result;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    File yourFile \u003d new File(\"duke.txt\");"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    yourFile.createNewFile();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } else if (str.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Deadlines curr \u003d new Deadlines(str.substring(9));"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    String description \u003d curr.getDescription();"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    int index \u003d description.indexOf(\"/\") + 4;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    curr.setDeadline(description.substring(index));"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    curr.setDateTime();"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    store.add(curr);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    result \u003d result + \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    result \u003d result + \"  [\" + curr.getType() + \"][\" + curr.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            + curr.getDescription().substring(0, description.indexOf(\"/\"))"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            + \"(by: \" + curr.getDeadline() + \")\" + \"\\n\";"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    result \u003d result + \"Now you have \" + store.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Path relativePath \u003d Paths.get(\"duke.txt\");"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Path absolutePath \u003d relativePath.toAbsolutePath();"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    BufferedWriter writer \u003d new BufferedWriter(new FileWriter(\"\" + absolutePath));"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    StringBuilder res \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    for (Task task : store) {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        if (task.getDescription() !\u003d null) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            res.append(\"[\" + task.getType() + \"]\""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                                    + \"[\" + task.getStatusIcon() + \"] \" + task.getDescription());"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            res.append(\"\\n\");"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.append(res);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.close();"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    return result;"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    File yourFile \u003d new File(\"duke.txt\");"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    yourFile.createNewFile();"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } else if (str.contains(\"event\")) {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Events curr \u003d new Events(str.substring(6));"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    String description \u003d curr.getDescription();"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    int index \u003d description.indexOf(\"/\") + 4;"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    curr.setStart(description.substring(index));"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    curr.setDateTime();"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    store.add(curr);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    result \u003d result + \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    result \u003d result + \"  [\" + curr.getType() + \"][\" + curr.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            + curr.getDescription().substring(0, description.indexOf(\"/\"))"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            + \"(at: \" + curr.getStart() + \")\\n\";"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    result \u003d result + \"Now you have \" + store.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Path relativePath \u003d Paths.get(\"data/duke.txt\");"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    Path absolutePath \u003d relativePath.toAbsolutePath();"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    BufferedWriter writer \u003d new BufferedWriter(new FileWriter(\"\" + absolutePath));"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    StringBuilder res \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    for (Task task : store) {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        if (task.getDescription() !\u003d null) {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            res.append(\"[\" + task.getType() + \"]\" + \"[\" + task.getStatusIcon()"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                                    + \"] |\" + task.getDescription());"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                            res.append(\"\\n\");"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.append(res);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    writer.close();"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    return result;"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    File yourFile \u003d new File(\"duke.txt\");"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    yourFile.createNewFile();"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } else if (str.contains(\"delete\")) {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                if (str.length() \u003d\u003d 6) {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                    throw new DukeException(\"\\u2639 OOPS!!! Please specify what task to delete.\");"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                int num \u003d Integer.parseInt(str.substring(7)) - 1;"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                Task curr \u003d store.get(num);"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                store.remove(curr);"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                result \u003d result + \"Noted! I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                result \u003d result + curr.toString() + \"\\n\";"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                result \u003d result + \"Now you have \" + store.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                return result;"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } else if (str.contains(\"find\")) {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                TaskList tasks \u003d new TaskList(store);"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                int index \u003d str.indexOf(\" \") + 1;"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                String query \u003d str.substring(index);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                result \u003d tasks.finder(query);"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                return result;"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } else if (!str.equals(\"bye\")) {"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                result \u003d result + \"added: \" + str + \"\\n\";"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                store.add(new Task(str));"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                return result;"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                result \u003d \"error\";"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                return result;"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        return \"error found\";"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Whleee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Whleee": 360
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.io.EOFException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Whleee"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private String filename;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Class constructor specifying the filename in the form of a String."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param filename the path of the file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public Storage (String filename) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.filename \u003d filename;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Loads the file if it exists. If not, create the file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @return ArrayList with the previous saved Tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @throws ClassNotFoundException"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    @SuppressWarnings(\"all\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException, ClassNotFoundException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        ArrayList\u003cTask\u003e store \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            Path relativePath \u003d Paths.get(filename);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            Path absolutePath \u003d relativePath.toAbsolutePath();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            ObjectInputStream in \u003d new ObjectInputStream(new FileInputStream(\"\" + absolutePath));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            ArrayList\u003cTask\u003e array \u003d (ArrayList\u003cTask\u003e) in.readObject();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            in.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            for (Task task : array) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                store.add(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        } catch (EOFException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            System.out.println(\"\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            File yourFile \u003d new File(\"store.ser\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            yourFile.createNewFile();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            FileOutputStream oFile \u003d new FileOutputStream(yourFile, false);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        return store;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Stores the current task list into a File."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param task the current ArrayList of Tasks"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public static void store(ArrayList\u003cTask\u003e task) throws IOException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        Path relativePath \u003d Paths.get(\"store.ser\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        Path absolutePath \u003d relativePath.toAbsolutePath();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        ObjectOutputStream out \u003d new ObjectOutputStream("
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                new FileOutputStream(\"\" + absolutePath)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        );"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        out.writeObject(task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        out.flush();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        out.close();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Whleee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Whleee": 69
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Whleee"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Class Constructor specifying the description of the Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param description the description of the Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Returns the description of the Task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @return the task description"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Returns the Status Icon of the Task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @return the Task current Status Icon"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Returns the Type of the Task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @return the type of Task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        if (type.equals(\"ToDos\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            return \"T\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        } else if (type.equals(\"Deadlines\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            return \"D\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        } else if (type.equals(\"Events\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            return \"E\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        return \"Error\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        return \"  [\" + this.getType() + \"][\" + this.getStatusIcon() + \"]\" + this.description;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Whleee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Whleee": 60
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Whleee"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Class Constructor with no arguments."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Class Constructor with specified ArrayList of Tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param list the specified ArrayList of Tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Returns the ArrayList of Tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @return the current Tasks ArrayList"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Finds the Tasks stored in the array that corresponds to the specified String."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param str input String specified"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public void find(String str) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        for (Task task : this.list) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            if (task.getDescription().contains(str)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(counter + \". [\" + task.getType() + \"][\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        + task.getStatusIcon() + \"] \" + task.getDescription());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        if (counter \u003d\u003d 1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            System.out.println(\"There are no tasks that match your search!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Finds the Tasks stored in the array that corresponds to the specified String."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param str input String specified"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public String finder(String str) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        for (Task task : this.list) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            if (task.getDescription().contains(str)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                result \u003d result + counter + \". [\" + task.getType() + \"][\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                        + task.getStatusIcon() + \"] \" + task.getDescription() + \"\\n\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        if (counter \u003d\u003d 1) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            result \u003d \"There are no tasks that match your search!\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Whleee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Whleee": 71
    }
  },
  {
    "path": "src/main/java/duke/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Class Constructor specifying the description of the Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public ToDos(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        this.type \u003d \"ToDos\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Returns string description of ToDos."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @return String description of ToDos."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        return \"  [\" + this.getType() + \"][\" + this.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                + this.getDescription();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Whleee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Whleee": 22
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Whleee"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Whleee"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Class Constructor with no arguments."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public Ui() {}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * Starts the User Interface to accept user input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @param storage the Storage used to store Tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     * @throws ClassNotFoundException"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Whleee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    public void start(Storage storage) throws DukeException, IOException, ClassNotFoundException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        String intro \u003d \"-------------------------\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                + \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                + \"What can I do for you?\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                + \"-------------------------\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        System.out.println(intro);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        String next \u003d scan.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        Storage store \u003d storage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        TaskList tasks \u003d new TaskList(store.load());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        Parser parser \u003d new Parser(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        while (next !\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            if (next.equals(\"bye\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                System.out.println(\"-------------------------\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                scan.close();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                Storage.store(tasks.getList());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            parser.parse(next);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            next \u003d scan.nextLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Whleee"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Whleee": 45
    }
  },
  {
    "path": "src/main/java/duke/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": "[T][✘] testing"
      }
    ],
    "authorContributionMap": {
      "Whleee": 2
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Whleee"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Whleee"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Whleee"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Whleee"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Whleee"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Whleee": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Whleee"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Whleee"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Whleee"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Whleee"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Whleee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Whleee"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Whleee"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Whleee"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Whleee"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Whleee"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Whleee"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Whleee": 19
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Whleee"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Whleee"
        },
        "content": "deadline return book /by 2020-07-20 1800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Whleee"
        },
        "content": "event project meeting /at 2020-08-10 1900"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Whleee"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Whleee"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Whleee": 5
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Whleee"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Whleee"
        },
        "content": "# cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Whleee"
        },
        "content": "# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Whleee": 3,
      "-": 35
    }
  }
]
