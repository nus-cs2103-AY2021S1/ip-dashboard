[
  {
    "path": "src/main/java/Bot.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Bot.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.function.BiConsumer;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class Bot {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public Bot(String name) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        println(\"Hello, I\u0027m %s\", this.name);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public void setTasks(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public boolean processCommand(String str) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var sc \u003d new Scanner(str);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        if (!sc.hasNext()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var cmd \u003d sc.next().strip();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        if (cmd.equals(\"bye\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            println(\"goodbye\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var input \u003d sc.hasNextLine()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            ? sc.nextLine().strip()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            : \"\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        beginLog();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        Optional.ofNullable(Map.\u003cString, BiConsumer\u003cString, String\u003e\u003eof("
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            \"done\",     this::cmdDone,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            \"list\",     this::cmdList,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            \"reset\",    this::cmdReset,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            \"delete\",   this::cmdDelete,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            \"todo\",     this::cmdAddTask,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            \"event\",    this::cmdAddTask,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            \"deadline\", this::cmdAddTask"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        ).get(cmd))"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .ifPresentOrElse(x -\u003e {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                x.accept(cmd, input);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            }, () -\u003e {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                println(\"unknown command \u0027%s\u0027\", cmd);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            });"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        endLog();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private void cmdReset(String cmd, String input) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assert cmd.equals(\"reset\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.tasks.clear();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        println(\"cleared all tasks.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private void cmdList(String cmd, String input) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assert cmd.equals(\"list\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.printTaskStatistics();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        Stream.iterate(0, x -\u003e x + 1)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .map(i -\u003e String.format(\"  %d. %s\", 1 + i, this.tasks.get(i)))"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .limit(this.tasks.size())"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .forEach(Bot::println);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private void cmdDelete(String cmd, String input) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assert cmd.equals(\"delete\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.parseTaskNumber(cmd, input)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .ifPresent(idx -\u003e {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                var task \u003d this.tasks.remove((int) idx);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                println(\"deleted task:\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                println(\"  %s\\n\", task);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                this.printTaskStatistics();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            });"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private void cmdDone(String cmd, String input) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assert cmd.equals(\"done\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.parseTaskNumber(cmd, input)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .ifPresent(idx -\u003e {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                var task \u003d this.tasks.get(idx);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                assert task !\u003d null;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                if (task.isDone()) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    println(\"task %d is already marked as done:\", idx + 1);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    println(\"  %s\", task);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    println(\"marked as done:\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    println(\"  %s\\n\", task);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    this.printTaskStatistics();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            });"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private void cmdAddTask(String cmd, String input) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assert cmd.equals(\"todo\") || cmd.equals(\"event\") || cmd.equals(\"deadline\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            switch (cmd) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                task \u003d Todo.parse(input);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                task \u003d Event.parse(input);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                task \u003d Deadline.parse(input);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                assert false;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.tasks.add(task);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            println(\"added: %s\", task);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        } catch (InvalidInputException e) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            println(\"error: %s\", e);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            println(\"usage: %s\", e.getUsage());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private Optional\u003cInteger\u003e parseTaskNumber(String cmd, String input) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            // one-indexed"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            var idx \u003d new Scanner(input).nextInt() - 1;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            if (idx \u003c 0 || idx \u003e\u003d this.tasks.size())"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            return Optional.of(idx);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        } catch (InputMismatchException e) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            println(\"error: expected an integer task number (\u0027%s\u0027 invalid)\", input);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            println(\"error: expected a task number for \u0027%s\u0027 command\", cmd);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            println(\"error: task number \u0027%s\u0027 was out of bounds\", input);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return Optional.empty();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private void printTaskStatistics() {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var doneTasks \u003d this.tasks.stream().filter(x -\u003e x.isDone()).count();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var pendingTasks \u003d this.tasks.size() - doneTasks;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        println(\"currently tracking %d task%s (%d pending, %d done, %.1f%% complete)\","
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.tasks.size(), this.tasks.size() \u003d\u003d 1 ? \"\" : \"s\", pendingTasks, doneTasks,"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.tasks.isEmpty() ? 100.0 : 100.0 * ((double) doneTasks / this.tasks.size()));"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private static void println(String fmt, Object... args) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        System.out.printf(fmt, args);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private static void beginLog() {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        println(\"\");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private static void endLog() {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        println(\"--------------------------------------\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 238
    }
  },
  {
    "path": "src/main/java/Database.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Database.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.function.Function;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class Database {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private static final int DATABASE_VERSION \u003d 1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private final String databasePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public Database(String path) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.databasePath \u003d path;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public List\u003cTask\u003e loadTasks() throws IOException, InvalidDatabaseException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            here\u0027s the ideal scenario:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            no exceptions. return Pair\u003cList\u003cTask\u003e, List\u003cInteger\u003e\u003e; first is the list of"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            parsed tasks, second is the list of failed tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            but that\u0027s too much effort given this useless language, so if there\u0027s a malformed"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            line in the database just abort the whole thing."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var path \u003d Path.of(this.databasePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        if (!Files.exists(path)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            // just return an empty list. we\u0027ll create the file when we save."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            return new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // the file probably exists now."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // first line indicates version. java streams are dumb, so this will have to do."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var dbVersion \u003d Files.lines(path)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .findFirst()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .flatMap(x -\u003e {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    return Optional.of(Integer.parseInt(x));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    return Optional.empty();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            })"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .orElse(DATABASE_VERSION);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        if (dbVersion !\u003d DATABASE_VERSION) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            throw new InvalidDatabaseException(String.format("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                \"version mismatch; expected \u0027%d\u0027, found \u0027%d\u0027\", DATABASE_VERSION, dbVersion"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            ));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var xs \u003d Files.lines(path).collect(Collectors.toList());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // if there\u0027s no lines then return an empty list as well."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        if (xs.isEmpty()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            return new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // TODO: make and use a stream zipper to make this code less obtuse"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // one might note the flagrant use of Collectors.toList() here, it\u0027s because java"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // streams suck."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var ret \u003d xs.subList(1, xs.size())"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .stream()"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            // java is a bad language."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .map(new Function\u003cString, Either\u003cString, Task\u003e\u003e() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                public Either\u003cString, Task\u003e apply(String line) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    /*"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        format:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        \u003ctype\u003e \u003cdoneness\u003e [date string] \"|\" \u003cdescription\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        \u003ctype\u003e       :: char (ascii char)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                                        \u0027T\u0027 \u003d todo"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                                        \u0027D\u0027 \u003d deadline"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                                        \u0027E\u0027 \u003d event"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        \u003cdoneness\u003e   :: char (ascii char)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                                        \u00271\u0027 \u003d done"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                                        \u00270\u0027 \u003d rare"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    var type \u003d line.charAt(0);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    var asdf \u003d line.charAt(1);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    var done \u003d false;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    // time for some 3Head java"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    if (asdf \u003d\u003d \u00271\u0027) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        done \u003d true;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    } else if (asdf \u003d\u003d \u00270\u0027) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        done \u003d false;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        // ideally we\u0027d tell the user the line number, but given that:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        // 1. java streams suck, so there\u0027s no way to get the index of this line"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        // 2. they\u0027re not supposed to edit the file anyway,"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        // let\u0027s just not bother."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        return Either.left(String.format(\"invalid doneness \u0027%c\u0027 (expected either \u00270\u0027 or \u00271\u0027)\", asdf));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    Task task \u003d null;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    if (type \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        var desc \u003d line.substring(line.indexOf(\u0027|\u0027) + 1);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        task \u003d new Todo(desc);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    } else if (type \u003d\u003d \u0027D\u0027 || type \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                            var date \u003d DatedTask.parseDate(line.substring(2, line.indexOf(\u0027|\u0027)));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                            var desc \u003d line.substring(line.indexOf(\u0027|\u0027) + 1);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                            if (type \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                                task \u003d new Deadline(desc, date);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                                task \u003d new Event(desc, date);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        } catch (InvalidInputException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                            return Either.left(e.toString());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        return Either.left(String.format(\"invalid type \u0027%c\u0027 (expected one of \u0027T\u0027, \u0027D\u0027, \u0027E\u0027)\", type));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    assert task !\u003d null;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    if (done) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        task.markAsDone();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    return Either.right(task);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            })"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .collect(Collectors.toList());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        Optional\u003cEither\u003cString, Task\u003e\u003e error \u003d null;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        if ((error \u003d ret.stream().filter(Either::isLeft).findFirst()).isPresent()) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            throw new InvalidDatabaseException(error.get().fromLeft());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            return ret.stream()"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                .filter(Either::isRight)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                .map(Either::fromRight)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public void saveTasks(List\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var path \u003d Path.of(this.databasePath);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        if (!Files.exists(path)) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            if (!Files.exists(path.getParent())) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                // this is apparently equivalent to `mkdir -p`"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                Files.createDirectories(path.getParent());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            Files.createFile(path);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        Files.write(path,"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            Stream.concat("
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                Stream.of(String.format(\"%d\", DATABASE_VERSION)),"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                list.stream()"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    .map(task -\u003e {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        if (task instanceof Todo) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                            return String.format(\"%c%c|%s\", \u0027T\u0027,"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                                task.isDone() ? \u00271\u0027 : \u00270\u0027,"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                                task.getName());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                            return String.format(\"%c%c%s|%s\", \u0027E\u0027,"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                                task.isDone() ? \u00271\u0027 : \u00270\u0027,"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                                ((Event) task).getEventDate().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")),"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                                task.getName());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                            return String.format(\"%c%c%s|%s\", \u0027D\u0027,"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                                task.isDone() ? \u00271\u0027 : \u00270\u0027,"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                                ((Deadline) task).getDeadline().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")),"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                                task.getName());"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                            // asdf?!"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                            return \"\";"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                    })"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            )"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            .collect(Collectors.toList())"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        );"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 207
    }
  },
  {
    "path": "src/main/java/DatedTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// DatedTask.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class DatedTask {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\tpublic static List\u003cString\u003e parse(String kind, String input, String dateSpec, String usage)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        throws InvalidInputException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var slash \u003d input.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        if (slash \u003d\u003d 0 || input.isEmpty()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            throw new InvalidInputException(\"task description cannot be empty\", usage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        } else if (slash \u003d\u003d -1) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            throw new InvalidInputException(String.format(\"%s requires a date\", kind), usage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var item \u003d input.substring(0, slash).strip();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var when \u003d input.substring(slash + 1).strip();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assert !item.isEmpty();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        if (!when.startsWith(dateSpec + \" \")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            throw new InvalidInputException(\"incorrect date specification\", usage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        when \u003d when.substring(3).strip();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return Arrays.asList(item, when);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public static LocalDate parseDate(String date) throws InvalidInputException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // TODO: handle more formats, eg dd/mm/yy, dd/mm/yyyy, dd/mm"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        // TODO: handle offsets from now, eg. +7d or something like that"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            return LocalDate.parse(date, DateTimeFormatter.ISO_LOCAL_DATE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            throw new InvalidInputException(String.format(\"invalid date format: %s\", e.getMessage()),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "                \"yyyy-mm-dd\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 48
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Deadline.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private final LocalDate deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public Deadline(String name, LocalDate deadline) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public LocalDate getDeadline() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.deadline;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return String.format(\"[D] %s (by: %s)\", super.toString(),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.deadline.format(DateTimeFormatter.ofPattern(\"d MMMM yyyy\")));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public static Deadline parse(String input) throws InvalidInputException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var parts \u003d DatedTask.parse(\"deadline\", input, \"by\", getUsage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assert parts.size() \u003d\u003d 2;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return new Deadline(parts.get(0), DatedTask.parseDate(parts.get(1)));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private static String getUsage() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return \"deadline \u003cdescription\u003e /by \u003cdate\u003e\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 41
    }
  },
  {
    "path": "src/main/java/Either.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Either.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class Either\u003cL, R\u003e {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private final L leftValue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private final R rightValue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private Either(L leftVal, R rightVal) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.leftValue \u003d leftVal;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.rightValue \u003d rightVal;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assert this.leftValue \u003d\u003d null || this.rightValue \u003d\u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public boolean isLeft() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.leftValue !\u003d null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public boolean isRight() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.rightValue !\u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public L fromLeft() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return Optional.ofNullable(this.leftValue).get();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public R fromRight() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return Optional.ofNullable(this.rightValue).get();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public static \u003cL, R\u003e Either\u003cL, R\u003e left(L l) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return new Either\u003cL, R\u003e(l, null);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public static \u003cL, R\u003e Either\u003cL, R\u003e right(R r) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return new Either\u003cL, R\u003e(null, r);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 41
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Event.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\tprivate final LocalDate eventDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public Event(String name, LocalDate date) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\t\tthis.eventDate \u003d date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public LocalDate getEventDate() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.eventDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return String.format(\"[E] %s (at: %s)\", super.toString(),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            this.eventDate.format(DateTimeFormatter.ofPattern(\"d MMMM yyyy\")));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public static Event parse(String input) throws InvalidInputException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var parts \u003d DatedTask.parse(\"event\", input, \"at\", getUsage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assert parts.size() \u003d\u003d 2;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return new Event(parts.get(0), DatedTask.parseDate(parts.get(1)));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private static String getUsage() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return \"event \u003cdescription\u003e /at \u003cdate\u003e\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 41
    }
  },
  {
    "path": "src/main/java/InvalidDatabaseException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// InvalidDatabaseException.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class InvalidDatabaseException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public InvalidDatabaseException(String msg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 9
    }
  },
  {
    "path": "src/main/java/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// InvalidInputException.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class InvalidInputException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\tprivate final String usage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\tpublic InvalidInputException(String message, String usage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\t\tsuper(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\t\tthis.usage \u003d usage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\tpublic String getUsage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\t\treturn this.usage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\t\t// don\u0027t include the exception name."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\t\treturn this.getMessage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 25
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Main.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private static final String BOT_NAME  \u003d \"ikurabowl\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private static final String DB_PATH   \u003d \"data/tasks.txt\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var bot \u003d new Bot(BOT_NAME);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var db \u003d new Database(DB_PATH);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            bot.setTasks(db.loadTasks());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            System.out.printf(\"error occured while reading/creating the task list:\\n%s\\n\", e);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            System.exit(1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        } catch (InvalidDatabaseException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            System.out.printf(\"malformed line while reading task list:\\n%s\\n\", e);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            System.exit(1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        var sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        bot.greet();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        System.out.printf(\"\u003e \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        while (sc.hasNextLine() \u0026\u0026 bot.processCommand(sc.nextLine())) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            System.out.printf(\"\u003e \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            db.saveTasks(bot.getTasks());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            System.out.printf(\"failed to save task list to disk:\\n%s\\n\", e);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            System.exit(1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 42
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Task.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return this.done;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        assert !this.done;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return String.format(\"[%s] %s\", this.done ? \"\\u2713\" : \"\\u2718\", this.name);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 36
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Todo.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "// Copyright (c) 2020, zhiayang, Apache License 2.0."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return String.format(\"[T] %s\", super.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    public static Todo parse(String input) throws InvalidInputException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        if (input.isEmpty()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "            throw new InvalidInputException(\"task description cannot be empty\", getUsage());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return new Todo(input);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    private static String getUsage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "        return \"todo \u003cdescription\u003e\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 26
    }
  },
  {
    "path": "test.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "set -e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "javac -target 11 -source 11 src/main/java/**.java -d bin/"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "java -cp bin Main \u003c tests/input.txt | diff -bu tests/EXPECTED.TXT -"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "if [ $? -ne 0 ]; then"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\techo \"test failed\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\texit -1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "else"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\techo \"test passed\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "\texit 0"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 13
    }
  },
  {
    "path": "tests/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "reset"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "todo task one"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "todo task two"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "todo task three"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "event event one /at 2020-12-31"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "event event two /at 2020-11-20"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "deadline super important submission /by 2025-03-18"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "deadline not so important thing /by 9999-12-31"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "done 10"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "done -19"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "done asdf"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "deadline /at 1999-12-31"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "deadline ijkl /at 1999-12-31"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "deadline ijkl"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "event"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "event /by 1999-12-31"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "event asdf /by 1999-12-31"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "event asdf"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhiayang"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "zhiayang": 29
    }
  }
]
