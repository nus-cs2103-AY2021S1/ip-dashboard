[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "run {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chiamyunqing": 6,
      "-": 44
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "E|✘|meeting |08 Jul 2020|07.00pm to 08.00pm"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "D|✓|submit |08 Aug 2019|09.00am"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "T|✓|play"
      }
    ],
    "authorContributionMap": {
      "chiamyunqing": 3
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " *  Represents a deadline task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " *  A deadline task has a deadline date and time."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    private LocalDate deadlineDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    private LocalTime deadlineTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public Deadline(String description, LocalDate deadlineDate, LocalTime deadlineTime) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        this.deadlineDate \u003d deadlineDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        this.deadlineTime \u003d deadlineTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * Returns an Optional of the deadline date."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @return an Optional of deadline date."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public Optional\u003cLocalDate\u003e getDate() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        return Optional.of(deadlineDate);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        return \"D|\" + super.toString() + \"|\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                + deadlineDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \"|\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                + deadlineTime.format(DateTimeFormatter.ofPattern(\"hh.mma\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chiamyunqing": 34
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " * The main class that directs the required actions to the respective classes."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * Simulates the Duke bot to run."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        ui.welcomeMessage();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                String[] processedCommand \u003d parser.parse(fullCommand);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                switch(processedCommand[0].toLowerCase()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    isExit \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    ui.showListTasks(tasks.getAllTasks());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                case \"print\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    ui.showRequiredTasks(tasks.getSameDateTasks(processedCommand[1]));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    Task doneTask \u003d tasks.markDone(Integer.parseInt(processedCommand[1]));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    ui.showDoneTask(doneTask);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    Task deletedTask \u003d tasks.deleteTask(Integer.parseInt(processedCommand[1]));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    ui.showDeleteTask(deletedTask);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    Task todoTsk \u003d new Todo(processedCommand[1]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    tasks.addTask(todoTsk);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    ui.showAddTask(todoTsk);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    Task deadlineTsk \u003d new Deadline(processedCommand[1],"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                            LocalDate.parse(processedCommand[2], DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                            LocalTime.parse(processedCommand[3], DateTimeFormatter.ofPattern(\"HHmm\")));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    tasks.addTask(deadlineTsk);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    ui.showAddTask(deadlineTsk);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    Task eventTsk \u003d new Event(processedCommand[1],"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                            LocalDate.parse(processedCommand[2], DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                            LocalTime.parse(processedCommand[3], DateTimeFormatter.ofPattern(\"HHmm\")),"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                            LocalTime.parse(processedCommand[4], DateTimeFormatter.ofPattern(\"HHmm\")));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    tasks.addTask(eventTsk);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    ui.showAddTask(eventTsk);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    ui.showRequiredTasks(tasks.getTasksWithKeyWord(processedCommand[1]));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                ui.showTotalTasks(tasks.getNumTasks());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                storage.updateFile(tasks.toString()); //reload the file"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                ui.showDukeError(e);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                ui.showLoadingError();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        ui.byeMessage();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        Duke duke \u003d new Duke(\"data/duke.txt\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chiamyunqing": 92,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " * Generic outline of the Duke exceptions."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "abstract class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    DukeException(String s) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chiamyunqing": 8
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " *  Represents an event task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " *  An event task has an event date and the start time and end time of event."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    private LocalDate eventDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    private LocalTime startTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    private LocalTime endTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public Event(String description, LocalDate eventDate, LocalTime startTime, LocalTime endTime) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        this.eventDate \u003d eventDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * Returns an Optional of the event date."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @return An Optional of event date."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public Optional\u003cLocalDate\u003e getDate() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        return Optional.of(eventDate);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        return \"E|\" + super.toString() + \"|\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                + eventDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \"|\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                + startTime.format(DateTimeFormatter.ofPattern(\"hh.mma\")) + \" to \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                + endTime.format(DateTimeFormatter.ofPattern(\"hh.mma\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "chiamyunqing": 38
    }
  },
  {
    "path": "src/main/java/InvalidDateAndTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " * The exception that is thrown when the user input date and time in wrong format."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "public class InvalidDateAndTimeException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public InvalidDateAndTimeException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        super(\"Please input date in this format YYYY-MM-DD.\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                + \"For events, input the time in this format HHMM-HHMM.\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chiamyunqing": 10
    }
  },
  {
    "path": "src/main/java/InvalidTaskNumber.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " * The exception that is thrown when a user intends to act on a task number that does not exist."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "public class InvalidTaskNumber extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public InvalidTaskNumber() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        super(\"Aiyo, don\u0027t have this task number leh...\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chiamyunqing": 8
    }
  },
  {
    "path": "src/main/java/NoDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " * The exception that is thrown when the user provides no description for a task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "public class NoDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public NoDescriptionException(String taskIdentifier) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        super(\"Eh you never tell me the description of \" + taskIdentifier"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                + \" how you want me to record sia?\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chiamyunqing": 9
    }
  },
  {
    "path": "src/main/java/NotTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " * The exception that is thrown when the user command is invalid."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "public class NotTaskException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public NotTaskException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        super(\"Excuse me, Lao Duke is not so smart. You must follow the format for input... Don\u0027t anyhow hor \u003e:(\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chiamyunqing": 8
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " * Represents a parser that will make sense of user commands and break down"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " * to various components for ease of processing."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * Returns an array of string where the commands for tasks have been broken"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * into its various parts for ease of processing/"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * E.g. deadline task returns [deadline, task description, date, time]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * event \u003d [event, task description, date, start time, end time]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @param command The user command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @return An array of string which has been processed."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @throws InvalidDateAndTimeException If input date/time is invalid."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @throws InvalidTaskNumber If an improper integer task number is called in delete and done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @throws NoDescriptionException If there is no task description for addition of tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @throws NotTaskException If an invalid command is being input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public String[] parse(String command) throws InvalidDateAndTimeException,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            InvalidTaskNumber, NoDescriptionException, NotTaskException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        String[] cmd \u003d command.split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        switch(cmd[0].toLowerCase()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            return cmd;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        case \"print\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            //check if is valid date"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                LocalDate.parse(cmd[1], DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                return cmd;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                throw new InvalidDateAndTimeException();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        //check if an integer is given for taskNum"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                Integer.parseInt(cmd[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                return cmd;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                throw new InvalidTaskNumber();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            if (cmd.length \u003c 2) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                throw new NoDescriptionException(cmd[0]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                return new String[]{cmd[0], command.replaceFirst(cmd[0] + \" \", \"\")};"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            if (cmd.length \u003c 2) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                throw new NoDescriptionException(cmd[0]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                //check if it is valid date and time"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    LocalDate.parse(cmd[cmd.length - 2], DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    LocalTime.parse(cmd[cmd.length - 1], DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    String[] splitBySlash \u003d command.split(\"/\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    return new String[]{cmd[0], splitBySlash[0].replaceFirst(cmd[0] + \" \", \"\"),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                            cmd[cmd.length - 2], cmd[cmd.length - 1]};"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    throw new InvalidDateAndTimeException();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            if (cmd.length \u003c 2) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                throw new NoDescriptionException(cmd[0]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    //check for valid date and time"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    LocalDate.parse(cmd[cmd.length - 2], DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    LocalTime.parse(cmd[cmd.length - 1].split(\"-\")[0], DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    LocalTime.parse(cmd[cmd.length - 1].split(\"-\")[1], DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    String[] splitBySlash \u003d command.split(\"/\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    return new String[]{cmd[0], splitBySlash[0].replaceFirst(cmd[0] + \" \", \"\"),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                            cmd[cmd.length - 2], cmd[cmd.length - 1].split(\"-\")[0],"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                            cmd[cmd.length - 1].split(\"-\")[1]};"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    throw new InvalidDateAndTimeException();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            throw new NotTaskException();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chiamyunqing": 90
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " * Represents a memory of the tasks of user. It loads tasks from file, saves and updates"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " * the file."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    //This function creates file if it does not exist, else return"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * Creates a file if the file does not exist. Otherwise, it will use the existing file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @throws IOException If the file cannot be created."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    private void createFile() throws IOException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        File f \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        if (f.exists()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            f.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * Returns a list of task to be loaded into the task list after"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * it had retrieved the existing tasks in the memory file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @return A list of task to be loaded into task list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @throws IOException If the file cannot be created."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public List\u003cTask\u003e load() throws IOException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        this.createFile();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        File f \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            //Format of each line: e.g. T|X|description or D|X|description|date|time"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            String[] taskComponent \u003d line.split(Pattern.quote(\"|\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            switch (taskComponent[0]) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                Task todoTask \u003d new Todo(taskComponent[2]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                taskList.add(todoTask);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                if (taskComponent[1].equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    todoTask.markAsDone();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                Task deadlineTask \u003d new Deadline(taskComponent[2],"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                        LocalDate.parse(taskComponent[3], DateTimeFormatter.ofPattern(\"dd MMM yyyy\")),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                        LocalTime.parse(taskComponent[4], DateTimeFormatter.ofPattern(\"hh.mma\")));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                taskList.add(deadlineTask);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                if (taskComponent[1].equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    deadlineTask.markAsDone();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                Task eventTask \u003d new Event(taskComponent[2],"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                        LocalDate.parse(taskComponent[3], DateTimeFormatter.ofPattern(\"dd MMM yyyy\")),"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                        LocalTime.parse(taskComponent[4].split(\" to \")[0], DateTimeFormatter.ofPattern(\"hh.mma\")),"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                        LocalTime.parse(taskComponent[4].split(\" to \")[1], DateTimeFormatter.ofPattern(\"hh.mma\")));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                taskList.add(eventTask);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                if (taskComponent[1].equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    eventTask.markAsDone();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * Writes the input text to the file."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @param textToAdd The text to be added to the file."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @throws IOException If the writing of file fails."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    private void writeToFile(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.filePath);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * Updates file content when the task list is updated."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @param text The content of the task list to overwrite in the file."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @throws IOException If the writing of file fails."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public void updateFile(String text) throws IOException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        writeToFile(text);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chiamyunqing": 107
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " * Represents a generic task. A task object has a description and an"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " * indication of whether the task is done or not."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public abstract Optional\u003cLocalDate\u003e getDate();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * Mark the task as completed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public boolean searchFound(String keyword) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        return description.contains(keyword);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        return isDone ? \"\\u2713\" : \"\\u2718\"; //return tick or X symbols"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        return getStatusIcon() + \"|\" + description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chiamyunqing": 38
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " * Represents a task list which keeps track of the list of tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " * It supports operations to manipulate the task list such as adding tasks,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " * deleting tasks, changing tasks to completed and getting specific tasks from the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @param tsk the task to be added to the list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public void addTask(Task tsk) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        taskList.add(tsk);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * Deletes a task from the task list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @param taskNum The task number to be deleted from the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @return The task that is deleted."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @throws InvalidTaskNumber If the task number is out of range."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public Task deleteTask(int taskNum) throws InvalidTaskNumber {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        if (taskNum \u003c 1 || taskNum \u003e taskList.size()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            throw new InvalidTaskNumber();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            Task tsk \u003d taskList.get(taskNum - 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            taskList.remove(taskNum - 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            return tsk;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * Returns a list of all the tasks."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @return A list of all tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public List\u003cTask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * Marks the specified task with the number as completed and"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * returns the completed task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @param taskNum The task number to be marked as done."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @return The completed task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @throws InvalidTaskNumber If the task number is out of range."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public Task markDone(int taskNum) throws InvalidTaskNumber {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        if (taskNum \u003c 1 || taskNum \u003e taskList.size()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            throw new InvalidTaskNumber();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            Task tsk \u003d taskList.get(taskNum - 1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            tsk.markAsDone();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            return tsk;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * Returns a list of tasks with the specified date."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @param date The date of the task to find."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @return A list of task with the specified date."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public List\u003cTask\u003e getSameDateTasks(String date) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        List\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        LocalDate eventDate \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            LocalDate dateInTask \u003d task.getDate().orElse(null);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            if (eventDate.equals(dateInTask)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                listOfTasks.add(task);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        return listOfTasks;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * Returns the number of tasks in the list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @return The total number of tasks in list."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public int getNumTasks() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public List\u003cTask\u003e getTasksWithKeyWord(String keyword) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            if (task.searchFound(keyword)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                list.add(task);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        StringBuilder content \u003d new StringBuilder();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            content.append(taskList.get(i));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            content.append(System.lineSeparator());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        return content.toString();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chiamyunqing": 115
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " *  Represents a to-do task with only a description."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * Returns an empty Optional since a to-do task does not have a date."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @return an emptu Optional."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public Optional\u003cLocalDate\u003e getDate() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        return Optional.empty();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        return \"T|\" + super.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chiamyunqing": 24
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " * Handles the interaction with user, such as reading input and"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " * printing output."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * Reads user command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @return User command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * Prints the welcome message."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public void welcomeMessage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        String intro \u003d \"Eh yo, I am Duke! Some kids call me \u0027Lao Duke\u0027 (which means old Duke).\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                + \"I like to speak Singlish but I also can remember your tasks one. Come try la! \";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        System.out.println(intro);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * Prints the goodbye message."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public void byeMessage() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        String bye \u003d \"Alamak, you sure you finished all your tasks? Ok lah I also need to sleep anyway Zzzz.\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                + \"Goodbye!\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        System.out.println(bye);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * Prints the list of tasks when user calls for \u0027list\u0027."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @param taskList The list of task to be printed."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public void showListTasks(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        System.out.println(\"Lao Duke not so blur like you. Tsk. I got remember your tasks one hor.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            Task tsk \u003d taskList.get(i);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            System.out.println(\"Task \" + (i + 1) + \": \" + tsk);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * Prints the list of tasks with same date as what user demands"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * when user calls for \u0027print /date\u0027."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @param taskList The list of tasks with same date."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public void showRequiredTasks(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        if (taskList.size() \u003e 0) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            System.out.println(\"I how smart...I have matched your queries as below:\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            for (Task tsk : taskList) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                System.out.println(tsk);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            System.out.println(\"Wah cannot find any matching tasks leh...\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * Prints the task that has been added to the list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @param tsk The task that has been added."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public void showAddTask(Task tsk) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        System.out.println(\"Lao Duke has added this task for you:\\n\" + tsk);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * Prints the task that has been marked as done when user calls \u0027done /task\u0027."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @param tsk The task that is completed."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public void showDoneTask(Task tsk) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        System.out.println(\"Wah very good! I am proud that you got do your task!\\n\" + tsk);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * Prints the task that has been deleted when user calls for \u0027delete /task\u0027"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @param tsk The task that is deleted."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public void showDeleteTask(Task tsk) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        System.out.println(\"Can can I removed this task for you:\\n\" + tsk);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * Prints the total number of tasks in list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @param num The total number of tasks."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public void showTotalTasks(int num) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        System.out.println(\"You have \" + num + \" task(s) in your list!\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * Prints the error when an IOException occurs."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        System.out.println(\"Error with reading / writing file!\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * Prints the error when a DukeException occurs."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     * @param e The DukeException that arises."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public void showDukeError(DukeException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        System.out.println(e);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chiamyunqing": 121
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public void testParse() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            //we converted to string to compare because using String[] compares the address instead"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            assertEquals(Arrays.toString(new String[]{\"event\", \"play games \", \"2020-08-09\", \"1700\", \"1800\"}),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    Arrays.toString(new Parser().parse(\"event play games /at 2020-08-09 1700-1800\")));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            assertEquals(Arrays.toString(new String[]{\"todo\", \"sing song\"}),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    Arrays.toString(new Parser().parse(\"todo sing song\")));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            assertEquals(Arrays.toString(new String[]{\"deadline\", \"study \", \"2020-08-09\", \"1800\"}),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                    Arrays.toString(new Parser().parse(\"deadline study /by 2020-08-09 1800\")));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chiamyunqing": 22
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public void testGetNumTask(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        assertEquals(0, new TaskList().getNumTasks());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        List\u003cTask\u003e listOfTask \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        listOfTask.add(new Todo(\"play\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        listOfTask.add(new Todo(\"study\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        assertEquals(2, new TaskList(listOfTask).getNumTasks());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public void testGetSameDateTask(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        class SimpleTask extends Task {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(\"2020-08-08\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            SimpleTask(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                super(\"test\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            public Optional\u003cLocalDate\u003e getDate(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                return Optional.of(date);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        List\u003cTask\u003e listOfTask \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        listOfTask.add(new SimpleTask());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        assertEquals(listOfTask, new TaskList(listOfTask).getSameDateTasks(\"2020-08-08\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        assertEquals(new ArrayList\u003cTask\u003e(), new TaskList(listOfTask).getSameDateTasks(\"2020-08-09\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    public void testGetAllTasks(){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        class SimpleTask extends Task {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(\"2020-08-08\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            SimpleTask(){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                super(\"test\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            public Optional\u003cLocalDate\u003e getDate(){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "                return Optional.of(date);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        List\u003cTask\u003e listOfTask \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        listOfTask.add(new SimpleTask());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        listOfTask.add(new SimpleTask());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        assertEquals(listOfTask, new TaskList(new ArrayList\u003cTask\u003e(listOfTask)).getAllTasks());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "        assertEquals(new ArrayList\u003cTask\u003e(), new TaskList().getAllTasks());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chiamyunqing": 56
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "deadline return book /by 2020-08-09 1700"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "event project meeting /at 2020-08-08 1400-1500"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "todo individual project"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "deadline study /by 2020-08-09 1800"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "print 2020-08-09"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "event group project /at 2020-09-09 0900-1200"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "find project"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "chiamyunqing": 14
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chiamyunqing"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "chiamyunqing": 2,
      "-": 32
    }
  }
]
