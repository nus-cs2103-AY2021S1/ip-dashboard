[
  {
    "path": "src/main/java/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theyifan"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    BYE, LIST, DONE, DELETE, TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theyifan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theyifan": 3
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theyifan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "theyifan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        return \"[D]\" + super.toString() + String.format(\" (by: %s)\", date);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "theyifan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theyifan": 12
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theyifan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theyifan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theyifan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        String greeting \u003d \"Hello I\u0027m Duke, your favourite chatbot! \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                + \"What can I do for you? \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        Print.formatPrint(greeting);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "theyifan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "theyifan"
        },
        "content": "            String input \u003d sc.nextLine().strip();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "theyifan"
        },
        "content": "            String[] inputs \u003d input.split(\"\\\\s\", 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "theyifan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "theyifan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                CommandType command \u003d convertInputToEnum(inputs[0].toLowerCase());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                    case BYE:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        Print.formatPrint(\"Bye! Hope to see you again soon! \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        return;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                    case LIST:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        Task.printList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                    case DONE:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        if (inputs.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                            throw new DukeException(\"OOPS! Task number cannot be empty for done action!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                            Task.markTaskAsDone(Integer.parseInt(inputs[1]));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        } catch (NumberFormatException | IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                            throw new DukeException(\"OOPS! Task number is invalid!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                    case DELETE:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        if (inputs.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                            throw new DukeException(\"OOPS! Task number cannot be empty for delete action!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                            Task.deleteTask(Integer.parseInt(inputs[1]));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        } catch (NumberFormatException | IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                            throw new DukeException(\"OOPS! Task number is invalid!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                    case TODO:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        if (inputs.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                            throw new DukeException(\"OOPS! The description of a todo cannot be empty!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        Task.addTask(new ToDo(inputs[1]));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                    case DEADLINE:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        if (inputs.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                            throw new DukeException(\"OOPS! The description of a deadline cannot be empty!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        String[] deadlineDetails \u003d inputs[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        if (deadlineDetails.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                            throw new DukeException(\"OOPS! The date of a deadline cannot be empty!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        Task.addTask(new Deadline(deadlineDetails[0], deadlineDetails[1]));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                    case EVENT:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        if (inputs.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                            throw new DukeException(\"OOPS! The description of an event cannot be empty!\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        String[] eventDetails \u003d inputs[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        if (eventDetails.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                            throw new DukeException(\"OOPS! The time of an event cannot be empty!\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        Task.addTask(new Event(eventDetails[0], eventDetails[1]));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                        throw new DukeException(\"OOPS! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "theyifan"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                Print.formatPrint(e.getMessage());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "theyifan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "theyifan"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "theyifan"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    private static CommandType convertInputToEnum(String input) throws DukeException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        switch (input) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "theyifan"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                return CommandType.BYE;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "theyifan"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                return CommandType.LIST;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "theyifan"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                return CommandType.DONE;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "theyifan"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                return CommandType.DELETE;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "theyifan"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                return CommandType.TODO;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "theyifan"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                return CommandType.DEADLINE;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "theyifan"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                return CommandType.EVENT;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "theyifan"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                throw new DukeException(\"OOPS! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theyifan": 97,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theyifan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theyifan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theyifan": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theyifan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "theyifan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        return \"[E]\" + super.toString()+ String.format(\" (at: %s)\", time);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "theyifan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theyifan": 12
    }
  },
  {
    "path": "src/main/java/Print.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theyifan"
        },
        "content": "public class Print {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    public static void formatPrint(String str) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        String divider \u003d \"----------------------------\\n\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        String newStr \u003d (\"   \" + divider + str + \"\\n\" + divider).replaceAll(\"(\\r\\n|\\n)\", \"\\r\\n   \");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        System.out.println(newStr);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "theyifan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theyifan": 7
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theyifan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theyifan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theyifan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theyifan"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    public static List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "theyifan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "theyifan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "theyifan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    public static void addTask(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        Print.formatPrint(String.format(\"Got it. I\u0027ve added this task: \\n   %s\\nNow you have %d task%s in the list.\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                task, taskList.size(), taskList.size() \u003e 1 ? \"s\": \"\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "theyifan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    public static void deleteTask(int num) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        Task deletedTask \u003d taskList.get(num - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        taskList.remove(num - 1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        Print.formatPrint(String.format(\"Got it. I\u0027ve deleted this task: \\n   %s\\nNow you have %d task%s in the list.\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                deletedTask, taskList.size(), taskList.size() \u003e 1 ? \"s\": \"\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "theyifan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    public static void printList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        String output \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        int count \u003d taskList.size();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        if (count \u003c\u003d 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "theyifan"
        },
        "content": "            Print.formatPrint(\"There is no task in your list currently. \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "theyifan"
        },
        "content": "            for (int i \u003d 0; i \u003c count; i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "theyifan"
        },
        "content": "                output +\u003d (i + 1) + \". \" + taskList.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "theyifan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "theyifan"
        },
        "content": "            Print.formatPrint(output.strip());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "theyifan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        Print.formatPrint(\"Nice! I\u0027ve marked this task as done: \\n   \" + this);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "theyifan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    public static void markTaskAsDone(int idx) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        taskList.get(idx - 1).markAsDone();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "theyifan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        return this.getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "theyifan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theyifan": 57
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theyifan"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theyifan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "theyifan"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "theyifan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "theyifan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theyifan": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theyifan"
        },
        "content": "deadline do 2103 homework /by Thursday"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theyifan"
        },
        "content": "event meet jason leo /at 5pm Monday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theyifan"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theyifan"
        },
        "content": "todo write resume"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theyifan"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theyifan"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "theyifan"
        },
        "content": "event meet babe"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "theyifan"
        },
        "content": "todo"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "theyifan"
        },
        "content": "blah blab"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "theyifan"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "theyifan"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "theyifan"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "theyifan"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "theyifan"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "theyifan": 14
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "theyifan"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "theyifan": 1,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theyifan"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theyifan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "theyifan"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "theyifan": 3,
      "-": 37
    }
  }
]
