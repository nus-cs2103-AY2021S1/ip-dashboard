[
  {
    "path": "dobbylist.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "[D][✘] ip task for week 3 (by: Aug 27 2020 11:59 pm)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "[E][✘] lecture (at: Aug 28 2020 4:00 pm)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "[T][✘] push new levels to github"
      }
    ],
    "authorContributionMap": {
      "sagarsureka": 3
    }
  },
  {
    "path": "src/main/java/Commands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "public enum Commands {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    TODO(\"\\n      todo _description_\"),"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    DEADLINE(\"\\n      deadline _description_ /by dd/mm/yyyy hhhh(optional)\"),"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    EVENT(\"\\n      event _description_ /at dd/mm/yyyy hhhh(optional)\"),"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    LIST(\"\\n      list\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    DONE(\"\\n      done _task_number_\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    DELETE(\"\\n      delete _task_number_\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    BYE(\"\\n      bye\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    SCHEDULED(\"\\n      scheduled dd/mm/yyyy\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    private String usage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    private Commands(String usage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        this.usage \u003d usage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    public String getUsage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        return this.usage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sagarsureka": 20
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "public class Deadline extends TimedTask {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    private static final String TAG \u003d \"[D]\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    public Deadline (String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        super(description, by, TAG);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    public Deadline (String description, String time, LocalDate date) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        super (description, time, date, TAG);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sagarsureka": 13
    }
  },
  {
    "path": "src/main/java/Dobby.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "public class Dobby {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    // String for output format"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    private static final String UNDERSCORE \u003d \"_________________________________________\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            \"______________________________________________\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    // ArrayList to store Tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    private static final String ALL_COMMANDS \u003d \"\\n    You can use the following commands in this chat bot:\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            + (Commands.TODO).getUsage()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            + (Commands.DEADLINE).getUsage()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            + (Commands.EVENT).getUsage()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            + (Commands.LIST).getUsage()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            + (Commands.DONE).getUsage()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            + (Commands.DELETE).getUsage()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            + (Commands.SCHEDULED).getUsage()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            + (Commands.BYE).getUsage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        reply(\"\\n    Hello! I\u0027m Dobby\" + ALL_COMMANDS + \"\\n    How can I help you?\\n    \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        readFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            String text \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                reply(getMessage(text));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            } catch (DobbyException e) { // prints error message"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                reply(e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            if (text.equals(\"bye\")) { // terminates program after bye command"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                rewriteFile();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    private static void readFile () {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            File file \u003d new File(\"../dobbylist.txt\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                String str \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                    createList(str);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                } catch (ParseException e) { // should never be called"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                    reply(\"\\n    \" + e.getMessage() + \"\\n    \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            reply(\"\\n    \" + e.getMessage() + \"\\n    \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    private static void rewriteFile() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"../dobbylist.txt\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            fw.flush();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                fw.write(task.getDescription() + System.lineSeparator());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            fw.write(tasks.get(tasks.size() - 1).getDescription());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            reply(\"\\n    \" + e.getMessage() + \"\\n    \");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    private static void createList(String str) throws ParseException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        boolean isDone \u003d str.charAt(4) \u003d\u003d \u0027\\u2713\u0027;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        if (str.charAt(1) \u003d\u003d \u0027T\u0027) { // TODO"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            String decription \u003d str.substring(str.indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            task \u003d new Todo(decription);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        } else if (str.charAt(1) \u003d\u003d \u0027D\u0027) { // DEADLINE"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            String description \u003d str.substring(str.indexOf(\u0027 \u0027) + 1, str.indexOf(\"(by: \"));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            String by \u003d str.substring(str.indexOf(\"(by: \") + 5, str.length() - 1); //Aug 28 2020 4:00 pm"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            int thirdIndex \u003d by.indexOf(\u0027 \u0027, 10);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            String dt \u003d by.substring(0, thirdIndex);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            String tm \u003d by.substring(thirdIndex + 1);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(dt, DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            task \u003d new Deadline(description, tm, date);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        } else { // EVENT"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            String description \u003d str.substring(str.indexOf(\u0027 \u0027) + 1, str.indexOf(\"(at: \"));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            String at \u003d str.substring(str.indexOf(\"(at: \") + 5, str.length() - 1);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            int thirdIndex \u003d at.indexOf(\u0027 \u0027, 10);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            String dt \u003d at.substring(0, thirdIndex);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            String tm \u003d at.substring(thirdIndex + 1);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(dt, DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            task \u003d new Event(description, tm, date);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            task.setDone();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    // Returns the chat bot reply or the error message depending on the input"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    private static String getMessage(String text) throws DobbyException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        if (text.equalsIgnoreCase(\"bye\")) { // bye command"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            message \u003d \"\\n    Goodbye. Hope to see you again soon!\\n    \";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        } else if (text.startsWith(\"todo\")) { // todo command"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                text \u003d text.substring(5).trim();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                Todo todo \u003d new Todo(text);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                tasks.add(todo);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                message \u003d \"\\n    Great! I\u0027ve added the following task:\\n      \" + todo.getDescription() +"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                        String.format(\"\\n    Now you have %d tasks in the list.\\n    \", tasks.size());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                throw new DobbyException(\"\\n    Incorrect usage of command. Description cannot be empty. Please try again.\""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                        + (Commands.TODO).getUsage() + \"\\n    \");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        } else if (text.startsWith(\"deadline\")) { // deadline command"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            String by \u003d \"\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                text \u003d text.substring(9).trim();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                if (text.indexOf(\"/by\") \u003c\u003d 1) { // empty description or /by missing"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                    throw new DobbyException(\"\\n    Incorrect usage of command. Description cannot be empty. Please try again.\""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                            + (Commands.DEADLINE).getUsage() + \"\\n    \");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                by \u003d text.substring(text.indexOf(\"/by\") + 4).trim();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                text \u003d text.substring(0, text.indexOf(\"/by\") - 1).trim();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                Deadline deadline \u003d new Deadline(text, by);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                if (by.substring(1 + by.lastIndexOf(\u0027 \u0027)).length() \u003e 4) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                    throw new DobbyException(\"\\n    Incorrect usage of command.\" +"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                            \"\\n    Details of time should be in 24hr format with only 4 digits. Please try again.\""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                            + (Commands.DEADLINE).getUsage() + \"\\n    \");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                tasks.add(deadline);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                message \u003d \"\\n    Great! I\u0027ve added the following task:\\n      \" + deadline.getDescription() +"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                        String.format(\"\\n    Now you have %d task%s in the list.\\n    \","
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                                tasks.size(), tasks.size() \u003e 1 ? \"s\" : \"\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                if (text.startsWith(\"deadline\") || text \u003d\u003d null) { // description empty"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                    throw new DobbyException(\"\\n    Incorrect usage of command. Description cannot be empty. Please try again.\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                            + (Commands.DEADLINE).getUsage()  + \"\\n    \");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                } else { // no deadline details specified"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                    throw new DobbyException(\"\\n    Incorrect usage of command. Deadline details cannot be empty. Please try again.\""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                            + (Commands.DEADLINE).getUsage()  + \"\\n    \");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                throw new DobbyException(\"\\n    Incorrect usage of command. The format of the date in incorrect. Please try again.\""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                        + (Commands.DEADLINE).getUsage()  + \"\\n    \");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            } catch (DobbyException e) { // empty description or /by missing"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                return e.getMessage();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        } else if (text.startsWith(\"event\")) { // event command"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            String at \u003d \"\";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                text \u003d text.substring(6).trim();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                if (text.indexOf(\"/at\") \u003c\u003d 1) { // empty description or /at missing"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                    throw new DobbyException(\"\\n    Incorrect usage of command. Description cannot be empty. Please try again.\""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                            + (Commands.EVENT).getUsage()  + \"\\n    \");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                at \u003d text.substring(text.indexOf(\"/at\") + 4);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                text \u003d text.substring(0, text.indexOf(\"/at\") - 1);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                Event event \u003d new Event(text, at);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                if (at.substring(1 + at.lastIndexOf(\u0027 \u0027)).length() \u003e 4) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                    throw new DobbyException(\"\\n    Incorrect usage of command.\" +"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                            \"\\n    Details of time should be in 24hr format with only 4 digits. Please try again.\""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                            + (Commands.EVENT).getUsage()  + \"\\n    \");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                tasks.add(event);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                message \u003d \"\\n    Great! I\u0027ve added the following task:\\n      \" + event.getDescription() +"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                        String.format(\"\\n    Now you have %d task%s in the list.\\n    \","
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                                tasks.size(), tasks.size() \u003e 1 ? \"s\" : \"\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                if (text.startsWith(\"event\") || text \u003d\u003d null) { // description empty"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                    throw new DobbyException(\"\\n    Incorrect usage of command. Description cannot be empty. Please try again.\""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                            + (Commands.EVENT).getUsage()  + \"\\n    \");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                } else { // no schedule details specified"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                    throw new DobbyException(\"\\n    Incorrect usage of command. Schedule details cannot be empty. Please try again.\""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                            + (Commands.EVENT).getUsage()  + \"\\n    \");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                throw new DobbyException(\"\\n    Incorrect usage of command. The format of the date in incorrect. Please try again.\""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                        + (Commands.EVENT).getUsage()  + \"\\n    \");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            } catch (DobbyException e) { // empty description or /at missing"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                return e.getMessage();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        } else if (text.equalsIgnoreCase(\"list\")) { // list command"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            int i \u003d 0;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            String all_tasks \u003d \"\\n    \";"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                all_tasks \u003d all_tasks + i + \". \" + task.getDescription() + \"\\n    \";"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            message \u003d all_tasks;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                message \u003d message + \"The task list is currently empty.\\n    \";"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        } else if (text.startsWith(\"done\")) { // done command"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                text \u003d text.substring(4).trim();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                int index \u003d Integer.parseInt(text);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                if (tasks.size() \u003c index) { // if index is out of range throw exception"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                    throw new DobbyException(\"\\n    Incorrect usage of command. Task number must be within the correct range.\""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                            + (Commands.DONE).getUsage() + \"\\n    \");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                Task task \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                task.setDone();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                message \u003d \"\\n    Great! I\u0027ve marked this task as done:\\n      \" + task.getDescription() + \"\\n    \";"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            } catch (DobbyException e) { // if index is out of range return message"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                return e.getMessage();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            } catch (Exception e) { // missing number after done"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                throw new DobbyException(\"\\n    Incorrect usage of command. Please enter a task number after done.\""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                        + (Commands.DONE).getUsage() + \"\\n    \");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        } else if (text.startsWith(\"delete\")) { // delete command"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                text \u003d text.substring(6).trim();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                int index \u003d Integer.parseInt(text);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                if (tasks.size() \u003c index) { // if index is out of range throw exception"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                    throw new DobbyException(\"\\n    Incorrect usage of command. Task number must be within the correct range.\""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                            + (Commands.DELETE).getUsage() + \"\\n    \");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                Task task \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                tasks.remove(index - 1);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                message \u003d \"\\n    Noted. I\u0027ve removed this task:\\n      \" + task.getDescription() + \"\\n    \";"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            } catch (DobbyException e) { // if index is out of range return message"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                return e.getMessage();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            } catch (Exception e) { // missing number after done"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                throw new DobbyException(\"\\n    Incorrect usage of command. Please enter a task number after delete.\""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                        + (Commands.DELETE).getUsage() + \"\\n    \");"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        } else if (text.startsWith(\"scheduled\")) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                String dt \u003d text.substring(text.indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                String day \u003d dt.substring(0, dt.indexOf(\u0027/\u0027));"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                String month \u003d dt.substring(dt.indexOf(\u0027/\u0027) + 1, dt.lastIndexOf(\u0027/\u0027));"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                String year \u003d dt.substring(dt.lastIndexOf(\u0027/\u0027) + 1);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                LocalDate parsedDate \u003d LocalDate.parse(year + \"-\" + month + \"-\" + day);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                message \u003d \"\\n    \";"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                int counter \u003d 0;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                for (Task task: tasks) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                    if (task instanceof TimedTask) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                        TimedTask timedTask \u003d (TimedTask)task;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                        if (parsedDate.equals(timedTask.getDate())) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                            message \u003d message + String.format(\"%d. %s\\n    \", ++counter, timedTask.getDescription());"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                throw new DobbyException(\"\\n    Incorrect usage of command. The format of the date in incorrect. Please try again.\""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                        + (Commands.SCHEDULED).getUsage()  + \"\\n    \");"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                throw new DobbyException(\"\\n    Incorrect usage of command. The format of the date in incorrect. Please try again.\""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                        + (Commands.SCHEDULED).getUsage() + \"\\n    \");"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        } else { // unexpected input"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            message \u003d  \"\\n    Sorry that command is not supported. Please try again.\" + ALL_COMMANDS + \"\\n    \";"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            throw new DobbyException(message);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    private static void reply(String message) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        System.out.println(\"    \" + UNDERSCORE + message + UNDERSCORE);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sagarsureka": 278
    }
  },
  {
    "path": "src/main/java/DobbyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "public class DobbyException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    public DobbyException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sagarsureka": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "public class Event extends TimedTask {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    private static final String TAG \u003d \"[E]\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    public Event (String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        super(description, at, TAG);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    public Event (String description, String time, LocalDate date) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        super (description, time, date, TAG);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sagarsureka": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        String checkbox \u003d \"[\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        if (this.isDone()) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            checkbox \u003d checkbox + \"\\u2713] \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            checkbox \u003d checkbox + \"\\u2718] \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        return checkbox + this.description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sagarsureka": 27
    }
  },
  {
    "path": "src/main/java/TimedTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "public class TimedTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    private final String time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    private final String tag;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    public TimedTask (String description, String time, String tag) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        String dt \u003d \"\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        if (time.indexOf(\u0027 \u0027) \u003e 0) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            dt \u003d time.substring(0, time.indexOf(\u0027 \u0027));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            String tm \u003d time.substring(time.indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            this.time \u003d parseTime(tm);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            dt \u003d time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            this.time \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        date \u003d parseDate(dt);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    public TimedTask (String description, String time, LocalDate date, String tag) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    private LocalDate parseDate (String dt) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        LocalDate parsedDate;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        String day \u003d dt.substring(0, dt.indexOf(\u0027/\u0027));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        String month \u003d dt.substring(dt.indexOf(\u0027/\u0027) + 1, dt.lastIndexOf(\u0027/\u0027));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        String year \u003d dt.substring(dt.lastIndexOf(\u0027/\u0027) + 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        parsedDate \u003d LocalDate.parse(year + \"-\" + month + \"-\" + day);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        return parsedDate;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    private String parseTime(String time) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        int tm \u003d Integer.parseInt(time);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        String hr \u003d \"\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        String ampm \u003d \"\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        String min \u003d \"\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        if (tm / 100 \u003e 12) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            hr \u003d String.format(\"%d:\", (tm / 100) % 12);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            ampm \u003d \" pm\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            hr \u003d String.format(\"%d:\", (tm / 100));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            ampm \u003d \" am\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        if (tm % 100 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            min \u003d \"00\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            min \u003d String.valueOf(tm % 100);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            if (tm % 100 \u003c 10) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                min \u003d \"0\" + min;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        if (time.equals(\"1200\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            return \"12:00 pm\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        return hr + min + ampm;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        String message \u003d this.tag + super.getDescription() + \" \" + this.getSchedule();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    public String getSchedule() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        String timeTag \u003d \"\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        if (tag \u003d\u003d \"[D]\") {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            timeTag \u003d \"(by: \";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "            timeTag \u003d \"(at: \";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        return timeTag + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy \"))"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "                + time + \")\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sagarsureka": 92
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    private final String TAG \u003d \"[T]\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "        return TAG + super.getDescription();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sagarsureka": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "done"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "done n"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "delete"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "delete n"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "deadline /by 27/08/2020 2359"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "deadline ip task for week 3 /by"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "deadline ip task for week 3 /by 27/08/2020 2359"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "event"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "event /at 28/08/2020 1600"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "event lecture /at"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "event lecture /at 28/08/2020 1600"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "todo"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "todo push new levels to github"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "scheduled 28/08/2020"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "sagarsureka": 28
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "java -classpath ../bin Dobby \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "sagarsureka": 4,
      "-": 36
    }
  },
  {
    "path": "text-ui-test/testing-deadline-exceptions.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "deadline /by week8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "deadline cs2103t /by"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "deadline r /by 5"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "sagarsureka": 6
    }
  },
  {
    "path": "text-ui-test/testing-done-exceptions.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "todo ip"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "done"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "done n"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "sagarsureka": 7
    }
  },
  {
    "path": "text-ui-test/testing-event-exceptions.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "event"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "event /at friday 4pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "event lecture /at"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "event lecture /at friday 4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "sagarsureka": 6
    }
  },
  {
    "path": "text-ui-test/testing_todo-exceptions.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "todo ip"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sagarsureka"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "sagarsureka": 4
    }
  }
]
