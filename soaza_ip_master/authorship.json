[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "soaza"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "soaza"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "soaza"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "soaza"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "soaza"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "soaza"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "soaza"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "soaza"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "soaza"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "soaza"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "soaza"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "soaza"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "soaza"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "soaza"
        },
        "content": "    testCompile \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "soaza"
        },
        "content": "    compile \u0027org.junit.jupiter:junit-jupiter-api:5.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "soaza"
        },
        "content": "    sourceSets.main.java.srcDirs \u003d [\u0027src\u0027]"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "soaza"
        },
        "content": "    mainClassName \u003d \"main.java.Duke.Duke\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 18,
      "-": 45
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "[T][✗] h"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": "[T][✓] play"
      }
    ],
    "authorContributionMap": {
      "soaza": 2
    }
  },
  {
    "path": "src/main/java/Duke/Commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "package main.java.Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.Task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public boolean isExit;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": "    TaskList tasklist;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "soaza"
        },
        "content": "    String str;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public Command(TaskList tasklist, String str) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "soaza"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "soaza"
        },
        "content": "        this.tasklist \u003d tasklist;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "soaza"
        },
        "content": "        this.str \u003d str;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "soaza"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * Executes the Command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "soaza"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "soaza"
        },
        "content": "        return this.str;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "soaza"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 24
    }
  },
  {
    "path": "src/main/java/Duke/Commands/addCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "package main.java.Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.Task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.Task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": "public class addCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": "    Task task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public addCommand(TaskList tasklist, Task task) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "soaza"
        },
        "content": "        super(tasklist,\"\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "soaza"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "soaza"
        },
        "content": "        return this.tasklist.addTask(this.task);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "soaza"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 17
    }
  },
  {
    "path": "src/main/java/Duke/Commands/commandList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "1)list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": "2)todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "3)deadline"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": "4)event"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "5)delete"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": "6)done"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": "7)bye"
      }
    ],
    "authorContributionMap": {
      "soaza": 7
    }
  },
  {
    "path": "src/main/java/Duke/Commands/deleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "package main.java.Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.Task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "public class deleteCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": "    int taskNumber;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public deleteCommand(TaskList tasklist, int taskNumber) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": "        super(tasklist,\"\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "soaza"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "soaza"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * Executes a command to delete a task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "soaza"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "soaza"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "soaza"
        },
        "content": "        return this.tasklist.deleteTask(taskNumber);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "soaza"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 19
    }
  },
  {
    "path": "src/main/java/Duke/Commands/doneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "package main.java.Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.Task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "public class doneCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": "    int taskNumber;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public doneCommand(TaskList taskList, int taskNumber) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": "        super(taskList,\"\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "soaza"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "soaza"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * Executes the command to mark a task as done."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "soaza"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "soaza"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "soaza"
        },
        "content": "        return this.tasklist.completeTask(taskNumber);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "soaza"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 19
    }
  },
  {
    "path": "src/main/java/Duke/Commands/endCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "package main.java.Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.Task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "public class endCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public endCommand(TaskList taskList) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": "        super(taskList,\"\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "soaza"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * Executes the command to end the loop in the main method and end the program."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "soaza"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "soaza"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "soaza"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "soaza"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "soaza"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 19
    }
  },
  {
    "path": "src/main/java/Duke/Commands/exceptionCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "package main.java.Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.Task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": "public class exceptionCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public boolean isExit;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": "    TaskList tasklist;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public exceptionCommand(TaskList tasklist,String str) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "soaza"
        },
        "content": "        super(tasklist,str);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "soaza"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * Executes the Command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "soaza"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "soaza"
        },
        "content": "        return this.str;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "soaza"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 21
    }
  },
  {
    "path": "src/main/java/Duke/Commands/findCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "package main.java.Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.Task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "public class findCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public findCommand(TaskList tasklist, String str) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": "        super(tasklist,str);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "soaza"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "soaza"
        },
        "content": "        return this.tasklist.findTask(this.str);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "soaza"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 15
    }
  },
  {
    "path": "src/main/java/Duke/Commands/listCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "package main.java.Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.Task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "public class listCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public listCommand(TaskList tasklist) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": "        super(tasklist,\"\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "soaza"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * Executes the Command to show the Task List."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "soaza"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "soaza"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "soaza"
        },
        "content": "        return this.tasklist.showList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "soaza"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 18
    }
  },
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "package main.java.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.Commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.DukeException.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.Task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.Task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "soaza"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "soaza"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "soaza"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "soaza"
        },
        "content": "class DialogBox extends HBox {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "soaza"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "soaza"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "soaza"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "soaza"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "soaza"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "soaza"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "soaza"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "soaza"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "soaza"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "soaza"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "soaza"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "soaza"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "soaza"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "soaza"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "soaza"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "soaza"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "soaza"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "soaza"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "soaza"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "soaza"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "soaza"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "soaza"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "soaza"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "soaza"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "soaza"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "soaza"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "soaza"
        },
        "content": "}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "soaza"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "soaza"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/aang.jpg\"));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "soaza"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/shiba.jpg\"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "soaza"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "soaza"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "soaza"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "soaza"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "soaza"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "soaza"
        },
        "content": "    boolean isExit \u003d false;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public Storage storage;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public TaskList tasklist;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public Ui ui;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public Duke () {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "soaza"
        },
        "content": "        this.storage \u003d new Storage(\"duke.txt\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "soaza"
        },
        "content": "        this.tasklist \u003d new TaskList(storage.arr);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "soaza"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public static void main(String[] args) throws DukeException, IOException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "soaza"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "soaza"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "soaza"
        },
        "content": "        ArrayList\u003cTask\u003e arrList \u003d duke.tasklist.list;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "soaza"
        },
        "content": "        Parser parser \u003d new Parser(duke);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "soaza"
        },
        "content": "        duke.ui.greetingMessage();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "soaza"
        },
        "content": "        String userinput \u003d \"\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "soaza"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "soaza"
        },
        "content": "            duke.ui.prompt();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "soaza"
        },
        "content": "            userinput \u003d duke.ui.readCommand();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "soaza"
        },
        "content": "            Command command \u003d parser.parse(userinput, duke.tasklist);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "soaza"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "soaza"
        },
        "content": "            isExit \u003d command.isExit;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "soaza"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "soaza"
        },
        "content": "        duke.storage.saveTasks(arrList);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "soaza"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "soaza"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public void start(Stage stage) throws Exception {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "soaza"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "soaza"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "soaza"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "soaza"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "soaza"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "soaza"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "soaza"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "soaza"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "soaza"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "soaza"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "soaza"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "soaza"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "soaza"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "soaza"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "soaza"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "soaza"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "soaza"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "soaza"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "soaza"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "soaza"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "soaza"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "soaza"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "soaza"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "soaza"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "soaza"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "soaza"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "soaza"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "soaza"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "soaza"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "soaza"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "soaza"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "soaza"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "soaza"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "soaza"
        },
        "content": "        });"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "soaza"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "soaza"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "soaza"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "soaza"
        },
        "content": "        });"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "soaza"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "soaza"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "soaza"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "soaza"
        },
        "content": "            handleUserInput(duke);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "soaza"
        },
        "content": "        });"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "soaza"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "soaza"
        },
        "content": "            handleUserInput(duke);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "soaza"
        },
        "content": "        });"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "soaza"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "soaza"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "soaza"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "soaza"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "soaza"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "soaza"
        },
        "content": "    private void handleUserInput(Duke duke) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "soaza"
        },
        "content": "        String userText \u003d new String(userInput.getText());"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "soaza"
        },
        "content": "        String dukeText \u003d new String(getResponse(userInput.getText(),duke));"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "soaza"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "soaza"
        },
        "content": "                DialogBox.getUserDialog(userText, new Image(String.valueOf(user))),"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "soaza"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new Image(String.valueOf(dukeImage)))"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "soaza"
        },
        "content": "        );"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "soaza"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "soaza"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "soaza"
        },
        "content": "     */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public String getResponse(String input,Duke duke) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "soaza"
        },
        "content": "        Parser parser \u003d new Parser(duke);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "soaza"
        },
        "content": "        duke.ui.prompt();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "soaza"
        },
        "content": "        //userinput \u003d duke.ui.readCommand();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "soaza"
        },
        "content": "        Command command \u003d parser.parse(input, duke.tasklist);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "soaza"
        },
        "content": "        String string \u003dcommand.execute();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "soaza"
        },
        "content": "        isExit \u003d command.isExit;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "soaza"
        },
        "content": "        if(!this.isExit){"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "soaza"
        },
        "content": "        return string;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "soaza"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "soaza"
        },
        "content": "            duke.storage.saveTasks(duke.tasklist.list);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "soaza"
        },
        "content": "            return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "soaza"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "soaza"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 221
    }
  },
  {
    "path": "src/main/java/Duke/DukeException/DukeArrayException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "package main.java.Duke.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "public class DukeArrayException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public DukeArrayException(){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 6
    }
  },
  {
    "path": "src/main/java/Duke/DukeException/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "package main.java.Duke.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public DukeException(){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 8
    }
  },
  {
    "path": "src/main/java/Duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "package main.java.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "soaza"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 12
    }
  },
  {
    "path": "src/main/java/Duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "package main.java.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.Duke;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "soaza"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "soaza"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "soaza"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "soaza"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "soaza"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "soaza"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "soaza"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "soaza"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "soaza"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "soaza"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "soaza"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "soaza"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "soaza"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "soaza"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "soaza"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "soaza"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "soaza"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 32
    }
  },
  {
    "path": "src/main/java/Duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "package main.java.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "soaza"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "soaza"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "soaza"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "soaza"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "soaza"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "soaza"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "soaza"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "soaza"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "soaza"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "soaza"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "soaza"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "soaza"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "soaza"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "soaza"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "soaza"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "soaza"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "soaza"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "soaza"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "soaza"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "soaza"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "soaza"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "soaza"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "soaza"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "soaza"
        },
        "content": "        String response \u003d duke.getResponse(input,duke);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "soaza"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "soaza"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "soaza"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "soaza"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "soaza"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "soaza"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 52
    }
  },
  {
    "path": "src/main/java/Duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "package main.java.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.Commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.DukeException.DukeArrayException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.DukeException.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.Task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.Task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.Task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.Task.toDo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "soaza"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "soaza"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "soaza"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "soaza"
        },
        "content": "    Duke duke;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public Parser(Duke duke) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "soaza"
        },
        "content": "        this.duke \u003d duke;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "soaza"
        },
        "content": "     /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * Parses the user input and returns a Command to be executed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "soaza"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * @param userInput User input from the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * @param tasklist Current task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * @return Command to be executed."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * @throws DateTimeParseException if user input for date is not in the correct format."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * @throws DukeException if user input is invalid."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "soaza"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "soaza"
        },
        "content": "     public Command parse(String userInput, TaskList tasklist) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "soaza"
        },
        "content": "         String commandType;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "soaza"
        },
        "content": "         String description \u003d null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "soaza"
        },
        "content": "        if (userInput.contains(\" \")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "soaza"
        },
        "content": "            commandType \u003d userInput.substring(0, userInput.indexOf(\u0027 \u0027));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "soaza"
        },
        "content": "            description \u003d userInput.substring(userInput.indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "soaza"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "soaza"
        },
        "content": "            commandType \u003d userInput;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "soaza"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "soaza"
        },
        "content": "         "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "soaza"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "soaza"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "soaza"
        },
        "content": "            return new listCommand(tasklist);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "soaza"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "soaza"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "soaza"
        },
        "content": "                if (userInput.length() \u003c 5) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    throw new DukeException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "soaza"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "soaza"
        },
        "content": "                String todoDescription \u003d userInput.substring(5);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "soaza"
        },
        "content": "                toDo task \u003d new toDo(todoDescription, false);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "soaza"
        },
        "content": "                return new addCommand(tasklist, task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "soaza"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "soaza"
        },
        "content": "                return new exceptionCommand(tasklist,duke.ui.showException(\"Must include description for todo\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "soaza"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "soaza"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "soaza"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "soaza"
        },
        "content": "                if (!userInput.contains(\"/by\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    throw new DukeException();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "soaza"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    int index \u003d userInput.indexOf(\"/by\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    String deadlineDateString \u003d userInput.substring(index + 4);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    LocalDate deadlineDate \u003d LocalDate.parse(deadlineDateString);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    Deadline deadline \u003d new Deadline(userInput.substring(9, index), false, deadlineDate);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    return new addCommand(tasklist, deadline);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "soaza"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "soaza"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "soaza"
        },
        "content": "                return new exceptionCommand(tasklist,duke.ui.showException(\"Please input date in the format: YYYY-MM-DD\"));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "soaza"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "soaza"
        },
        "content": "                return new exceptionCommand(tasklist,duke.ui.showException(\"deadline must include \u0027/by\u0027\"));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "soaza"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "soaza"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "soaza"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "soaza"
        },
        "content": "                if (!userInput.contains(\"/at\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    throw new DukeException();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "soaza"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    int index \u003d userInput.indexOf(\"/at\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    String eventDateString \u003d userInput.substring(index + 4);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    LocalDate eventDate \u003d LocalDate.parse(eventDateString);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    Event event \u003d new Event(userInput.substring(6, index), false, eventDate);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    return new addCommand(tasklist,event);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "soaza"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "soaza"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "soaza"
        },
        "content": "                return new exceptionCommand(tasklist,duke.ui.showException(\"Please input date in the format: YYYY-MM-DD\"));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "soaza"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "soaza"
        },
        "content": "                return new exceptionCommand(tasklist,duke.ui.showException(\"event must include \u0027/at\u0027\"));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "soaza"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "soaza"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "soaza"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "soaza"
        },
        "content": "                if (userInput.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    throw new DukeException();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "soaza"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "soaza"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(userInput.substring(7)) - 1;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "soaza"
        },
        "content": "                if (taskNumber \u003e tasklist.list.size()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    throw new DukeArrayException();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "soaza"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "soaza"
        },
        "content": "                return new deleteCommand(tasklist, taskNumber);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "soaza"
        },
        "content": "            } catch (DukeArrayException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "soaza"
        },
        "content": "                return new exceptionCommand(tasklist,duke.ui.showException(\"Number cannot be longer than the list.\"));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "soaza"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "soaza"
        },
        "content": "                return new exceptionCommand(tasklist,duke.ui.showException(\"Must include number after \u0027delete\u0027\"));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "soaza"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "soaza"
        },
        "content": "                return new exceptionCommand(tasklist,duke.ui.showException(\"Must include number after \u0027delete\u0027\"));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "soaza"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "soaza"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "soaza"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "soaza"
        },
        "content": "                if (userInput.length() \u003c 6) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    throw new DukeException();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "soaza"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "soaza"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(userInput.substring(5)) - 1;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "soaza"
        },
        "content": "                if (taskNumber \u003e\u003d tasklist.list.size()) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    throw new DukeArrayException();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "soaza"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "soaza"
        },
        "content": "                return new doneCommand(tasklist, taskNumber);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "soaza"
        },
        "content": "            } catch (DukeArrayException e){"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "soaza"
        },
        "content": "                return new exceptionCommand(tasklist,duke.ui.showException(\"Number cannot be longer than list.\"));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "soaza"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "soaza"
        },
        "content": "                return new exceptionCommand(tasklist,duke.ui.showException(\"Must include number after \u0027done\u0027.\"));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "soaza"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "soaza"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "soaza"
        },
        "content": "            return new endCommand(tasklist);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "soaza"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "soaza"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "soaza"
        },
        "content": "                if (userInput.length() \u003c 6) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    throw new DukeException();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "soaza"
        },
        "content": "                }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "soaza"
        },
        "content": "                return new findCommand(tasklist, description);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "soaza"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "soaza"
        },
        "content": "                return new exceptionCommand(tasklist,duke.ui.showException(\"Must include name after \u0027find\u0027.\"));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "soaza"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "soaza"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "soaza"
        },
        "content": "            return new Command(tasklist,duke.ui.badInput());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "soaza"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "soaza"
        },
        "content": "     }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "soaza"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 149
    }
  },
  {
    "path": "src/main/java/Duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "package main.java.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.Task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.Task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.Task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.Task.toDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "soaza"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "soaza"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public String filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public ArrayList\u003cTask\u003e arr;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "soaza"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "soaza"
        },
        "content": "        this.arr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "soaza"
        },
        "content": "        readTasks();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "soaza"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * Reads duke.txt for any pre-logged task list and appends the tasks inside to the current Task List."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * Creates a duke.txt file if it is not found in the directory."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "soaza"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * @throws IOException when file is unreadable."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "soaza"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public void readTasks() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "soaza"
        },
        "content": "        BufferedReader objReader \u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "soaza"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "soaza"
        },
        "content": "            String strCurrentLine;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "soaza"
        },
        "content": "            objReader \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "soaza"
        },
        "content": "            while ((strCurrentLine \u003d objReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "soaza"
        },
        "content": "                String taskType \u003d strCurrentLine.substring(1, 2);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "soaza"
        },
        "content": "                boolean taskCompletion \u003d strCurrentLine.contains(\"✗\") ? false : true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "soaza"
        },
        "content": "                String taskDetails \u003d taskCompletion"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        ? strCurrentLine.substring(strCurrentLine.indexOf(\"✓\") + 3)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        : strCurrentLine.substring(strCurrentLine.indexOf(\"✗\") + 3);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "soaza"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "soaza"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    arr.add(new toDo(taskDetails, taskCompletion));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "soaza"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    String deadlineString \u003d taskDetails.substring(0, taskDetails.indexOf(\"(\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    String taskDeadlineString \u003d taskDetails.substring(taskDetails.indexOf(\"by:\") + 3, taskDetails.indexOf(\")\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    LocalDate taskDeadline \u003d LocalDate.parse(taskDeadlineString);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    arr.add(new Deadline(deadlineString, taskCompletion, taskDeadline));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "soaza"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    String eventString \u003d taskDetails.substring(0, taskDetails.indexOf(\"(\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    String eventDateString \u003d taskDetails.substring(taskDetails.indexOf(\"at:\") + 3, taskDetails.indexOf(\")\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    LocalDate eventDate \u003d LocalDate.parse(eventDateString);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    arr.add(new Event(eventString, taskCompletion, eventDate));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "soaza"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "soaza"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "soaza"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "soaza"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "soaza"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "soaza"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "soaza"
        },
        "content": "                if (objReader !\u003d null) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "soaza"
        },
        "content": "                    objReader.close();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "soaza"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "soaza"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "soaza"
        },
        "content": "                ex.printStackTrace();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "soaza"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "soaza"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "soaza"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * Saves all the tasks in the Task List when program ends(ie. when the user input is \u0027bye\u0027)."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "soaza"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * @param arr Current task list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "soaza"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public void saveTasks(ArrayList\u003cTask\u003e arr) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "soaza"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "soaza"
        },
        "content": "            // Creates a FileWriter"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "soaza"
        },
        "content": "            FileWriter file \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "soaza"
        },
        "content": "            // Creates a BufferedWriter"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "soaza"
        },
        "content": "            BufferedWriter output \u003d new BufferedWriter(file);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "soaza"
        },
        "content": "            // Writes the string to the file"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "soaza"
        },
        "content": "            for (int i \u003d 0 ; i \u003c arr.size() ; i++ ) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "soaza"
        },
        "content": "                output.write(arr.get(i).stringify() + \"\\n\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "soaza"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "soaza"
        },
        "content": "            // Closes the writer"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "soaza"
        },
        "content": "            output.close();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "soaza"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "soaza"
        },
        "content": "            e.getStackTrace();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "soaza"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "soaza"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 97
    }
  },
  {
    "path": "src/main/java/Duke/Task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "package main.java.Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public LocalDate deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public Deadline(String task, boolean isComplete, LocalDate deadline) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "soaza"
        },
        "content": "        super(task, isComplete);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "soaza"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * Returns the description of the task and its completion in a string."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "soaza"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * @return Description of task in a String."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "soaza"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "soaza"
        },
        "content": "    @SuppressWarnings(\"checkstyle:WhitespaceAfter\")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "soaza"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public String stringify() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "soaza"
        },
        "content": "        if (this.isComplete \u003d\u003d true) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "soaza"
        },
        "content": "            return \"[D][✓] \" + this.task + \"(by:\" + this.deadline + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "soaza"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "soaza"
        },
        "content": "            return \"[D][✗] \" + this.task + \"(by:\" + this.deadline + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "soaza"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "soaza"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 27
    }
  },
  {
    "path": "src/main/java/Duke/Task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "package main.java.Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "public class Event extends Deadline {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public Event(String task, boolean isComplete, LocalDate date) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": "        super(task, isComplete , date);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "soaza"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * Returns the description of the task and its completion in a string."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "soaza"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * @return Description of task in a String."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "soaza"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "soaza"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public String stringify() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "soaza"
        },
        "content": "        if (this.isComplete \u003d\u003d true) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "soaza"
        },
        "content": "            return \"[E][✓] \" + this.task + \"(at:\" + this.deadline + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "soaza"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "soaza"
        },
        "content": "            return \"[E][✗] \" + this.task + \"(at:\" + this.deadline + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "soaza"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "soaza"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 24
    }
  },
  {
    "path": "src/main/java/Duke/Task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "package main.java.Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public String task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public boolean isComplete;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public Task(String task, boolean isComplete) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "soaza"
        },
        "content": "        this.isComplete \u003d isComplete;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "soaza"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * Returns the description of the task and its completion in a string."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "soaza"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * @return Description of task in a String."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "soaza"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public String stringify() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "soaza"
        },
        "content": "        if (this.isComplete \u003d\u003d true) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "soaza"
        },
        "content": "            return \"[T][✓] \" + this.task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "soaza"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "soaza"
        },
        "content": "            return \"[T][✗] \" + this.task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "soaza"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "soaza"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 24
    }
  },
  {
    "path": "src/main/java/Duke/Task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "package main.java.Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasklist) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "soaza"
        },
        "content": "        this.list \u003d tasklist;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "soaza"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * Deletes the task from the Task List."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "soaza"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * @param taskNumber Task number to be deleted."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "soaza"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public String deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "soaza"
        },
        "content": "        Task taskDeleted \u003d list.get(taskNumber);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "soaza"
        },
        "content": "        list.remove(taskNumber);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "soaza"
        },
        "content": "        return (\"I have removed the task:\\n\" + taskDeleted.stringify() + \"\\n\" + \"Now you have \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "soaza"
        },
        "content": "                + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "soaza"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * Adds the task to the Task List"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "soaza"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "soaza"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public String addTask(Task task) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "soaza"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "soaza"
        },
        "content": "        return"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "soaza"
        },
        "content": "                \"I have added this task:\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        + task.stringify() + \"\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "soaza"
        },
        "content": "                        + \"Now you have \" + list.size() + \" task(s) in the list.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "soaza"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * Mark the task as completed."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "soaza"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * @param taskNumber Task number of the task to be marked as completed."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "soaza"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public String completeTask(int taskNumber) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "soaza"
        },
        "content": "        Task taskCompleted \u003d this.list.get(taskNumber);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "soaza"
        },
        "content": "        taskCompleted.isComplete \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "soaza"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n\" + \"[✓] \" + taskCompleted.task ;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "soaza"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * Shows the Task list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "soaza"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public String showList(){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "soaza"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "soaza"
        },
        "content": "        String str \u003d \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "soaza"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "soaza"
        },
        "content": "            str +\u003d ((i+1)+\".\" + list.get(i).stringify() + \"\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "soaza"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "soaza"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public String findTask(String str) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "soaza"
        },
        "content": "        String returnStr \u003d (\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "soaza"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "soaza"
        },
        "content": "            Task task \u003d list.get(i);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "soaza"
        },
        "content": "            if (task.task.contains(str)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "soaza"
        },
        "content": "                returnStr +\u003d ((i + 1) + \".\" + task.stringify());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "soaza"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "soaza"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "soaza"
        },
        "content": "        return returnStr;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "soaza"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 71
    }
  },
  {
    "path": "src/main/java/Duke/Task/toDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "package main.java.Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "public class toDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public toDo(String task, boolean isComplete) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": "        super(task, isComplete);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "soaza"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * Returns the description of the task and its completion in a string."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "soaza"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * @return Description of task in a String."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "soaza"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "soaza"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public String stringify() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "soaza"
        },
        "content": "        if (this.isComplete \u003d\u003d true) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "soaza"
        },
        "content": "            return \"[T][✓] \" + this.task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "soaza"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "soaza"
        },
        "content": "            return \"[T][✗] \" + this.task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "soaza"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "soaza"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 22
    }
  },
  {
    "path": "src/main/java/Duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "package main.java.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": "    Scanner scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "soaza"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "soaza"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * Reads the next input from the user using a Scanner."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * @return User input in a string."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "soaza"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "soaza"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "soaza"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * Greets the user when the program is executed."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "soaza"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public void greetingMessage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "soaza"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke. What can I do for you?\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "soaza"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * Prompts the user for an input"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "soaza"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public void prompt() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "soaza"
        },
        "content": "        System.out.println(\"Input:\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "soaza"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * When the user input is invalid, prints the list of possible input for the user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "soaza"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public String badInput() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "soaza"
        },
        "content": "        return ("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "soaza"
        },
        "content": "                \"Please input:\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "soaza"
        },
        "content": "                + \"1)list - to access the list\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "soaza"
        },
        "content": "                + \"2)todo - to create a todo task\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "soaza"
        },
        "content": "                + \"3)deadline - to create a deadline\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "soaza"
        },
        "content": "                + \"4)event - to schedule an event\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "soaza"
        },
        "content": "                + \"5)done - to mark tasks as done\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "soaza"
        },
        "content": "                + \"6)delete - to delete tasks from the list\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "soaza"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "soaza"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * Prints the exception message whenever an exception is thrown."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "soaza"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "soaza"
        },
        "content": "     * @param str Exception message."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "soaza"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public String showException(String str){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "soaza"
        },
        "content": "        return (str);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "soaza"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 58
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "soaza"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "soaza"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "soaza"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "soaza"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "soaza"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "soaza"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "soaza"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "soaza": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"653.0\" prefWidth\u003d\"464.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"main.java.Duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "soaza"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "soaza"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" alignment\u003d\"TOP_LEFT\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"50.0\" prefWidth\u003d\"464.0\" promptText\u003d\"Input:\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "soaza"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "soaza"
        },
        "content": "            \u003cFont name\u003d\"Beirut Regular\" size\u003d\"26.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "soaza"
        },
        "content": "         \u003c/font\u003e\u003c/TextField\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "soaza"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "soaza"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutX\u003d\"-1.0\" prefHeight\u003d\"604.0\" prefWidth\u003d\"464.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "soaza"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "soaza"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" alignment\u003d\"TOP_CENTER\" prefHeight\u003d\"561.0\" prefWidth\u003d\"409.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "soaza"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "soaza"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "soaza"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "soaza"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "soaza": 23
    }
  },
  {
    "path": "src/test/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "[T][✓] hw"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": "[E][✓] (at:2222-02-12)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "[T][✗] play"
      }
    ],
    "authorContributionMap": {
      "soaza": 3
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.Commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.Task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.Task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.Task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": "import main.java.Duke.Task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "soaza"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "soaza"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "soaza"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "soaza"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "soaza"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "soaza"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public void toDoTest() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "soaza"
        },
        "content": "        Duke duke \u003d new Duke(\"duke.txt\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "soaza"
        },
        "content": "        Parser parser \u003d new Parser(duke);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "soaza"
        },
        "content": "        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "soaza"
        },
        "content": "        TaskList taskList \u003d new TaskList(arr);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "soaza"
        },
        "content": "        Command cmd \u003d parser.parse(\"todo Tutorial 1\", taskList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "soaza"
        },
        "content": "        cmd.execute();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "soaza"
        },
        "content": "        Task taskInserted \u003d taskList.list.get(0);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "soaza"
        },
        "content": "        assertEquals(taskInserted.task, \"Tutorial 1\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "soaza"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public void deadlineTest() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "soaza"
        },
        "content": "        Duke duke \u003d new Duke(\"duke.txt\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "soaza"
        },
        "content": "        Parser parser \u003d new Parser(duke);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "soaza"
        },
        "content": "        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "soaza"
        },
        "content": "        TaskList taskList \u003d new TaskList(arr);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "soaza"
        },
        "content": "        Command cmd \u003d parser.parse(\"deadline Tutorial 1 /by 2020-02-01\", taskList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "soaza"
        },
        "content": "        cmd.execute();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "soaza"
        },
        "content": "        Deadline deadlineInserted \u003d (Deadline) taskList.list.get(0);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "soaza"
        },
        "content": "        assertEquals(deadlineInserted.deadline, LocalDate.parse(\"2020-02-01\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "soaza"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "soaza"
        },
        "content": "    public void eventTest() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "soaza"
        },
        "content": "        Duke duke \u003d new Duke(\"duke.txt\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "soaza"
        },
        "content": "        Parser parser \u003d new Parser(duke);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "soaza"
        },
        "content": "        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "soaza"
        },
        "content": "        TaskList taskList \u003d new TaskList(arr);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "soaza"
        },
        "content": "        Command cmd \u003d parser.parse(\"event Tutorial 1 /at 2020-02-01\", taskList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "soaza"
        },
        "content": "        cmd.execute();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "soaza"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "soaza"
        },
        "content": "        Event eventInserted \u003d (Event) taskList.list.get(0);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "soaza"
        },
        "content": "        assertEquals(eventInserted.deadline, LocalDate.parse(\"2020-02-01\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "soaza"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "soaza"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "soaza": 56
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "soaza"
        },
        "content": "todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "soaza"
        },
        "content": "todo slap ppl"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "soaza"
        },
        "content": "deadline homework"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "soaza"
        },
        "content": "deadline homework /by Tuesday"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "soaza"
        },
        "content": "event"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "soaza"
        },
        "content": "event concert"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "soaza"
        },
        "content": "event concert /at Wimbley Place,Tuesday"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "soaza"
        },
        "content": "random string"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "soaza"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "soaza": 10
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "soaza"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "soaza": 1,
      "-": 38
    }
  }
]
