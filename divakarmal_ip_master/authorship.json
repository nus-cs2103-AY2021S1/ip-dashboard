[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "D | false | work  | 2012-12-31"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 1
    }
  },
  {
    "path": "src/main/java/Commands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "public enum Commands {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    DELETE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 7
    }
  },
  {
    "path": "src/main/java/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "public class DeadlineTask extends Task{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    private LocalDate deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public DeadlineTask(String name, boolean isCompleted, String deadline) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        super(name,isCompleted);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        this.deadline \u003d LocalDate.parse(deadline);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String getType(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String getTime(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return this.deadline.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 23
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    static ArrayList\u003cTask\u003e myTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    static String horizontalLine \u003d \"_________________________________________________________________\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public static void greet(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        String greeting \u003d \"\\n   \" + horizontalLine"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                + \"\\n   Hi, I\u0027m Duke!\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                + \"\\n   How can I help you today?\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                + \"\\n   \" + horizontalLine;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            readFile();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public static void readFile() throws IOException{"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        File file \u003d new File(\"./data\\\\duke.txt\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        if(!file.exists()){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        BufferedReader reader \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        while(line !\u003d null){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            String[] splitLine \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            switch (splitLine[0]){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    myTasks.add(new EventTask(splitLine[2], Boolean.parseBoolean(splitLine[1]),splitLine[3]));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    myTasks.add(new TodoTask(splitLine[2], Boolean.parseBoolean(splitLine[1])));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    myTasks.add(new DeadlineTask(splitLine[2], Boolean.parseBoolean(splitLine[1]),splitLine[3]));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            line \u003d reader.readLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public static void writeFile() throws IOException{"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        String line \u003d \"\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        File file \u003d new File(\"./data\\\\duke.txt\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        if(!file.exists()){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        for(Task task : myTasks){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            String type \u003d task.getType();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            switch (type){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    line \u003d type+\" | \"+ task.isDone()+\" | \" + task.getName() + \" | \" + task.getTime();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    line \u003d type+\" | \"+ task.isDone()+\" | \" + task.getName();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            writer.write(line);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            writer.newLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            line\u003d\"\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public static void addTask(Task task) throws IOException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        myTasks.add(task);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        String output \u003d \"   \" + horizontalLine"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        + \"\\n   Got it. I\u0027ve added this task:\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        + \"\\n       \" + task"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        + String.format(\"\\n   Now you have %d task(s) in the list.\", myTasks.size())"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        + \"\\n   \" + horizontalLine;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        writeFile();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public static void listTasks(){"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        if(myTasks.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            System.out.println(\"   \" + horizontalLine"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    + \"\\n   \" + \"You have no tasks\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    + \"\\n   \" + horizontalLine);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            StringBuilder output \u003d new StringBuilder(\"   \" + horizontalLine);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            for (int i \u003d 0; i \u003c myTasks.size(); i++) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                output.append(\"\\n    \").append(i + 1).append(\". \").append(myTasks.get(i));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            output.append(\"\\n   \" + horizontalLine);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            System.out.println(output);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public static void bye(){"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        String output \u003d \"   \" + horizontalLine"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                + \"\\n   \" + \"Bye. Hope to see you again soon!\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                + \"\\n   \" + horizontalLine;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    private static void markAsDone(int i) throws IOException {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        Task task \u003d myTasks.get(i-1);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        task.markDone();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        String output \u003d \"   \" + horizontalLine"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                + \"\\n   \" + \"Nice! I\u0027ve marked this task as done:\""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                + \"\\n   \" + task"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                + \"\\n   \" + horizontalLine;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        writeFile();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public static void deleteTask(int i) throws IOException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        Task task \u003d myTasks.get(i-1);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        myTasks.remove(i-1);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        String output \u003d \"   \" + horizontalLine"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                + \"\\n   \" + \"Noted. I\u0027ve removed this task: \""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                + \"\\n   \" + task"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                + String.format(\"\\n   Now you have %d task(s) in the list.\", myTasks.size())"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                + \"\\n   \" + horizontalLine;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        writeFile();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public static boolean isNumeric(String string){"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        if(string \u003d\u003d null){"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        int a;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            a \u003d Integer.parseInt(string);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        } catch (NumberFormatException e){"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return (a \u003c\u003d 0 || a \u003e myTasks.size());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        while (true){"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                if (input.equals(\"bye\") || input.equals(\"Bye\")) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    bye();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    listTasks();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        if(input.split(\"done \").length \u003c 2) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                            throw new DukeException(\"\", DukeExceptionType.NO_DESCRIPTION, Commands.DONE);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        } else if(isNumeric(input.split(\"done \")[1])){"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                            throw new DukeException(\"\", DukeExceptionType.WRONG_DESCRIPTION, Commands.DONE);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                            String[] inputSplit \u003d input.split(\"done \");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                            int index \u003d Integer.parseInt(inputSplit[1]);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                            markAsDone(index);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    } catch(DukeException e){"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        System.err.println(e);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    } catch (IOException e) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        e.printStackTrace();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                } else if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        if (input.split(\"todo \").length \u003c 2) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                            throw new DukeException(\"todo needs description\", DukeExceptionType.NO_DESCRIPTION, Commands.TODO);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                            String[] inputSplit \u003d input.split(\"todo \");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                            Task task \u003d new TodoTask(inputSplit[1], false);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                            addTask(task);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    } catch (DukeException e){"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        System.err.println(e);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    } catch (IOException e) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        e.printStackTrace();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        if(input.split(\"deadline \").length \u003c 2) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                            throw new DukeException(\"deadline needs description\", DukeExceptionType.NO_DESCRIPTION, Commands.DEADLINE);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        } else if(!input.contains(\"/by\")) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                            throw new DukeException(\"\", DukeExceptionType.WRONG_DESCRIPTION, Commands.DEADLINE);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        }  else if(input.split(\"/by \").length \u003c 2) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                            throw new DukeException(\"\", DukeExceptionType.EMPTY_TIME, Commands.DEADLINE);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                            String[] inputSplit \u003d input.split(\"/by \");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                                if(inputSplit[0].split(\"deadline \").length \u003c 2) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                                    throw new DukeException(\"\", DukeExceptionType.NO_DESCRIPTION, Commands.DEADLINE);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                                } else{"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                                    String name \u003d inputSplit[0].split(\"deadline \")[1];"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                                    String time \u003d inputSplit[1];"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                                    Task task \u003d new DeadlineTask(name,false, time);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                                    addTask(task);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                            } catch(DukeException e){"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                                System.err.println(e);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                            } catch (IOException e) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                                e.printStackTrace();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                            } catch (DateTimeParseException e){"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                                System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    } catch(DukeException e){"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        System.err.println(e);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    try{"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        if (input.split(\"event \").length\u003c2){"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                            throw new DukeException(\"\", DukeExceptionType.NO_DESCRIPTION, Commands.EVENT);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        } else if(!input.contains(\"/at\")) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                            throw new DukeException(\"\", DukeExceptionType.WRONG_DESCRIPTION, Commands.EVENT);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        }  else if(input.split(\"/at \").length \u003c 2) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                            throw new DukeException(\"\", DukeExceptionType.EMPTY_TIME, Commands.EVENT);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        else {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                            String[] inputSplit \u003d input.split(\"/at \");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                                if(inputSplit[0].split(\"event \").length \u003c 2) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                                    throw new DukeException(\"\", DukeExceptionType.NO_DESCRIPTION, Commands.EVENT);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                                } else{"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                                    String name \u003d inputSplit[0].split(\"event \")[1];"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                                    String time \u003d inputSplit[1];"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                                    Task task \u003d new EventTask(name,false, time);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                                    addTask(task);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                            } catch(DukeException e){"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                                System.err.println(e);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    } catch(DukeException | IOException e){"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        System.err.println(e);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    try{"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        if (input.split(\"delete \").length\u003c2){"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                            throw new DukeException(\"\", DukeExceptionType.NO_DESCRIPTION, Commands.DELETE);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        } else if(isNumeric(input.split(\"delete \")[1])){"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                            throw new DukeException(\"\", DukeExceptionType.WRONG_DESCRIPTION, Commands.DELETE);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                            String[] inputSplit \u003d input.split(\"delete \");"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                            int index \u003d Integer.parseInt(inputSplit[1]);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                            deleteTask(index);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    } catch(DukeException e){"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        System.err.println(e);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    } catch (IOException e) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        e.printStackTrace();"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    throw new DukeException(\"\", DukeExceptionType.INVALID_TASK);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            } catch(DukeException e) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                System.err.println(e);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 271,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    protected DukeExceptionType exceptionType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    protected Commands command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public DukeException(String e, DukeExceptionType exceptionType){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        super(e);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        this.exceptionType \u003d exceptionType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public DukeException(String e, DukeExceptionType exceptionType, Commands command){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        super(e);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        this.exceptionType \u003d exceptionType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        String error \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        switch (exceptionType){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            case EMPTY_TIME:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                switch (command){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    case DEADLINE:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        error+\u003d \"Deadline task requires a time\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    case EVENT:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        error+\u003d \"Event task requires a time\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            case INVALID_TASK:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                error+\u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            case NO_DESCRIPTION:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                switch (command){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    case DEADLINE:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        error+\u003d \"Deadline task description cannot be empty\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    case TODO:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        error+\u003d \"Todo task description cannot be empty\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    case EVENT:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        error+\u003d \"Event task description cannot be empty\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    case DONE:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        error+\u003d \"Done task description cannot be empty\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            case WRONG_DESCRIPTION:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                switch (command){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    case DEADLINE:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        error+\u003d \"Deadline command must be followed by \u0027/by\u0027 and then a deadline\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    case EVENT:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        error+\u003d \"Event command must be followed by \u0027/at\u0027 and then a duration\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    case DONE:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        error+\u003d \"Such a task does not exist, please only follow done by the serial number of the task to be marked done\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    case DELETE:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        error+\u003d \"Such a task does not exist, please only follow delete by the serial number of the task to be marked deleted\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return error;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 69
    }
  },
  {
    "path": "src/main/java/DukeExceptionType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "public enum DukeExceptionType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    NO_DESCRIPTION,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    INVALID_TASK,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    WRONG_DESCRIPTION,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    EMPTY_TIME"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 6
    }
  },
  {
    "path": "src/main/java/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "public class EventTask extends Task{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    private LocalDate time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public EventTask(String name, boolean isCompleted, String time) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        super(name, isCompleted);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        this.time \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String getType(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String getTime(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return this.time.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 25
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    private boolean isCompleted;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public Task(String name, boolean isCompleted){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        this.isCompleted \u003d isCompleted;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public void markDone(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        this.isCompleted \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String getIcon(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        if(isCompleted){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            return \"[✓] \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            return \"[✗] \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String getName(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String getType(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String isDone(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return String.valueOf(this.isCompleted);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String getTime(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    };"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return this.getIcon() + this.name;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 43
    }
  },
  {
    "path": "src/main/java/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "public class TodoTask extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public TodoTask(String name, boolean isComplete) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        super(name, isComplete);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String getType(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "todo work"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "deadline homework /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 1,
      "-": 20
    }
  }
]
