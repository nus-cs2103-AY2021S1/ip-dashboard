[{"path":"CONTRIBUTORS.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Contributors"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Homepage"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---|:---:|:---:|:---:"},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":"![](https://avatars2.githubusercontent.com/u/53458698?s\u003d100) | Caleb Lin | [Github](https://github.com/Caleblyx) |"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![](https://avatars0.githubusercontent.com/u/22460123?s\u003d100) | Jeffry Lum | [Github](https://github.com/j-lum/) | [Homepage](https://se.kasugano.moe)"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![](https://avatars0.githubusercontent.com/u/1673303?s\u003d100) | Damith C. Rajapakse | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/)"}],"authorContributionMap":{"caleblyx":1,"-":6}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"# Bob, the personal assistant"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"This project was created using Java Object Oriented Programming from a greenfield Java projects project template for a software engineering module (CS2103T) "},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":"at the National University of Singapore. "},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"It is named Bob, the personal assistant, and functions primarily to track pending tasks of the user. "},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"Users may interact with Bob by providing commands via a Command Line Interface (CLI) or a simple chat box Graphical User Interface (GUI). "},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"![Image of BobUi](https://github.com/Caleblyx/ip/blob/master/docs/Ui.png)"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"## User Guide"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"Take a look at the [User Guide](https://caleblyx.github.io/ip/) for more details."},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"#### Quick start"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"1. Ensure you have Java 11 or above installed."},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"2. Download the latest version of `Bob.jar` from [releases](https://github.com/Caleblyx/ip/releases)."},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":"3. Find a home for Bob! Move `Bob.jar` to your preferred home directory for the program. Note that data "},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"used by Bob will be stored in this directory."},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":"4. Execute Bob.jar by double-clicking it (or your preferred method)."},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":"After following the steps above, Bob\u0027s chat box should appear. Input commands in the field bar to interact "},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":"with Bob."},{"lineNumber":24,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":25,"author":{"gitId":"caleblyx"},"content":"More details can be found in the [User Guide](https://github.com/Caleblyx/ip/blob/master/docs/README.md)"},{"lineNumber":26,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":27,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":28,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":29,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":30,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":31,"author":{"gitId":"caleblyx"},"content":"## Instructions for setting up in Intellij for Developers"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   1. Click `OK`"},{"lineNumber":40,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":42,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":44,"author":{"gitId":"caleblyx"},"content":"1. After the importing is complete, locate the `src/main/bob/Bob.java` file, right-click it, and choose `Run Bob.main()`. If the setup is correct, the Command Line Interface of Bob"},{"lineNumber":45,"author":{"gitId":"caleblyx"},"content":"should initialise."},{"lineNumber":46,"author":{"gitId":"caleblyx"},"content":"  "},{"lineNumber":47,"author":{"gitId":"caleblyx"},"content":"## Acknowledgements"},{"lineNumber":48,"author":{"gitId":"caleblyx"},"content":"* Bob\u0027s profile picture sourced from [PNGGuru](https://www.pngguru.com/free-transparent-background-png-clipart-kvkde)"},{"lineNumber":49,"author":{"gitId":"caleblyx"},"content":"* Third party libraries used: [JavaFX](https://openjfx.io/) and [JUnit](https://junit.org/junit5/)"},{"lineNumber":50,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":51,"author":{"gitId":"caleblyx"},"content":"## Contributors"},{"lineNumber":52,"author":{"gitId":"caleblyx"},"content":"Take a look at the [contributors](https://github.com/Caleblyx/ip/blob/master/CONTRIBUTORS.md) page."}],"authorContributionMap":{"caleblyx":38,"-":14}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"caleblyx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"caleblyx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"caleblyx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"caleblyx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"caleblyx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"caleblyx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"caleblyx"},"content":"    mainClassName \u003d \"bob.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"caleblyx"},"content":"    archiveBaseName \u003d \"bob\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"caleblyx"},"content":"    toolVersion \u003d \u00278.32\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"caleblyx":18,"-":43}},{"path":"data/save.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"T | 0 | mop the floor"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":"D | 0 | finish assignment | 2020-05-19 2000"},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"T | 0 | empty the trash"}],"authorContributionMap":{"caleblyx":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":"This user guide will provide an extensive overview of the features available to users of Bob, the personal assistant."},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"Since Bob is interacted with primarily through the input of commands, this guide will consist mainly of the available"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":"commands and respective formats."},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":"* Table of Contents"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"{:toc}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"## Quick Start"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"1. Ensure you have Java 11 or above installed."},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"2. Download the latest version of `Bob.jar` from [releases](https://github.com/Caleblyx/ip/releases)."},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"3. Find a home for Bob! Move `Bob.jar` to your preferred home directory for the program. Note that data "},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"used by Bob will be stored in this directory."},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"4. Execute Bob.jar by double-clicking it (or your preferred method)."},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"After following the steps above, Bob\u0027s chat box should appear. Input commands in the field bar to interact "},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"with Bob."},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":"### Notes about the command syntax"},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e"},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`."},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":"### Adding tasks"},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":"Bob\u0027s primary function is to track pending tasks of user in a `Task List`."},{"lineNumber":24,"author":{"gitId":"caleblyx"},"content":"There are three types of tasks that may be added to Bob\u0027s `Task List`:"},{"lineNumber":25,"author":{"gitId":"caleblyx"},"content":"   * To do\u0027s"},{"lineNumber":26,"author":{"gitId":"caleblyx"},"content":"   * Deadlines"},{"lineNumber":27,"author":{"gitId":"caleblyx"},"content":"   * Events"},{"lineNumber":28,"author":{"gitId":"caleblyx"},"content":"   "},{"lineNumber":29,"author":{"gitId":"caleblyx"},"content":"#### Adding To Do\u0027s : `todo`"},{"lineNumber":30,"author":{"gitId":"caleblyx"},"content":"Adds a `To do` to Bob\u0027s `Task List`."},{"lineNumber":31,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":32,"author":{"gitId":"caleblyx"},"content":"Format: `todo DESCRIPTION`"},{"lineNumber":33,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":34,"author":{"gitId":"caleblyx"},"content":"* `DESCRIPTION`may be a brief description of the to do."},{"lineNumber":35,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":36,"author":{"gitId":"caleblyx"},"content":"Examples:"},{"lineNumber":37,"author":{"gitId":"caleblyx"},"content":"* `todo mop the floor`"},{"lineNumber":38,"author":{"gitId":"caleblyx"},"content":"* `todo tidy backpack`"},{"lineNumber":39,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":40,"author":{"gitId":"caleblyx"},"content":"#### Adding Deadlines: `deadline`"},{"lineNumber":41,"author":{"gitId":"caleblyx"},"content":"Adds a task with a `deadline` to Bob\u0027s `Task list`."},{"lineNumber":42,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":43,"author":{"gitId":"caleblyx"},"content":"Format: `deadline DESCRIPTION /by DATE TIME`  "},{"lineNumber":44,"author":{"gitId":"caleblyx"},"content":"* `DESCRIPTION`may be a brief description of the deadline."},{"lineNumber":45,"author":{"gitId":"caleblyx"},"content":"* `DATE` must be inputted using the following format: `YYYY-MM-dd`."},{"lineNumber":46,"author":{"gitId":"caleblyx"},"content":"* `TIME` must be inputted using 24 hour time and the following format: `HHmm`."},{"lineNumber":47,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":48,"author":{"gitId":"caleblyx"},"content":"Examples:"},{"lineNumber":49,"author":{"gitId":"caleblyx"},"content":"* `deadline finish mathematics assignment /by 2020-05-19 2359`"},{"lineNumber":50,"author":{"gitId":"caleblyx"},"content":"* `deadline email project plan to co-ordinator /by 2020-08-12 1000`"},{"lineNumber":51,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":52,"author":{"gitId":"caleblyx"},"content":"#### Adding Events: `event`"},{"lineNumber":53,"author":{"gitId":"caleblyx"},"content":"Adds an `event` (i.e a task that occurs over a period of time) to Bob\u0027s `Task List`."},{"lineNumber":54,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":55,"author":{"gitId":"caleblyx"},"content":"Format: `event DESCRIPTION /at SDATE STIME to EDATE ETIME`"},{"lineNumber":56,"author":{"gitId":"caleblyx"},"content":"* `DESCRIPTION`may be a brief description of the deadline."},{"lineNumber":57,"author":{"gitId":"caleblyx"},"content":"* `SDATE` is the starting date of the event and must be inputted using the following format: `YYYY-MM-dd`."},{"lineNumber":58,"author":{"gitId":"caleblyx"},"content":"* `STIME` is the starting time of the event and must be inputted using 24 hour time and the following format: `HHmm`."},{"lineNumber":59,"author":{"gitId":"caleblyx"},"content":"* `EDATE` is the ending date of the event and must be inputted using the following format: `YYYY-MM-dd`."},{"lineNumber":60,"author":{"gitId":"caleblyx"},"content":"* `ETIME` is the ending time of the event and must be inputted using 24 hour time and the following format: `HHmm`."},{"lineNumber":61,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":62,"author":{"gitId":"caleblyx"},"content":"Examples:"},{"lineNumber":63,"author":{"gitId":"caleblyx"},"content":"* `event meet friends for lunch /at 2020-06-18 1100 to 2020-06-18 1200`"},{"lineNumber":64,"author":{"gitId":"caleblyx"},"content":"* `event project meeting /at 2020-08-22 1300 to 2020-08-22 1400`"},{"lineNumber":65,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":66,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":67,"author":{"gitId":"caleblyx"},"content":"### Listing all tasks on the Task List: `list`"},{"lineNumber":68,"author":{"gitId":"caleblyx"},"content":"Lists all the tasks on Bob\u0027s `Task List`. Shows the `index` assigned to each task."},{"lineNumber":69,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":70,"author":{"gitId":"caleblyx"},"content":"Format: `list`"},{"lineNumber":71,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":72,"author":{"gitId":"caleblyx"},"content":"### Delete tasks from the Task List: `delete`"},{"lineNumber":73,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":74,"author":{"gitId":"caleblyx"},"content":"Deletes a task at a provided index from the `Task List`."},{"lineNumber":75,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":76,"author":{"gitId":"caleblyx"},"content":"Format: `delete INDEX`"},{"lineNumber":77,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":78,"author":{"gitId":"caleblyx"},"content":"* `INDEX` must be an index of a task on the `Task List` for this feature to function successfully."},{"lineNumber":79,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":80,"author":{"gitId":"caleblyx"},"content":"Example:"},{"lineNumber":81,"author":{"gitId":"caleblyx"},"content":"* `delete 1`"},{"lineNumber":82,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":83,"author":{"gitId":"caleblyx"},"content":"Alternatively, the following deletes all tasks from the `Task List`."},{"lineNumber":84,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":85,"author":{"gitId":"caleblyx"},"content":"Format: `delete all`"},{"lineNumber":86,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":87,"author":{"gitId":"caleblyx"},"content":"### Marking tasks on the Task List as done: `done`"},{"lineNumber":88,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":89,"author":{"gitId":"caleblyx"},"content":"Marks a task at a provided index on the `Task List` as done."},{"lineNumber":90,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":91,"author":{"gitId":"caleblyx"},"content":"Format: `done INDEX`"},{"lineNumber":92,"author":{"gitId":"caleblyx"},"content":"* `INDEX` must be an index of a task on the `Task List` for this feature to function successfully."},{"lineNumber":93,"author":{"gitId":"caleblyx"},"content":"  "},{"lineNumber":94,"author":{"gitId":"caleblyx"},"content":"Example:"},{"lineNumber":95,"author":{"gitId":"caleblyx"},"content":"  * `done 1`"},{"lineNumber":96,"author":{"gitId":"caleblyx"},"content":"  "},{"lineNumber":97,"author":{"gitId":"caleblyx"},"content":"Alternatively, the following marks all on the `Task List` as done."},{"lineNumber":98,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":99,"author":{"gitId":"caleblyx"},"content":"Format: `done all`"},{"lineNumber":100,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":101,"author":{"gitId":"caleblyx"},"content":"### Finding tasks with keywords: `find`"},{"lineNumber":102,"author":{"gitId":"caleblyx"},"content":"Finds a list of tasks that contain provided keywords or phrases."},{"lineNumber":103,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":104,"author":{"gitId":"caleblyx"},"content":"Format: `find KEYWORDS`"},{"lineNumber":105,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":106,"author":{"gitId":"caleblyx"},"content":"* `KEYWORDS` is the keywords or phrases to be searched for in the `Task List`."},{"lineNumber":107,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":108,"author":{"gitId":"caleblyx"},"content":"Example:"},{"lineNumber":109,"author":{"gitId":"caleblyx"},"content":"* `find homework`"},{"lineNumber":110,"author":{"gitId":"caleblyx"},"content":"* `find Mar`"},{"lineNumber":111,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":112,"author":{"gitId":"caleblyx"},"content":"### Snoozing deadlines: `snooze`"},{"lineNumber":113,"author":{"gitId":"caleblyx"},"content":"Snoozes the deadline of a task at an index to a provided deadline."},{"lineNumber":114,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":115,"author":{"gitId":"caleblyx"},"content":"Format: `snooze INDEX /to DATE TIME`"},{"lineNumber":116,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":117,"author":{"gitId":"caleblyx"},"content":"* `INDEX` must be an index of a task with a deadline on the `Task List` for this feature to function successfully."},{"lineNumber":118,"author":{"gitId":"caleblyx"},"content":"* `DATE` must be inputted using the following format: `YYYY-MM-dd`."},{"lineNumber":119,"author":{"gitId":"caleblyx"},"content":"* `TIME` must be inputted using 24 hour time and the following format: `HHmm`."},{"lineNumber":120,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":121,"author":{"gitId":"caleblyx"},"content":"Example:"},{"lineNumber":122,"author":{"gitId":"caleblyx"},"content":"* `snooze 1 /to 2020-12-20 0800`"},{"lineNumber":123,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":124,"author":{"gitId":"caleblyx"},"content":"### Reschedule events: `reschedule`"},{"lineNumber":125,"author":{"gitId":"caleblyx"},"content":"Reschedules the period of an event at an index to a provided period."},{"lineNumber":126,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":127,"author":{"gitId":"caleblyx"},"content":"Format: `reschedule INDEX /to SDATE STIME to EDATE ETIME`"},{"lineNumber":128,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":129,"author":{"gitId":"caleblyx"},"content":"* `INDEX` must be an index of a task with a deadline on the `Task List` for this feature to function successfully."},{"lineNumber":130,"author":{"gitId":"caleblyx"},"content":"* `SDATE` is the starting date of the event and must be inputted using the following format: `YYYY-MM-dd`."},{"lineNumber":131,"author":{"gitId":"caleblyx"},"content":"* `STIME` is the starting time of the event and must be inputted using 24 hour time and the following format: `HHmm`."},{"lineNumber":132,"author":{"gitId":"caleblyx"},"content":"* `EDATE` is the ending date of the event and must be inputted using the following format: `YYYY-MM-dd`."},{"lineNumber":133,"author":{"gitId":"caleblyx"},"content":"* `ETIME` is the ending time of the event and must be inputted using 24 hour time and the following format: `HHmm`."},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"caleblyx"},"content":"Example:"},{"lineNumber":136,"author":{"gitId":"caleblyx"},"content":"* `reschedule 3 /to 2020-04-20 0900 to 2020-04-20 1000`"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"caleblyx"},"content":"### Exiting the command: `bye`"},{"lineNumber":139,"author":{"gitId":"caleblyx"},"content":"Exits the program."},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"caleblyx"},"content":"Format: `bye`"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"caleblyx"},"content":"### Loading and saving data"},{"lineNumber":144,"author":{"gitId":"caleblyx"},"content":"Commands do not have be provided to load or save data from or to the hard disk respectively, since Bob automatically saves any changes regarding data"},{"lineNumber":145,"author":{"gitId":"caleblyx"},"content":"and loads saved data automatically."},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"caleblyx"},"content":"## Command summary"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"caleblyx"},"content":"Action | Format"},{"lineNumber":151,"author":{"gitId":"caleblyx"},"content":"--------|------------------"},{"lineNumber":152,"author":{"gitId":"caleblyx"},"content":"**Add** |  `todo DESCRIPTION`\u003cbr\u003e `deadline DESCRIPTION /by DATE TIME`  \u003cbr\u003e `event DESCRIPTION /at SDATE STIME to EDATE ETIME`"},{"lineNumber":153,"author":{"gitId":"caleblyx"},"content":"**List** | `list`"},{"lineNumber":154,"author":{"gitId":"caleblyx"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e -or- \u003cbr\u003e `delete all`"},{"lineNumber":155,"author":{"gitId":"caleblyx"},"content":"**Done** | `done INDEX` \u003cbr\u003e -or- \u003cbr\u003e `done all`"},{"lineNumber":156,"author":{"gitId":"caleblyx"},"content":"**Find** | `find KEYWORD`"},{"lineNumber":157,"author":{"gitId":"caleblyx"},"content":"**Snooze** | `snooze INDEX /to DATE TIME`"},{"lineNumber":158,"author":{"gitId":"caleblyx"},"content":"**Reschedule** | `reschedule INDEX /to SDATE STIME to EDATE ETIME`"},{"lineNumber":159,"author":{"gitId":"caleblyx"},"content":"**Bye** | `bye`"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"caleblyx"},"content":"## Acknowledgements"},{"lineNumber":162,"author":{"gitId":"caleblyx"},"content":"* The format of this user guide was adapted from [*SE Education Address Book level 3\u0027s User Guide*](https://github.com/se-edu/addressbook-level3/blob/master/docs/UserGuide.md)"}],"authorContributionMap":{"caleblyx":151,"-":11}},{"path":"src/main/java/bob/Bob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"import bob.command.Command;"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobException;"},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":" * This class encapsulates Bob, the personal assistant."},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"public class Bob {"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"    /** A list consisting of tasks tracked by Bob. */"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"    private TaskList tasks \u003d new TaskList();"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"    /** Handles storage and access of data used by Bob. */"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"    private Storage storage;"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":"    /** Presents an interface to the user */"},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"    private UI uI;"},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":"    /** Constructs a Bob with a provided filePath"},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"caleblyx"},"content":"     * @param filePath the filePath of the file for data storage and access."},{"lineNumber":25,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"caleblyx"},"content":"    public Bob(String filePath) {"},{"lineNumber":27,"author":{"gitId":"caleblyx"},"content":"        uI \u003d new UI();"},{"lineNumber":28,"author":{"gitId":"caleblyx"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":29,"author":{"gitId":"caleblyx"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":30,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":31,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"caleblyx"},"content":"            storage.initialiseStorage();"},{"lineNumber":33,"author":{"gitId":"caleblyx"},"content":"            storage.loadSave(tasks);"},{"lineNumber":34,"author":{"gitId":"caleblyx"},"content":"        } catch (BobException e) {"},{"lineNumber":35,"author":{"gitId":"caleblyx"},"content":"            uI.printError(e.getMessage());"},{"lineNumber":36,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":39,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"caleblyx"},"content":"     * An empty constructor."},{"lineNumber":41,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"caleblyx"},"content":"    public Bob() {"},{"lineNumber":43,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":44,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":46,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"caleblyx"},"content":"     * Initialises Bob to accept input and provide responses."},{"lineNumber":48,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"caleblyx"},"content":"    public void run() {"},{"lineNumber":50,"author":{"gitId":"caleblyx"},"content":"        System.out.println(uI.greet());"},{"lineNumber":51,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":52,"author":{"gitId":"caleblyx"},"content":"        boolean isExit \u003d false;"},{"lineNumber":53,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":54,"author":{"gitId":"caleblyx"},"content":"        while (!isExit) {"},{"lineNumber":55,"author":{"gitId":"caleblyx"},"content":"            try {"},{"lineNumber":56,"author":{"gitId":"caleblyx"},"content":"                String command \u003d uI.readCommand();"},{"lineNumber":57,"author":{"gitId":"caleblyx"},"content":"                Command c \u003d Parser.parse(command);"},{"lineNumber":58,"author":{"gitId":"caleblyx"},"content":"                assert c !\u003d null : \"A command should be provided\";"},{"lineNumber":59,"author":{"gitId":"caleblyx"},"content":"                System.out.println(c.execute(tasks, uI, storage));"},{"lineNumber":60,"author":{"gitId":"caleblyx"},"content":"                isExit \u003d c.isExit();"},{"lineNumber":61,"author":{"gitId":"caleblyx"},"content":"            } catch (BobException e) {"},{"lineNumber":62,"author":{"gitId":"caleblyx"},"content":"                System.out.println(uI.printError(e.getMessage()));"},{"lineNumber":63,"author":{"gitId":"caleblyx"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":67,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"caleblyx"},"content":"     * Constructs Bob and initialises it."},{"lineNumber":69,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"caleblyx"},"content":"     * @param args"},{"lineNumber":71,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"caleblyx"},"content":"    public static void main(String[] args) {"},{"lineNumber":73,"author":{"gitId":"caleblyx"},"content":"        new Bob(\"data/save.txt\").run();"},{"lineNumber":74,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":76,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"caleblyx"},"content":"     * Returns the response of Bob with input provided from the user."},{"lineNumber":78,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"caleblyx"},"content":"     * @param input provided by the user."},{"lineNumber":80,"author":{"gitId":"caleblyx"},"content":"     * @return a response from Bob."},{"lineNumber":81,"author":{"gitId":"caleblyx"},"content":"     * @throws BobException if exceptions occur."},{"lineNumber":82,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"caleblyx"},"content":"    String getResponse(String input) throws BobException {"},{"lineNumber":84,"author":{"gitId":"caleblyx"},"content":"            String command \u003d input;"},{"lineNumber":85,"author":{"gitId":"caleblyx"},"content":"            Command c \u003d Parser.parse(command);"},{"lineNumber":86,"author":{"gitId":"caleblyx"},"content":"            assert c !\u003d null : \"A command should be provided\";"},{"lineNumber":87,"author":{"gitId":"caleblyx"},"content":"            return c.execute(tasks, uI, storage);"},{"lineNumber":88,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"caleblyx"},"content":"}"},{"lineNumber":90,"author":{"gitId":"caleblyx"},"content":""}],"authorContributionMap":{"caleblyx":90}},{"path":"src/main/java/bob/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"import bob.MainWindow;"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"import javafx.fxml.FXML;"},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"import javafx.geometry.Pos;"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"import javafx.scene.Node;"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"import javafx.scene.control.Label;"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"import javafx.scene.effect.DropShadow;"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"import javafx.scene.image.Image;"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"import javafx.scene.paint.ImagePattern;"},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":"import javafx.scene.shape.Circle;"},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":" * This control represents a dialog box consisting of a circle to represent the speaker\u0027s face and a label"},{"lineNumber":24,"author":{"gitId":"caleblyx"},"content":" * containing text from the speaker."},{"lineNumber":25,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":26,"author":{"gitId":"caleblyx"},"content":"public class DialogBox extends HBox {"},{"lineNumber":27,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"caleblyx"},"content":"     * A label consisting of text that comprises the dialog between user and Bob."},{"lineNumber":29,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"caleblyx"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"caleblyx"},"content":"    private Label dialog;"},{"lineNumber":32,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":33,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"caleblyx"},"content":"     * A circle that will display the profile picture of the user or Bob."},{"lineNumber":35,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"caleblyx"},"content":"    @FXML"},{"lineNumber":37,"author":{"gitId":"caleblyx"},"content":"    private Circle displayPicture;"},{"lineNumber":38,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":39,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"caleblyx"},"content":"     * Constructs a DialogBox that will contain response or input from the user, or Bob respectively alongside"},{"lineNumber":41,"author":{"gitId":"caleblyx"},"content":"     * profile pictures."},{"lineNumber":42,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"caleblyx"},"content":"     * @param text user input or Bob response"},{"lineNumber":44,"author":{"gitId":"caleblyx"},"content":"     * @param img profile picture of the user or Bob"},{"lineNumber":45,"author":{"gitId":"caleblyx"},"content":"     * @param path the path of the FXML file for the DialogBox"},{"lineNumber":46,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"caleblyx"},"content":"    private DialogBox(String text, Image img, String path) {"},{"lineNumber":48,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":49,"author":{"gitId":"caleblyx"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(path));"},{"lineNumber":50,"author":{"gitId":"caleblyx"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":51,"author":{"gitId":"caleblyx"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":52,"author":{"gitId":"caleblyx"},"content":"            fxmlLoader.load();"},{"lineNumber":53,"author":{"gitId":"caleblyx"},"content":"        } catch (IOException e) {"},{"lineNumber":54,"author":{"gitId":"caleblyx"},"content":"            e.printStackTrace();"},{"lineNumber":55,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"caleblyx"},"content":"        //Solution adapted from: https://www.youtube.com/watch?v\u003d54fEFYx34vk"},{"lineNumber":57,"author":{"gitId":"caleblyx"},"content":"        displayPicture.setFill(new ImagePattern(img));"},{"lineNumber":58,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":59,"author":{"gitId":"caleblyx"},"content":"        dialog.setText(text);"},{"lineNumber":60,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":62,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"caleblyx"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":64,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"caleblyx"},"content":"    private void flip() {"},{"lineNumber":66,"author":{"gitId":"caleblyx"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":67,"author":{"gitId":"caleblyx"},"content":"        Collections.reverse(tmp);"},{"lineNumber":68,"author":{"gitId":"caleblyx"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":69,"author":{"gitId":"caleblyx"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":70,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":72,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"caleblyx"},"content":"     * Produces a DialogBox that will consist of user input alongside the user\u0027s profile picture."},{"lineNumber":74,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"caleblyx"},"content":"     * @param text the user input."},{"lineNumber":76,"author":{"gitId":"caleblyx"},"content":"     * @param img the profile picture of the user."},{"lineNumber":77,"author":{"gitId":"caleblyx"},"content":"     * @return a DialogBox that will consist of user input alongside a profile picture."},{"lineNumber":78,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"caleblyx"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":80,"author":{"gitId":"caleblyx"},"content":"        var db \u003d new DialogBox(text, img, \"/view/DialogBoxUser.fxml\");"},{"lineNumber":81,"author":{"gitId":"caleblyx"},"content":"        db.setDisplayPictureColor(Color.DODGERBLUE);"},{"lineNumber":82,"author":{"gitId":"caleblyx"},"content":"        return db;"},{"lineNumber":83,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":85,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"caleblyx"},"content":"     * Produces a DialogBox that will consist of Bob\u0027s response alongside Bob\u0027s profile picture."},{"lineNumber":87,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"caleblyx"},"content":"     * @param text Bob\u0027s response to be displayed in the dialog box."},{"lineNumber":89,"author":{"gitId":"caleblyx"},"content":"     * @param img the profile picture of Bob."},{"lineNumber":90,"author":{"gitId":"caleblyx"},"content":"     * @return a DialogBox that will consist of Bob\u0027s response alongside a profile picture."},{"lineNumber":91,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"caleblyx"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":93,"author":{"gitId":"caleblyx"},"content":"        var db \u003d new DialogBox(text, img, \"/view/DialogBox.fxml\");"},{"lineNumber":94,"author":{"gitId":"caleblyx"},"content":"        db.flip();"},{"lineNumber":95,"author":{"gitId":"caleblyx"},"content":"        db.setDisplayPictureColor(Color.DODGERBLUE);"},{"lineNumber":96,"author":{"gitId":"caleblyx"},"content":"        return db;"},{"lineNumber":97,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":99,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"caleblyx"},"content":"     * Produces a DialogBox that will consist of Bob\u0027s error message alongside Bob\u0027s profile picture."},{"lineNumber":101,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":102,"author":{"gitId":"caleblyx"},"content":"     * @param text Bob\u0027s error message."},{"lineNumber":103,"author":{"gitId":"caleblyx"},"content":"     * @param img the profile picture of Bob."},{"lineNumber":104,"author":{"gitId":"caleblyx"},"content":"     * @return a DialogBox that will consist of Bob\u0027s error message alongside a profile picture."},{"lineNumber":105,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"caleblyx"},"content":"    public static DialogBox getDukeDialogError(String text, Image img) {"},{"lineNumber":107,"author":{"gitId":"caleblyx"},"content":"        var db \u003d new DialogBox(text, img, \"/view/DialogBoxError.fxml\");"},{"lineNumber":108,"author":{"gitId":"caleblyx"},"content":"        db.flip();"},{"lineNumber":109,"author":{"gitId":"caleblyx"},"content":"        db.setDisplayPictureColor(Color.CRIMSON);"},{"lineNumber":110,"author":{"gitId":"caleblyx"},"content":"        return db;"},{"lineNumber":111,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":113,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"caleblyx"},"content":"     * Sets the display picture\u0027s border and effects to a provided color."},{"lineNumber":115,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":116,"author":{"gitId":"caleblyx"},"content":"     * @param color The color for the picture\u0027s border and effects to be set to."},{"lineNumber":117,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"caleblyx"},"content":"    public void setDisplayPictureColor(Color color) {"},{"lineNumber":119,"author":{"gitId":"caleblyx"},"content":"        //Solution adapted from: https://www.youtube.com/watch?v\u003d54fEFYx34vk"},{"lineNumber":120,"author":{"gitId":"caleblyx"},"content":"        displayPicture.setStroke(color);"},{"lineNumber":121,"author":{"gitId":"caleblyx"},"content":"        displayPicture.setEffect(new DropShadow(+25d, 0d, +2d, color));"},{"lineNumber":122,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":124,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":124}},{"path":"src/main/java/bob/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":" * Represents a launcher for the GUI of Bob."},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":12}},{"path":"src/main/java/bob/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":"import javafx.scene.Scene;"},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"import javafx.stage.Stage;"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":" * A GUI for Duke using FXML."},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"public class Main extends Application {"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"     * An empty constructor."},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"    public Main() {"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":"     * Initialises the Graphical User Interface of Bob."},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":"     * @param stage the stage of the GUI."},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"caleblyx"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"caleblyx"},"content":"    public void start(Stage stage) {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        //@@author sc-arecrow"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        //Adapted from https://github.com/sc-arecrow/ip/blame/master/src/main/java/viscount/Main.java"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AnchorPane anchorPane \u003d new MainWindow();"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Scene scene \u003d new Scene(anchorPane);"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        stage.setTitle(\"Bob, the personal assistant\");"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        stage.setScene(scene);"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        stage.show();"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"caleblyx":25,"-":9}},{"path":"src/main/java/bob/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobException;"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":"import javafx.animation.PauseTransition;"},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":"import javafx.application.Platform;"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"import javafx.scene.control.Button;"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"import javafx.util.Duration;"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"import java.io.IOException;"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":"     * Enables scrolling in the MainWindow."},{"lineNumber":24,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"caleblyx"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"caleblyx"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":27,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":28,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"caleblyx"},"content":"     * A container for all DialogBoxes."},{"lineNumber":30,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"caleblyx"},"content":"    @FXML"},{"lineNumber":32,"author":{"gitId":"caleblyx"},"content":"    private VBox dialogContainer;"},{"lineNumber":33,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":34,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"caleblyx"},"content":"     * Text to be displayed in the MainWindow\u0027s dialogBox."},{"lineNumber":36,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"caleblyx"},"content":"    @FXML"},{"lineNumber":38,"author":{"gitId":"caleblyx"},"content":"    private TextField userInput;"},{"lineNumber":39,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":40,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"caleblyx"},"content":"     * A button that can be interacted with to send messages."},{"lineNumber":42,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"caleblyx"},"content":"    @FXML"},{"lineNumber":44,"author":{"gitId":"caleblyx"},"content":"    private Button sendButton;"},{"lineNumber":45,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":46,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"caleblyx"},"content":"     * An instance of Bob."},{"lineNumber":48,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"caleblyx"},"content":"    private Bob bob;"},{"lineNumber":50,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":51,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"caleblyx"},"content":"     * The user\u0027s profile picture."},{"lineNumber":53,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"caleblyx"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));"},{"lineNumber":55,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":56,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"caleblyx"},"content":"     * Bob\u0027s profile picture."},{"lineNumber":58,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"caleblyx"},"content":"    private Image bobImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Bob.png\"));"},{"lineNumber":60,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":61,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":62,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"caleblyx"},"content":"     * Initialises the scroll pane of the MainWindow."},{"lineNumber":64,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"caleblyx"},"content":"    @FXML"},{"lineNumber":66,"author":{"gitId":"caleblyx"},"content":"    public void initialize() {"},{"lineNumber":67,"author":{"gitId":"caleblyx"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":68,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":70,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":71,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"caleblyx"},"content":"     * Constructs a MainWindow to display user input and Bob\u0027s responses."},{"lineNumber":73,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"caleblyx"},"content":"    public MainWindow() {"},{"lineNumber":75,"author":{"gitId":"caleblyx"},"content":"        this.bob \u003d new Bob(\"data/save.txt\");"},{"lineNumber":76,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            //@@author sc-arecrow"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            //Adapted from https://github.com/sc-arecrow/ip/blame/master/src/main/java/viscount/gui/MainWindow.java"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            fxmlLoader.load();"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            e.printStackTrace();"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(UI.greet(), bobImage));"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void handleUserInput() {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String response \u003d null;"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            response \u003d bob.getResponse(input);"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":101,"author":{"gitId":"-"},"content":"                    DialogBox.getUserDialog(input, userImage),"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                    DialogBox.getDukeDialog(response, bobImage)"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            );"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        } catch (BobException e) {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            response \u003d e.getMessage();"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":107,"author":{"gitId":"-"},"content":"                    DialogBox.getUserDialog(input, userImage),"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                    DialogBox.getDukeDialogError(response, bobImage)"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            );"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (response \u003d\u003d \"Bye! I hope to see you soon! \\n[This window will close in 3 seconds.]\") {"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"            Duration delay \u003d Duration.seconds(3);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            PauseTransition transition \u003d new PauseTransition(delay);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            transition.setOnFinished(evt -\u003e Platform.exit());"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            transition.play();"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        userInput.clear();"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"caleblyx":76,"-":44}},{"path":"src/main/java/bob/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"import bob.command.AddCommand;"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":"import bob.command.Command;"},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":"import bob.command.DeleteCommand;"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"import bob.command.DoneCommand;"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":"import bob.command.ExitCommand;"},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"import bob.command.FindCommand;"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"import bob.command.ListCommand;"},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"import bob.command.RescheduleCommand;"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"import bob.command.SnoozeCommand;"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobException;"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobFindNoKeyWordsException;"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobIncompleteDeadlineDescriptionException;"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobIncompleteEventDescriptionException;"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobIncorrectRescheduleFormatException;"},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobIncorrectSnoozeFormatException;"},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobNoDescriptionException;"},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobDeleteDoneFormatException;"},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":"import bob.task.Deadline;"},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":"import bob.task.Event;"},{"lineNumber":24,"author":{"gitId":"caleblyx"},"content":"import bob.task.Task;"},{"lineNumber":25,"author":{"gitId":"caleblyx"},"content":"import bob.task.Todo;"},{"lineNumber":26,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":27,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":28,"author":{"gitId":"caleblyx"},"content":" * This class consists of the parse method which parses user input and determines"},{"lineNumber":29,"author":{"gitId":"caleblyx"},"content":" * the correct command for Bob to execute."},{"lineNumber":30,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":31,"author":{"gitId":"caleblyx"},"content":"public class Parser {"},{"lineNumber":32,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":33,"author":{"gitId":"caleblyx"},"content":"    static final int TODO_DESCRIPTION_INDEX \u003d 5;"},{"lineNumber":34,"author":{"gitId":"caleblyx"},"content":"    static final int DEADLINE_DESCRIPTION_INDEX \u003d 9;"},{"lineNumber":35,"author":{"gitId":"caleblyx"},"content":"    static final int EVENT_DESCRIPTION_INDEX \u003d 6;"},{"lineNumber":36,"author":{"gitId":"caleblyx"},"content":"    static final int FIND_KEYWORD_INDEX \u003d 5;"},{"lineNumber":37,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":38,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"caleblyx"},"content":"     * Returns the appropriate command for Bob to execute by parsing a provided String command by the user."},{"lineNumber":40,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"caleblyx"},"content":"     * @param command a String consisting of a command to be parsed for Bob to execute."},{"lineNumber":42,"author":{"gitId":"caleblyx"},"content":"     * @return a command that corresponds to provided String command."},{"lineNumber":43,"author":{"gitId":"caleblyx"},"content":"     * @throws BobException if a command cannot be parsed from the provided String command."},{"lineNumber":44,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"caleblyx"},"content":"    public static Command parse(String command) throws BobException {"},{"lineNumber":46,"author":{"gitId":"caleblyx"},"content":"        boolean isTask \u003d command.contains(\"todo\") || command.contains(\"deadline\") || command.contains(\"event\");"},{"lineNumber":47,"author":{"gitId":"caleblyx"},"content":"        if (command.startsWith(\"list\")) {"},{"lineNumber":48,"author":{"gitId":"caleblyx"},"content":"            return new ListCommand();"},{"lineNumber":49,"author":{"gitId":"caleblyx"},"content":"        } else if (command.startsWith(\"done\")) {"},{"lineNumber":50,"author":{"gitId":"caleblyx"},"content":"            return parseDone(command);"},{"lineNumber":51,"author":{"gitId":"caleblyx"},"content":"        } else if (isTask) {"},{"lineNumber":52,"author":{"gitId":"caleblyx"},"content":"            return parseTask(command);"},{"lineNumber":53,"author":{"gitId":"caleblyx"},"content":"        } else if (command.startsWith(\"delete\")) {"},{"lineNumber":54,"author":{"gitId":"caleblyx"},"content":"            return parseDelete(command);"},{"lineNumber":55,"author":{"gitId":"caleblyx"},"content":"        } else if (command.startsWith(\"bye\")) {"},{"lineNumber":56,"author":{"gitId":"caleblyx"},"content":"            return new ExitCommand();"},{"lineNumber":57,"author":{"gitId":"caleblyx"},"content":"        } else if (command.startsWith(\"find\")) {"},{"lineNumber":58,"author":{"gitId":"caleblyx"},"content":"            return parseFind(command);"},{"lineNumber":59,"author":{"gitId":"caleblyx"},"content":"        } else if (command.startsWith(\"snooze\")) {"},{"lineNumber":60,"author":{"gitId":"caleblyx"},"content":"            return parseSnooze(command);"},{"lineNumber":61,"author":{"gitId":"caleblyx"},"content":"        } else if (command.startsWith(\"reschedule\")) {"},{"lineNumber":62,"author":{"gitId":"caleblyx"},"content":"            return parseReschedule(command);"},{"lineNumber":63,"author":{"gitId":"caleblyx"},"content":"        } else {"},{"lineNumber":64,"author":{"gitId":"caleblyx"},"content":"            throw new BobException();"},{"lineNumber":65,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":68,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"caleblyx"},"content":"     * Returns the appropriate AddCommand after parsing a text Command."},{"lineNumber":70,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"caleblyx"},"content":"     * @param command a string command requesting the addition of a task."},{"lineNumber":72,"author":{"gitId":"caleblyx"},"content":"     * @return an AddCommand to fulfill the addition of a task."},{"lineNumber":73,"author":{"gitId":"caleblyx"},"content":"     * @throws BobException if exceptions are thrown."},{"lineNumber":74,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"caleblyx"},"content":"    static Command parseTask(String command) throws BobException {"},{"lineNumber":76,"author":{"gitId":"caleblyx"},"content":"        Task task \u003d null;"},{"lineNumber":77,"author":{"gitId":"caleblyx"},"content":"        if (command.contains(\"todo\")) {"},{"lineNumber":78,"author":{"gitId":"caleblyx"},"content":"            try {"},{"lineNumber":79,"author":{"gitId":"caleblyx"},"content":"                String description \u003d command.substring(TODO_DESCRIPTION_INDEX);"},{"lineNumber":80,"author":{"gitId":"caleblyx"},"content":"                if (description.isEmpty()) {"},{"lineNumber":81,"author":{"gitId":"caleblyx"},"content":"                    throw new BobNoDescriptionException();"},{"lineNumber":82,"author":{"gitId":"caleblyx"},"content":"                }"},{"lineNumber":83,"author":{"gitId":"caleblyx"},"content":"                task \u003d new Todo(command.substring(TODO_DESCRIPTION_INDEX));"},{"lineNumber":84,"author":{"gitId":"caleblyx"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":85,"author":{"gitId":"caleblyx"},"content":"                throw new BobNoDescriptionException();"},{"lineNumber":86,"author":{"gitId":"caleblyx"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"caleblyx"},"content":"        } else if (command.contains(\"deadline\")) {"},{"lineNumber":88,"author":{"gitId":"caleblyx"},"content":"            try {"},{"lineNumber":89,"author":{"gitId":"caleblyx"},"content":"                //finds the index of the char representing \u0027/\u0027"},{"lineNumber":90,"author":{"gitId":"caleblyx"},"content":"                int index \u003d command.indexOf(47);"},{"lineNumber":91,"author":{"gitId":"caleblyx"},"content":"                if (command.substring(DEADLINE_DESCRIPTION_INDEX, index).isEmpty()) {"},{"lineNumber":92,"author":{"gitId":"caleblyx"},"content":"                    throw new BobIncompleteDeadlineDescriptionException();"},{"lineNumber":93,"author":{"gitId":"caleblyx"},"content":"                }"},{"lineNumber":94,"author":{"gitId":"caleblyx"},"content":"                String description \u003d command.substring(DEADLINE_DESCRIPTION_INDEX, index - 1);"},{"lineNumber":95,"author":{"gitId":"caleblyx"},"content":"                if (description.isEmpty()) {"},{"lineNumber":96,"author":{"gitId":"caleblyx"},"content":"                    throw new BobIncompleteDeadlineDescriptionException();"},{"lineNumber":97,"author":{"gitId":"caleblyx"},"content":"                }"},{"lineNumber":98,"author":{"gitId":"caleblyx"},"content":"                String deadline \u003d command.substring(index + 4);"},{"lineNumber":99,"author":{"gitId":"caleblyx"},"content":"                task \u003d new Deadline(description, deadline);"},{"lineNumber":100,"author":{"gitId":"caleblyx"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":101,"author":{"gitId":"caleblyx"},"content":"                throw new BobIncompleteDeadlineDescriptionException();"},{"lineNumber":102,"author":{"gitId":"caleblyx"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"caleblyx"},"content":"        } else if (command.contains(\"event\")) {"},{"lineNumber":104,"author":{"gitId":"caleblyx"},"content":"            try {"},{"lineNumber":105,"author":{"gitId":"caleblyx"},"content":"                //finds the index of the char representing \u0027/\u0027"},{"lineNumber":106,"author":{"gitId":"caleblyx"},"content":"                int index \u003d command.indexOf(47);"},{"lineNumber":107,"author":{"gitId":"caleblyx"},"content":"                if (command.substring(EVENT_DESCRIPTION_INDEX, index).equals(\"\")) {"},{"lineNumber":108,"author":{"gitId":"caleblyx"},"content":"                    throw new BobIncompleteEventDescriptionException();"},{"lineNumber":109,"author":{"gitId":"caleblyx"},"content":"                }"},{"lineNumber":110,"author":{"gitId":"caleblyx"},"content":"                String description \u003d command.substring(EVENT_DESCRIPTION_INDEX, index - 1);"},{"lineNumber":111,"author":{"gitId":"caleblyx"},"content":"                if (description.isEmpty()) {"},{"lineNumber":112,"author":{"gitId":"caleblyx"},"content":"                    throw new BobIncompleteDeadlineDescriptionException();"},{"lineNumber":113,"author":{"gitId":"caleblyx"},"content":"                }"},{"lineNumber":114,"author":{"gitId":"caleblyx"},"content":"                String period \u003d command.substring(index + 4);"},{"lineNumber":115,"author":{"gitId":"caleblyx"},"content":"                task \u003d new Event(description, period);"},{"lineNumber":116,"author":{"gitId":"caleblyx"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":117,"author":{"gitId":"caleblyx"},"content":"                throw new BobIncompleteEventDescriptionException();"},{"lineNumber":118,"author":{"gitId":"caleblyx"},"content":"            }"},{"lineNumber":119,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"caleblyx"},"content":"        return new AddCommand(task);"},{"lineNumber":121,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":123,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":124,"author":{"gitId":"caleblyx"},"content":"     * Returns a DoneCommand after parsing a String command."},{"lineNumber":125,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":126,"author":{"gitId":"caleblyx"},"content":"     * @param command A string command requesting to mark a task as done."},{"lineNumber":127,"author":{"gitId":"caleblyx"},"content":"     * @return a DoneCommand which marks a task as done."},{"lineNumber":128,"author":{"gitId":"caleblyx"},"content":"     * @throws BobException if exceptions are thrown."},{"lineNumber":129,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":130,"author":{"gitId":"caleblyx"},"content":"    static Command parseDone(String command) throws BobException {"},{"lineNumber":131,"author":{"gitId":"caleblyx"},"content":"        int index \u003d 0;"},{"lineNumber":132,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":133,"author":{"gitId":"caleblyx"},"content":"            String[] split \u003d command.split(\" \");"},{"lineNumber":134,"author":{"gitId":"caleblyx"},"content":"            if (split[1].equals(\"all\")) {"},{"lineNumber":135,"author":{"gitId":"caleblyx"},"content":"                return new DoneCommand(-1);"},{"lineNumber":136,"author":{"gitId":"caleblyx"},"content":"            }"},{"lineNumber":137,"author":{"gitId":"caleblyx"},"content":"            index \u003d Integer.parseInt(split[1]);"},{"lineNumber":138,"author":{"gitId":"caleblyx"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":139,"author":{"gitId":"caleblyx"},"content":"            throw new BobDeleteDoneFormatException();"},{"lineNumber":140,"author":{"gitId":"caleblyx"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":141,"author":{"gitId":"caleblyx"},"content":"            throw new BobDeleteDoneFormatException();"},{"lineNumber":142,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"caleblyx"},"content":"        return new DoneCommand(index);"},{"lineNumber":144,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":146,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":147,"author":{"gitId":"caleblyx"},"content":"     * Returns a DeleteCommand after parsing a String command."},{"lineNumber":148,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":149,"author":{"gitId":"caleblyx"},"content":"     * @param command A string command requesting to delete a task."},{"lineNumber":150,"author":{"gitId":"caleblyx"},"content":"     * @return a DeleteCommand which deletes a task."},{"lineNumber":151,"author":{"gitId":"caleblyx"},"content":"     * @throws BobException if exceptions are thrown."},{"lineNumber":152,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":153,"author":{"gitId":"caleblyx"},"content":"    static Command parseDelete(String command) throws BobException {"},{"lineNumber":154,"author":{"gitId":"caleblyx"},"content":"        int index;"},{"lineNumber":155,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":156,"author":{"gitId":"caleblyx"},"content":"            String[] split \u003d command.split(\" \");"},{"lineNumber":157,"author":{"gitId":"caleblyx"},"content":"            if (split[1].equals(\"all\")) {"},{"lineNumber":158,"author":{"gitId":"caleblyx"},"content":"                return new DeleteCommand(-1);"},{"lineNumber":159,"author":{"gitId":"caleblyx"},"content":"            }"},{"lineNumber":160,"author":{"gitId":"caleblyx"},"content":"            index \u003d Integer.parseInt(split[1]);"},{"lineNumber":161,"author":{"gitId":"caleblyx"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":162,"author":{"gitId":"caleblyx"},"content":"            throw new BobDeleteDoneFormatException();"},{"lineNumber":163,"author":{"gitId":"caleblyx"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":164,"author":{"gitId":"caleblyx"},"content":"            throw new BobDeleteDoneFormatException();"},{"lineNumber":165,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":166,"author":{"gitId":"caleblyx"},"content":"        return new DeleteCommand(index);"},{"lineNumber":167,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":169,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":170,"author":{"gitId":"caleblyx"},"content":"     * Returns a FindCommand after parsing a String command."},{"lineNumber":171,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":172,"author":{"gitId":"caleblyx"},"content":"     * @param command A string command requesting to find tasks consisting of keywords."},{"lineNumber":173,"author":{"gitId":"caleblyx"},"content":"     * @return a FindCommand which finds tasks consisting of keywords."},{"lineNumber":174,"author":{"gitId":"caleblyx"},"content":"     * @throws BobException if exceptions are thrown."},{"lineNumber":175,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":176,"author":{"gitId":"caleblyx"},"content":"    static Command parseFind(String command) throws BobException {"},{"lineNumber":177,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":178,"author":{"gitId":"caleblyx"},"content":"            String keywords \u003d command.substring(FIND_KEYWORD_INDEX);"},{"lineNumber":179,"author":{"gitId":"caleblyx"},"content":"            if (keywords.isEmpty()) {"},{"lineNumber":180,"author":{"gitId":"caleblyx"},"content":"                throw new BobFindNoKeyWordsException();"},{"lineNumber":181,"author":{"gitId":"caleblyx"},"content":"            }"},{"lineNumber":182,"author":{"gitId":"caleblyx"},"content":"            return new FindCommand(keywords);"},{"lineNumber":183,"author":{"gitId":"caleblyx"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":184,"author":{"gitId":"caleblyx"},"content":"            throw new BobFindNoKeyWordsException();"},{"lineNumber":185,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":186,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":188,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":189,"author":{"gitId":"caleblyx"},"content":"     * Returns a SnoozeCommand after parsing a String command."},{"lineNumber":190,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":191,"author":{"gitId":"caleblyx"},"content":"     * @param command a String command requesting to snooze a deadline."},{"lineNumber":192,"author":{"gitId":"caleblyx"},"content":"     * @return a SnoozeCommand which snoozes a deadline."},{"lineNumber":193,"author":{"gitId":"caleblyx"},"content":"     * @throws BobException if exceptions are thrown."},{"lineNumber":194,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":195,"author":{"gitId":"caleblyx"},"content":"    static Command parseSnooze(String command) throws BobException {"},{"lineNumber":196,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":197,"author":{"gitId":"caleblyx"},"content":"            String[] split \u003d command.split(\"/\");"},{"lineNumber":198,"author":{"gitId":"caleblyx"},"content":"            String deadline \u003d split[1].substring(3);"},{"lineNumber":199,"author":{"gitId":"caleblyx"},"content":"            int index \u003d Integer.parseInt(split[0].split(\" \")[1]);"},{"lineNumber":200,"author":{"gitId":"caleblyx"},"content":"            return new SnoozeCommand(index, deadline);"},{"lineNumber":201,"author":{"gitId":"caleblyx"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":202,"author":{"gitId":"caleblyx"},"content":"            throw new BobIncorrectSnoozeFormatException();"},{"lineNumber":203,"author":{"gitId":"caleblyx"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":204,"author":{"gitId":"caleblyx"},"content":"            throw new BobIncorrectSnoozeFormatException();"},{"lineNumber":205,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":206,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":207,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":208,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":209,"author":{"gitId":"caleblyx"},"content":"     * Returns a RescheduleCommand after parsing a String command."},{"lineNumber":210,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":211,"author":{"gitId":"caleblyx"},"content":"     * @param command a String command requesting to reschedule an event."},{"lineNumber":212,"author":{"gitId":"caleblyx"},"content":"     * @return a RescheduleCommand which reschedules an event."},{"lineNumber":213,"author":{"gitId":"caleblyx"},"content":"     * @throws BobException if exceptions are thrown."},{"lineNumber":214,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":215,"author":{"gitId":"caleblyx"},"content":"    static Command parseReschedule(String command) throws BobException {"},{"lineNumber":216,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":217,"author":{"gitId":"caleblyx"},"content":"            String[] split \u003d command.split(\"/\");"},{"lineNumber":218,"author":{"gitId":"caleblyx"},"content":"            String period \u003d split[1].substring(3);"},{"lineNumber":219,"author":{"gitId":"caleblyx"},"content":"            int index \u003d Integer.parseInt(split[0].split(\" \")[1]);"},{"lineNumber":220,"author":{"gitId":"caleblyx"},"content":"            return new RescheduleCommand(index, period);"},{"lineNumber":221,"author":{"gitId":"caleblyx"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":222,"author":{"gitId":"caleblyx"},"content":"            throw new BobIncorrectRescheduleFormatException();"},{"lineNumber":223,"author":{"gitId":"caleblyx"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":224,"author":{"gitId":"caleblyx"},"content":"            throw new BobIncorrectRescheduleFormatException();"},{"lineNumber":225,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":226,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":227,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":227}},{"path":"src/main/java/bob/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobDateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobFileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobIOException;"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobIndexOutOfBoundsException;"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobStorageInitialisationException;"},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"import bob.task.Deadline;"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"import bob.task.Event;"},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"import bob.task.Task;"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"import bob.task.Todo;"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"import java.util.Scanner;"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"import java.io.File;"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"import java.io.FileWriter;"},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":"import java.io.IOException;"},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":" * This class consists of methods pertaining to the management of data storage for Bob."},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":"public class Storage {"},{"lineNumber":24,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":25,"author":{"gitId":"caleblyx"},"content":"    /** The File where data will be stored. */"},{"lineNumber":26,"author":{"gitId":"caleblyx"},"content":"    private File save;"},{"lineNumber":27,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":28,"author":{"gitId":"caleblyx"},"content":"    /** The FileWriter which will write data to storage. */"},{"lineNumber":29,"author":{"gitId":"caleblyx"},"content":"    private FileWriter writer;"},{"lineNumber":30,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":31,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":32,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"caleblyx"},"content":"     * Constructs a text file for data storage at the provided file path."},{"lineNumber":34,"author":{"gitId":"caleblyx"},"content":"     * @param filePath the designated file path where data will be stored."},{"lineNumber":35,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"caleblyx"},"content":"    public Storage(String filePath) {"},{"lineNumber":37,"author":{"gitId":"caleblyx"},"content":"        this.save \u003d new File(filePath);"},{"lineNumber":38,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":40,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"caleblyx"},"content":"     * Initialises storage for Bob."},{"lineNumber":42,"author":{"gitId":"caleblyx"},"content":"     * The method first checks if the provided file and its"},{"lineNumber":43,"author":{"gitId":"caleblyx"},"content":"     * directories exist, and creates them if they do not."},{"lineNumber":44,"author":{"gitId":"caleblyx"},"content":"     * The method also creates a writer for the file so that data may be written or appended to it."},{"lineNumber":45,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"caleblyx"},"content":"     * @throws BobStorageInitialisationException"},{"lineNumber":47,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"caleblyx"},"content":"    public void initialiseStorage() throws BobStorageInitialisationException {"},{"lineNumber":49,"author":{"gitId":"caleblyx"},"content":"        File directory \u003d new File(this.save.getParent());"},{"lineNumber":50,"author":{"gitId":"caleblyx"},"content":"        directory.mkdirs();"},{"lineNumber":51,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":52,"author":{"gitId":"caleblyx"},"content":"            save.createNewFile();"},{"lineNumber":53,"author":{"gitId":"caleblyx"},"content":"        } catch (IOException e) {"},{"lineNumber":54,"author":{"gitId":"caleblyx"},"content":"            throw new BobStorageInitialisationException();"},{"lineNumber":55,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":57,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":58,"author":{"gitId":"caleblyx"},"content":"            writer \u003d new FileWriter(save, true);"},{"lineNumber":59,"author":{"gitId":"caleblyx"},"content":"        } catch (IOException e) {"},{"lineNumber":60,"author":{"gitId":"caleblyx"},"content":"            throw new BobStorageInitialisationException();"},{"lineNumber":61,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":64,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"caleblyx"},"content":"     * Loads existing data that may be accessed by Bob."},{"lineNumber":66,"author":{"gitId":"caleblyx"},"content":"     * A scanner scans a text file consisting of saved data, and"},{"lineNumber":67,"author":{"gitId":"caleblyx"},"content":"     * creates tasks accordingly, which are added to the provided TaskList"},{"lineNumber":68,"author":{"gitId":"caleblyx"},"content":"     * used by Bob."},{"lineNumber":69,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"caleblyx"},"content":"     * @param tasks the TaskList used by Bob. Created tasks from the text file"},{"lineNumber":71,"author":{"gitId":"caleblyx"},"content":"     *              will be added accordingly to this."},{"lineNumber":72,"author":{"gitId":"caleblyx"},"content":"     * @throws BobFileNotFoundException if the file to load from does not exist."},{"lineNumber":73,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":75,"author":{"gitId":"caleblyx"},"content":"    public void loadSave(TaskList tasks) throws BobIOException, BobFileNotFoundException, BobDateTimeParseException {"},{"lineNumber":76,"author":{"gitId":"caleblyx"},"content":"        Scanner sc \u003d null;"},{"lineNumber":77,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":78,"author":{"gitId":"caleblyx"},"content":"            sc \u003d new Scanner(save);"},{"lineNumber":79,"author":{"gitId":"caleblyx"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":80,"author":{"gitId":"caleblyx"},"content":"            throw new BobFileNotFoundException();"},{"lineNumber":81,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"caleblyx"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":83,"author":{"gitId":"caleblyx"},"content":"            String str \u003d sc.nextLine();"},{"lineNumber":84,"author":{"gitId":"caleblyx"},"content":"            if (!str.isEmpty()) {"},{"lineNumber":85,"author":{"gitId":"caleblyx"},"content":"                Task task \u003d loadTask(str);"},{"lineNumber":86,"author":{"gitId":"caleblyx"},"content":"                tasks.add(task);"},{"lineNumber":87,"author":{"gitId":"caleblyx"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":91,"author":{"gitId":"caleblyx"},"content":"    /**Updates the Storage\u0027s text file according to the tasks in a provided TaskList."},{"lineNumber":92,"author":{"gitId":"caleblyx"},"content":"     * The method clears all data on the Storage\u0027s text file. It then"},{"lineNumber":93,"author":{"gitId":"caleblyx"},"content":"     * iterates through all tasks on the TaskList and adds their data to the Storage\u0027s text file."},{"lineNumber":94,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":95,"author":{"gitId":"caleblyx"},"content":"     * @param tasks the TaskList consisting of all tasks tracked by Bob."},{"lineNumber":96,"author":{"gitId":"caleblyx"},"content":"     * @throws BobIOException if the Storage\u0027s text file does not exist."},{"lineNumber":97,"author":{"gitId":"caleblyx"},"content":"     * @throws BobIndexOutOfBoundsException if the method tries to get a task with an index that is not on the TaskList."},{"lineNumber":98,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"caleblyx"},"content":"    public void updateSave(TaskList tasks) throws BobIOException, BobIndexOutOfBoundsException {"},{"lineNumber":100,"author":{"gitId":"caleblyx"},"content":"        FileWriter deleter \u003d null;"},{"lineNumber":101,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":102,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":103,"author":{"gitId":"caleblyx"},"content":"            deleter \u003d new FileWriter(save);"},{"lineNumber":104,"author":{"gitId":"caleblyx"},"content":"        } catch (IOException e) {"},{"lineNumber":105,"author":{"gitId":"caleblyx"},"content":"            throw new BobIOException();"},{"lineNumber":106,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":108,"author":{"gitId":"caleblyx"},"content":"        for (int i \u003d 1; i \u003c tasks.size()+1; i++) {"},{"lineNumber":109,"author":{"gitId":"caleblyx"},"content":"            Task task \u003d tasks.get(i);"},{"lineNumber":110,"author":{"gitId":"caleblyx"},"content":"            try {"},{"lineNumber":111,"author":{"gitId":"caleblyx"},"content":"                deleter.append(task.saveFormat() + System.lineSeparator());"},{"lineNumber":112,"author":{"gitId":"caleblyx"},"content":"            } catch (IOException e) {"},{"lineNumber":113,"author":{"gitId":"caleblyx"},"content":"                throw new BobIOException();"},{"lineNumber":114,"author":{"gitId":"caleblyx"},"content":"            }"},{"lineNumber":115,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":117,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":118,"author":{"gitId":"caleblyx"},"content":"            deleter.close();"},{"lineNumber":119,"author":{"gitId":"caleblyx"},"content":"        } catch (IOException e) {"},{"lineNumber":120,"author":{"gitId":"caleblyx"},"content":"            throw new BobIOException();"},{"lineNumber":121,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":124,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":125,"author":{"gitId":"caleblyx"},"content":"     * Appends provided data to the Storage\u0027s text file."},{"lineNumber":126,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":127,"author":{"gitId":"caleblyx"},"content":"     * @param data to be appended to the Storage\u0027s text file."},{"lineNumber":128,"author":{"gitId":"caleblyx"},"content":"     * @throws BobIOException if the Storage\u0027s text file does not exist."},{"lineNumber":129,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":130,"author":{"gitId":"caleblyx"},"content":"    public void appendToStorage(String data) throws BobIOException {"},{"lineNumber":131,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":132,"author":{"gitId":"caleblyx"},"content":"            writer.append(data);"},{"lineNumber":133,"author":{"gitId":"caleblyx"},"content":"        } catch (IOException e) {"},{"lineNumber":134,"author":{"gitId":"caleblyx"},"content":"            throw new BobIOException();"},{"lineNumber":135,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":136,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":138,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":139,"author":{"gitId":"caleblyx"},"content":"     * Flushes the Storage\u0027s writer."},{"lineNumber":140,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":141,"author":{"gitId":"caleblyx"},"content":"     * @throws BobIOException if the Storage\u0027s text file does not exist."},{"lineNumber":142,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":143,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":144,"author":{"gitId":"caleblyx"},"content":"    public void flushWriter() throws BobIOException {"},{"lineNumber":145,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":146,"author":{"gitId":"caleblyx"},"content":"            writer.flush();"},{"lineNumber":147,"author":{"gitId":"caleblyx"},"content":"        } catch (IOException e) {"},{"lineNumber":148,"author":{"gitId":"caleblyx"},"content":"            throw new BobIOException();"},{"lineNumber":149,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":150,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":152,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":153,"author":{"gitId":"caleblyx"},"content":"     * Closes the Storage\u0027s writer."},{"lineNumber":154,"author":{"gitId":"caleblyx"},"content":"     * @throws BobIOException if the Storage\u0027s text file does not exist."},{"lineNumber":155,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":156,"author":{"gitId":"caleblyx"},"content":"    public void closeWriter() throws BobIOException {"},{"lineNumber":157,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":158,"author":{"gitId":"caleblyx"},"content":"            writer.close();"},{"lineNumber":159,"author":{"gitId":"caleblyx"},"content":"        } catch (IOException e) {"},{"lineNumber":160,"author":{"gitId":"caleblyx"},"content":"            throw new BobIOException();"},{"lineNumber":161,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":164,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":165,"author":{"gitId":"caleblyx"},"content":"     * Returns a task after loading String data."},{"lineNumber":166,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":167,"author":{"gitId":"caleblyx"},"content":"     * @param data the data of a task."},{"lineNumber":168,"author":{"gitId":"caleblyx"},"content":"     * @return a task which matches the provided data."},{"lineNumber":169,"author":{"gitId":"caleblyx"},"content":"     * @throws BobDateTimeParseException if deadlines or events have dates which do not comply with the correct format."},{"lineNumber":170,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":171,"author":{"gitId":"caleblyx"},"content":"    public Task loadTask(String data) throws BobDateTimeParseException {"},{"lineNumber":172,"author":{"gitId":"caleblyx"},"content":"        String[] taskDataArr \u003d data.split(\"\\\\|\");"},{"lineNumber":173,"author":{"gitId":"caleblyx"},"content":"        char firstChar \u003d taskDataArr[0].charAt(0);"},{"lineNumber":174,"author":{"gitId":"caleblyx"},"content":"        boolean isDone \u003d taskDataArr[1].substring(1, 2).equals(\"1\");"},{"lineNumber":175,"author":{"gitId":"caleblyx"},"content":"        if (firstChar \u003d\u003d \u0027T\u0027) {"},{"lineNumber":176,"author":{"gitId":"caleblyx"},"content":"            String description \u003d taskDataArr[2].substring(1);"},{"lineNumber":177,"author":{"gitId":"caleblyx"},"content":"            return new Todo(isDone, description);"},{"lineNumber":178,"author":{"gitId":"caleblyx"},"content":"        } else if (firstChar \u003d\u003d \u0027D\u0027) {"},{"lineNumber":179,"author":{"gitId":"caleblyx"},"content":"            String description \u003d taskDataArr[2].substring(1, taskDataArr[2].length() - 1);"},{"lineNumber":180,"author":{"gitId":"caleblyx"},"content":"            String deadline \u003d taskDataArr[3].substring(1);"},{"lineNumber":181,"author":{"gitId":"caleblyx"},"content":"            return new Deadline(isDone, description, deadline);"},{"lineNumber":182,"author":{"gitId":"caleblyx"},"content":"        } else if (firstChar \u003d\u003d \u0027E\u0027) {"},{"lineNumber":183,"author":{"gitId":"caleblyx"},"content":"            String description \u003d taskDataArr[2].substring(1, taskDataArr[2].length() - 1);"},{"lineNumber":184,"author":{"gitId":"caleblyx"},"content":"            String period \u003d taskDataArr[3].substring(1);"},{"lineNumber":185,"author":{"gitId":"caleblyx"},"content":"            return new Event(isDone, description, period);"},{"lineNumber":186,"author":{"gitId":"caleblyx"},"content":"        } else {"},{"lineNumber":187,"author":{"gitId":"caleblyx"},"content":"            return null;"},{"lineNumber":188,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":189,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":190,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":190}},{"path":"src/main/java/bob/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobIndexOutOfBoundsException;"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":"import bob.task.Task;"},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"/** Encapsulates a list of tasks */"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"    /** An array list consisting of tasks. */"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"    private ArrayList\u003cTask\u003e list;"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"     * Constructs a TaskList by assigning the list parameter to a newly constructed"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"     * empty Task ArrayList."},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":"    public TaskList() {"},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"        list \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":"     * Deletes a task from list with at index minus one."},{"lineNumber":24,"author":{"gitId":"caleblyx"},"content":"     * @param index the index (plus one) of the task to be removed from the list."},{"lineNumber":25,"author":{"gitId":"caleblyx"},"content":"     * @throws BobIndexOutOfBoundsException if a task on the list does not have the provided index."},{"lineNumber":26,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"caleblyx"},"content":"    public void delete(int index) throws BobIndexOutOfBoundsException {"},{"lineNumber":28,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"caleblyx"},"content":"            list.remove(index - 1);"},{"lineNumber":30,"author":{"gitId":"caleblyx"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":31,"author":{"gitId":"caleblyx"},"content":"            throw new BobIndexOutOfBoundsException();"},{"lineNumber":32,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":35,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"caleblyx"},"content":"     * Adds a task to list."},{"lineNumber":37,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"caleblyx"},"content":"     * @param task the task to be added to the list."},{"lineNumber":39,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"caleblyx"},"content":"    public void add(Task task) {"},{"lineNumber":41,"author":{"gitId":"caleblyx"},"content":"        list.add(task);"},{"lineNumber":42,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":44,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"caleblyx"},"content":"     * Retrieves the task at a provided index minus one from list."},{"lineNumber":46,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"caleblyx"},"content":"     * @param index the index (plus one) of the task to be retrieved from list."},{"lineNumber":48,"author":{"gitId":"caleblyx"},"content":"     * @return"},{"lineNumber":49,"author":{"gitId":"caleblyx"},"content":"     * @throws BobIndexOutOfBoundsException"},{"lineNumber":50,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"caleblyx"},"content":"    public Task get(int index) throws BobIndexOutOfBoundsException {"},{"lineNumber":52,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":53,"author":{"gitId":"caleblyx"},"content":"            return list.get(index - 1);"},{"lineNumber":54,"author":{"gitId":"caleblyx"},"content":"        } catch(IndexOutOfBoundsException e) {"},{"lineNumber":55,"author":{"gitId":"caleblyx"},"content":"            throw new BobIndexOutOfBoundsException();"},{"lineNumber":56,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":59,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"caleblyx"},"content":"     * Returns the size of TaskList."},{"lineNumber":61,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"caleblyx"},"content":"     * @return the size of list."},{"lineNumber":63,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"caleblyx"},"content":"    public int size() {"},{"lineNumber":65,"author":{"gitId":"caleblyx"},"content":"        return list.size();"},{"lineNumber":66,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":68,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"caleblyx"},"content":"     * Returns a boolean value indicating if the TaskList is empty."},{"lineNumber":70,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"caleblyx"},"content":"     * @return true or false if the list is empty or not empty respectively."},{"lineNumber":72,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"caleblyx"},"content":"    public boolean isEmpty() {"},{"lineNumber":74,"author":{"gitId":"caleblyx"},"content":"        return list.isEmpty();"},{"lineNumber":75,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":77,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"caleblyx"},"content":"     * Returns a TaskList of tasks containing the provided key words or phrases."},{"lineNumber":79,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"caleblyx"},"content":"     * @param keyWord the key words or phrases that are being searched for in the TaskList."},{"lineNumber":81,"author":{"gitId":"caleblyx"},"content":"     * @return a TaskList of tasks containing the provided key words or phrases."},{"lineNumber":82,"author":{"gitId":"caleblyx"},"content":"     * @throws BobIndexOutOfBoundsException if trying to access an index that does not exist on TaskList."},{"lineNumber":83,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"caleblyx"},"content":"    public TaskList contains(String keyWord) throws BobIndexOutOfBoundsException {"},{"lineNumber":85,"author":{"gitId":"caleblyx"},"content":"        TaskList keyWordTasks \u003d new TaskList();"},{"lineNumber":86,"author":{"gitId":"caleblyx"},"content":"        for (int i \u003d 1; i \u003c this.size(); i++) {"},{"lineNumber":87,"author":{"gitId":"caleblyx"},"content":"            if (this.get(i).toString().contains(keyWord)) {"},{"lineNumber":88,"author":{"gitId":"caleblyx"},"content":"                keyWordTasks.add(this.get(i));"},{"lineNumber":89,"author":{"gitId":"caleblyx"},"content":"            }"},{"lineNumber":90,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"caleblyx"},"content":"        return keyWordTasks;"},{"lineNumber":92,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":94,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"caleblyx"},"content":"     * Deletes all tasks in the TaskList."},{"lineNumber":96,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"caleblyx"},"content":"    public void deleteAll() {"},{"lineNumber":98,"author":{"gitId":"caleblyx"},"content":"        list.clear();"},{"lineNumber":99,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":101,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"caleblyx"},"content":"     * Marks all tasks in the TaskList as done."},{"lineNumber":103,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"caleblyx"},"content":"    public void markAllDone() {"},{"lineNumber":105,"author":{"gitId":"caleblyx"},"content":"        for (Task task: list) {"},{"lineNumber":106,"author":{"gitId":"caleblyx"},"content":"            task.markAsDone();"},{"lineNumber":107,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":109}},{"path":"src/main/java/bob/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobIndexOutOfBoundsException;"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":"import bob.task.Task;"},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":" * This class consists of methods which prints out information that may be helpful to the user."},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":" * It also consists of a single method which accepts user input, which may be passed to Bob\u0027s"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":" * parser."},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"public class UI {"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"    /** A scanner which scans user\u0027s input */"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"    private Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"     * Returns a greeting from Bob to the user."},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":"    public static String greet() {"},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":"        String greetings \u003d \"Hello! I\u0027m Bob\\nWhat can I do for you?\";"},{"lineNumber":24,"author":{"gitId":"caleblyx"},"content":"        return greetings;"},{"lineNumber":25,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":27,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"caleblyx"},"content":"     * Iterates through a TaskList to return all tasks on the TaskList in a message."},{"lineNumber":29,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"caleblyx"},"content":"     * @param tasks the TaskList to be printed out."},{"lineNumber":31,"author":{"gitId":"caleblyx"},"content":"     * @return all tasks on the TaskList in a message."},{"lineNumber":32,"author":{"gitId":"caleblyx"},"content":"     * @throws BobIndexOutOfBoundsException if the method tries to retrieve a task with an index not on the list."},{"lineNumber":33,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"caleblyx"},"content":"    public String printOutList(TaskList tasks) throws BobIndexOutOfBoundsException {"},{"lineNumber":35,"author":{"gitId":"caleblyx"},"content":"        String list \u003d \"\";"},{"lineNumber":36,"author":{"gitId":"caleblyx"},"content":"        for (int i \u003d 1; i \u003c tasks.size()+1; i++) {"},{"lineNumber":37,"author":{"gitId":"caleblyx"},"content":"            Task task \u003d tasks.get(i);"},{"lineNumber":38,"author":{"gitId":"caleblyx"},"content":"            if (i \u003d\u003d tasks.size()) {"},{"lineNumber":39,"author":{"gitId":"caleblyx"},"content":"                list +\u003d i + \".\" + task.toString();"},{"lineNumber":40,"author":{"gitId":"caleblyx"},"content":"            } else {"},{"lineNumber":41,"author":{"gitId":"caleblyx"},"content":"                list +\u003d i + \".\" + task.toString() + \"\\n\";"},{"lineNumber":42,"author":{"gitId":"caleblyx"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"caleblyx"},"content":"        if (tasks.isEmpty()) {"},{"lineNumber":45,"author":{"gitId":"caleblyx"},"content":"            return \"There are no tasks in the list at the moment. Feel free to add any.\";"},{"lineNumber":46,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"caleblyx"},"content":"        return list;"},{"lineNumber":48,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":50,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"caleblyx"},"content":"     * Returns a message to indicate that a task of a particular index has been deleted from the TaskList."},{"lineNumber":52,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"caleblyx"},"content":"     * @param tasks the TaskList from which the task has been deleted."},{"lineNumber":54,"author":{"gitId":"caleblyx"},"content":"     * @param index the index of the task on the TaskList that has been deleted."},{"lineNumber":55,"author":{"gitId":"caleblyx"},"content":"     * @return a message to indicate that a task of a particular index has been deleted from the TaskList."},{"lineNumber":56,"author":{"gitId":"caleblyx"},"content":"     * @throws BobIndexOutOfBoundsException if the index of the task to be deleted does not exist on the TaskList."},{"lineNumber":57,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"caleblyx"},"content":"    public String deleteTask(TaskList tasks, int index) throws BobIndexOutOfBoundsException {"},{"lineNumber":59,"author":{"gitId":"caleblyx"},"content":"        Task task \u003d tasks.get(index);"},{"lineNumber":60,"author":{"gitId":"caleblyx"},"content":"        int newSize \u003d tasks.size() - 1;"},{"lineNumber":61,"author":{"gitId":"caleblyx"},"content":"        return \"Noted. I have removed the following task:\\n\\t\" + task.toString()"},{"lineNumber":62,"author":{"gitId":"caleblyx"},"content":"                + \"\\nThere are now \" + newSize + \" remaining tasks on the list.\";"},{"lineNumber":63,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":65,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"caleblyx"},"content":"     * Returns a message to indicate that a task of a particular index has been marked as done on the TaskList."},{"lineNumber":67,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"caleblyx"},"content":"     * @param tasks the TaskList from which the task has been marked as done."},{"lineNumber":69,"author":{"gitId":"caleblyx"},"content":"     * @param index the index of the task on the TaskList that has been marked as done."},{"lineNumber":70,"author":{"gitId":"caleblyx"},"content":"     * @return a message to indicate that a task of a particular index has been marked as done on the TaskList."},{"lineNumber":71,"author":{"gitId":"caleblyx"},"content":"     * @throws BobIndexOutOfBoundsException if the index of the task to be marked as done does not exist on the TaskList."},{"lineNumber":72,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"caleblyx"},"content":"    public String markAsDone(TaskList tasks, int index) throws BobIndexOutOfBoundsException {"},{"lineNumber":74,"author":{"gitId":"caleblyx"},"content":"        Task task \u003d tasks.get(index);"},{"lineNumber":75,"author":{"gitId":"caleblyx"},"content":"        return \"Good job! I have marked this task as done:\""},{"lineNumber":76,"author":{"gitId":"caleblyx"},"content":"                + \"\\n\\t\" + index + \".\" + task.toString();"},{"lineNumber":77,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":79,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"caleblyx"},"content":"     * Returns a message to indicate that a task has been added to the TaskList."},{"lineNumber":81,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"caleblyx"},"content":"     * @param task the task that has been added to TaskList."},{"lineNumber":83,"author":{"gitId":"caleblyx"},"content":"     * @return a message to indicate that a task has been added to the TaskList."},{"lineNumber":84,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"caleblyx"},"content":"    public String addTask(Task task) {"},{"lineNumber":86,"author":{"gitId":"caleblyx"},"content":"        return \"Got it! I have added a new task to the list.\""},{"lineNumber":87,"author":{"gitId":"caleblyx"},"content":"                + \"\\n\\tadded: \\n\\t\" + task.toString();"},{"lineNumber":88,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":90,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"caleblyx"},"content":"     * Returns user input."},{"lineNumber":92,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"caleblyx"},"content":"     * @return user input."},{"lineNumber":94,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"caleblyx"},"content":"    public String readCommand() {"},{"lineNumber":96,"author":{"gitId":"caleblyx"},"content":"        return sc.nextLine();"},{"lineNumber":97,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":99,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"caleblyx"},"content":"     * Returns an error message."},{"lineNumber":101,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":102,"author":{"gitId":"caleblyx"},"content":"     * @param error the error message to be printed out."},{"lineNumber":103,"author":{"gitId":"caleblyx"},"content":"     * @return an error message."},{"lineNumber":104,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"caleblyx"},"content":"    public String printError(String error) {"},{"lineNumber":106,"author":{"gitId":"caleblyx"},"content":"        return error;"},{"lineNumber":107,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":109,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"caleblyx"},"content":"     * Returns a message that may consists of tasks which contains a keyword or phrase."},{"lineNumber":111,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":112,"author":{"gitId":"caleblyx"},"content":"     * @param tasks Tasks which consists of a keyword or phrase"},{"lineNumber":113,"author":{"gitId":"caleblyx"},"content":"     * @return a message that may consists of tasks which contains a keyword or phrase."},{"lineNumber":114,"author":{"gitId":"caleblyx"},"content":"     * @throws BobIndexOutOfBoundsException if accessing an index of the TaskList which does not exist."},{"lineNumber":115,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"caleblyx"},"content":"    public String findKeyWord(TaskList tasks) throws BobIndexOutOfBoundsException {"},{"lineNumber":117,"author":{"gitId":"caleblyx"},"content":"        if (!tasks.isEmpty()) {"},{"lineNumber":118,"author":{"gitId":"caleblyx"},"content":"            String message \u003d \"Here are the tasks in your lists which match: \";"},{"lineNumber":119,"author":{"gitId":"caleblyx"},"content":"            for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {"},{"lineNumber":120,"author":{"gitId":"caleblyx"},"content":"                Task task \u003d tasks.get(i);"},{"lineNumber":121,"author":{"gitId":"caleblyx"},"content":"                message +\u003d \"\\n\\t\" + i + \".\" + task.toString();"},{"lineNumber":122,"author":{"gitId":"caleblyx"},"content":"            }"},{"lineNumber":123,"author":{"gitId":"caleblyx"},"content":"            return message;"},{"lineNumber":124,"author":{"gitId":"caleblyx"},"content":"        } else {"},{"lineNumber":125,"author":{"gitId":"caleblyx"},"content":"            return \"None of the tasks in your list match.\";"},{"lineNumber":126,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":129,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":130,"author":{"gitId":"caleblyx"},"content":"     * Returns a message to indicate that a Task on the TaskList has been snoozed."},{"lineNumber":131,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":132,"author":{"gitId":"caleblyx"},"content":"     * @param tasks the TaskList."},{"lineNumber":133,"author":{"gitId":"caleblyx"},"content":"     * @param index the index of the task that has been snoozed."},{"lineNumber":134,"author":{"gitId":"caleblyx"},"content":"     * @return a message to indicate that a Task on the TaskList has been snoozed."},{"lineNumber":135,"author":{"gitId":"caleblyx"},"content":"     * @throws BobIndexOutOfBoundsException if accessing an index of the TaskList which does not exist."},{"lineNumber":136,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":137,"author":{"gitId":"caleblyx"},"content":"    public String snoozeTask(TaskList tasks, int index) throws BobIndexOutOfBoundsException {"},{"lineNumber":138,"author":{"gitId":"caleblyx"},"content":"        return \"Noted. I have updated the task to the following: \""},{"lineNumber":139,"author":{"gitId":"caleblyx"},"content":"                + \"\\n\\t\" + tasks.get(index).toString();"},{"lineNumber":140,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":142,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":143,"author":{"gitId":"caleblyx"},"content":"     * Returns a message to indicate that a task on the TaskList has been rescheduled."},{"lineNumber":144,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":145,"author":{"gitId":"caleblyx"},"content":"     * @param tasks the TaskList"},{"lineNumber":146,"author":{"gitId":"caleblyx"},"content":"     * @param index the index of the task that has been rescheduled."},{"lineNumber":147,"author":{"gitId":"caleblyx"},"content":"     * @return a message to indicate that a task on the TaskList has been rescheduled."},{"lineNumber":148,"author":{"gitId":"caleblyx"},"content":"     * @throws BobIndexOutOfBoundsException if accessing an index of the TaskList which does not exist."},{"lineNumber":149,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":150,"author":{"gitId":"caleblyx"},"content":"    public String rescheduleTask(TaskList tasks, int index) throws BobIndexOutOfBoundsException {"},{"lineNumber":151,"author":{"gitId":"caleblyx"},"content":"        return \"Noted. I have updated the task to the following: \""},{"lineNumber":152,"author":{"gitId":"caleblyx"},"content":"                + \"\\n\\t\" + tasks.get(index).toString();"},{"lineNumber":153,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":155,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":156,"author":{"gitId":"caleblyx"},"content":"     * Returns a message to indicate that all tasks on the TaskList have been marked as done."},{"lineNumber":157,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":158,"author":{"gitId":"caleblyx"},"content":"     * @param tasks the TaskList."},{"lineNumber":159,"author":{"gitId":"caleblyx"},"content":"     * @return a message to indicate that all tasks on the TaskList have been marked as done."},{"lineNumber":160,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":161,"author":{"gitId":"caleblyx"},"content":"    public String markAllDone(TaskList tasks) {"},{"lineNumber":162,"author":{"gitId":"caleblyx"},"content":"        if (tasks.isEmpty()) {"},{"lineNumber":163,"author":{"gitId":"caleblyx"},"content":"            return \"There are no tasks to mark as done.\";"},{"lineNumber":164,"author":{"gitId":"caleblyx"},"content":"        } else {"},{"lineNumber":165,"author":{"gitId":"caleblyx"},"content":"            return \"Noted. I have marked all tasks as done.\";"},{"lineNumber":166,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":167,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":169,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":170,"author":{"gitId":"caleblyx"},"content":"     * Returns a message to indicate that all tasks on the TaskList have been deleted."},{"lineNumber":171,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":172,"author":{"gitId":"caleblyx"},"content":"     * @param tasks the TaskList"},{"lineNumber":173,"author":{"gitId":"caleblyx"},"content":"     * @return a message to indicate that all tasks on the TaskList have been deleted."},{"lineNumber":174,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":175,"author":{"gitId":"caleblyx"},"content":"    public String deleteAll(TaskList tasks) {"},{"lineNumber":176,"author":{"gitId":"caleblyx"},"content":"        if (tasks.isEmpty()) {"},{"lineNumber":177,"author":{"gitId":"caleblyx"},"content":"            return \"There are no tasks to delete.\";"},{"lineNumber":178,"author":{"gitId":"caleblyx"},"content":"        } else {"},{"lineNumber":179,"author":{"gitId":"caleblyx"},"content":"            return \"Noted. All tasks have been deleted.\";"},{"lineNumber":180,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":181,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":183,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":184,"author":{"gitId":"caleblyx"},"content":"     * Returns an exit message."},{"lineNumber":185,"author":{"gitId":"caleblyx"},"content":"     * @return an exit message."},{"lineNumber":186,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":187,"author":{"gitId":"caleblyx"},"content":"    public String exit() {"},{"lineNumber":188,"author":{"gitId":"caleblyx"},"content":"        return \"Bye! I hope to see you soon! \\n[This window will close in 3 seconds.]\";"},{"lineNumber":189,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":190,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":190}},{"path":"src/main/java/bob/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob.command;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"import bob.Storage;"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":"import bob.TaskList;"},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":"import bob.UI;"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobIOException;"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":"import bob.task.Task;"},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":" * This command when executed adds a task to the TaskList and calls"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":" * the UI class and Storage class to print out the appropriate messages"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":" * and update stored data respectively."},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"public class AddCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"    /** The task to be added to the TaskList when the command is executed. */"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"    private Task task;"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":"    /** Constructs an AddCommand with a task assigned to the task parameter. */"},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"    public AddCommand(Task task) {"},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":"        this.task \u003d task;"},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"caleblyx"},"content":"     * Executes the command to add the task to TaskList and update the Storage data accordingly."},{"lineNumber":25,"author":{"gitId":"caleblyx"},"content":"     * It also calls on the provided UI to return the appropriate messages."},{"lineNumber":26,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"caleblyx"},"content":"     * @param tasks the TaskList consisting of all tasks tracked by Bob."},{"lineNumber":28,"author":{"gitId":"caleblyx"},"content":"     * @param ui the UI which prints out all messages corresponding to the Command."},{"lineNumber":29,"author":{"gitId":"caleblyx"},"content":"     * @param storage the Storage which manages all saved data to be updated."},{"lineNumber":30,"author":{"gitId":"caleblyx"},"content":"     * @return the message provided by the UI."},{"lineNumber":31,"author":{"gitId":"caleblyx"},"content":"     * @throws BobIOException if Storage\u0027s text file does not exist."},{"lineNumber":32,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"caleblyx"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"caleblyx"},"content":"    public String execute(TaskList tasks, UI ui, Storage storage) throws BobIOException {"},{"lineNumber":35,"author":{"gitId":"caleblyx"},"content":"        assert task !\u003d null : \"A task should be provided\";"},{"lineNumber":36,"author":{"gitId":"caleblyx"},"content":"        assert tasks !\u003d null : \"A tasklist should be provided\";"},{"lineNumber":37,"author":{"gitId":"caleblyx"},"content":"        assert storage !\u003d null : \"Storage should be provided\";"},{"lineNumber":38,"author":{"gitId":"caleblyx"},"content":"        assert ui !\u003d null : \"A UI should be provided\";"},{"lineNumber":39,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":40,"author":{"gitId":"caleblyx"},"content":"        tasks.add(task);"},{"lineNumber":41,"author":{"gitId":"caleblyx"},"content":"        storage.appendToStorage(task.saveFormat() + System.lineSeparator());"},{"lineNumber":42,"author":{"gitId":"caleblyx"},"content":"        storage.flushWriter();"},{"lineNumber":43,"author":{"gitId":"caleblyx"},"content":"        return ui.addTask(task);"},{"lineNumber":44,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":46,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"caleblyx"},"content":"     * Returns a boolean value to indicate if this command is equal to an object by determining if"},{"lineNumber":48,"author":{"gitId":"caleblyx"},"content":"     * task parameters are equal."},{"lineNumber":49,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"caleblyx"},"content":"     * @param o"},{"lineNumber":51,"author":{"gitId":"caleblyx"},"content":"     * @return true or false if AddCommand is equal or not equal to the object respectively."},{"lineNumber":52,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"caleblyx"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"caleblyx"},"content":"    public boolean equals(Object o) {"},{"lineNumber":55,"author":{"gitId":"caleblyx"},"content":"        if (this \u003d\u003d o) {"},{"lineNumber":56,"author":{"gitId":"caleblyx"},"content":"            return true;"},{"lineNumber":57,"author":{"gitId":"caleblyx"},"content":"        } else if (o instanceof AddCommand) {"},{"lineNumber":58,"author":{"gitId":"caleblyx"},"content":"            AddCommand c \u003d (AddCommand) o;"},{"lineNumber":59,"author":{"gitId":"caleblyx"},"content":"            return c.task.equals(this.task);"},{"lineNumber":60,"author":{"gitId":"caleblyx"},"content":"        } else {"},{"lineNumber":61,"author":{"gitId":"caleblyx"},"content":"            return false;"},{"lineNumber":62,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":65,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"caleblyx"},"content":"     * Returns the string representation of the AddCommand which includes the string representation of the to-be-added task."},{"lineNumber":67,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"caleblyx"},"content":"     * @return string representation of AddCommand."},{"lineNumber":69,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"caleblyx"},"content":"    @Override"},{"lineNumber":71,"author":{"gitId":"caleblyx"},"content":"    public String toString() {"},{"lineNumber":72,"author":{"gitId":"caleblyx"},"content":"        return \"Adds \" + task.toString() + \" to list.\";"},{"lineNumber":73,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":74}},{"path":"src/main/java/bob/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob.command;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobException;"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":"import bob.Storage;"},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":"import bob.TaskList;"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"import bob.UI;"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":" * An abstraction of commands which may be executed by Bob."},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"public abstract class Command {"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"     * Executes the command by updating the TaskList and Storage accordingly, and returning"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"     * the appropriate message from the UI."},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"     * @param tasks the TaskList consisting of all tasks tracked by Bob."},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":"     * @param ui the UI which prints out all messages corresponding to the Command."},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"     * @param storage the Storage which manages all saved data to be updated."},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":"     * @return the message provided by the UI."},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":"     * @throws BobException if any errors arise."},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":"    public abstract String execute(TaskList tasks, UI ui, Storage storage) throws BobException;"},{"lineNumber":24,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":25,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"caleblyx"},"content":"     * Returns a boolean value to indicate if Bob should stop accepting commands from the user."},{"lineNumber":27,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"caleblyx"},"content":"     * @return false to indicate that Bob should continue accepting commands."},{"lineNumber":29,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"caleblyx"},"content":"    public boolean isExit() {"},{"lineNumber":31,"author":{"gitId":"caleblyx"},"content":"        return false;"},{"lineNumber":32,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":34,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":35,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":36,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":36}},{"path":"src/main/java/bob/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob.command;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobIOException;"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobIndexOutOfBoundsException;"},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":"import bob.Storage;"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"import bob.TaskList;"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":"import bob.UI;"},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":" * This command when executed deletes a task of a particular index from the TaskList and calls"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":" * the UI class and Storage class to print out the appropriate messages"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":" * and update stored data respectively."},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"    /** The index of the task to be deleted from the TaskList */"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"    private int index;"},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"    /** Constructs a DeleteCommand by assigning a provided integer to the index parameter. */"},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":"    public DeleteCommand(int index) {"},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":"        this.index \u003d index;"},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":24,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"caleblyx"},"content":"     * Executes the command to delete the task from the TaskList and update the Storage data accordingly."},{"lineNumber":26,"author":{"gitId":"caleblyx"},"content":"     * It also calls on the provided UI to return the appropriate messages."},{"lineNumber":27,"author":{"gitId":"caleblyx"},"content":"     * Deletes all tasks from the TaskList if the provided index is equal to -1."},{"lineNumber":28,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"caleblyx"},"content":"     * @param tasks the TaskList consisting of all tasks tracked by Bob."},{"lineNumber":30,"author":{"gitId":"caleblyx"},"content":"     * @param ui the UI which prints out all messages corresponding to the Command."},{"lineNumber":31,"author":{"gitId":"caleblyx"},"content":"     * @param storage the Storage which manages all saved data to be updated."},{"lineNumber":32,"author":{"gitId":"caleblyx"},"content":"     * @return the message provided by the UI."},{"lineNumber":33,"author":{"gitId":"caleblyx"},"content":"     * @throws BobIOException if Storage\u0027s text file does not exist."},{"lineNumber":34,"author":{"gitId":"caleblyx"},"content":"     * @throws BobIndexOutOfBoundsException if the index of the task to be deleted does not exist on TaskList."},{"lineNumber":35,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"caleblyx"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"caleblyx"},"content":"    public String execute(TaskList tasks, UI ui, Storage storage) throws BobIOException, BobIndexOutOfBoundsException {"},{"lineNumber":38,"author":{"gitId":"caleblyx"},"content":"        assert tasks !\u003d null : \"A tasklist should be provided\";"},{"lineNumber":39,"author":{"gitId":"caleblyx"},"content":"        assert storage !\u003d null : \"Storage should be provided\";"},{"lineNumber":40,"author":{"gitId":"caleblyx"},"content":"        assert ui !\u003d null : \"A UI should be provided\";"},{"lineNumber":41,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":42,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":43,"author":{"gitId":"caleblyx"},"content":"        if (index \u003d\u003d -1) {"},{"lineNumber":44,"author":{"gitId":"caleblyx"},"content":"            String message \u003d ui.deleteAll(tasks);"},{"lineNumber":45,"author":{"gitId":"caleblyx"},"content":"            tasks.deleteAll();"},{"lineNumber":46,"author":{"gitId":"caleblyx"},"content":"            storage.updateSave(tasks);"},{"lineNumber":47,"author":{"gitId":"caleblyx"},"content":"            return message;"},{"lineNumber":48,"author":{"gitId":"caleblyx"},"content":"        } else {"},{"lineNumber":49,"author":{"gitId":"caleblyx"},"content":"            String message \u003d ui.deleteTask(tasks, index);"},{"lineNumber":50,"author":{"gitId":"caleblyx"},"content":"            tasks.delete(index);"},{"lineNumber":51,"author":{"gitId":"caleblyx"},"content":"            storage.updateSave(tasks);"},{"lineNumber":52,"author":{"gitId":"caleblyx"},"content":"            return message;"},{"lineNumber":53,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":56,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":56}},{"path":"src/main/java/bob/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob.command;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobIOException;"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobIndexOutOfBoundsException;"},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":"import bob.Storage;"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"import bob.TaskList;"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":"import bob.UI;"},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":" * This command when executed marks a task of a particular index on the TaskList as done and calls"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":" * the UI class and Storage class to print out the appropriate messages"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":" * and update stored data respectively."},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"public class DoneCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"    /** The index of the task to be marked as done on the TaskList */"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"    private int index;"},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"    /** Constructs a DoneCommand by assigning a provided integer to the index parameter. */"},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":"    public DoneCommand(int index) {"},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":"        this.index \u003d index;"},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":24,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"caleblyx"},"content":"     * Executes the command to mark the task as done on the TaskList and update the Storage data accordingly."},{"lineNumber":26,"author":{"gitId":"caleblyx"},"content":"     * It also calls on the provided UI to return the appropriate messages."},{"lineNumber":27,"author":{"gitId":"caleblyx"},"content":"     * Marks all tasks on the TaskList as done if the provided index is equal to -1."},{"lineNumber":28,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"caleblyx"},"content":"     * @param tasks the TaskList consisting of all tasks tracked by Bob."},{"lineNumber":30,"author":{"gitId":"caleblyx"},"content":"     * @param ui the UI which prints out all messages corresponding to the Command."},{"lineNumber":31,"author":{"gitId":"caleblyx"},"content":"     * @param storage the Storage which manages all saved data to be updated."},{"lineNumber":32,"author":{"gitId":"caleblyx"},"content":"     * @return the message provided by the UI."},{"lineNumber":33,"author":{"gitId":"caleblyx"},"content":"     * @throws BobIOException if Storage\u0027s text file does not exist."},{"lineNumber":34,"author":{"gitId":"caleblyx"},"content":"     * @throws BobIndexOutOfBoundsException if the index of the task to be marked as done does not exist on TaskList."},{"lineNumber":35,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"caleblyx"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"caleblyx"},"content":"    public String execute(TaskList tasks, UI ui, Storage storage) throws BobIOException, BobIndexOutOfBoundsException {"},{"lineNumber":38,"author":{"gitId":"caleblyx"},"content":"        assert tasks !\u003d null : \"A tasklist should be provided\";"},{"lineNumber":39,"author":{"gitId":"caleblyx"},"content":"        assert storage !\u003d null : \"Storage should be provided\";"},{"lineNumber":40,"author":{"gitId":"caleblyx"},"content":"        assert ui !\u003d null : \"A UI should be provided\";"},{"lineNumber":41,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":42,"author":{"gitId":"caleblyx"},"content":"        if (index \u003d\u003d -1) {"},{"lineNumber":43,"author":{"gitId":"caleblyx"},"content":"            tasks.markAllDone();"},{"lineNumber":44,"author":{"gitId":"caleblyx"},"content":"            storage.updateSave(tasks);"},{"lineNumber":45,"author":{"gitId":"caleblyx"},"content":"            return ui.markAllDone(tasks);"},{"lineNumber":46,"author":{"gitId":"caleblyx"},"content":"        } else {"},{"lineNumber":47,"author":{"gitId":"caleblyx"},"content":"            tasks.get(index).markAsDone();"},{"lineNumber":48,"author":{"gitId":"caleblyx"},"content":"            storage.updateSave(tasks);"},{"lineNumber":49,"author":{"gitId":"caleblyx"},"content":"            return ui.markAsDone(tasks, index);"},{"lineNumber":50,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":52}},{"path":"src/main/java/bob/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob.command;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobException;"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":"import bob.Storage;"},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":"import bob.TaskList;"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"import bob.UI;"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":" * This command indicates that Bob may terminate."},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"public class ExitCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"     * Returns the exit message."},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"     * @param tasks the TaskList consisting of all tasks tracked by Bob."},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"     * @param ui the UI which prints out all messages corresponding to the Command."},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":"     * @param storage the Storage which manages all saved data to be updated."},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"     * @return the message provided by the UI."},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":"     * @throws BobException"},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":"    public String execute(TaskList tasks, UI ui, Storage storage) {"},{"lineNumber":24,"author":{"gitId":"caleblyx"},"content":"        return ui.exit();"},{"lineNumber":25,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":27,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"caleblyx"},"content":"     * Returns true to indicate that Bob may terminate."},{"lineNumber":29,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"caleblyx"},"content":"     * @return true."},{"lineNumber":31,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"caleblyx"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"caleblyx"},"content":"    public boolean isExit() {"},{"lineNumber":34,"author":{"gitId":"caleblyx"},"content":"        return true;"},{"lineNumber":35,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":36}},{"path":"src/main/java/bob/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob.command;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobException;"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":"import bob.Storage;"},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":"import bob.TaskList;"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"import bob.UI;"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":" * This command when executed creates a TaskList of tasks that contains key words or phrases. The UI is called on"},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":" * to print out this list alongside the appropriate messages."},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"public class FindCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"     * The key word or phrases to be searched for in a TaskList."},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"    private String keyWord;"},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":"     * Constructs a FindCommand by assigning a String to the keyWord parameter."},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":"     * @param keyWord the key word or phrases to be searched for in the TaskList."},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"caleblyx"},"content":"    public FindCommand(String keyWord) {"},{"lineNumber":25,"author":{"gitId":"caleblyx"},"content":"        this.keyWord \u003d keyWord;"},{"lineNumber":26,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":28,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"caleblyx"},"content":"     * Creates a TaskList of tasks that contains key words or phrases, that is then return in message by the UI"},{"lineNumber":30,"author":{"gitId":"caleblyx"},"content":"     * alongside other appropriate messages."},{"lineNumber":31,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"caleblyx"},"content":"     * @param tasks the TaskList consisting of all tasks tracked by Bob."},{"lineNumber":33,"author":{"gitId":"caleblyx"},"content":"     * @param ui the UI which prints out all messages corresponding to the Command."},{"lineNumber":34,"author":{"gitId":"caleblyx"},"content":"     * @param storage the Storage which manages all saved data to be updated."},{"lineNumber":35,"author":{"gitId":"caleblyx"},"content":"     * @return the message provided by the UI."},{"lineNumber":36,"author":{"gitId":"caleblyx"},"content":"     * @throws BobException"},{"lineNumber":37,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"caleblyx"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"caleblyx"},"content":"    public String execute(TaskList tasks, UI ui, Storage storage) throws BobException {"},{"lineNumber":40,"author":{"gitId":"caleblyx"},"content":"        assert tasks !\u003d null : \"A tasklist should be provided\";"},{"lineNumber":41,"author":{"gitId":"caleblyx"},"content":"        assert storage !\u003d null : \"Storage should be provided\";"},{"lineNumber":42,"author":{"gitId":"caleblyx"},"content":"        assert ui !\u003d null : \"A UI should be provided\";"},{"lineNumber":43,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":44,"author":{"gitId":"caleblyx"},"content":"        return ui.findKeyWord(tasks.contains(keyWord));"},{"lineNumber":45,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":46}},{"path":"src/main/java/bob/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob.command;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobIndexOutOfBoundsException;"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":"import bob.Storage;"},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":"import bob.TaskList;"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"import bob.UI;"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":" * This command when executed prints out all tasks on a TaskList."},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"public class ListCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"     * Executes the command by calling on the UI to return the contents of a TaskList in a message."},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"     * @param tasks the TaskList consisting of all tasks tracked by Bob."},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"     * @param ui the UI which prints out all messages corresponding to the Command."},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":"     * @param storage the Storage which manages all saved data to be updated."},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"     * @return the message provided by the UI."},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":"     * @throws BobIndexOutOfBoundsException"},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":"    public String execute(TaskList tasks, UI ui, Storage storage) throws BobIndexOutOfBoundsException {"},{"lineNumber":24,"author":{"gitId":"caleblyx"},"content":"        assert tasks !\u003d null : \"A tasklist should be provided\";"},{"lineNumber":25,"author":{"gitId":"caleblyx"},"content":"        return ui.printOutList(tasks);"},{"lineNumber":26,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":27}},{"path":"src/main/java/bob/command/RescheduleCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob.command;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"import bob.Storage;"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":"import bob.TaskList;"},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":"import bob.UI;"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobException;"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobNotAnEventException;"},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"import bob.task.Event;"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"import bob.task.Task;"},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":" * This command when executed reschedules an event."},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"public class RescheduleCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"    /** The index of the task on TaskList to be rescheduled. */"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"    private int index;"},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"    /** The period that the task should be rescheduled to. */"},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":"    private String newPeriod;"},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":"     * Constructs a RescheduleCommand by assigning an integer to the index parameter, and a string to the newPeriod"},{"lineNumber":24,"author":{"gitId":"caleblyx"},"content":"     * parameter."},{"lineNumber":25,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"caleblyx"},"content":"     * @param index index of the task on the TaskList to be rescheduled."},{"lineNumber":27,"author":{"gitId":"caleblyx"},"content":"     * @param newPeriod The period that the task should be rescheduled to."},{"lineNumber":28,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"caleblyx"},"content":"    public RescheduleCommand(int index, String newPeriod) {"},{"lineNumber":30,"author":{"gitId":"caleblyx"},"content":"        this.index \u003d index;"},{"lineNumber":31,"author":{"gitId":"caleblyx"},"content":"        this.newPeriod \u003d newPeriod;"},{"lineNumber":32,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":34,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"caleblyx"},"content":"     * Executes the command to reschedule the task on the TaskList and updates Storage data accordingly."},{"lineNumber":36,"author":{"gitId":"caleblyx"},"content":"     * It also calls on the provided UI to return the appropriate messages."},{"lineNumber":37,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"caleblyx"},"content":"     * @param tasks the TaskList consisting of all tasks tracked by Bob."},{"lineNumber":39,"author":{"gitId":"caleblyx"},"content":"     * @param ui the UI which prints out all messages corresponding to the Command."},{"lineNumber":40,"author":{"gitId":"caleblyx"},"content":"     * @param storage the Storage which manages all saved data to be updated."},{"lineNumber":41,"author":{"gitId":"caleblyx"},"content":"     * @return the message provided by the UI."},{"lineNumber":42,"author":{"gitId":"caleblyx"},"content":"     * @throws BobException if exceptions are thrown."},{"lineNumber":43,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"caleblyx"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"caleblyx"},"content":"    public String execute(TaskList tasks, UI ui, Storage storage) throws BobException {"},{"lineNumber":46,"author":{"gitId":"caleblyx"},"content":"        Task task \u003d tasks.get(index);"},{"lineNumber":47,"author":{"gitId":"caleblyx"},"content":"        boolean isEvent \u003d task instanceof Event;"},{"lineNumber":48,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":49,"author":{"gitId":"caleblyx"},"content":"        if (isEvent) {"},{"lineNumber":50,"author":{"gitId":"caleblyx"},"content":"            ((Event) task).reschedule(newPeriod);"},{"lineNumber":51,"author":{"gitId":"caleblyx"},"content":"            storage.updateSave(tasks);"},{"lineNumber":52,"author":{"gitId":"caleblyx"},"content":"            return ui.rescheduleTask(tasks, index);"},{"lineNumber":53,"author":{"gitId":"caleblyx"},"content":"        } else {"},{"lineNumber":54,"author":{"gitId":"caleblyx"},"content":"            throw new BobNotAnEventException();"},{"lineNumber":55,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":57}},{"path":"src/main/java/bob/command/SnoozeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob.command;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"import bob.Storage;"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":"import bob.TaskList;"},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":"import bob.UI;"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobException;"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobNotADeadlineException;"},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"import bob.task.Deadline;"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"import bob.task.Task;"},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":" * This command when executed reschedules an event."},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"public class SnoozeCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"    /** The index of the task on TaskList to be snoozed. */"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"    private int index;"},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"    /** The deadline that the task should be snoozed to. */"},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":"    private String newDeadline;"},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":"     * Constructs a SnoozeCommand by assigning an integer to the index parameter, and a string to the newPeriod"},{"lineNumber":24,"author":{"gitId":"caleblyx"},"content":"     * parameter."},{"lineNumber":25,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"caleblyx"},"content":"     * @param index index of the task on the TaskList to be snoozed."},{"lineNumber":27,"author":{"gitId":"caleblyx"},"content":"     * @param newDeadline The period that the task should be snoozed to."},{"lineNumber":28,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"caleblyx"},"content":"    public SnoozeCommand(int index, String newDeadline) {"},{"lineNumber":30,"author":{"gitId":"caleblyx"},"content":"        this.index \u003d index;"},{"lineNumber":31,"author":{"gitId":"caleblyx"},"content":"        this.newDeadline \u003d newDeadline;"},{"lineNumber":32,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":34,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"caleblyx"},"content":"     * Executes the command to snooze the task on the TaskList and updates Storage data accordingly."},{"lineNumber":36,"author":{"gitId":"caleblyx"},"content":"     * It also calls on the provided UI to return the appropriate messages."},{"lineNumber":37,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"caleblyx"},"content":"     * @param tasks the TaskList consisting of all tasks tracked by Bob."},{"lineNumber":39,"author":{"gitId":"caleblyx"},"content":"     * @param ui the UI which prints out all messages corresponding to the Command."},{"lineNumber":40,"author":{"gitId":"caleblyx"},"content":"     * @param storage the Storage which manages all saved data to be updated."},{"lineNumber":41,"author":{"gitId":"caleblyx"},"content":"     * @return the message provided by the UI."},{"lineNumber":42,"author":{"gitId":"caleblyx"},"content":"     * @throws BobException if exceptions are thrown."},{"lineNumber":43,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"caleblyx"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"caleblyx"},"content":"    public String execute(TaskList tasks, UI ui, Storage storage) throws BobException {"},{"lineNumber":46,"author":{"gitId":"caleblyx"},"content":"        Task task \u003d tasks.get(index);"},{"lineNumber":47,"author":{"gitId":"caleblyx"},"content":"        boolean isDeadline \u003d task instanceof Deadline;"},{"lineNumber":48,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":49,"author":{"gitId":"caleblyx"},"content":"        if (isDeadline) {"},{"lineNumber":50,"author":{"gitId":"caleblyx"},"content":"            ((Deadline) task).snooze(newDeadline);"},{"lineNumber":51,"author":{"gitId":"caleblyx"},"content":"            storage.updateSave(tasks);"},{"lineNumber":52,"author":{"gitId":"caleblyx"},"content":"            return ui.snoozeTask(tasks, index);"},{"lineNumber":53,"author":{"gitId":"caleblyx"},"content":"        } else {"},{"lineNumber":54,"author":{"gitId":"caleblyx"},"content":"            throw new BobNotADeadlineException();"},{"lineNumber":55,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":57}},{"path":"src/main/java/bob/exception/BobDateTimeParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob.exception;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":" * An exception that may be thrown when an error occurs during the parsing of dates and times."},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"public class BobDateTimeParseException extends BobException {"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"     * Returns a message which indicates the correct format of dates and times."},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"     * @return a message with the correct format of dates and times."},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"    public String getMessage() {"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"        return \"Please input dates and times in the correct format. The format is: \""},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"                + \"\\nyyyy-MM-dd HHMM\""},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"                + \"\\nNote: Events require a start date and time and an end date and time with the following format:\""},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":"                + \"\\nyyyy-MM-dd HHMM to yyyy-MM-dd HHMM\";"},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":20}},{"path":"src/main/java/bob/exception/BobDeleteDoneFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob.exception;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":" * An exception to be thrown when a required index is not provided."},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"public class BobDeleteDoneFormatException extends BobException {"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"     * Returns a message that indicates a required index has not been provided, alongside a format to be followed."},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"     * @return a message that indicates a required index has not been provided, alongside a format to be followed."},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"    public String getMessage() {"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"        return \"Please provide only the index of a task on the list to mark it as done or to delete it. \""},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"                + \"\\nOtherwise, you could choose to apply the action to all tasks. \\nHere\u0027s the \""},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"                + \"format: \\n\\tdelete/done [index]/all\";"},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":19}},{"path":"src/main/java/bob/exception/BobException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob.exception;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":" * Encapsulates exceptions that may be thrown when Bob runs."},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"public class BobException extends Exception {"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"     * Returns an error message."},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"     * @return an error message."},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"    public String getMessage() {"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"        return \"Sorry, but I do not understand your request. Please try again.\";"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":16}},{"path":"src/main/java/bob/exception/BobFileNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob.exception;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":" * An exception which may be thrown when a desired file cannot be found."},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"public class BobFileNotFoundException extends BobException {"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"     * Returns a message to indicate that the file cannot be found."},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"     * @return a message to indicate that the file cannot be found."},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"    public String getMessage() {"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"        return \"File not found.\";"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":16}},{"path":"src/main/java/bob/exception/BobFindNoKeyWordsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob.exception;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":" * An exception which may be thrown when a key words are not provided."},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"public class BobFindNoKeyWordsException extends BobException {"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"     * Returns a message to indicate that a key word was not provided."},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"     * @return a message to indicate that a key word was not provided."},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"    public String getMessage() {"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"        return \"A key word or phrase was not provided. \""},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"                + \"\\nPlease provide the key word or phrase that you\u0027re trying to find.\";"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":17}},{"path":"src/main/java/bob/exception/BobIOException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob.exception;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":" * An exception to be thrown when trying to access a file which does not exist."},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"public class BobIOException extends BobException {"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"     * Returns a message to indicate that information could not be saved to a file."},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"     * @return a message to indicate that information could not be saved to a file."},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"    public String getMessage() {"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"        return \"Sorry, but I had difficulty saving your information. Please try again.\";"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":17}},{"path":"src/main/java/bob/exception/BobIncompleteDeadlineDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob.exception;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":" * An exception to be thrown when an incomplete deadline description is provided."},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"public class BobIncompleteDeadlineDescriptionException extends BobException {"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"     * Returns a message that indicates the deadline description provided is incomplete, and the correct format."},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"     * @return a message that indicates the deadline description provided is incomplete, and the correct format."},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"    public String getMessage() {"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"        return \"The description for this deadline is incomplete. \""},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"                + \"Please remember to include a brief description alongside a due date.\\n\""},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"                + \"Here\u0027s the format: \\n\\tdeadline [brief description] /by [due date]\";"},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":19}},{"path":"src/main/java/bob/exception/BobIncompleteEventDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob.exception;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":" * An exception to be thrown when an incomplete event description is provided."},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"public class BobIncompleteEventDescriptionException extends BobException {"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"     * Returns a message that indicates the event description provided is incomplete, and the correct format."},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"     * @return a message that indicates the event description provided is incomplete, and the correct format."},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"    public String getMessage() {"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"        return \"The description for this event is incomplete. \""},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"                + \"Please remember to include a brief description alongside the period of this event.\\n\""},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"                + \"Here\u0027s the format: event [brief description] /at [period]\";"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":18}},{"path":"src/main/java/bob/exception/BobIncorrectRescheduleFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob.exception;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":" * An exception to be thrown when an reschedule command is provided in the incorrect format."},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"public class BobIncorrectRescheduleFormatException extends BobException {"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"     * Returns a message indicating the correct format for reschedule commands."},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"     * @return a message indicating the correct format for reschedule commands."},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"    public String getMessage() {"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"        return \"Please try to use the following format to reschedule a task:\""},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"                + \"\\n\\t snooze [index] /to [date 1] (YYYY-MM-DD) to [date 2] (YYYY-MM-DD)\";"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":17}},{"path":"src/main/java/bob/exception/BobIncorrectSnoozeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob.exception;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":" * An exception to be thrown when an snooze command is provided in the incorrect format."},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"public class BobIncorrectSnoozeFormatException extends BobException {"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"     * Returns a message indicating the correct format for snooze commands."},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"     * @return a message indicating the correct format for snooze commands."},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"    public String getMessage() {"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"        return \"Please try to use the following format to snooze a task:\""},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"                + \"\\n\\t snooze [index] /to [deadline] (YYYY-MM-DD)\";"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":17}},{"path":"src/main/java/bob/exception/BobIndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob.exception;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":" * An exception to be thrown when trying to access an index which does not exist."},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"public class BobIndexOutOfBoundsException extends BobException {"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"     * Returns a message that indicates the index on the TaskList does not exist."},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"     * @return a message that indicates the index on the TaskList does not exist."},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"    public String getMessage() {"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"        return \"There are no tasks on the list with the provided index. Please check the list and try again.\";"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":17}},{"path":"src/main/java/bob/exception/BobNoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob.exception;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":" * An exception to be thrown when a description is not provided."},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"public class BobNoDescriptionException extends BobException {"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"     * Returns a message that indicates a description has not been provided."},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"     * @return a message that indicates a description has not been provided."},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"    public String getMessage() {"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"        return \"Please include a description for this todo.\";"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":17}},{"path":"src/main/java/bob/exception/BobNotADeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob.exception;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":" * An exception to be thrown when attempting to snooze a task with no deadline."},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"public class BobNotADeadlineException extends BobException {"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"     * Returns a message indicating that the task may not be snoozed because it does not have a deadline."},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"     * @return a message indicating that the task may not be snoozed because it does not have a deadline."},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"    public String getMessage() {"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"        return \"This task does not have a deadline and therefore may not be snoozed.\";"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":16}},{"path":"src/main/java/bob/exception/BobNotAnEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob.exception;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":" * An exception to be thrown when attempting to reschedule task that is not an event."},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"public class BobNotAnEventException extends BobException {"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"     * Returns a message indicating that the task may not be reschedule since it is not an event."},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"     * @return a message indicating that the task may not be reschedule since it is not an event."},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"    public String getMessage() {"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"        return \"This task is not an event and therefore may not be rescheduled.\";"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":16}},{"path":"src/main/java/bob/exception/BobStorageInitialisationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob.exception;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":" * An exception to be thrown when an error occurs during Storage initialisation."},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"public class BobStorageInitialisationException extends BobException {"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"     * Returns a message to indicate that the Storage could not be initialised."},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"     * @return a message to indicate that the Storage could not be initialised."},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"    public String getMessage() {"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"        return \"Could not initialise storage\";"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":17}},{"path":"src/main/java/bob/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob.task;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobDateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":"import java.time.DateTimeException;"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":" * Encapsulates a task with a deadline."},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"public class Deadline extends Task {"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"    /**The deadline of the task to be completed by. */"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"    private LocalDateTime  deadline;"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"    /**The format of inputted dates that the class can accept. */"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"    private static final DateTimeFormatter INPUT_DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":"    /**The format of outputted dates by the class. */"},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"    private static final DateTimeFormatter OUTPUT_DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\");"},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":"     * Constructs a task that has not been completed"},{"lineNumber":24,"author":{"gitId":"caleblyx"},"content":"     * with a brief description and deadline for the task to be completed by."},{"lineNumber":25,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"caleblyx"},"content":"     * @param description a brief description of the deadline."},{"lineNumber":27,"author":{"gitId":"caleblyx"},"content":"     * @param deadline a String in a specific format (inputFormatter) which specifies a date."},{"lineNumber":28,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"caleblyx"},"content":"    public Deadline(String description, String deadline) throws BobDateTimeParseException {"},{"lineNumber":30,"author":{"gitId":"caleblyx"},"content":"        super(description);"},{"lineNumber":31,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"caleblyx"},"content":"            this.deadline \u003d LocalDateTime.parse(deadline, INPUT_DATE_TIME_FORMAT);"},{"lineNumber":33,"author":{"gitId":"caleblyx"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":34,"author":{"gitId":"caleblyx"},"content":"            throw new BobDateTimeParseException();"},{"lineNumber":35,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":38,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"caleblyx"},"content":"     * Constructs a task, which may or may not have been completed,"},{"lineNumber":40,"author":{"gitId":"caleblyx"},"content":"     * with a brief description and deadline for the task to be completed by."},{"lineNumber":41,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"caleblyx"},"content":"     * @param isDone indicates if the deadline has been completed."},{"lineNumber":43,"author":{"gitId":"caleblyx"},"content":"     * @param description a brief description of the deadline."},{"lineNumber":44,"author":{"gitId":"caleblyx"},"content":"     * @param deadline a String in a specific format (inputFormatter) which specifies a date."},{"lineNumber":45,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"caleblyx"},"content":"    public Deadline(boolean isDone, String description, String deadline) throws BobDateTimeParseException {"},{"lineNumber":47,"author":{"gitId":"caleblyx"},"content":"        super(isDone, description);"},{"lineNumber":48,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":49,"author":{"gitId":"caleblyx"},"content":"            this.deadline \u003d LocalDateTime.parse(deadline, INPUT_DATE_TIME_FORMAT);"},{"lineNumber":50,"author":{"gitId":"caleblyx"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":51,"author":{"gitId":"caleblyx"},"content":"            throw new BobDateTimeParseException();"},{"lineNumber":52,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":55,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":56,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"caleblyx"},"content":"     * Changes the deadline of the task to a provided new deadline."},{"lineNumber":58,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"caleblyx"},"content":"     * @param newDeadline the deadline of the task to be changed to"},{"lineNumber":60,"author":{"gitId":"caleblyx"},"content":"     * @throws BobDateTimeParseException if newDeadline does not have the format of INPUT_DATE_TIME_FORMAT"},{"lineNumber":61,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"caleblyx"},"content":"    public void snooze(String newDeadline) throws BobDateTimeParseException {"},{"lineNumber":63,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":64,"author":{"gitId":"caleblyx"},"content":"            this.deadline \u003d LocalDateTime.parse(newDeadline, INPUT_DATE_TIME_FORMAT);"},{"lineNumber":65,"author":{"gitId":"caleblyx"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":66,"author":{"gitId":"caleblyx"},"content":"            throw new BobDateTimeParseException();"},{"lineNumber":67,"author":{"gitId":"caleblyx"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":68,"author":{"gitId":"caleblyx"},"content":"            throw new BobDateTimeParseException();"},{"lineNumber":69,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":72,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"caleblyx"},"content":"     * Returns a String representation of the deadline with the format of outputFormatter."},{"lineNumber":74,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"caleblyx"},"content":"     * @return a String representation of the deadline with the format of outputFormatter."},{"lineNumber":76,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"caleblyx"},"content":"    public String getDeadline() {"},{"lineNumber":78,"author":{"gitId":"caleblyx"},"content":"        return this.deadline.format(OUTPUT_DATE_TIME_FORMAT).toString();"},{"lineNumber":79,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":81,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"caleblyx"},"content":"     * Returns a String representation of the task."},{"lineNumber":83,"author":{"gitId":"caleblyx"},"content":"     * This representation includes the status icon, description, and deadline in the format of outputFormatter."},{"lineNumber":84,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"caleblyx"},"content":"     * @return a String representation of the task."},{"lineNumber":86,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"caleblyx"},"content":"    @Override"},{"lineNumber":88,"author":{"gitId":"caleblyx"},"content":"    public String toString() {"},{"lineNumber":89,"author":{"gitId":"caleblyx"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription() + \" (by: \" + getDeadline() +\")\";"},{"lineNumber":90,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":92,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"caleblyx"},"content":"     * Returns a boolean value indicating if the task is equal to"},{"lineNumber":94,"author":{"gitId":"caleblyx"},"content":"     * another object by determining if descriptions, deadline, and isDone parameters"},{"lineNumber":95,"author":{"gitId":"caleblyx"},"content":"     * are equal."},{"lineNumber":96,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"caleblyx"},"content":"     * @param o an object that is compared to the task to determine if both are equal"},{"lineNumber":98,"author":{"gitId":"caleblyx"},"content":"     * @return true or false if the task is equal or not equal to the object respectively."},{"lineNumber":99,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"caleblyx"},"content":"    @Override"},{"lineNumber":101,"author":{"gitId":"caleblyx"},"content":"    public boolean equals(Object o) {"},{"lineNumber":102,"author":{"gitId":"caleblyx"},"content":"        if (this \u003d\u003d o) {"},{"lineNumber":103,"author":{"gitId":"caleblyx"},"content":"            return true;"},{"lineNumber":104,"author":{"gitId":"caleblyx"},"content":"        } else if (o instanceof Deadline) {"},{"lineNumber":105,"author":{"gitId":"caleblyx"},"content":"            Deadline task \u003d (Deadline) o;"},{"lineNumber":106,"author":{"gitId":"caleblyx"},"content":"            boolean isEqualDeadlines \u003d this.description.equals(task.description)"},{"lineNumber":107,"author":{"gitId":"caleblyx"},"content":"                    \u0026\u0026 this.deadline.equals(task.deadline) \u0026\u0026 this.isDone \u003d\u003d task.isDone;"},{"lineNumber":108,"author":{"gitId":"caleblyx"},"content":"            return isEqualDeadlines;"},{"lineNumber":109,"author":{"gitId":"caleblyx"},"content":"        } else {"},{"lineNumber":110,"author":{"gitId":"caleblyx"},"content":"            return false;"},{"lineNumber":111,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":114,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"caleblyx"},"content":"     * Returns the string representation of the task in a format to be inputted into a text file for data storage."},{"lineNumber":116,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":117,"author":{"gitId":"caleblyx"},"content":"     * @return the string representation of the task to be saved in a text file."},{"lineNumber":118,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"caleblyx"},"content":"    @Override"},{"lineNumber":120,"author":{"gitId":"caleblyx"},"content":"    public String saveFormat() {"},{"lineNumber":121,"author":{"gitId":"caleblyx"},"content":"        if (isDone) {"},{"lineNumber":122,"author":{"gitId":"caleblyx"},"content":"            return \"D | 1 | \" + this.getDescription() + \" | \" + this.deadline.format(INPUT_DATE_TIME_FORMAT).toString();"},{"lineNumber":123,"author":{"gitId":"caleblyx"},"content":"        } else {"},{"lineNumber":124,"author":{"gitId":"caleblyx"},"content":"            return \"D | 0 | \" + this.getDescription() + \" | \" + this.deadline.format(INPUT_DATE_TIME_FORMAT).toString();"},{"lineNumber":125,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":127}},{"path":"src/main/java/bob/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob.task;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobDateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":"import java.time.DateTimeException;"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":" * Encapsulates a task to be completed over a span of time (i.e period)."},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"public class Event extends Task {"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"    /**The date and time at which the event begins. */"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"    private LocalDateTime start;"},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"    /**The date and time at which the event ends. */"},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":"    private LocalDateTime end;"},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":"    /**The format of inputted dates and times that the class can accept. */"},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":"    private static final DateTimeFormatter INPUT_DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"},{"lineNumber":24,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":25,"author":{"gitId":"caleblyx"},"content":"    /**The format of outputted dates and times by the class. */"},{"lineNumber":26,"author":{"gitId":"caleblyx"},"content":"    private static final DateTimeFormatter OUTPUT_DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\");"},{"lineNumber":27,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":28,"author":{"gitId":"caleblyx"},"content":"    /**Index of the end of the first provided date and time.*/"},{"lineNumber":29,"author":{"gitId":"caleblyx"},"content":"    private static final int END_OF_FIRST_DATE_TIME_INDEX \u003d 15;"},{"lineNumber":30,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":31,"author":{"gitId":"caleblyx"},"content":"    /**Index of the start of the second provided date and time.*/"},{"lineNumber":32,"author":{"gitId":"caleblyx"},"content":"    private static final int START_OF_SECOND_DATE_TIME_INDEX \u003d 19;"},{"lineNumber":33,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":34,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"caleblyx"},"content":"     * Constructs an event that has not been completed with a brief"},{"lineNumber":36,"author":{"gitId":"caleblyx"},"content":"     * description and period of time."},{"lineNumber":37,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"caleblyx"},"content":"     * @param description a brief description of the event."},{"lineNumber":39,"author":{"gitId":"caleblyx"},"content":"     * @param period two dates and times with the format of inputFormatter in the form of"},{"lineNumber":40,"author":{"gitId":"caleblyx"},"content":"     *               -start- to -end-."},{"lineNumber":41,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"caleblyx"},"content":"    public Event (String description, String period) throws BobDateTimeParseException {"},{"lineNumber":43,"author":{"gitId":"caleblyx"},"content":"        super(description);"},{"lineNumber":44,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"caleblyx"},"content":"            this.start \u003d LocalDateTime.parse(period.substring(0, END_OF_FIRST_DATE_TIME_INDEX), INPUT_DATE_TIME_FORMAT);"},{"lineNumber":46,"author":{"gitId":"caleblyx"},"content":"            this.end \u003d LocalDateTime.parse(period.substring(START_OF_SECOND_DATE_TIME_INDEX), INPUT_DATE_TIME_FORMAT);"},{"lineNumber":47,"author":{"gitId":"caleblyx"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":48,"author":{"gitId":"caleblyx"},"content":"            throw new BobDateTimeParseException();"},{"lineNumber":49,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":52,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"caleblyx"},"content":"     * Constructs an event which may or may not be completed"},{"lineNumber":54,"author":{"gitId":"caleblyx"},"content":"     * with a brief description and period of time."},{"lineNumber":55,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"caleblyx"},"content":"     * @param isDone indicates if the event has been completed."},{"lineNumber":57,"author":{"gitId":"caleblyx"},"content":"     * @param description a brief description of the event."},{"lineNumber":58,"author":{"gitId":"caleblyx"},"content":"     * @param period two dates with the format of inputFormatter in the form of"},{"lineNumber":59,"author":{"gitId":"caleblyx"},"content":"     *               start date- to -end date-."},{"lineNumber":60,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"caleblyx"},"content":"    public Event(boolean isDone, String description, String period) throws BobDateTimeParseException {"},{"lineNumber":62,"author":{"gitId":"caleblyx"},"content":"        super(isDone, description);"},{"lineNumber":63,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":64,"author":{"gitId":"caleblyx"},"content":"            this.start \u003d LocalDateTime.parse(period.substring(0, END_OF_FIRST_DATE_TIME_INDEX), INPUT_DATE_TIME_FORMAT);"},{"lineNumber":65,"author":{"gitId":"caleblyx"},"content":"            this.end \u003d LocalDateTime.parse(period.substring(START_OF_SECOND_DATE_TIME_INDEX), INPUT_DATE_TIME_FORMAT);"},{"lineNumber":66,"author":{"gitId":"caleblyx"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":67,"author":{"gitId":"caleblyx"},"content":"            throw new BobDateTimeParseException();"},{"lineNumber":68,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":71,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"caleblyx"},"content":"     * Returns the String representation of the period of time which the event occurred over. in the"},{"lineNumber":73,"author":{"gitId":"caleblyx"},"content":"     * form of -start- to -end-."},{"lineNumber":74,"author":{"gitId":"caleblyx"},"content":"     * Dates and times are in the format of outputFormatter."},{"lineNumber":75,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"caleblyx"},"content":"     * @return the String representation of the period of which the event occurred over."},{"lineNumber":77,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"caleblyx"},"content":"    public String getPeriod() {"},{"lineNumber":79,"author":{"gitId":"caleblyx"},"content":"        return this.start.format(OUTPUT_DATE_TIME_FORMAT).toString() + \" to \" + this.end.format(OUTPUT_DATE_TIME_FORMAT).toString();"},{"lineNumber":80,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":82,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"caleblyx"},"content":"     * Reschedules the period of an event to be of a provided period."},{"lineNumber":84,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"caleblyx"},"content":"     * @param newPeriod the period that the event should be rescheduled to."},{"lineNumber":86,"author":{"gitId":"caleblyx"},"content":"     * @throws BobDateTimeParseException if the provided dates and time do not have the format INPUT_DATE_TIME_FORMAT."},{"lineNumber":87,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"caleblyx"},"content":"    public void reschedule(String newPeriod) throws BobDateTimeParseException {"},{"lineNumber":89,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":90,"author":{"gitId":"caleblyx"},"content":"            this.start \u003d LocalDateTime.parse(newPeriod.substring(0, END_OF_FIRST_DATE_TIME_INDEX), INPUT_DATE_TIME_FORMAT);"},{"lineNumber":91,"author":{"gitId":"caleblyx"},"content":"            this.end \u003d LocalDateTime.parse(newPeriod.substring(START_OF_SECOND_DATE_TIME_INDEX), INPUT_DATE_TIME_FORMAT);"},{"lineNumber":92,"author":{"gitId":"caleblyx"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":93,"author":{"gitId":"caleblyx"},"content":"            throw new BobDateTimeParseException();"},{"lineNumber":94,"author":{"gitId":"caleblyx"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":95,"author":{"gitId":"caleblyx"},"content":"            throw new BobDateTimeParseException();"},{"lineNumber":96,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":99,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"caleblyx"},"content":"     * Returns the string representation of the event, which includes the status icon, description, and period."},{"lineNumber":101,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":102,"author":{"gitId":"caleblyx"},"content":"     * @return the string representation of the event."},{"lineNumber":103,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"caleblyx"},"content":"    @Override"},{"lineNumber":105,"author":{"gitId":"caleblyx"},"content":"    public String toString() {"},{"lineNumber":106,"author":{"gitId":"caleblyx"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription() + \" (at: \" + getPeriod() +\")\";"},{"lineNumber":107,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":109,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"caleblyx"},"content":"     * Returns a boolean value indicating if the event is equal to another object by"},{"lineNumber":111,"author":{"gitId":"caleblyx"},"content":"     * determining if isDone, start, end, and description parameters are equal."},{"lineNumber":112,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":113,"author":{"gitId":"caleblyx"},"content":"     * @param o an object that is compared to the task to determine if both are equal"},{"lineNumber":114,"author":{"gitId":"caleblyx"},"content":"     * @return true or false if the event is equal or not equal to the object."},{"lineNumber":115,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"caleblyx"},"content":"    @Override"},{"lineNumber":117,"author":{"gitId":"caleblyx"},"content":"    public boolean equals(Object o) {"},{"lineNumber":118,"author":{"gitId":"caleblyx"},"content":"        if (this \u003d\u003d o) {"},{"lineNumber":119,"author":{"gitId":"caleblyx"},"content":"            return true;"},{"lineNumber":120,"author":{"gitId":"caleblyx"},"content":"        } else if (o instanceof Event) {"},{"lineNumber":121,"author":{"gitId":"caleblyx"},"content":"            Event task \u003d (Event) o;"},{"lineNumber":122,"author":{"gitId":"caleblyx"},"content":"            boolean isEqualEvents \u003d this.description.equals(task.description) \u0026\u0026 this.start.equals(task.start)"},{"lineNumber":123,"author":{"gitId":"caleblyx"},"content":"                    \u0026\u0026 this.end.equals(task.end) \u0026\u0026 this.isDone \u003d\u003d task.isDone;"},{"lineNumber":124,"author":{"gitId":"caleblyx"},"content":"            return isEqualEvents;"},{"lineNumber":125,"author":{"gitId":"caleblyx"},"content":"        } else {"},{"lineNumber":126,"author":{"gitId":"caleblyx"},"content":"            return false;"},{"lineNumber":127,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":130,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":131,"author":{"gitId":"caleblyx"},"content":"     * Returns the string representation of the task in a format to be inputted into a text file for data storage."},{"lineNumber":132,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":133,"author":{"gitId":"caleblyx"},"content":"     * @return the string representation of the task to be saved in a text file."},{"lineNumber":134,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":135,"author":{"gitId":"caleblyx"},"content":"    @Override"},{"lineNumber":136,"author":{"gitId":"caleblyx"},"content":"    public String saveFormat() {"},{"lineNumber":137,"author":{"gitId":"caleblyx"},"content":"        if (isDone) {"},{"lineNumber":138,"author":{"gitId":"caleblyx"},"content":"            return \"E | 1 | \" + this.getDescription() + \" | \" + this.start.format(INPUT_DATE_TIME_FORMAT)"},{"lineNumber":139,"author":{"gitId":"caleblyx"},"content":"                    + \" to \" + this.end.format(INPUT_DATE_TIME_FORMAT);"},{"lineNumber":140,"author":{"gitId":"caleblyx"},"content":"        } else {"},{"lineNumber":141,"author":{"gitId":"caleblyx"},"content":"            return \"E | 0 | \" + this.getDescription() + \" | \" + this.start.format(INPUT_DATE_TIME_FORMAT)"},{"lineNumber":142,"author":{"gitId":"caleblyx"},"content":"                    + \" to \" + this.end.format(INPUT_DATE_TIME_FORMAT);"},{"lineNumber":143,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":144,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"caleblyx"},"content":"}"},{"lineNumber":146,"author":{"gitId":"caleblyx"},"content":""}],"authorContributionMap":{"caleblyx":146}},{"path":"src/main/java/bob/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob.task;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":" * Encapsulates a Task."},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":"public class Task {"},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"    /** A brief description of the task. */"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"    protected String description;"},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"    /** Tracks the completion of the task */"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"    protected boolean isDone;"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"     * Constructs a task that has not been completed with a description."},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"     * @param description a brief description of the task"},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"    public Task(String description) {"},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":"        this.description \u003d description;"},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":"        this.isDone \u003d false;"},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":24,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"caleblyx"},"content":"     * Constructs a task, which may or may not have been completed, with a description."},{"lineNumber":26,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"caleblyx"},"content":"     * @param isDone indicates if the task has been completed."},{"lineNumber":28,"author":{"gitId":"caleblyx"},"content":"     * @param description a brief description of the task."},{"lineNumber":29,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"caleblyx"},"content":"    public Task(boolean isDone, String description) {"},{"lineNumber":31,"author":{"gitId":"caleblyx"},"content":"        this.description \u003d description;"},{"lineNumber":32,"author":{"gitId":"caleblyx"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":33,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":35,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"caleblyx"},"content":"     * Returns the status icon of the task."},{"lineNumber":37,"author":{"gitId":"caleblyx"},"content":"     * Returns tick symbol when task is indicated as done."},{"lineNumber":38,"author":{"gitId":"caleblyx"},"content":"     * Returns X symbol when task is not indicated as done."},{"lineNumber":39,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"caleblyx"},"content":"     * @return the status icon of the task."},{"lineNumber":41,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"caleblyx"},"content":"    public String getStatusIcon() {"},{"lineNumber":43,"author":{"gitId":"caleblyx"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":44,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":46,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"caleblyx"},"content":"     * Returns the description of the task as a string."},{"lineNumber":48,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"caleblyx"},"content":"     * @return the description of the task."},{"lineNumber":50,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":52,"author":{"gitId":"caleblyx"},"content":"    public String getDescription() {"},{"lineNumber":53,"author":{"gitId":"caleblyx"},"content":"        return this.description;"},{"lineNumber":54,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":56,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"caleblyx"},"content":"     * Indicates that the task has been completed."},{"lineNumber":58,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"caleblyx"},"content":"    public void markAsDone() {"},{"lineNumber":60,"author":{"gitId":"caleblyx"},"content":"        this.isDone \u003d true;"},{"lineNumber":61,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":63,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"caleblyx"},"content":"     * Returns a boolean value indicating if the task is equal to"},{"lineNumber":65,"author":{"gitId":"caleblyx"},"content":"     * another object by determining if descriptions and isDone parameters"},{"lineNumber":66,"author":{"gitId":"caleblyx"},"content":"     * are equal."},{"lineNumber":67,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"caleblyx"},"content":"     * @param o an object that is compared to the task to determine if both are equal"},{"lineNumber":69,"author":{"gitId":"caleblyx"},"content":"     * @return true or false if the object is equal or not equal to the task respectively."},{"lineNumber":70,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"caleblyx"},"content":"    @Override"},{"lineNumber":72,"author":{"gitId":"caleblyx"},"content":"    public boolean equals(Object o) {"},{"lineNumber":73,"author":{"gitId":"caleblyx"},"content":"        if (this \u003d\u003d o) {"},{"lineNumber":74,"author":{"gitId":"caleblyx"},"content":"            return true;"},{"lineNumber":75,"author":{"gitId":"caleblyx"},"content":"        } else if (o instanceof Task) {"},{"lineNumber":76,"author":{"gitId":"caleblyx"},"content":"            Task task \u003d (Task) o;"},{"lineNumber":77,"author":{"gitId":"caleblyx"},"content":"            boolean isEqualTask \u003d this.description.equals(task.description) \u0026\u0026 this.isDone \u003d\u003d task.isDone;"},{"lineNumber":78,"author":{"gitId":"caleblyx"},"content":"            return isEqualTask;"},{"lineNumber":79,"author":{"gitId":"caleblyx"},"content":"        } else {"},{"lineNumber":80,"author":{"gitId":"caleblyx"},"content":"            return false;"},{"lineNumber":81,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":84,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"caleblyx"},"content":"     * Returns the string representation of task, which includes the status icon"},{"lineNumber":86,"author":{"gitId":"caleblyx"},"content":"     * and description."},{"lineNumber":87,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"caleblyx"},"content":"     * @return the string representation of the task."},{"lineNumber":89,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"caleblyx"},"content":"    @Override"},{"lineNumber":91,"author":{"gitId":"caleblyx"},"content":"    public String toString() {"},{"lineNumber":92,"author":{"gitId":"caleblyx"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();"},{"lineNumber":93,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":95,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"caleblyx"},"content":"     * Returns the string representation of the task in a format to be inputted into a text file for data storage."},{"lineNumber":97,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":98,"author":{"gitId":"caleblyx"},"content":"     * @return the string representation of the task to be saved in a text file."},{"lineNumber":99,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"caleblyx"},"content":"    public String saveFormat() {"},{"lineNumber":101,"author":{"gitId":"caleblyx"},"content":"        if (isDone) {"},{"lineNumber":102,"author":{"gitId":"caleblyx"},"content":"            return \"T | 1 | \" + this.getDescription();"},{"lineNumber":103,"author":{"gitId":"caleblyx"},"content":"        } else {"},{"lineNumber":104,"author":{"gitId":"caleblyx"},"content":"            return \"T | 0 | \" + this.getDescription();"},{"lineNumber":105,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"caleblyx"},"content":"}"},{"lineNumber":108,"author":{"gitId":"caleblyx"},"content":""}],"authorContributionMap":{"caleblyx":108}},{"path":"src/main/java/bob/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package bob.task;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":" * Encapsulates a Todo which inherits a Task."},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":" */"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"public class Todo extends Task{"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"     * Constructs a Todo that has not been completed with a brief description."},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"     * @param description a brief description of the Todo."},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"    public Todo(String description) {"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"     * Constructs a Todo, which may or may not be done, with a brief description."},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"     * @param isDone indicates if the todo is completed."},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":"     * @param description brief description of the todo."},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":"    public Todo(boolean isDone, String description) {"},{"lineNumber":24,"author":{"gitId":"caleblyx"},"content":"        super(isDone, description);"},{"lineNumber":25,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":27,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":27}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" snapToPixel\u003d\"false\" style\u003d\"-fx-background-color: PaleGreen; -fx-background-radius: 15; -fx-border-color: LimeGreen; -fx-border-radius: 15; -fx-label-padding: 5;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"         \u003cfont\u003e"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"            \u003cFont name\u003d\"Arial\" size\u003d\"12.0\" /\u003e"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"         \u003c/font\u003e"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"         \u003cHBox.margin\u003e"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e"},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":"      \u003cCircle fx:id\u003d\"displayPicture\" fill\u003d\"DODGERBLUE\" radius\u003d\"23.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" /\u003e"},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"    \u003c/children\u003e"},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":"    \u003cpadding\u003e"},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":"    \u003c/padding\u003e"},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"caleblyx":23}},{"path":"src/main/resources/view/DialogBoxError.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" snapToPixel\u003d\"false\" style\u003d\"-fx-background-color: PaleGreen; -fx-background-radius: 15; -fx-border-color: LimeGreen; -fx-border-radius: 15; -fx-label-padding: 5;\" text\u003d\"Label\" textFill\u003d\"#ff0a0a\" wrapText\u003d\"true\"\u003e"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"         \u003cfont\u003e"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"            \u003cFont name\u003d\"Arial\" size\u003d\"12.0\" /\u003e"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"         \u003c/font\u003e"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"         \u003cHBox.margin\u003e"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e"},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":"      \u003cCircle fx:id\u003d\"displayPicture\" fill\u003d\"DODGERBLUE\" radius\u003d\"23.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" /\u003e"},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"    \u003c/children\u003e"},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":"    \u003cpadding\u003e"},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":"    \u003c/padding\u003e"},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"caleblyx":23}},{"path":"src/main/resources/view/DialogBoxUser.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" snapToPixel\u003d\"false\" style\u003d\"-fx-background-color: GainsBoro; -fx-background-radius: 15; -fx-border-color: DimGrey; -fx-border-radius: 15; -fx-label-padding: 5;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"         \u003cfont\u003e"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"            \u003cFont name\u003d\"Arial\" size\u003d\"12.0\" /\u003e"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"         \u003c/font\u003e"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"         \u003cHBox.margin\u003e"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e"},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":"      \u003cCircle fx:id\u003d\"displayPicture\" fill\u003d\"DODGERBLUE\" radius\u003d\"23.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" /\u003e"},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"    \u003c/children\u003e"},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":"    \u003cpadding\u003e"},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":"    \u003c/padding\u003e"},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"caleblyx":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" type\u003d\"AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: OldLace;\" /\u003e"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"caleblyx":19}},{"path":"src/test/java/main/java/BobEventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobDateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":"import bob.task.Event;"},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"public class BobEventTest {"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"    public void getPeriod_period_success() {"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"        Event event \u003d null;"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"            event \u003d new Event(\"meet friends\",\"2020-05-18 2000 to 2020-05-18 2100\");"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"        } catch (BobDateTimeParseException e) {"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"            e.printStackTrace();"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"        Assertions.assertEquals(\"May 18 2020 2000 to May 18 2020 2100\", event.getPeriod());"},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":"    public void saveFormat_savedData_success() {"},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":"        Event event \u003d null;"},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"caleblyx"},"content":"            event \u003d new Event(\"meet friends\",\"2020-05-18 2000 to 2020-05-18 2100\");"},{"lineNumber":25,"author":{"gitId":"caleblyx"},"content":"        } catch (BobDateTimeParseException e) {"},{"lineNumber":26,"author":{"gitId":"caleblyx"},"content":"            e.printStackTrace();"},{"lineNumber":27,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"caleblyx"},"content":"        Assertions.assertEquals(\"E | 0 | meet friends | 2020-05-18 2000 to 2020-05-18 2100\", event.saveFormat());"},{"lineNumber":29,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":31,"author":{"gitId":"caleblyx"},"content":"    @Test"},{"lineNumber":32,"author":{"gitId":"caleblyx"},"content":"    public void toString_eventString_success() {"},{"lineNumber":33,"author":{"gitId":"caleblyx"},"content":"        Event event \u003d null;"},{"lineNumber":34,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"caleblyx"},"content":"            event \u003d new Event(\"meet friends\",\"2020-05-18 2000 to 2020-05-18 2100\");"},{"lineNumber":36,"author":{"gitId":"caleblyx"},"content":"        } catch (BobDateTimeParseException e) {"},{"lineNumber":37,"author":{"gitId":"caleblyx"},"content":"            e.printStackTrace();"},{"lineNumber":38,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"caleblyx"},"content":"        Assertions.assertEquals(\"[\\u2718] meet friends (at: May 18 2020 2000 to May 18 2020 2100)\", event.toString());"},{"lineNumber":40,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":42,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":42}},{"path":"src/test/java/main/java/BobParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"import bob.Parser;"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":"import bob.command.AddCommand;"},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":"import bob.command.Command;"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobDateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobException;"},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"import bob.task.Deadline;"},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"import bob.task.Event;"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"import bob.task.Todo;"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"public class BobParserTest {"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"    public void parse_Todo_success(){"},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":"        Command c \u003d null;"},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":"            c \u003d Parser.parse(\"todo do homework\");"},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":"        } catch (BobException e) {"},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":"            e.printStackTrace();"},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"caleblyx"},"content":"        Assertions.assertEquals( new AddCommand(new Todo(\"do homework\")), c);"},{"lineNumber":25,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":27,"author":{"gitId":"caleblyx"},"content":"    @Test"},{"lineNumber":28,"author":{"gitId":"caleblyx"},"content":"    public void parse_Deadline_success() throws BobDateTimeParseException {"},{"lineNumber":29,"author":{"gitId":"caleblyx"},"content":"        Command c \u003d null;"},{"lineNumber":30,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"caleblyx"},"content":"            c \u003d Parser.parse(\"deadline do homework /by 2020-05-20 1700\");"},{"lineNumber":32,"author":{"gitId":"caleblyx"},"content":"        } catch (BobException e) {"},{"lineNumber":33,"author":{"gitId":"caleblyx"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"caleblyx"},"content":"        Assertions.assertEquals(new AddCommand(new Deadline(\"do homework\", \"2020-05-20 1700\")),c);"},{"lineNumber":36,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":38,"author":{"gitId":"caleblyx"},"content":"    @Test"},{"lineNumber":39,"author":{"gitId":"caleblyx"},"content":"    public void parse_Event_success() throws BobDateTimeParseException {"},{"lineNumber":40,"author":{"gitId":"caleblyx"},"content":"        Command c \u003d null;"},{"lineNumber":41,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"caleblyx"},"content":"            c \u003d Parser.parse(\"event do homework /at 2020-05-20 1700 to 2020-05-20 1800\");"},{"lineNumber":43,"author":{"gitId":"caleblyx"},"content":"        } catch (BobException e) {"},{"lineNumber":44,"author":{"gitId":"caleblyx"},"content":"            e.printStackTrace();"},{"lineNumber":45,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"caleblyx"},"content":"        Assertions.assertEquals(new AddCommand(new Event(\"do homework\", \"2020-05-20 1700 to 2020-05-20 1800\")), c);"},{"lineNumber":47,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":49,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":49}},{"path":"src/test/java/main/java/BobTaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"import bob.TaskList;"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":"import bob.exception.BobIndexOutOfBoundsException;"},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":"import bob.task.Task;"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"import bob.task.Todo;"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"public class BobTaskListTest {"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"    public void isEmpty_emptyTaskList_true() {"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"        Assertions.assertEquals(true, tasks.isEmpty());"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":"    public void get_emptyTaskList_exceptionThrown(){"},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":"            Assertions.assertEquals(tasks.get(1), new Task(\"empty\"));"},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":"            Assertions.fail();"},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":"        } catch (BobIndexOutOfBoundsException e) {"},{"lineNumber":24,"author":{"gitId":"caleblyx"},"content":"            Assertions.assertEquals(\"There are no tasks on the list with the provided index.\""},{"lineNumber":25,"author":{"gitId":"caleblyx"},"content":"                    + \" Please check the list and try again!\", e.getMessage());"},{"lineNumber":26,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":29,"author":{"gitId":"caleblyx"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"caleblyx"},"content":"    public void size_TaskListWith5Tasks_success() {"},{"lineNumber":31,"author":{"gitId":"caleblyx"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":32,"author":{"gitId":"caleblyx"},"content":"        for (int i \u003d 0; i \u003c 5 ; i++) {"},{"lineNumber":33,"author":{"gitId":"caleblyx"},"content":"            tasks.add(new Todo(\"empty\"));"},{"lineNumber":34,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"caleblyx"},"content":"        Assertions.assertEquals(5,tasks.size());"},{"lineNumber":36,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":38,"author":{"gitId":"caleblyx"},"content":"    @Test"},{"lineNumber":39,"author":{"gitId":"caleblyx"},"content":"    public void addAndDelete_TaskListWith3Tasks_success() {"},{"lineNumber":40,"author":{"gitId":"caleblyx"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":41,"author":{"gitId":"caleblyx"},"content":"        for (int i \u003d 0; i \u003c 5 ; i++) {"},{"lineNumber":42,"author":{"gitId":"caleblyx"},"content":"            tasks.add(new Todo(\"empty\"));"},{"lineNumber":43,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"caleblyx"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"caleblyx"},"content":"            tasks.delete(1);"},{"lineNumber":46,"author":{"gitId":"caleblyx"},"content":"            tasks.delete(2);"},{"lineNumber":47,"author":{"gitId":"caleblyx"},"content":"        } catch (BobIndexOutOfBoundsException e) {"},{"lineNumber":48,"author":{"gitId":"caleblyx"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"caleblyx"},"content":"        Assertions.assertEquals(3,tasks.size());"},{"lineNumber":50,"author":{"gitId":"caleblyx"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"caleblyx"},"content":"}"}],"authorContributionMap":{"caleblyx":51}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":"list"},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":"hi"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"bye"}],"authorContributionMap":{"caleblyx":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":6,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":9,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":17,"author":{"gitId":"-"},"content":")"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":"java -classpath ..\\bin Bob Task \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":25,"author":{"gitId":"caleblyx"},"content":""},{"lineNumber":26,"author":{"gitId":"caleblyx"},"content":"pause"}],"authorContributionMap":{"caleblyx":7,"-":19}},{"path":"text-ui-test/sources.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"caleblyx"},"content":"C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\Bob.java"},{"lineNumber":2,"author":{"gitId":"caleblyx"},"content":"C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\Parser.java"},{"lineNumber":3,"author":{"gitId":"caleblyx"},"content":"C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\Storage.java"},{"lineNumber":4,"author":{"gitId":"caleblyx"},"content":"C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\TaskList.java"},{"lineNumber":5,"author":{"gitId":"caleblyx"},"content":"C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\UI.java"},{"lineNumber":6,"author":{"gitId":"caleblyx"},"content":"C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\command\\AddCommand.java"},{"lineNumber":7,"author":{"gitId":"caleblyx"},"content":"C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\command\\Command.java"},{"lineNumber":8,"author":{"gitId":"caleblyx"},"content":"C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\command\\DeleteCommand.java"},{"lineNumber":9,"author":{"gitId":"caleblyx"},"content":"C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\command\\DoneCommand.java"},{"lineNumber":10,"author":{"gitId":"caleblyx"},"content":"C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\command\\ExitCommand.java"},{"lineNumber":11,"author":{"gitId":"caleblyx"},"content":"C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\command\\FindCommand.java"},{"lineNumber":12,"author":{"gitId":"caleblyx"},"content":"C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\command\\ListCommand.java"},{"lineNumber":13,"author":{"gitId":"caleblyx"},"content":"C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\exception\\BobDateTimeParseException.java"},{"lineNumber":14,"author":{"gitId":"caleblyx"},"content":"C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\exception\\BobException.java"},{"lineNumber":15,"author":{"gitId":"caleblyx"},"content":"C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\exception\\BobFileNotFoundException.java"},{"lineNumber":16,"author":{"gitId":"caleblyx"},"content":"C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\exception\\BobFindNoKeyWordsException.java"},{"lineNumber":17,"author":{"gitId":"caleblyx"},"content":"C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\exception\\BobIncompleteDeadlineDescriptionException.java"},{"lineNumber":18,"author":{"gitId":"caleblyx"},"content":"C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\exception\\BobIncompleteEventDescriptionException.java"},{"lineNumber":19,"author":{"gitId":"caleblyx"},"content":"C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\exception\\BobIndexOutOfBoundsException.java"},{"lineNumber":20,"author":{"gitId":"caleblyx"},"content":"C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\exception\\BobIOException.java"},{"lineNumber":21,"author":{"gitId":"caleblyx"},"content":"C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\exception\\BobNoDescriptionException.java"},{"lineNumber":22,"author":{"gitId":"caleblyx"},"content":"C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\exception\\BobNumberFormatException.java"},{"lineNumber":23,"author":{"gitId":"caleblyx"},"content":"C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\exception\\BobStorageInitialisationException.java"},{"lineNumber":24,"author":{"gitId":"caleblyx"},"content":"C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\task\\Deadline.java"},{"lineNumber":25,"author":{"gitId":"caleblyx"},"content":"C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\task\\Event.java"},{"lineNumber":26,"author":{"gitId":"caleblyx"},"content":"C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\task\\Task.java"},{"lineNumber":27,"author":{"gitId":"caleblyx"},"content":"C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\task\\Todo.java"}],"authorContributionMap":{"caleblyx":27}}]
