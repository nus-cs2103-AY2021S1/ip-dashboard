[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 2,
      "-": 24
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "D | 1 | asdfad | 2020-08-10 0600"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "E | 1 | asdfadsfa | 1010-08-10 0600"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "T | 1 | asdfasd"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "T | 1 | fk u"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "T | 0 | asdlkfjasd"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "D | 0 | aksjdhfad | 1010-10-10 1010"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 6
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Represents the main class for the Duke application."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        new Duke(\"tasks.txt\").run();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Runs the application."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        boolean shouldLoop \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        while (shouldLoop) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                shouldLoop \u003d command.shouldLoop();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                ui.showError(e);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 52,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Responsible for executing a bye command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Executes a bye command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param tasks Contains the current tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param ui Responsible for displaying information to the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param storage Reads and stores data into memory."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        ui.printResponse(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return \"bye\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 31
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Abstract class that models a command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private boolean shouldLoop;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public Command(boolean shouldLoop) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.shouldLoop \u003d shouldLoop;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param tasks Contains the current tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param ui Responsible for displaying information to the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param storage Reads and stores data into memory."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public boolean shouldLoop() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return this.shouldLoop;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 30
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Responsible for executing a deadline command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    Date by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public DeadlineCommand(String description, Date by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Executes a deadline command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param tasks Contains the current tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param ui Responsible for displaying information to the user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param storage Reads and stores data into memory."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        Task task \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        String response \u003d String.format("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                \"I\u0027ve added this task:\\n  %s \\nNow you have %s tasks in the list.\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                task, tasks.size()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        );"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        ui.printResponse(response);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return \"deadline \u003ctask\u003e /by \u003cdate\u003e\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 47
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.exception.InvalidDeleteIndexException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Responsible for executing a delete command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public DeleteCommand (int index) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Executes a delete command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param tasks Contains the current tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param ui Responsible for displaying information to the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param storage Reads and stores data into memory."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @throws InvalidDeleteIndexException If index is out of bounds."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidDeleteIndexException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        if (index \u003e tasks.size() || index \u003c 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            throw new InvalidDeleteIndexException(tasks.size());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        Task task \u003d tasks.remove(index-1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        String response \u003d String.format(\"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                + \"%s\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                + \"Now you have %d tasks in the list.\", task, tasks.size());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        ui.printResponse(response);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return \"delete \u003ctask index\u003e\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 45
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.exception.InvalidDoneIndexException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Responsible for a done command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Executes a done command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param tasks Contains the current tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param ui Responsible for displaying information to the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param storage Reads and stores data into memory."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @throws InvalidDoneIndexException If index is out of bounds."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidDoneIndexException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        if (index \u003e tasks.size() || index \u003c 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            throw new InvalidDoneIndexException(tasks.size());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        Task task \u003d tasks.get(index-1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        task.completeTask();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        String response \u003d \"Nice! I\u0027ve marked this task as done:\\n  \" + task.toString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        ui.printResponse(response);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return \"done \u003ctask index\u003e\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 44
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Responsible for executing an event command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private Date at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public EventCommand(String description, Date at) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Executes an event command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param tasks Contains the current tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param ui Responsible for displaying information to the user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param storage Reads and stores data into memory."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        Task task \u003d new Event(description, at);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        String response \u003d String.format("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                \"I\u0027ve added this task:\\n  %s \\nNow you have %s tasks in the list.\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                task, tasks.size()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        );"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        ui.printResponse(response);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return \"event \u003ctask\u003e /at \u003cdate\u003e\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 46
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.StringJoiner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    String toFind;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public FindCommand(String toFind) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.toFind \u003d toFind;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        StringJoiner response \u003d new StringJoiner(\"\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        response.add(String.format(\"Here are the tasks in your list that contain \\\"%s\\\":\", toFind));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        response.add(tasks.find(toFind));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        ui.printResponse(response.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 24
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.StringJoiner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Responsible for executing a help command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private static List\u003cCommand\u003e allCommands \u003d Arrays.asList("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            new ByeCommand(),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            new DeadlineCommand(\"dummy value\", new Date()),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            new DeleteCommand(0),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            new DoneCommand(0),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            new EventCommand(\"dummy value\", new Date()),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            new ListCommand(),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            new ToDoCommand(\"dummy value\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    );"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Executes a help command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param tasks Contains the current tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param ui Responsible for displaying information to the user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param storage Reads and stores data into memory."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        StringJoiner response \u003d new StringJoiner(\"\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        response.add(\"Here are all the available commands:\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        for (Command command : allCommands) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            response.add(command.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        ui.printResponse(response.toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 45
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.StringJoiner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Responsible for executing a list command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Executes a list command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param tasks Contains the current tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param ui Responsible for displaying information to the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param storage Reads and stores data into memory."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        StringJoiner response \u003d new StringJoiner(\"\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            response.add(String.format(\"%d.%s\", i+1, tasks.get(i)));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        ui.printResponse(response.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return \"list\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 37
    }
  },
  {
    "path": "src/main/java/duke/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Responsible for executing a todo command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class ToDoCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public ToDoCommand(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Executes a todo command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param tasks Contains the current tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param ui Responsible for displaying information to the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param storage Reads and stores data into memory."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        Task task \u003d new ToDo(description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        String response \u003d String.format("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                \"I\u0027ve added this task:\\n  %s \\nNow you have %s tasks in the list.\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                task, tasks.size()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        );"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        ui.printResponse(response);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return \"todo \u003ctask\u003e\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 42
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * General exception when an unknown command is used."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /** Default constructor with a default error message. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                + \"To see all commands, type \\\"help\\\"\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Overloaded constructor that accepts a custom error message."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param errorMessage Custom error message."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 22
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Exception thrown when a deadline command is entered incorrectly."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class InvalidDeadlineException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public InvalidDeadlineException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(\"You entered the deadline command incorrectly :(\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                + \"The command format is \\\"deadline \u003ctask\u003e /by \u003cyyyy-MM-dd hhmm OR yyyy-MM-dd\u003e\\\"\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 11
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidDeleteIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Exception thrown when a delete command uses an invalid index."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class InvalidDeleteIndexException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public InvalidDeleteIndexException(int tasksSize) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(String.format(\"No such task :(\\nYou have %d tasks.\", tasksSize));"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidDoneIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Exception thrown when a done command uses an invalid index."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class InvalidDoneIndexException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public InvalidDoneIndexException(int tasksSize) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(String.format(\"No such task :(\\nYou have %d tasks.\", tasksSize));"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Exception thrown when an event command is entered incorrectly"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class InvalidEventException extends DukeException{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public InvalidEventException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(\"You entered the event command incorrectly :(\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                + \"The command format is \\\"event \u003ctask\u003e /at \u003cyyyy-MM-dd hhmm OR yyyy-MM-dd\u003e\\\"\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 11
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidToDoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Exception thrown when a todo command has no description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class InvalidToDoException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public InvalidToDoException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(\"The description of a todo cannot be empty :(\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                + \"The command format is \\\"todo \u003ctask\u003e\\\"\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 11
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.DateFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Models a deadline task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Returns a String representation of the task for saving."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return String representation of the task for saving purposes."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return String.format(\"D | %d | %s | %s\", this.isDone ? 1 : 0, "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                this.description, DateFormatter.formatSave(this.by));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                DateFormatter.formatDisplay(this.by));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 34
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.util.DateFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Models an event task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public Event(String description, Date at) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Returns icon representing whether the task is done or not."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return Icon representing whether the task is done or not."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return String.format(\"E | %d | %s | %s\", this.isDone ? 1 : 0, "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                this.description, DateFormatter.formatSave(this.at));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                DateFormatter.formatDisplay(this.at));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 34
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Abstract class that models a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Returns icon representing whether the task is done or not."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return Icon representing whether the task is done or not."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Sets the task to be done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void completeTask() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Returns a String representation of the task for saving."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return String representation of the task for saving purposes."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public abstract String toSaveFormat();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public boolean contains(String s) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return this.description.contains(s);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 46
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Models a todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Returns icon representing whether the task is done or not."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return Icon representing whether the task is done or not."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return String.format(\"T | %d | %s\", this.isDone ? 1 : 0, this.description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return String.format(\"[T][%s] %s\", getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 25
    }
  },
  {
    "path": "src/main/java/duke/util/DateFormatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Contains utility methods for converting between Dates and Strings."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class DateFormatter {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // @@author aizatazhar-reused"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    // Reused from https://stackoverflow.com/a/16990333/12003017 with minor modifications"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private static List\u003cString\u003e dateFormats \u003d Arrays.asList("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            \"yyyy-MM-dd hhmm\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            \"yyyy-MM-dd\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a String representation of a date and returns a Date object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param strDate String representation of a date."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Date object corresponding to the String given."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DukeException If the String representation does not match any defined date format."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Date extractTimestampInput(String strDate) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String format: dateFormats) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            SimpleDateFormat sdf \u003d new SimpleDateFormat(format);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                return sdf.parse(strDate);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                //intentionally empty"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        throw new DukeException(\"Invalid input for date. Given \u0027\" + strDate + \"\u0027, \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"expecting format yyyy-MM-dd hhmm or yyyy-MM-dd.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    // @@author"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Formats a date for displaying on the UI."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param date Date object to format."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return String representation of the date in a display-friendly format."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public static String formatDisplay(Date date) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        DateFormat dateFormat \u003d new SimpleDateFormat(\"dd MMM yyyy HH:mm\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return dateFormat.format(date);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Formats a date for saving."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param date Date object to format."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return String representation of the date in a save-friendly format."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public static String formatSave(Date date) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        DateFormat dateFormat \u003d new SimpleDateFormat(\"yyyy-MM-dd hhmm\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return dateFormat.format(date);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 38,
      "-": 28
    }
  },
  {
    "path": "src/main/java/duke/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.command.HelpCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.command.ToDoCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.exception.InvalidDeadlineException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.exception.InvalidEventException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.exception.InvalidToDoException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Parses an input into a command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Parses a String input into a command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param input The input to parse."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return Command associated with the input."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @throws DukeException If the input does not match any command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else if (input.equals(\"help\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                String[] inputArray \u003d input.substring(input.indexOf(\u0027 \u0027) + 1).split(\" /by \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                String description \u003d inputArray[0];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                Date by \u003d DateFormatter.extractTimestampInput(inputArray[1]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                return new DeadlineCommand(description, by);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException | DukeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                throw new InvalidDeadlineException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else if (input.matches(\"delete \\\\d+\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            int index \u003d Integer.parseInt(input.split(\" \")[1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return new DeleteCommand(index);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else if (input.matches(\"done \\\\d+\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            int index \u003d Integer.parseInt(input.split(\" \")[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return new DoneCommand(index);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                String[] inputArray \u003d input.substring(input.indexOf(\u0027 \u0027) + 1).split(\" /at \");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                String description \u003d inputArray[0];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                Date at \u003d DateFormatter.extractTimestampInput(inputArray[1]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                return new EventCommand(description, at);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException | DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                throw new InvalidEventException();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            String[] split \u003d input.split(\" \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            if (split.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                throw new InvalidToDoException();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            String[] descriptionArray \u003d Arrays.copyOfRange(split, 1, split.length);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            String description \u003d String.join(\" \", descriptionArray);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return new ToDoCommand(description);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else if (input.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            String[] split \u003d input.split(\"find \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            String toFind \u003d split[1];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return new FindCommand(toFind);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 79
    }
  },
  {
    "path": "src/main/java/duke/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Responsible for loading and saving tasks to memory."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private String dirName \u003d \"data/\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.filePath \u003d dirName + filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Loads the tasks from the storage directory."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return {@code ArrayList\u003cTask\u003e} of the tasks stored in the storage directory."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @throws DukeException If the tasks were not saved in appropriate format."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            // Create the directory if it does not exist"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            File dir \u003d new File(dirName);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            if (!dir.exists()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                dir.mkdirs();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                String nextLine \u003d sc.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                String[] taskDetails \u003d nextLine.split(\" \\\\| \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                if (taskDetails[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                    task \u003d new ToDo(taskDetails[2]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                } else if (taskDetails[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                    task \u003d new Deadline(taskDetails[2], "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                            DateFormatter.extractTimestampInput(taskDetails[3]));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                    task \u003d new Event(taskDetails[2], "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                            DateFormatter.extractTimestampInput(taskDetails[3]));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                if (taskDetails[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                    task.completeTask();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                result.add(task);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            // Create the .txt file if it does not exist"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            } catch (IOException e2) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                e2.printStackTrace();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Saves tasks to the storage directory."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param tasks The tasks to save."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            fw.write(tasks.getSaveFormat());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 90
    }
  },
  {
    "path": "src/main/java/duke/util/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.StringJoiner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Models a list of tasks and the associated operations."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Adds a task to the list of tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param task The task to add."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Removes and returns a task from the list of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param index The index of the task to remove"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return The task that was removed."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return tasks.remove(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Returns the size of the list of tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return The size of the list of tasks."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Returns a task from the list of tasks without removing it."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param index The index of the task to return."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return The task corresponding to the given index."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Returns a String representation of all the tasks in a save-friendly format."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @return String representation of all the tasks in a save-friendly format."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String getSaveFormat() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        StringJoiner text \u003d new StringJoiner(\"\\n\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            text.add(task.toSaveFormat());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return text.toString();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String find(String toFind) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        StringJoiner response \u003d new StringJoiner(\"\\n\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            if (tasks.get(i).contains(toFind)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                response.add(String.format(\"%d.%s\", i+1, tasks.get(i)));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return response.toString();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 82
    }
  },
  {
    "path": "src/main/java/duke/util/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " * Responsible for displaying information to the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private String line \u003d \"----------------------------------------------------------------\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Prints out a greeting."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        String greeting \u003d \"Hello! I\u0027m Duke. \\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        printResponse(greeting);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Prints out an loading error message."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        printResponse(\"Error loading file\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Prints out the error message of an error."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param e The error that occurred."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void showError(Exception e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        printResponse(e.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Indents the given message by 1 tab and adds horizontal borders above and below it."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * @param string The string to print in this format."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    // Wrapper method for printing with horizontal line borders and 1 tab indent"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void printResponse(String string) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        String formatted \u003d String.format(\"%s\\n%s\\n%s\", line, string, line)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                .replaceAll(\"(?m)^\", \"\\t\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        System.out.println(formatted);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     * Prints a horizontal line."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private void showLine() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 50
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 12
    }
  },
  {
    "path": "src/test/java/duke/util/DateFormatterTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class DateFormatterTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void extractTimestampInput_dateString_dateObject() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            SimpleDateFormat sdf \u003d new SimpleDateFormat(\"yyyy-MM-dd hhmm\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            Date expected \u003d sdf.parse(\"2020-10-10 1800\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            Date actual \u003d DateFormatter.extractTimestampInput(\"2020-10-10 1800\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            assertEquals(expected, actual);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } catch (DukeException | ParseException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            fail(\"Exception thrown:\" + e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void extractTimestampInput_invalidDateString_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            Date actual \u003d DateFormatter.extractTimestampInput(\"2020 Oct 10 1021\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            fail(\"Exception not thrown\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            String expectedError \u003d \"Invalid input for date. Given \u0027\" + \"2020 Oct 10 1021\" + \"\u0027, \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                    + \"expecting format yyyy-MM-dd hhmm or yyyy-MM-dd.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            assertEquals(e.getMessage(), expectedError);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void formatDisplay_validDate_validFormat() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            SimpleDateFormat sdf \u003d new SimpleDateFormat(\"yyyy-MM-dd hhmm\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            Date date \u003d sdf.parse(\"2020-10-10 1800\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            String actual \u003d DateFormatter.formatDisplay(date);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            assertEquals(\"10 Oct 2020 18:00\", actual);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            fail(\"Exception thrown:\" + e.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 49
    }
  },
  {
    "path": "src/test/java/duke/util/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void add_ToDo_tasksSizeIsOne() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        tasks.add(new ToDo(\"hello world\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        assertEquals(1, tasks.size());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void get_taskIndex_taskReturned() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        Task task \u003d new ToDo(\"hello world :)\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        assertEquals(task, tasks.get(0));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void get_outOfBoundsIndex_errorThrown() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            Task task \u003d new ToDo(\"hello world :)\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            assertEquals(task, tasks.get(1));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            fail(\"No exception thrown\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            String expected \u003d \"Index 1 out of bounds for length 1\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            assertEquals(expected, e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 39
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "todo off myself"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "deadline die /by next year"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "deadline die /at next year"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "event death /at soon pls"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "event death /by soon pls"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "fake command"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "todo hello world"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 17
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke.Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 2,
      "-": 36
    }
  }
]
