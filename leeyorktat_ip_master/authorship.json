[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    enableAssertions \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "}"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "tasks.withType(JavaCompile) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 27,
      "-": 45
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "# Duke User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "Duke is a Personal Assistant Chatbot that helps you keep track of tasks and gives you reminders, optimised for use via a Command Line Interface (CLI)."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "### 1. Adding a todo: `todo`"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "Adds a todo to your list of tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "Format: `todo \u003cDESCRIPTION\u003e`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "`todo return book`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "`Added this task to your list:`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "`[T][✘] return book`"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "`You now have 1 task(s) in the list.`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "### 2. Adding a deadline task: `deadline`"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "Adds a deadline to your list of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "Format: `deadline \u003cDESCRIPTION\u003e /by \u003cYYYY-MM-DD\u003e`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "`deadline finish assignment /by 2020-10-20`"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "`Added this task to your list:`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "`[D][✘] finish assignment (by: Oct 20 2020)`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "`You now have 1 task(s) in the list.`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "### 3. Adding an event task: `event`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "Adds an event to your list of tasks."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "Format: `event \u003cDESCRIPTION\u003e /at \u003cYYYY-MM-DD\u003e`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "`event attend wedding /at 2020-10-19`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "`Added this task to your list:`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "`[E][✘] attend wedding (at: Oct 19 2020)`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "`You now have 1 task(s) in the list.`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "### 4. Listing all tasks: `list`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "Shows your list of tasks."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "`1: [T][✘] return book`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "`2. [D][✘] finish assignment (by: Oct 20 2020)`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "`3. [E][✘] attend wedding (at: Oct 19 2020)`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "### 5. Marking a task as done: `done`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "Marks a task as done."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "Format: `done \u003cINDEX\u003e`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "`done 2`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "`Nice! I\u0027ve marked this task as done`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "`[D][✓] finish assignment (by: Oct 20 2020)`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "### 6. Finding tasks by keyword: `find`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "Finds tasks whose description contain the keyword."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "Format: `find \u003cKEYWORD\u003e`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "`find book`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "`Here are the matching tasks in your list:`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "`1: [T][✘] return book`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "### 8. Deleting a task: `delete`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "Deletes the specified task."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "Format: `delete \u003cINDEX\u003e`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "`delete 2`"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "`Noted. Removed task:`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "`[D][✓] finish assignment (by: Oct 20 2020)`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "`You now have 2 task(s) in the list.`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "### 9. Exiting the program: `bye`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "### Command Summary"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "Command | Format | Examples"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "------------ | ------------- | -------------"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "todo | `todo \u003cDESCRIPTION\u003e` | `todo return book`"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "deadline | `deadline \u003cDESCRIPTION\u003e /by \u003cYYYY-MM-DD\u003e` | `deadline finish assignment /by 2020-10-20`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "event | `event \u003cDESCRIPTION\u003e /at \u003cYYYY-MM-DD\u003e` | `event attend wedding /at 2020-10-19`"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "list | `list` | "
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "done | `done \u003cINDEX\u003e` | `done 2`"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "find | `find \u003cKEYWORD\u003e` | `find book`"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "delete | `delete \u003cINDEX\u003e` | `delete 2`"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 119,
      "-": 19
    }
  },
  {
    "path": "src/main/java/duke/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " * Represents a command to ask tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    private TaskType type;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Constructs a command to add a todo task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param type Type of the task to be added."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param description Description of the task to be added."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public AddCommand(TaskType type, String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        this.time \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Constructs a command to add a deadline or event task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param type Type of the task to be added."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param description Description of the task to be added."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param time Timing of the task to be added."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public AddCommand(TaskType type, String description, String time) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage store) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        Task newTask \u003d null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                newTask \u003d new ToDo(description);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                LocalDate by \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                newTask \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                LocalDate at \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                newTask \u003d new Event(description, at);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                throw new DukeException(\"I don\u0027t get what you\u0027re saying :(\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        } catch (DateTimeException | DukeException error) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            System.out.println(\"Please provide valid date and time in the following format YYYY-MM-DD\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        assert newTask !\u003d null : \"Task cannot be null\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        taskList.addTask(newTask);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        store.writeFile(taskList);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return ui.showAddition(newTask, taskList);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 71
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " * Represents an executable command received by Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Returns true if command is an exit command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @return True if command is an exit command and false otherwise."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return isExit();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Executes the command and returns the corresponding message to the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param taskList TaskList of the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param ui The Ui instance responsible for interacting with the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param storage The storage instance responsible for loading and storing the tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @return String representation of the response of Duke."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @throws DukeException If command is invalid."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @throws IOException If tasks cannot be saved."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, IOException;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 30
    }
  },
  {
    "path": "src/main/java/duke/CompleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " * Represents a command to complete tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "public class CompleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    private int number;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Constructs a command to complete a task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param number index of the task to be completed."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public CompleteCommand(int number) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        this.number \u003d number;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage store) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        Task task \u003d taskList.get(number);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        task.completeTask();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        store.writeFile(taskList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return ui.showCompletion(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 30
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " * The Deadline class contains the name, completion status and deadline of the task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Constructor of a Deadline object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param by The deadine of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Returns a string representation of a Deadline object to be stored in the storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @return A String representing the code of the task stored in the storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String encode() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return String.format(\"D | %s | %s | %s\", getStatusIcon(), description, dateFormatter.format(by));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Returns a string representation of a Deadline object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @return A String containing the description and completion status of the Deadline object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 43
    }
  },
  {
    "path": "src/main/java/duke/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " * Represents a command to delete tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    private int number;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Constructs a command to delete tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param number Index of the task to be deleted."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public DeleteCommand(int number) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        this.number \u003d number;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage store) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            Task task \u003d taskList.get(number);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            taskList.deleteTask(number);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            store.writeFile(taskList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            return ui.showDeletion(task, taskList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            return \"Please provide a valid index for the task to be deleted\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            return \"Task not found in list\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 36
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " * This control represents a dialog box consisting of "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " * an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Constructs a dialog box with text and display picture."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param text The diaglog text to be stored"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param img The image of the display picture"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Returns a dialog box with the user\u0027s text and display picture"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param text The text of the user"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param image The image of the display picture"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @return DialogBox object"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image image) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return new DialogBox(text, image);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Returns a dialog box with Duke\u0027s text and display picture"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param text The text of Duke"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param image The image of the display picture"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @return DialogBox object"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image image) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        var db \u003d new DialogBox(text, image);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 82
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " * Represents the driver class to run Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    private Storage store;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        this(Storage.DEFAULT_FILEPATH);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Creates a new Duke chatbot that saves and loads tasks from the given filePath."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param filePath The file path for the storage."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        this.store \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            this.taskList \u003d new TaskList(store.loadFile());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Returns a String representation of all the reminders."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @return The reminders of the user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @throws IOException if file is not laoded properly."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @throws DukeException if reminder command is not executed properly."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String giveReminders() throws IOException, DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        Command start \u003d Parser.giveReminders();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return start.execute(taskList, ui, store);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Returns a String respresentation of the response of Duke."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param input The user input message."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @return The response of Duke."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            assert !command.equals(\"\") : \"Command cannot be empty\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            return command.execute(taskList, ui, store);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            return ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Greets the user with a welcome message."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @return A welcome message with reminders."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @throws IOException if file is not laoded properly."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @throws DukeException if reminder command is not executed properly."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String showWelcomeMessage() throws IOException, DukeException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return this.ui.greetUser() + \"\\n\" + giveReminders();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 71,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " * Represents exceptions specific to Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Constructs a duke exception"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param error The error message"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 16
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " * The Event class contains the name, completion status and timing of the task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Constructor for a Event object"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param description The description of the task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param at The timing of the task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Returns a string representation of a Event object to be stored in the storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @return A String representing the code of the task stored in the storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String encode() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return String.format(\"E | %s | %s | %s\", getStatusIcon(), description , dateFormatter.format(at));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Returns a string representation of a Event object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @return A String containing the description and completion status of the Event object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 43
    }
  },
  {
    "path": "src/main/java/duke/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " * Represents a command to exit Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage store) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return ui.exit();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 17
    }
  },
  {
    "path": "src/main/java/duke/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " * Represents a command to find tasks with matching keyword."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Constructs a find command to find tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param keyword The matching keyword of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        for (Task task : taskList.getList()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            if (task.getName().contains(this.keyword)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                list.add(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            return \"No tasks matching the keyword\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            String matchingResults \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                matchingResults \u003d matchingResults + ((i + 1) + \": \" + list.get(i)) + \"\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            return matchingResults;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 44
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " * A launcher class to load class path."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 12
    }
  },
  {
    "path": "src/main/java/duke/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " * Represents a command to list tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage store) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        if (taskList.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            return ui.showEmptyList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            String message \u003d \"\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                message \u003d message + (i + 1) + \": \" + taskList.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            return message;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 25
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * A duke instance for Duke to run."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().showWelcomeMessage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 35
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bo-chan.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Initialises the main window."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Sets up Duke."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param d The Duke object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Greets the user with a welcome message."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @throws IOException if tasks are not loaded properly."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @throws DukeException if command is not executed properly."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public void showWelcomeMessage() throws IOException, DukeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        String message \u003d duke.showWelcomeMessage();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                DialogBox.getDukeDialog(message, dukeImage)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 79
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " * The Parser class deals with making sense of the user command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public static Command giveReminders() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return new ReminderCommand();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Reads the user input and determines which command to execute."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param command User input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @return Command The type of command to execute."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        } else if (command.matches(\"^done\\\\s+\\\\d+$\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            int number \u003d Integer.parseInt(command.split(\"\\\\s+\")[1]) - 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            return new CompleteCommand(number);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        } else if (command.equals(\"todo\") || command.startsWith(\"todo \")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            if (command.length() \u003c\u003d 5 || command.substring(5).trim().isEmpty()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                throw new DukeException(\"Please use the format: todo (DESCRIPTION)\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            String description \u003d command.substring(5);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            return new AddCommand(TaskType.TODO, description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        } else if (command.equals(\"deadline\") || command.startsWith(\"deadline \")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            if (command.length() \u003c\u003d 9 || command.substring(9).trim().isEmpty()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                throw new DukeException(\"Please use the format: deadline (DESCRIPTION) /by (YYYY-MM-DD)\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            String[] split \u003d command.substring(9).split(\"/by \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            if (split.length !\u003d 2) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                throw new DukeException(\"Please use the format: event (DESCRIPTION) /at (YYYY-MM-DD)\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            String description \u003d split[0];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            String by \u003d split[1];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            return new AddCommand(TaskType.DEADLINE, description, by);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        } else if (command.equals(\"event\") || command.startsWith(\"event \")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            if (command.length() \u003c\u003d 6 || command.substring(6).trim().isEmpty()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                throw new DukeException(\"Please use the format: event (DESCRIPTION) /at (YYYY-MM-DD)\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            String[] split \u003d command.substring(6).split(\"/at \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            if (split.length !\u003d 2) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                throw new DukeException(\"Please use the format: event (DESCRIPTION) /at (YYYY-MM-DD)\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            String description \u003d split[0];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            String at \u003d split[1];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            return new AddCommand(TaskType.EVENT, description, at);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        } else if (command.equals(\"delete\") || command.startsWith(\"delete \")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            if (command.length() \u003c 8 || command.substring(7).trim().isEmpty()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                throw new DukeException(\"Which task do you want to delete?\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            String item \u003d command.substring(7).trim();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            int number \u003d Integer.parseInt(item) - 1;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            return new DeleteCommand(number);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        } else if (command.equals(\"find\") || command.startsWith(\"find \")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            if (command.length() \u003c 6 || command.substring(5).trim().isEmpty()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                throw new DukeException(\"Which task do you want to find?\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            String keyword \u003d command.substring(5).trim();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            return new FindCommand(keyword);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :(\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 72
    }
  },
  {
    "path": "src/main/java/duke/ReminderCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " * Represents a command to remind the user of overdue tasks and current tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "public class ReminderCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Checks if the deadline task is overdue."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param deadline The deadline task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param today The time of the LocalDate object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @return a boolean object indicating true if not overdue and false otherwise"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public boolean checkDeadlineOverdue(Deadline deadline, LocalDate today) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return (deadline.by.isAfter(today) || deadline.by.isEqual(today));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Checks if the event task is overdue."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param event The event task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param today The time of the LocalDate object"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @return a boolean object indicating true if not overdue and false otherwise"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public boolean checkEventOverdue(Event event, LocalDate today) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return (event.at.isAfter(today) || event.at.isEqual(today));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage store) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        LocalDate today \u003d LocalDate.now();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        String overdue \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        String notOverdue \u003d \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        for (Task task : taskList.getList()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                if (checkDeadlineOverdue((Deadline) task, today)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                    if (task.isDone) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                        task.completeTask();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                    notOverdue +\u003d task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                    if (task.isDone) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                        task.completeTask();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                    overdue +\u003d task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            if (task instanceof Event) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                if (checkEventOverdue((Event) task, today)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                    if (task.isDone) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                        task.completeTask();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                    notOverdue +\u003d task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                    if (task.isDone) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                        task.completeTask();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                    overdue +\u003d task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                if (task.isDone) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                    task.completeTask();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                notOverdue +\u003d task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return ui.showOverdue() + overdue + ui.showNotOverdue() + notOverdue;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 73
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " * The Storage class deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public static final String DEFAULT_FILEPATH \u003d \"taskmanager.txt\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Constructor for a Storage object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param filePath filePath of the file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        this.file \u003d Path.of(System.getProperty(\"user.dir\")).resolve(filePath).toFile();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Loads the data of the file given and returns it in an ArrayList."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @return An ArrayList of tasks stored in the file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @throws DukeException if file is not found."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public ArrayList\u003cTask\u003e loadFile() throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                String str \u003d sc.nextLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                String[] command \u003d str.split(\" \\\\| \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                switch (command[0]) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                    task \u003d new ToDo(command[2]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                    LocalDate by \u003d LocalDate.parse(command[3],"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                            DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                    task \u003d new Deadline(command[2], by);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                    LocalDate at \u003d LocalDate.parse(command[3],"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                            DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                    task \u003d new Event(command[2], at);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                    throw new DukeException(\"Failed to load tasks\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                if (command[1].equals(\"✓\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                    task.completeTask();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                taskList.add(task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            sc.close();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            throw new DukeException(\"File not found\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            throw new DukeException(\"Failed to load tasks\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Updates the data file to store all the Tasks."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param taskList A TaskList of the tasks."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @throws DukeException if IOException occurs."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public void writeFile(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            new PrintWriter(file).close();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            FileWriter writer \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            for (Task task : taskList.getList()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                writer.write(task.encode());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                writer.write(System.lineSeparator());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            throw new DukeException(\"Failed to save tasks.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 95
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " * Represents a task given by the user, containing the name and the completion status of the task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Creates a new task with the specified description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Gets the string of the completion status of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @return A string of the status icon."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Changes the completion status of the task to be done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public void completeTask() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Returns a string representation of the Task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @return A String containing the description and completion status of the task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Returns a string representation of the Task stored in the storage."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @return A String representing the code of the task stored in the storage."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public abstract String encode();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 56
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " * The TaskList contains the list of tasks and operations to modify the list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Constructor for a TaskList object with an existing list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param taskList An arraylist of Tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Constructor for a TaskList object with a new list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Gets the list in the TaskList object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @return An arraylist containing all the Tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Retrieves a task from the TaskList object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param number index of the task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @return the specified Task object."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @throws DukeException if index is out of bounds."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public Task get(int number) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            return taskList.get(number);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            throw new DukeException(\"Please provide valid index of the task\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Adds a new task to the tasklist."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param task A task object."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Changes the completion status of the Task to completed."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param number index of the Task to be completed."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public void finishTask(int number) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        Task task \u003d taskList.get(number);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        task.completeTask();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" + task);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Removes the task in the tasklist."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param number index of the task to be removed."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public Task deleteTask(int number) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        Task task \u003d taskList.get(number);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        taskList.remove(task);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Gets the size of the tasklist object."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @return integer of the size of the tasklist object."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 90
    }
  },
  {
    "path": "src/main/java/duke/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    TODO, DEADLINE, EVENT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 5
    }
  },
  {
    "path": "src/main/java/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " * The ToDo class contains the name and completion status of the task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Constructor of a ToDo object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Returns a string representation of a ToDo object to be stored in the storage."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @return A String representing the code of the task stored in the storage."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String encode() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return String.format(\"T | %s | %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Returns a string representation of a ToDo object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @return A String containing the description and completion status of the ToDo object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 36
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " * The Ui class deals with the interactions with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Constructor for a Ui object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Greets the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String greetUser() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return (\"Hello, I\u0027m Bo-Chan!\\n\" + \"How may I help you?\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Says bye to the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String exit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return \"Bye, see you soon!\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Scans the input of the user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @return a String object of the user input."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Prints the message when a task is successfully added into the tasklist."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param task Task added into the tasklist."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param taskList tasklist of the user."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String showAddition(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return (\"Added this task to your list:\\n\" + task + \"\\n\" + showTaskTotal(taskList));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Prints the message when a task is successfully completed."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param task Task completed."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String showCompletion(Task task) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return (\"Nice! I\u0027ve marked this task as done: \\n\" + task);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Prints the message when a task is successfully deleted."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param task Task deleted."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param taskList tasklist of the user."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String showDeletion(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return (\"Noted. Removed task: \\n\" + task + \"\\n\" + showTaskTotal(taskList));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Prints the message when the list is empty."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @return a String object of an empty list message."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String showEmptyList() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return \"No tasks in your list yet\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Prints the message when there is an error loading the user\u0027s file."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @return a String object of a loading error message."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return \"Error loading files\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Prints the error message."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param message error message."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @return a String object of a error message."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String showError(String message) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Prints the message informing the user of the number of tasks in list."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @param taskList tasklist of the user."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @return a String object of the number of tasks in list."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String showTaskTotal(TaskList taskList) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        int total \u003d taskList.getSize();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return (\"You now have \" + Integer.toString(total) + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Prints a message on current tasks that are not overdue."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @return a String object of the current tasks that are not overdue."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String showNotOverdue() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return (\"These are your current tasks:\" + \"\\n\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * Prints a message on current tasks that are overdue."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     * @return a String object of the current tasks that are overdue."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public String showOverdue() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        return (\"These are your overdue tasks:\" + \"\\n\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 126
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 17
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 21
    }
  },
  {
    "path": "src/test/java/duke/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public void testStringConversionAndComplete() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        Deadline task \u003d new Deadline(\"return book \", LocalDate.parse(\"2019-10-13\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        assertEquals(\"[D][✘] return book (by: Oct 13 2019)\", task.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        task.completeTask();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        assertEquals(\"[D][✓] return book (by: Oct 13 2019)\", task.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 17
    }
  },
  {
    "path": "src/test/java/duke/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public void testStringConversionAndComplete() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        Event task \u003d new Event(\"beach party \", LocalDate.parse(\"2020-12-03\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        assertEquals(\"[E][✘] beach party (at: Dec 03 2020)\", task.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        task.completeTask();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        assertEquals(\"[E][✓] beach party (at: Dec 03 2020)\", task.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 17
    }
  },
  {
    "path": "src/test/java/duke/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    public void testStringConversionAndComplete() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        ToDo task \u003d new ToDo(\"join sports club\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        assertEquals(\"[T][✘] join sports club\", task.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        task.completeTask();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "        assertEquals(\"[T][✓] join sports club\", task.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "todo cs2107 assignment"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "deadline cs2100 lab /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "event cs2101 project meeting /at Tues 10-12pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 4,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "C:\\Users\\leeyo\\OneDrive\\Desktop\\ip\\src\\main\\java\\Deadline.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "C:\\Users\\leeyo\\OneDrive\\Desktop\\ip\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "C:\\Users\\leeyo\\OneDrive\\Desktop\\ip\\src\\main\\java\\Event.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "C:\\Users\\leeyo\\OneDrive\\Desktop\\ip\\src\\main\\java\\Task.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyorktat"
        },
        "content": "C:\\Users\\leeyo\\OneDrive\\Desktop\\ip\\src\\main\\java\\ToDo.java"
      }
    ],
    "authorContributionMap": {
      "leeyorktat": 5
    }
  }
]
