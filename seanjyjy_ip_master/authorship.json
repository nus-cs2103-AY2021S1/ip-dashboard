[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "-": 24,
      "seanjyjy": 2
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        duke.echo();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanjyjy": 8
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        storage.retrieve(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    // activate the duke.Duke Bot"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public void echo() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        ui.greetings();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                String input \u003d ui.readCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                isExit \u003d c.getExitStatus();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                ui.printException(e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 1,
      "seanjyjy": 39
    }
  },
  {
    "path": "src/main/java/duke/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.exception.InvalidFormatDateException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.exception.InvalidFormatDeadlineException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.exception.InvalidFormatEventException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String ADDED_NOTIFICATION \u003d \"Got it. I\u0027ve added this duke.task:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public AddCommand(String[] inputArr) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        super(inputArr);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            throws InvalidFormatDeadlineException, InvalidFormatEventException, InvalidFormatDateException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        addTask(inputArr[0], inputArr[1], ui, tasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    // adding the duke.task into the list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private void addTask(String type, String message, Ui ui, TaskList tasks)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            throws InvalidFormatDeadlineException, InvalidFormatEventException, InvalidFormatDateException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        String[] dateTime;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        if (Parser.isTODO(type)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            task \u003d new ToDo(message);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        } else if (Parser.isDeadline(type)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            dateTime \u003d message.split(\" /by \", 2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            // checking if the input is valid"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            if (dateTime.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                throw new InvalidFormatDeadlineException();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            task \u003d new Deadline(dateTime[0], Parser.formatDateTime(dateTime[1]));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        } else if (Parser.isEvent(type)){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            dateTime \u003d message.split(\" /at \", 2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            // checking if the input is valid"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            if (dateTime.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                throw new InvalidFormatEventException();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            task \u003d new Event(dateTime[0], Parser.formatDateTime(dateTime[1]));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        ui.messageFormatter(() -\u003e {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            System.out.println(ADDED_NOTIFICATION);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            System.out.println(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            printNumTask(tasks);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        });"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanjyjy": 60
    }
  },
  {
    "path": "src/main/java/duke/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public ByeCommand(String[] inputArr) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        super(inputArr);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        ui.goodBye();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        storage.record(tasks);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        setExitStatus(true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanjyjy": 18
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.exception.InvalidFormatDateException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.exception.InvalidFormatDeadlineException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.exception.InvalidFormatEventException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.exception.UnknownCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String KEYWORD_ERR \u003d \"Sorry something went wrong. duke.Duke crashed X.X\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private boolean isExit \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    protected String[] inputArr;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    Command(String[] inputArr) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        this.inputArr \u003d inputArr;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public boolean getExitStatus() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public void setExitStatus(boolean status) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        isExit \u003d status;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public static void printErr() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        System.out.println(KEYWORD_ERR);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public void printNumTask(TaskList tasks) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        System.out.print(String.format(\"Now you have %d tasks in the list.\\n\", tasks.size()));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            UnknownCommandException, InvalidFormatDeadlineException, InvalidFormatEventException,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            InvalidFormatDateException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        throw new UnknownCommandException();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanjyjy": 44
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import static java.lang.Integer.parseInt;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String INVALID_INPUT \u003d \"Invalid input for delete\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String DELETE_NOTIFICATION \u003d \"Noted. I\u0027ve removed this duke.task:\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public DeleteCommand(String[] inputArr) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        super(inputArr);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        deleteTask(parseInt(inputArr[1]),ui,tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private void deleteTask(int pos, Ui ui, TaskList tasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        if (pos \u003c\u003d 0 || pos \u003e tasks.size()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            ui.messageFormatter(() -\u003e System.out.println(INVALID_INPUT));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            Task task \u003d tasks.get(pos - 1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            tasks.remove(pos - 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            ui.messageFormatter(() -\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                System.out.println(DELETE_NOTIFICATION);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                System.out.println(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                printNumTask(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            });"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanjyjy": 38
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import static java.lang.Integer.parseInt;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public DoneCommand(String[] inputArr) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        super(inputArr);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        marking(parseInt(inputArr[1]), tasks.size(), ui, tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    // marking the duke.task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private void marking(int num, int size, Ui ui, TaskList tasks) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        if (num \u003c\u003d 0 || size \u003c num) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            ui.messageFormatter(() -\u003e System.out.println(\"Invalid input for done\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            Task task \u003d tasks.get(num - 1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            ui.messageFormatter(() -\u003e task.markAsDone());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanjyjy": 30
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String EMPTY_MSG \u003d \"Your list is empty!!!\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String SHOW_TASK \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public ListCommand(String[] inputArr) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        super(inputArr);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        showListTasks(tasks, ui);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    // Printing out the items in the list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private void showListTasks(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            ui.messageFormatter(() -\u003e System.out.println(EMPTY_MSG));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            ui.messageFormatter(() -\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                System.out.println(SHOW_TASK);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                for(int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                    System.out.println(i + \". \" + tasks.get(i - 1));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            });"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanjyjy": 34
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanjyjy": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyTextException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "public class EmptyTextException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public EmptyTextException(String text) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        super(String.format(\" ☹ OOPS! You must fill in the text for %s\", text));"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanjyjy": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidFormatByeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "public class InvalidFormatByeException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public InvalidFormatByeException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        super(\" ☹ OOPS! Did you mean bye? (Note: There should not be anything behind bye)\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanjyjy": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidFormatDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "public class InvalidFormatDateException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public InvalidFormatDateException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        super(\" ☹ OOPS! A proper date format would be YYYY-MM-DD HHMM (e.g. 2019-10-15 1600) or \" +"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                \"YYYY-MM-DD (e.g. 2019-10-15)\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanjyjy": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidFormatDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "public class InvalidFormatDeadlineException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public InvalidFormatDeadlineException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        super(\" ☹ OOPS! A proper deadline format would be like, e.g. deadline \\\u0027duke.task name\\\u0027 /by \\\u0027YYYY-MM-DD HHMM or \" +"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                \"YYYY-MM-DD\\\u0027\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanjyjy": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidFormatDeleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "public class InvalidFormatDeleteException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public InvalidFormatDeleteException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        super(\" ☹ OOPS! A proper delete format would be like +\" +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                \" e.g. delete \\\u0027an integer that is between 1(if list is not empty) to the number of items in the list\\\u0027\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanjyjy": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidFormatDoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "public class InvalidFormatDoneException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public InvalidFormatDoneException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        super(\" ☹ OOPS! A proper done format would be like +\" +"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                \" e.g. done \\\u0027an integer that is between 1(if list is not empty) to the number of items in the list\\\u0027\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanjyjy": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidFormatEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "public class InvalidFormatEventException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public InvalidFormatEventException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        super(\" ☹ OOPS! A proper event format would be like, e.g. event \\\u0027event name\\\u0027 /at \\\u0027YYYY-MM-DD HHMM or \" +"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                \"YYYY-MM-DD\\\u0027\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanjyjy": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidFormatListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "public class InvalidFormatListException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public InvalidFormatListException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        super(\" ☹ OOPS! Did you mean list? (Note: There should not be anything behind list)\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanjyjy": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String unsureString \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String listingString \u003d \"Here are the list of duke.commands available:\\n\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String s1 \u003d \"1. list\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String s2 \u003d \"2. bye\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String s3 \u003d \"3. todo \\\u0027duke.task name\\\u0027 (e.g. todo duke.task 1)\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String s4 \u003d"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            \"4. deadline \\\u0027duke.task name\\\u0027 /by \\\u0027any date format\\\u0027 (e.g. deadline project /by YYYY-MM-DD HHMM or\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                    \" YYYY-MM-DD)\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String s5 \u003d"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            \"5. event \\\u0027event name\\\u0027 /at \\\u0027any date format\\\u0027 (e.g. event project /at YYYY-MM-DD HHMM or YYYY-MM-DD)\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String s6 \u003d \"6. delete ___ (e.g. delete 1)  *Note that it should be a value more than 0*\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String s7 \u003d \"7. done ___ (e.g. done 1)  *Note that it should be a value more than 0*\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public UnknownCommandException() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        super(unsureString + listingString + s1 + s2 + s3 + s4 + s5 + s6 + s7);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanjyjy": 21
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import static java.lang.Integer.parseInt;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String KEYWORD_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String KEYWORD_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String KEYWORD_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String KEYWORD_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String KEYWORD_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String KEYWORD_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String KEYWORD_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static boolean isNumber(String str) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            int num \u003d parseInt(str);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public static boolean isTODO(String type) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        return type.equals(KEYWORD_TODO);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public static boolean isDeadline(String type) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        return type.equals(KEYWORD_DEADLINE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public static boolean isEvent(String type) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        return type.equals(KEYWORD_EVENT);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static boolean isValidDone(String type) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        return type.equals(KEYWORD_DONE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static boolean isEnd(String type) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        return type.equals(KEYWORD_BYE);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static boolean isList(String type) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        return type.equals(KEYWORD_LIST);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static boolean isTask(String type) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        return isDeadline(type) || isTODO(type) || isEvent(type);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static boolean isDelete(String type) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        return type.equals(KEYWORD_DELETE);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public static LocalDateTime formatDateTime(String s) throws InvalidFormatDateException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        String[] dateFormat \u003d s.split(\" \",2);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        String[] date \u003d dateFormat[0].split(\"-\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        String time;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        if (dateFormat.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            // case where he nvr input in the time"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            time \u003d \"2359\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            if (date.length !\u003d 3) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                throw new InvalidFormatDateException();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            time \u003d dateFormat[1];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            // case where he inputs in the time"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            if (date.length !\u003d 3 || time.length() !\u003d 4) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                throw new InvalidFormatDateException();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            int year \u003d Integer.parseInt(date[0]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            int month \u003d Integer.parseInt(date[1]);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            int day \u003d Integer.parseInt(date[2]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            int hour \u003d Integer.parseInt(time.substring(0, 2));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            int minute \u003d Integer.parseInt(time.substring(2));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            return LocalDateTime.of(year, month, day, hour, minute);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        } catch (DateTimeException | NumberFormatException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            throw new InvalidFormatDateException();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public static Command parse(String s) throws UnknownCommandException, InvalidFormatByeException,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            InvalidFormatListException, InvalidFormatDoneException, EmptyTextException, InvalidFormatDeleteException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        String[] inputArr \u003d s.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        inputArr[0] \u003d inputArr[0].toLowerCase();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        if (isEnd(inputArr[0])) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            if (inputArr.length !\u003d 1) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                throw new InvalidFormatByeException();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            return new ByeCommand(inputArr);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        } else if (isList(inputArr[0])) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            if (inputArr.length !\u003d 1) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                throw new InvalidFormatListException();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            return new ListCommand(inputArr);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        } else if (isValidDone(inputArr[0])) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            // checking if the input is valid"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            if (inputArr.length \u003d\u003d 1 || !isNumber(inputArr[1])) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                throw new InvalidFormatDoneException();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            return new DoneCommand(inputArr);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        } else if (isTask(inputArr[0])) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            // checking if the input is valid"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            if (inputArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                throw new EmptyTextException(inputArr[0]);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            return new AddCommand(inputArr);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        } else if (isDelete(inputArr[0])) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            // checking if the input is valid"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            if (inputArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                throw new InvalidFormatDeleteException();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            return new DeleteCommand(inputArr);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            throw new UnknownCommandException();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanjyjy": 124
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    // might use it at the end"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String CREATE_FILEPATH \u003d \"Creating file path ... ... ... ... ... ... ... ... ... ...\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String CREATE_CSV \u003d \"Creating file todoList.csv ... ... ... ... ... ... ... ...\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String SAVE_INFO \u003d \"Saving information ... ... ... ... ... ... ... ... ... ...\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String SAVED \u003d \"Saved  ... ... ... ... ... ... ... ... ... ... ... ... ... \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private boolean isTaskDone(String s) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        return !s.equals(\"0\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private void createFilePath(Path path) throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        //System.out.println(String.format(\"%s does not exist...\", path.toString()));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        Files.createDirectories(path);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        //System.out.println(CREATE_FILEPATH);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private void createCSV(File file) throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        //System.out.println(CREATE_CSV);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        file.createNewFile();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private void savingFileInfo(File file, TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        // System.out.println(SAVE_INFO);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            bufferedWriter.write(tasks.get(i).formatStyling());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        //System.out.println(SAVED);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        bufferedWriter.close();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    // when the user exits, records the data back into the users file"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public void record(TaskList tasks) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        String dir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        Path path \u003d Paths.get(dir, \"duke.Duke\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            //System.out.println(String.format(\"Saving file information into %s\", path.toString()));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            // checking if path exist"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            if (!Files.exists(path)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                createFilePath(path);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            Path filePath \u003d Paths.get(dir, \"duke.Duke\", \"todoList.csv\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            File file \u003d filePath.toFile();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            // checking if file exist"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                createCSV(file);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            // saving file"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            savingFileInfo(file, tasks);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            Command.printErr();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    // retrieves the users data and load into the system"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public void retrieve(TaskList tasks) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        String dir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        Path path \u003d Paths.get(dir, \"duke.Duke\", \"todoList.csv\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        if (path.toFile().exists()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                BufferedReader bufferedReader \u003d Files.newBufferedReader(path);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                String line \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                while (line !\u003d null) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                    String[] info \u003d line.split(\",\", 4);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                    // todo format type description done"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                    // event format type at description done"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                    // deadline format type by description done"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                    if (Parser.isTODO(info[0])) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                        tasks.add(new ToDo(info[1], isTaskDone(info[2])));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                    } else if (Parser.isEvent(info[0])) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                        tasks.add(new Event(info[2], info[1], isTaskDone(info[3])));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                    } else if (Parser.isDeadline(info[0])) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                        tasks.add(new Deadline(info[2], info[1], isTaskDone(info[3])));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                    line \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "                Command.printErr();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanjyjy": 99
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private final LocalDateTime by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final DateTimeFormatter FormatDateTime \u003d DateTimeFormatter.ofPattern(\"EEEE, dd MMM yyyy, h:mma\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public Deadline(String description, String by, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        this.by \u003d LocalDateTime.parse(by);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public String formatStyling() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        return String.format(\"deadline,%s%s\", by, super.formatStyling());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(FormatDateTime) + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanjyjy": 27
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private final LocalDateTime at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final DateTimeFormatter FormatDateTime \u003d DateTimeFormatter.ofPattern(\"EEEE, dd MMM yyyy, h:mma\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public Event(String description, LocalDateTime at) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public Event(String description, String at, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        this.at \u003d LocalDateTime.parse(at);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public String formatStyling() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        return String.format(\"event,%s%s\", at, super.formatStyling());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at.format(FormatDateTime) + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanjyjy": 28
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author Damith C. Rajapakse"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    //Reused from https://nus-cs2103-ay2021s1.github.io/website/schedule/week2/project.html with minor modifications"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        //return tick or X symbols"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            System.out.println(\"This duke.task has already been marked!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this duke.task as done:\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            System.out.println(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public String formatStyling() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        return String.format(\",%s,%d\\n\", description, getTaskStatus());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private int getTaskStatus() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        return isDone ? 1 : 0;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "seanjyjy": 30
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public String formatStyling() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        return String.format(\"todo%s\", super.formatStyling());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanjyjy": 21
    }
  },
  {
    "path": "src/main/java/duke/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private ArrayList\u003cTask\u003e listTasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        listTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        return listTasks.size();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public Task get(int n) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        return listTasks.get(n);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public void add(Task t) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        listTasks.add(t);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public void remove(int n) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        listTasks.remove(n);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanjyjy": 29
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String spacer \u003d \"               \";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String logo \u003d spacer + \" ____        _        \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            + spacer + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            + spacer + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            + spacer + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            + spacer + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String LINE \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String OPENING_MSG \u003d \" *** Opening and loading relevant documents into duke.Duke ***\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String GOODBYE_MSG \u003d \"Bye ^.^, Hope to see you again soon!!!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String HELLO_DUKE \u003d \"Hello! I\u0027m duke.Duke ^.^\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private static final String QUESTION \u003d \"What can I do for you?\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    private final Scanner sc;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public void greetings() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        messageFormatter(() -\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            System.out.println(OPENING_MSG);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            System.out.println(logo);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        });"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        messageFormatter(() -\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            System.out.println(HELLO_DUKE);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "            System.out.println(QUESTION);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        });"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public void goodBye() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        messageFormatter(() -\u003e System.out.println(GOODBYE_MSG));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public void printException(String msg) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        messageFormatter(() -\u003e System.out.println(msg));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    // Formatter to format any message. Easily customizable"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public void messageFormatter(Runnable func) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        func.run();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seanjyjy": 55
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "blah"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "todo duke.task 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "toDo duke.task 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "deadline duke.task 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "deadline finish this project /by today 2:00am"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "deadline finish this project /by 2020-08-23 0400"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "deadline finish this project /by 2020-08-23"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "deadline finish this project2 /at today 2:01am"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "event duke.task 4"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "event finish this project /at 2020-08-23 0400"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "event finish this project /at 2020-08-23"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "event project meeting /by Wednesday 3-4pm"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "list 2"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "bye 2"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "blah"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "seanjyjy": 31
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "REM run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "seanjyjy": 3
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "# run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 34,
      "seanjyjy": 8
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "../src/main/java/Main.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "../src/main/java/duke/ui/Ui.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "../src/main/java/duke/parser/Parser.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "../src/main/java/duke/storage/Storage.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "../src/main/java/duke/tasklist/TaskList.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "../src/main/java/duke/task/Event.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "../src/main/java/duke/task/Task.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "../src/main/java/duke/task/Deadline.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "../src/main/java/duke/task/ToDo.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "../src/main/java/duke/commands/ByeCommand.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "../src/main/java/duke/commands/DeleteCommand.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "../src/main/java/duke/commands/ListCommand.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "../src/main/java/duke/commands/Command.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "../src/main/java/duke/commands/AddCommand.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "../src/main/java/duke/commands/DoneCommand.java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "../src/main/java/duke/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "../src/main/java/duke/exception/InvalidFormatListException.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "../src/main/java/duke/exception/InvalidFormatByeException.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "../src/main/java/duke/exception/EmptyTextException.java"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "../src/main/java/duke/exception/InvalidFormatDoneException.java"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "../src/main/java/duke/exception/InvalidFormatDeleteException.java"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "../src/main/java/duke/exception/InvalidFormatDeadlineException.java"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "../src/main/java/duke/exception/InvalidFormatEventException.java"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "../src/main/java/duke/exception/InvalidFormatDateException.java"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "../src/main/java/duke/exception/UnknownCommandException.java"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seanjyjy"
        },
        "content": "../src/main/java/duke/exception/DukeException.java"
      }
    ],
    "authorContributionMap": {
      "seanjyjy": 26
    }
  }
]
