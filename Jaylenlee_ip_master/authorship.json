[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "import Exception.InvalidCommandException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "import Exception.EmptyActionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "import Exception.InvalidActionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "import Task.DeadlineTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "import Task.EventTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "import Task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "import Task.ToDoTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "import java.util.function.BiConsumer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        introduction();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        Scanner sc  \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        interact(sc);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    public static void introduction() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        String greeting \u003d \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                + \"     Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                + \"     What can I do for you?\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                + \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    public static HashMap\u003cString, BiConsumer\u003cString, List\u003cTask\u003e\u003e\u003e setUp() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        HashMap\u003cString, BiConsumer\u003cString, List\u003cTask\u003e\u003e\u003e map \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        map.put(\"list\", (command, list) -\u003e listCommand(list));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        map.put(\"done\", (command, list) -\u003e doneCommand(list, command));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        map.put(\"todo\", (command, list) -\u003e toDoCommand(list, command));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        map.put(\"deadline\", (command, list) -\u003e deadlineCommand(list, command));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        map.put(\"event\", (command, list) -\u003e eventCommand(list, command));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        map.put(\"delete\",(command, list) -\u003e deleteCommand(list, command));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        return map;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    public static void interact(Scanner sc) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        HashMap\u003cString, BiConsumer\u003cString, List\u003cTask\u003e\u003e\u003e map \u003d setUp();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        while (!command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            BiConsumer\u003cString, List\u003cTask\u003e\u003e action \u003d  map.get(command.replaceAll(\" .*\", \"\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                if (action \u003d\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                    throw new InvalidCommandException();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                    action.accept(command, list);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            } catch (DukeException e){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                + \"     Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                + \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        );"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    public static void addCommand(List\u003cTask\u003e list, String command) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        list.add(new Task(command));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                + \"     added: \""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                + command"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                + \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        );"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    public static void listCommand(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        System.out.print(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        System.out.print(\"     Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        for(int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            System.out.println(\"     \" + i + \".\" + list.get(i - 1));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    public static void doneCommand(List\u003cTask\u003e list, String command) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            int length  \u003d command.length();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            if (length \u003c 5) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                throw new EmptyActionException(); // only \"done\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                    String num \u003d command.substring(5);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                    int index \u003d Integer.parseInt(num);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                    if (index \u003d\u003d 0 || index \u003e list.size()) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                        throw new InvalidActionException(); // \"done 0\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                    list.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                            + \"     Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                            + \"     \""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                            + list.get(index - 1)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                            + \"\\n\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                            + \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                    );"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                    throw new InvalidActionException(); // \"done 1A\" etc"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    public static void toDoCommand(List\u003cTask\u003e list, String command) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            int spaceIndex \u003d command.indexOf(\" \");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            if (spaceIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                throw new EmptyActionException(); // \"todo\""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            String action \u003d command.substring(spaceIndex + 1);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            if (action.toLowerCase().contains(\"/by\") || action.toLowerCase().contains(\"/at\")) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                throw new InvalidActionException(); // \"todo borrow book /by Sunday\" etc"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            } else if (action.replaceAll(\" \", \"\").equals(\"\")) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                throw new EmptyActionException(); // \"todo     \""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                Task task \u003d new ToDoTask(command.substring(spaceIndex + 1));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                list.add(task);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                        + \"     Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                        + \"     \""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                        + task"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                        + \"\\n\""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                        + \"     Now you have \""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                        + list.size()"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                        + \" task(s) in the list.\\n\""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                        + \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                );"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    public static void deadlineCommand(List\u003cTask\u003e list, String command) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            int spaceIndex \u003d command.indexOf(\" \");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            int slashIndex \u003d command.indexOf(\"/by\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            if (spaceIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                throw new EmptyActionException(); // \"deadline\""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            } else if (slashIndex \u003d\u003d -1 || spaceIndex + 1 \u003d\u003d slashIndex || slashIndex + 4 \u003e command.length()) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                throw new InvalidActionException(); // \"deadline project submission\", \"deadline /by Sunday\", \"deadline return book /by\""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                String description \u003d command.substring(spaceIndex + 1, slashIndex - 1);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                String time \u003d command.substring(slashIndex + 4);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                Task task \u003d new DeadlineTask(description, time);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                list.add(task);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                        + \"     Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                        + \"     \""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                        + task"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                        + \"\\n\""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                        + \"     Now you have \""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                        + list.size()"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                        + \" task(s) in the list.\\n\""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                        + \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                );"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    public static void eventCommand(List\u003cTask\u003e list, String command) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            int spaceIndex \u003d command.indexOf(\" \");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            int slashIndex \u003d command.indexOf(\"/at\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            if (spaceIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                throw new EmptyActionException(); // \"event\""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            } else if (slashIndex \u003d\u003d -1 || spaceIndex + 1 \u003d\u003d slashIndex || slashIndex + 4 \u003e command.length()) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                throw new InvalidActionException(); // \"event project submission\", \"event /at 1-2pm\", \"deadline meeting /at\""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                String description \u003d command.substring(spaceIndex + 1, slashIndex - 1);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                String time \u003d command.substring(slashIndex + 4);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                Task task \u003d new EventTask(description, time);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                list.add(task);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                        + \"     Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                        + \"     \""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                        + task"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                        + \"\\n\""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                        + \"     Now you have \""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                        + list.size()"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                        + \" task(s) in the list.\\n\""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                        + \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                );"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    public static void deleteCommand(List\u003cTask\u003e list, String command) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            int length  \u003d command.length();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            if (length \u003c 7) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                throw new EmptyActionException(); // only \"delete\""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                    String num \u003d command.substring(7);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                    int index \u003d Integer.parseInt(num);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                    if (index \u003d\u003d 0 || index \u003e list.size()) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                        throw new InvalidActionException(); // \"delete 0\""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                    Task task \u003d list.get(index - 1);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                    list.remove(index - 1);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                            + \"     Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                            + \"     \""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                            + task"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                            + \"\\n\""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                            + \"     Now you have \""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                            + list.size()"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                            + \" task(s) in the list.\\n\""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                            + \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                    );"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                    throw new InvalidActionException(); // \"delete 1A\" etc"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jaylenlee": 248,
      "-": 5
    }
  },
  {
    "path": "src/main/java/Exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "package Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        String errorMessage \u003d \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                + \"     ☹ OOPS!!! \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                + getMessage()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "                + \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jaylenlee": 19
    }
  },
  {
    "path": "src/main/java/Exception/EmptyActionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "package Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "public class EmptyActionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    private static final String DESCRIPTION \u003d \"The description of a command cannot be empty.\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    public EmptyActionException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        super(DESCRIPTION);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jaylenlee": 8
    }
  },
  {
    "path": "src/main/java/Exception/InvalidActionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "package Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "public class InvalidActionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    private static final String DESCRIPTION \u003d \"The action is invalid.\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    public InvalidActionException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        super(DESCRIPTION);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jaylenlee": 8
    }
  },
  {
    "path": "src/main/java/Exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "package Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    private static final String DESCRIPTION \u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    public InvalidCommandException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        super(DESCRIPTION);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jaylenlee": 8
    }
  },
  {
    "path": "src/main/java/Task/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    public DeadlineTask(String description, String time) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.time + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jaylenlee": 15
    }
  },
  {
    "path": "src/main/java/Task/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    public EventTask(String description, String time) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.time + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jaylenlee": 15
    }
  },
  {
    "path": "src/main/java/Task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\"); //return \\u2713 or \\u2718 symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jaylenlee": 24
    }
  },
  {
    "path": "src/main/java/Task/ToDoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "public class ToDoTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    public ToDoTask(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jaylenlee": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "blah"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "done"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "done1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "doneA"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "done 1A"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "todo"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "todoborrowagain"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "todo study /by Monday"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "todo study /at 12am-1am"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "todo"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "deadline project submission"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "deadline /by Sunday"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "deadline project submission /by"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "event"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "event project submission"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "event /at 1-2pm"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "event meeting /at"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "delete"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "delete1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "delete 1A"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Jaylenlee": 36
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "::set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java ..\\src\\main\\java\\Task\\*.java ..\\src\\main\\java\\Exception\\*.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jaylenlee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Jaylenlee": 3,
      "-": 20
    }
  }
]
