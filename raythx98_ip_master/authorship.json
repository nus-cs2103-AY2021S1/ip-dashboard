[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    systemProperty \"file.encoding\", \"utf-8\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    mainClassName \u003d \"raythx98/duke/Duke\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    systemProperty \"file.encoding\", \"utf-8\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 20,
      "-": 44
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "T|1|something"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": "T|0|this|2020-12-31|2021"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "D|0|that|2020-11-30|2011"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "E|1|lol|2020-10-20|2000"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "T|0|something|2020-12-31|2021"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "T|0|even more homework omg"
      }
    ],
    "authorContributionMap": {
      "raythx98": 6
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.Main;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 8
    }
  },
  {
    "path": "src/main/java/raythx98/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx98.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 61
    }
  },
  {
    "path": "src/main/java/raythx98/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx98.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Main driving force for the Duke application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tasks \u003d storage.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            ui.resetString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            Command command \u003d parser.parse(tasks, input);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return ui.finalShowOnScreen();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return ui.showError(e);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    String getGreeting() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return ui.greet();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 45
    }
  },
  {
    "path": "src/main/java/raythx98/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx98.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            stage.getIcons().add(new Image(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 33
    }
  },
  {
    "path": "src/main/java/raythx98/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx98.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                DialogBox.getDukeDialog(d.getGreeting(), dukeImage)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 54
    }
  },
  {
    "path": "src/main/java/raythx98/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx98.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public abstract class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected final String taskDescriptionDeadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public AddCommand(String taskDescriptionDeadline) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        this.taskDescriptionDeadline \u003d taskDescriptionDeadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 14
    }
  },
  {
    "path": "src/main/java/raythx98/duke/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx98.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class AddDeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public AddDeadlineCommand(String taskDescriptionDeadline) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(taskDescriptionDeadline);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String[] descriptionSplit \u003d taskDescriptionDeadline.split(\" /by \", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (descriptionSplit.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            task \u003d new Deadline(descriptionSplit[0]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else if (descriptionSplit.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            task \u003d new Deadline(descriptionSplit[0], descriptionSplit[1]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            throw new DukeException(\"Invalid Description\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        ui.addShowOnScreen(\"Got it, here yur task bij\\n\" + task.toString()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 30
    }
  },
  {
    "path": "src/main/java/raythx98/duke/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx98.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class AddEventCommand extends AddCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public AddEventCommand(String taskDescriptionDeadline) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(taskDescriptionDeadline);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String[] descriptionSplit \u003d taskDescriptionDeadline.split(\" /at \", 2);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (descriptionSplit.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            task \u003d new Event(descriptionSplit[0]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else if (descriptionSplit.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            task \u003d new Event(descriptionSplit[0], descriptionSplit[1]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            throw new DukeException(\"Invalid Description\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        ui.addShowOnScreen(\"Got it, here yur task bij\\n\" + task.toString()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 31
    }
  },
  {
    "path": "src/main/java/raythx98/duke/command/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx98.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.task.ToDos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class AddTodoCommand extends AddCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public AddTodoCommand(String taskDescriptionDeadline) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(taskDescriptionDeadline);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String[] descriptionSplit \u003d taskDescriptionDeadline.split(\" /by \", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (descriptionSplit.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            task \u003d new ToDos(descriptionSplit[0]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else if (descriptionSplit.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            task \u003d new ToDos(descriptionSplit[0], descriptionSplit[1]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            throw new DukeException(\"Invalid Description\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        ui.addShowOnScreen(\"Got it, here yur task bij\\n\" + task.toString()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 30
    }
  },
  {
    "path": "src/main/java/raythx98/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx98.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Represents an abstract Command from which other *Commands inherit."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Returns whether a Command is an ExitCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @return False by default as most Commands are not ExitCommands."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 23
    }
  },
  {
    "path": "src/main/java/raythx98/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx98.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private final int deleteIndex;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public DeleteCommand (int deleteIndex) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        this.deleteIndex \u003d deleteIndex;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        ui.addShowOnScreen(\"okcan done:\\n\" + tasks.removeTask(deleteIndex)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 18
    }
  },
  {
    "path": "src/main/java/raythx98/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx98.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private final int doneIndex;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public DoneCommand (int doneIndex) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        this.doneIndex \u003d doneIndex;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        ui.addShowOnScreen(\"okcan done:\\n\" + tasks.getTask(doneIndex).markAsDone()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 18
    }
  },
  {
    "path": "src/main/java/raythx98/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx98.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        ui.farewell();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 17
    }
  },
  {
    "path": "src/main/java/raythx98/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx98.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private final String keyWord;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public FindCommand (String keyWord) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        this.keyWord \u003d keyWord;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        ui.addShowOnScreen(tasks.findTask(keyWord));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 17
    }
  },
  {
    "path": "src/main/java/raythx98/duke/command/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx98.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        System.out.println(\"lol\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 12
    }
  },
  {
    "path": "src/main/java/raythx98/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx98.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        ui.addShowOnScreen(\"Here yur tasks faggit: \\n\" + tasks.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 12
    }
  },
  {
    "path": "src/main/java/raythx98/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx98.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Checked exceptions for all errors as a result of Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 10
    }
  },
  {
    "path": "src/main/java/raythx98/duke/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx98.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Checked exception as a result of an empty description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public EmptyDescriptionException(String errorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 10
    }
  },
  {
    "path": "src/main/java/raythx98/duke/exception/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx98.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Checked exception as a result of an invalid index."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class InvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public InvalidIndexException(String errorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 10
    }
  },
  {
    "path": "src/main/java/raythx98/duke/exception/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx98.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Checked exception as a result of an unknown command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public UnknownCommandException(String errorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 10
    }
  },
  {
    "path": "src/main/java/raythx98/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx98.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.command.AddEventCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.command.AddTodoCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.command.DoneCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.command.ExitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.command.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.command.InvalidCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.command.ListCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.exception.DukeException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.exception.UnknownCommandException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.task.Task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.task.TaskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Deals with making sense of user inputs."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Parses the user data by making processing input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param tasks    List of tasks at the moment."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param nextLine String to be parsed."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Command parse(TaskList tasks, String nextLine) throws DukeException, NumberFormatException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String[] spaceSplit \u003d nextLine.split(\" \", 2);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (nextLine.isEmpty()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            throw new EmptyDescriptionException(\"Type something leh\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        switch (spaceSplit[0]) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (spaceSplit.length \u003e 1) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new DukeException(\"bye error\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (spaceSplit.length \u003e 1) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new DukeException(\"list error\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (spaceSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new DukeException(\"done error\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            int doneIndex;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                doneIndex \u003d Integer.parseInt(spaceSplit[1]) - 1;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new DukeException(\"Not number\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (doneIndex \u003c 0 || doneIndex \u003e tasks.getSize() - 1) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new InvalidIndexException(\"Simi number lai de\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return new DoneCommand(doneIndex);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (spaceSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new DukeException(\"lol\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            int deleteIndex;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                deleteIndex \u003d Integer.parseInt(spaceSplit[1]) - 1;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new DukeException(\"Not number\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (deleteIndex \u003c 0 || deleteIndex \u003e tasks.getSize() - 1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new InvalidIndexException(\"Simi number lai de\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return new DeleteCommand(deleteIndex);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (spaceSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new EmptyDescriptionException(\"Specify key word la oi\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return new FindCommand(spaceSplit[1]);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (spaceSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new EmptyDescriptionException(\"Description empty la oi\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                return new AddTodoCommand(spaceSplit[1]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (spaceSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new EmptyDescriptionException(\"Description empty la oi\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                return new AddDeadlineCommand(spaceSplit[1]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (spaceSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new EmptyDescriptionException(\"Description empty la oi\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                return new AddEventCommand(spaceSplit[1]);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            throw new UnknownCommandException(\"Don\u0027t understand la oi\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 104
    }
  },
  {
    "path": "src/main/java/raythx98/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx98.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.exception.UnknownCommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.task.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.task.Event;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.task.ToDos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.task.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Deals with the manipulation of loading and saving data."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static final String TODO \u003d \"T\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static final String DEADLINE \u003d \"D\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static final String EVENT \u003d \"E\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void save() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (tasks.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            Writer.overwrite(filepath, tasks.getTask(0).toPrint());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            for (int i \u003d 1; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                Writer.writeOn(filepath, \"\\n\" + tasks.getTask(i).toPrint());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public TaskList load() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            File myObj \u003d new File(filepath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            Scanner myReader \u003d new Scanner(myObj);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            while (myReader.hasNextLine()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                String data \u003d myReader.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                String[] dataSplit \u003d data.split(\"\\\\|\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                switch (dataSplit[0]) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    tasks.addTask(new ToDos(dataSplit));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    tasks.addTask(new Deadline(dataSplit));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    tasks.addTask(new Event(dataSplit));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    throw new UnknownCommandException(\"Unknown Task Type\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            myReader.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            System.out.println(\"No current data exists\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 69
    }
  },
  {
    "path": "src/main/java/raythx98/duke/storage/Writer.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx98.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class Writer {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static void overwrite(String filepath, String input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            FileWriter writer \u003d new FileWriter(new File(filepath), false);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            writer.write(input);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            System.out.println(\"No such file exists \" + filepath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            File file \u003d new File(\"data\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            //Creating the directory"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            boolean bool \u003d file.mkdir();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (bool) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                System.out.println(\"Directory created successfully\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                System.out.println(\"Sorry couldn’t create specified directory\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            overwrite(filepath, input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static void writeOn(String filepath, String input) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            FileWriter writer \u003d new FileWriter(new File(filepath), true);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            writer.write(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            System.out.println(\"No such file exists \" + filepath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            File file \u003d new File(\"data\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            //Creating the directory"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            boolean bool \u003d file.mkdir();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (bool) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                System.out.println(\"Directory created successfully\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                System.out.println(\"Sorry couldn’t create specified directory\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            overwrite(filepath, input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 52
    }
  },
  {
    "path": "src/main/java/raythx98/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx98.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.temporal.ChronoField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Represents a specific task which has a deadline."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected LocalDate date \u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected String by \u003d null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tag \u003d \"D\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String[] bySplit \u003d by.split(\" \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        date \u003d LocalDate.parse(bySplit[0]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (bySplit.length \u003e 1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.by \u003d bySplit[1];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Deadline(String description) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tag \u003d \"D\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Deadline(String ... taskDescriptions) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(taskDescriptions[2]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tag \u003d \"D\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (taskDescriptions.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else if (taskDescriptions.length \u003d\u003d 5) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.date \u003d LocalDate.parse(taskDescriptions[3]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.by \u003d taskDescriptions[4];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            throw new DukeException(\"Task loading error...\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (taskDescriptions[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.markAsDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return tag;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String toPrint() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return super.toPrint();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return super.toPrint() + \"|\" + date + \"|\" + by;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (by \u003d\u003d null) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return \"[D]\" + super.toString();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            String now \u003d \"AM\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            LocalTime localTime \u003d LocalTime.parse(by, DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            int hour \u003d localTime.get(ChronoField.CLOCK_HOUR_OF_DAY);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            int minute \u003d localTime.get(ChronoField.MINUTE_OF_HOUR);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (hour \u003e 12) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                now \u003d \"PM\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                hour -\u003d 12;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    + \", \" + hour + \":\" + minute + now + \")\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 78
    }
  },
  {
    "path": "src/main/java/raythx98/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx98.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.temporal.ChronoField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Represents a specific task which is an event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected LocalDate date \u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected String at \u003d null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tag \u003d \"E\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String[] bySplit \u003d at.split(\" \", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        date \u003d LocalDate.parse(bySplit[0]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (bySplit.length \u003e 1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.at \u003d bySplit[1];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Event(String description) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tag \u003d \"E\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Event(String ... taskDescriptions) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(taskDescriptions[2]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tag \u003d \"E\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (taskDescriptions.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else if (taskDescriptions.length \u003d\u003d 5) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.date \u003d LocalDate.parse(taskDescriptions[3]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.at \u003d taskDescriptions[4];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            throw new DukeException(\"Task loading error...\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (taskDescriptions[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.markAsDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return tag;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String toPrint() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return super.toPrint();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return super.toPrint() + \"|\" + date + \"|\" + at;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (at \u003d\u003d null) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return \"[E]\" + super.toString();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            String now \u003d \"AM\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            LocalTime localTime \u003d LocalTime.parse(at, DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            int hour \u003d localTime.get(ChronoField.CLOCK_HOUR_OF_DAY);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            int minute \u003d localTime.get(ChronoField.MINUTE_OF_HOUR);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (hour \u003e 12) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                now \u003d \"PM\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                hour -\u003d 12;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return \"[E]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    + \", \" + hour + \":\" + minute + now + \")\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 79
    }
  },
  {
    "path": "src/main/java/raythx98/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx98.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public enum TaskType {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        TODOS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        DEADLINE,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        EVENT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static final String tick \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static final String cross \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected String tag \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected LocalDate date \u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        //return tick or X symbols"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return isDone ? tick : cross; "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public int getStatusBinary() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return isDone? 1 : 0;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return tag;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Marks the task as done, and returns the String representation of the task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @return a String representation of the task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String markAsDone() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return toString();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String toPrint() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return tag + \"|\" + getStatusBinary() + \"|\" + getDescription();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 63
    }
  },
  {
    "path": "src/main/java/raythx98/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx98.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Deals with manipulation on the list of tasks"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Removes a task from List of tasks based on the index."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param idx Index of task to be removed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @return String which represents the task removed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String removeTask (int idx) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        Task task \u003d taskList.get(idx);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        taskList.remove(idx);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return task.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Task getTask(int idx) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return taskList.get(idx);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Returns a list of all tasks at the moment."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @return String which lists all tasks at the moment."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String findTask(String str) throws InvalidIndexException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        TaskList match \u003d new TaskList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        for (Task i: taskList) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            String taskDescription \u003d i.getDescription().toLowerCase();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            String toCompare \u003d str.toLowerCase();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (taskDescription.contains(toCompare)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                match.addTask(i);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (match.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            throw new InvalidIndexException(\"No such tasks leh...\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return \"Got it, here yur task bij\\n\" + match.toString();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String string \u003d \"\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (getSize() \u003e\u003d 1) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            string \u003d \"1.\" + taskList.get(0).toString();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            for (int num \u003d 2; num \u003c\u003d getSize(); num++) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                string \u003d string + \"\\n\" + num + \".\" + taskList.get(num - 1).toString();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            string \u003d \"empty\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return string;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 71
    }
  },
  {
    "path": "src/main/java/raythx98/duke/task/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx98.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.temporal.ChronoField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx98.duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Represents a specific task which is a to do."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected LocalDate date \u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected String by \u003d null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public ToDos(String description, String by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tag \u003d \"T\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String[] bySplit \u003d by.split(\" \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        date \u003d LocalDate.parse(bySplit[0]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (bySplit.length \u003e 1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.by \u003d bySplit[1];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public ToDos(String description) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tag \u003d \"T\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public ToDos(String ... taskDescriptions) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(taskDescriptions[2]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tag \u003d \"T\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (taskDescriptions.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else if (taskDescriptions.length \u003d\u003d 5) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.date \u003d LocalDate.parse(taskDescriptions[3]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.by \u003d taskDescriptions[4];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            throw new DukeException(\"Task loading error...\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (taskDescriptions[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.markAsDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return tag;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String toPrint() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return super.toPrint();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return super.toPrint() + \"|\" + date + \"|\" + by;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (by \u003d\u003d null) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            String now \u003d \"AM\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            LocalTime localTime \u003d LocalTime.parse(by, DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            int hour \u003d localTime.get(ChronoField.CLOCK_HOUR_OF_DAY);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            int minute \u003d localTime.get(ChronoField.MINUTE_OF_HOUR);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (hour \u003e 12) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                now \u003d \"PM\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                hour -\u003d 12;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return \"[T]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    + \", \" + hour + \":\" + minute + now + \")\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 78
    }
  },
  {
    "path": "src/main/java/raythx98/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx98.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Deals with the user interface."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private String toShowOnScreen \u003d \"\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Prints a greeting message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String greet() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return \"Hello mah dud, itza handsome robo speakin\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"What duh hell du yu wan?\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Prints a farewell message."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void farewell() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        toShowOnScreen +\u003d \"Never come back,\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"dun wanna see yu ever agin\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void resetString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        toShowOnScreen \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void addShowOnScreen(String string) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        toShowOnScreen +\u003d string;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String finalShowOnScreen() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return toShowOnScreen;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Prints the error message."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param e String of error to be printed."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String showError(Exception e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return e.getMessage();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 46
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"386.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-background-radius: 10; -fx-border-radius: 10; -fx-background-color: #F6F6F6; -fx-border-style: solid; -fx-border-color: grey;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            \u003cFont name\u003d\"Calibri\" size\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "raythx98": 29
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c?import javafx.scene.effect.DropShadow?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: DIMGRAY;\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"raythx98.duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"6.0\" layoutY\u003d\"553.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" style\u003d\"-fx-background-color: GAINSBORO; -fx-background-radius: 10; -fx-border-radius: 10; -fx-border-style: solid; -fx-border-width: 1;\" AnchorPane.bottomAnchor\u003d\"6.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            \u003cFont name\u003d\"Calibri\" size\u003d\"16.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003c/font\u003e\u003c/TextField\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"337.0\" layoutY\u003d\"553.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"56.0\" style\u003d\"-fx-background-color: dimgrey; -fx-background-radius: 10; -fx-border-radius: 10;\" text\u003d\"Send\" textFill\u003d\"WHITE\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003ceffect\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            \u003cDropShadow height\u003d\"10.0\" radius\u003d\"4.5\" width\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003c/effect\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            \u003cFont name\u003d\"Calibri Bold\" size\u003d\"16.0\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003c/font\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutX\u003d\"7.0\" layoutY\u003d\"8.0\" prefHeight\u003d\"538.0\" prefWidth\u003d\"386.0\" style\u003d\"-fx-background-color: LIGHTPINK; -fx-background-radius: 10; -fx-border-radius: 10; -fx-border-style: solid;\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"386.0\" style\u003d\"-fx-background-color: lightpink;\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "raythx98": 37
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private final PrintStream standardOut \u003d System.out;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        System.setOut(new PrintStream(outputStreamCaptor));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void tearDown() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        System.setOut(standardOut);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void parse_glibberish_success() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        new Parser().parse(new TaskList(), \"asdfgh qwert\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String expectedResult \u003d \"duke.exception.UnknownCommandException: Don\u0027t understand...\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String actualResult \u003d outputStreamCaptor.toString().trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void parse_byeEntry_success() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        boolean actualResult \u003d new Parser().parse(new TaskList(), \"bye\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        assertTrue(actualResult);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void parse_showEmptyList_success() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        new Parser().parse(new TaskList(), \"list\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String expectedResult \u003d \"Here yur tasks faggit: \\n\" + \"empty\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String actualResult \u003d outputStreamCaptor.toString().trim();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 56
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private final PrintStream standardOut \u003d System.out;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        System.setOut(new PrintStream(outputStreamCaptor));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void tearDown() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        System.setOut(standardOut);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void addTask_emptyList_success() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String actualResult \u003d new TaskList().addTask(Task.TaskType.TODOS, \"CS2103T Exams\", \"2020-12-31 2021\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String expectedResult \u003d \"Got it, here yur task bij\\n\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                \"[T][✘] CS2103T Exams (by: Dec 31 2020, 8:21PM)\\n\" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                \"Now you have 1 tasks in the list.\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void deleteTask_singleList_success() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tasks.addTask(Task.TaskType.TODOS, \"CS2103T Exams\", \"2020-12-31 2021\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String actualResult \u003d tasks.removeTask(0);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String expectedResult \u003d \"[T][✘] CS2103T Exams (by: Dec 31 2020, 8:21PM)\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void getSize_emptyList_success() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raythx98"
        },
        "content": "//        tasks.addTask(Task.TaskType.TODOS, \"CS2103T Exams\", \"2020-12-31 2021\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        int actualResult \u003d tasks.getSize();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        int expectedResult \u003d 0;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 66
    }
  },
  {
    "path": "text-ui-test/data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "T|1|something|2020-12-31|2021"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": "E|0|exciting!!|2020-11-30|1921"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "D|0|homework|2019-10-20|1845"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "D|1|homework|2018-02-28|2359"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "T|0|even more homework omg"
      }
    ],
    "authorContributionMap": {
      "raythx98": 5
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "hi"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "done"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "todo something /by 2020-12-31 2021"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "event exciting!! /at 2020-11-30 1921"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "deadline homework /by 2019-10-20 1845"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "event exciting!! yay"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "deadline homework /by 2018-02-28 2359"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "todo even more homework omg"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "delete 8"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "done this"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "raythx98": 22
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "rmdir /s /q data"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\raythx98\\duke\\*.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "raythx98": 6,
      "-": 20
    }
  }
]
