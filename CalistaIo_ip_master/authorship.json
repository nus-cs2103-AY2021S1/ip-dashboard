[
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "T | 0 | borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "D | 1 | homework | Oct 10 2020 6.00pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "E | 0 | concert | Oct 12 2020 11.59pm"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 3
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * Represents a component of the Duke application that coordinates the roles of"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * other components (i.e. the storage, parser, user interface, task list) in"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * executing a user command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private String currentInput;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        this.currentInput \u003d \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Receives the user command from the user interface. The user command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * will be processed by the parser."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param s the user command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void receive(String s) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        this.currentInput \u003d s;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Returns a boolean value indicating whether the Duke application exits."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return a boolean value indicating whether the Duke application exits."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public boolean exit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return this.currentInput.equals(\"bye\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Executes a user command. The Command object receives the processed"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * user command from the parser and alerts the task list, storage and user"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * interface to perform the appropriate actions."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param parser the parser of the Duke application"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param taskList the task list of the Duke application"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param storage the storage system of the Duke application"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param ui the user interface of the Duke application"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws IOException if an error occurs while accessing/creating the directory/file containing"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * the tasks."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws InvalidTaskArgumentException if an error occurs while processing"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * a command to add tasks."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws InvalidDoneException if an errors occurs while processing"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * a command to mark tasks as done."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws InvalidCommandException if the user command cannot be understood."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws InvalidDeleteException if an error occurs while processing"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * a command to delete tasks."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws DateException if an error occurs while processing the date/times"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * of event/deadlines."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void executeTask(Parser parser, TaskList taskList, Storage storage, Ui ui)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            throws IOException, InvalidTaskArgumentException, InvalidDoneException, InvalidCommandException,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            InvalidDeleteException, DateException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        ArrayList\u003cString\u003e lst \u003d parser.processString(currentInput, taskList.getLength());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        if (lst.get(0).equals(\"Show\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            taskList.showList(ui);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            storage.save(taskList.getTasks());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } else if (lst.get(0).equals(\"Done\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            taskList.markDone(Integer.parseInt(lst.get(1)), ui);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            storage.save(taskList.getTasks());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } else if (lst.get(0).equals(\"Add\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            if (lst.get(1).equals(\"ToDo\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                taskList.addTask(new ToDo(lst.get(2)), ui);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            } else if (lst.get(1).equals(\"Deadline\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                taskList.addTask(new Deadline(lst.get(2), lst.get(3)), ui);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                taskList.addTask(new Event(lst.get(2), lst.get(3)), ui);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            storage.save(taskList.getTasks());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } else if (lst.get(0).equals(\"Find\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            taskList.findTask(lst.get(1), ui);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            taskList.deleteTask(Integer.parseInt(lst.get(1)), ui);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            storage.save(taskList.getTasks());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 80
    }
  },
  {
    "path": "src/main/java/DateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class DateException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public DateException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 6
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * Represents a deadline. A deadline has both a description and a date/time indicating"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * when the task must be completed."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Returns a String representation of the Deadline that will be saved in the"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * hard disk."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return a String representation of the Deadline."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String getFormattedString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return \"D | \" + (super.isDone? 1 : 0) + \" | \" + super.description + \" | \" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                by;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 28
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private Command command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public Duke(String filePath) throws IOException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        command \u003d new Command();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        command.receive(ui.readCommand());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        while(!command.exit()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                command.executeTask(parser, tasks, storage, ui);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            } catch (InvalidTaskArgumentException |  InvalidDoneException | InvalidCommandException |"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    InvalidDeleteException | DateException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                command.receive(ui.readCommand());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        ui.showFarewell();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 42,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 2
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * Represents an event. An event has both a description and a date/time indicating"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * when the event occurs."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Returns a String representation of the Event that will be saved in"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * the hard disk."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return a String representation of the Event."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String getFormattedString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return \"E | \" + (super.isDone? 1 : 0) + \" | \" + super.description + \" | \" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                at;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 28
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 7
    }
  },
  {
    "path": "src/main/java/InvalidDeleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class InvalidDeleteException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public InvalidDeleteException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 7
    }
  },
  {
    "path": "src/main/java/InvalidDoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class InvalidDoneException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public InvalidDoneException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 7
    }
  },
  {
    "path": "src/main/java/InvalidTaskArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class InvalidTaskArgumentException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public InvalidTaskArgumentException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 7
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * Represents the parser of the Duke application. The parser is responsible for"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * processing user commands so that they can be understood by the application."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Processes the dates/times for deadlines and events in the task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param date a String that represents either a date in YYYY-MM-DD format, or a timestamp"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     *              in YYYY-MM-DD HHMM format."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return a String that represents an alternative format of the date/time."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws DateException if the given date/time is not in the appropriate format."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public static String processDate(String date) throws DateException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            String[] dates \u003d date.split(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            String processedDate \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            String processedTime \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            if (dates.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                LocalDate localDate \u003d LocalDate.parse(dates[0]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                processedDate \u003d localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                return processedDate;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                LocalDate localDate \u003d LocalDate.parse(dates[0]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                processedDate \u003d localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                double time \u003d Double.parseDouble(dates[1]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                if (time \u003e\u003d 1300) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    time -\u003d 1200;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                int hour \u003d (int) (time / 100);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                if(hour \u003d\u003d 24 || hour \u003d\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    processedTime +\u003d \"12.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    processedTime +\u003d hour + \".\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                int minute \u003d (int) (time % 100);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                if (minute \u003c 10) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    processedTime +\u003d \"0\" + minute;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    processedTime +\u003d minute;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                if ((Double.parseDouble(dates[1]) \u003e\u003d 1200) \u0026\u0026"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                        (Double.parseDouble(dates[1]) \u003c 2400)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    processedTime +\u003d \"pm\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    processedTime +\u003d \"am\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                return processedDate + \" \" + processedTime;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } catch (java.time.format.DateTimeParseException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            throw new DateException(\"Sorry! I don\u0027t understand the date/time. Please specify the date/time \""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    + \"in YYYY-MM-DD or YYYY-MM-DD HHMM format.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Processes the user command."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param s the user command"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param size the size of the task list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return a list of String objects that represent the appropriate command to"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * be executed."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws InvalidDoneException if for a done command, either no task is specified or the"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * argument provided does not represent a valid task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws InvalidTaskArgumentException if the command to add tasks is not correctly or"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * completely specified."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws InvalidDeleteException if for a delete command, either no task is specified or the"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * argument provided does not represent a valid task."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws InvalidCommandException if the user command cannot be understood"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws DateException if the date/time provided for an event/deadline is not in the appropriate"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * format."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public ArrayList\u003cString\u003e processString(String s, int size)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            throws InvalidDoneException, InvalidTaskArgumentException,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            InvalidDeleteException, InvalidCommandException, DateException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        ArrayList\u003cString\u003e lst \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        if (s.equals(\"list\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            lst.add(\"Show\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            return lst;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } else if ((s.length() \u003e\u003d 4) \u0026\u0026 (s.substring(0, 4).equals(\"done\"))) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            if (s.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                throw new InvalidDoneException(\"\\u2639\" + \" OOPS!!! The task to be marked as done is not \""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                        + \"specified.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    int i \u003d Integer.parseInt(s.substring(5)) - 1;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    if ((i \u003c 0) || (i \u003e\u003d size)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                        throw new InvalidDoneException(\"\\u2639\" + \" OOPS!!! The number specified does not represent \""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                                + \"a valid task.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    lst.add(\"Done\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    lst.add(Integer.toString(i));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    return lst;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    throw new InvalidDoneException(\"\\u2639\" + \" OOPS!!! The task to be marked as done is not \""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                            + \"specified by a valid number.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } else if ((s.length() \u003e\u003d 4) \u0026\u0026 (s.substring(0, 4).equals(\"todo\"))) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            if (s.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                throw new InvalidTaskArgumentException(\"\\u2639\" + \" OOPS!!! The description of a todo cannot \""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                        + \"be empty.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                lst.add(\"Add\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                lst.add(\"ToDo\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                lst.add(s.substring(5));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                return lst;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } else if ((s.length() \u003e\u003d 8) \u0026\u0026 (s.substring(0, 8).equals(\"deadline\"))) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            if (s.length() \u003c\u003d 9) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                throw new InvalidTaskArgumentException(\"\\u2639\" + \" OOPS!!! The deadline is lacking a \""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                        + \"description/date.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                String[] arr \u003d s.substring(9).split(\" /by \");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                if (arr.length \u003c 2) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    throw new InvalidTaskArgumentException(\"\\u2639\" + \" OOPS!!! The deadline is lacking a \""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                            + \"description/date.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    lst.add(\"Add\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    lst.add(\"Deadline\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    lst.add(arr[0]);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    lst.add(processDate(arr[1]));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    return lst;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } else if ((s.length() \u003e\u003d 5) \u0026\u0026 (s.substring(0, 5).equals(\"event\"))) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            if (s.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                throw new InvalidTaskArgumentException(\"\\u2639\" + \" OOPS!!! The event is lacking a \""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                        + \"description/date.\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                String[] arr \u003d s.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                if (arr.length \u003c 2) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    throw new InvalidTaskArgumentException(\"\\u2639\" + \" OOPS!!! The event is lacking a \""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                            + \"description/date.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    lst.add(\"Add\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    lst.add(\"Event\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    lst.add(arr[0]);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    lst.add(processDate(arr[1]));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    return lst;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } else if ((s.length() \u003e\u003d 6) \u0026\u0026 (s.substring(0, 6).equals(\"delete\"))) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            if (s.length() \u003c\u003d 7) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                throw new InvalidDeleteException(\"\\u2639\" + \" OOPS!!! The task to be deleted is not \""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                        + \"specified.\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    int i \u003d Integer.parseInt(s.substring(7)) - 1;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    if ((i \u003c 0) || (i \u003e\u003d size)) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                        throw new InvalidDeleteException(\"\\u2639\" + \" OOPS!!! The number specified does not \""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                                + \"represent a valid task.\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    lst.add(\"Delete\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    lst.add(Integer.toString(i));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    return lst;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    throw new InvalidDeleteException(\"\\u2639\" + \" OOPS!!! The task to be deleted is not \""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                            + \"specified by a valid number.\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } else if ((s.length() \u003e\u003d 4) \u0026\u0026 (s.substring(0, 4).equals(\"find\"))) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            lst.add(\"Find\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            lst.add(s.split(\" \")[1]);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            return lst;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            throw new InvalidCommandException(\"\\u2639\" + \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 174
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * Represents the storage system for the Duke application. The storage system is responsible for"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * loading tasks from the hard disk when the Duke application starts up, and for saving tasks to"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * the hard disk whenever the task list changes."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Loads tasks from the hard disk when the Duke application starts up."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return a list of String objects representing the tasks in the hard disk."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws IOException if an error occurs while accessing/creating the directory/file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws DukeException if the directory/file did not exist initially."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public ArrayList\u003cString\u003e load() throws IOException, DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        boolean isFound \u003d createFile();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        if (!isFound) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        File file \u003d new File(filepath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        ArrayList\u003cString\u003e lst \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            lst.add(scanner.nextLine());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return lst;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Creates the directory/file containing the tasks, if they did not exist initially."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return a boolean value indicating whether the directory/file existed initially."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws IOException if an error occurs while accessing/creating the directory/file."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public boolean createFile() throws IOException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        boolean isFound \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        File file;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        file \u003d new File(filepath.substring(0, filepath.lastIndexOf(\"/\")));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        if (!file.isDirectory()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            isFound \u003d false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            file.mkdirs();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        file \u003d new File(filepath);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        if (file.createNewFile()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            isFound \u003d false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return isFound;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Saves the tasks in the task list to the hard disk."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param lst the task list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @throws IOException if an error occurs while accessing/creating the directory/file."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e lst) throws IOException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        File file \u003d new File(filepath);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        new FileWriter(file, false).close();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        FileWriter filewriter \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        for (Task task : lst) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            filewriter.write(task.getFormattedString() + System.lineSeparator());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        filewriter.close();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 75
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * Represents a task. The Task class is an abstract class because in the context"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * of the Duke application, it is necessary for the user to specify a task as being"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * a todo, deadline, or event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public abstract String getFormattedString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 30
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * Represents the task list of the Duke application. The task list is responsible for"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * storing and modifying the current tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public TaskList(ArrayList\u003cString\u003e lst) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        for (String s : lst) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            String[] arr \u003d s.split(\" \\\\| \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            if (arr[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                ToDo todo \u003d new ToDo(arr[2]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                if (arr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    todo.markAsDone();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                temp.add(todo);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            } else if (arr[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                Deadline deadline \u003d new Deadline(arr[2], arr[3]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                if (arr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    deadline.markAsDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                temp.add(deadline);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                Event event \u003d new Event(arr[2], arr[3]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                if (arr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                    event.markAsDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                temp.add(event);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        this.tasks \u003d temp;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Returns the current size of the task list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return the current size of the task list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public int getLength() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Returns the task list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return the task list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Creates and sends a list of String objects representing the tasks in the task list"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * to the user interface of the Duke application for display."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param ui the user interface of the Duke application."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void showList(Ui ui) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        ArrayList\u003cString\u003e lst \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            lst.add(task.toString());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        ui.showList(lst);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Marks a specified task as done and alerts the user interface of the"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Duke application to display the corresponding message."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param pos the position of the task to be marked as done in the task list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param ui the user interface of the Duke application."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void markDone(int pos, Ui ui) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        tasks.get(pos).markAsDone();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        ui.showDone(tasks.get(pos));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Removes a specified task from the task list and alerts the user interface"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * of the Duke application to display the corresponding message."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param pos the position of the task to be removed in the task list."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param ui the user interface of the Duke application."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void deleteTask(int pos, Ui ui) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        Task t \u003d tasks.remove(pos);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        ui.showDelete(t, tasks.size());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Adds a new task to the task list and alerts the user interface of the"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Duke application to display the corresponding message."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param task the new task to be added to the task list."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param ui the user interface of the Duke application."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void addTask(Task task, Ui ui) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        ui.showAdd(tasks.get(tasks.size() - 1), tasks.size());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Finds the tasks in the task list that match the given keyword."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param keyword the keyword given by the user."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param ui the user interface of the Duke application."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void findTask(String keyword, Ui ui) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        ArrayList\u003cString\u003e lst \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            if (t.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                lst.add(t.toString());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        ui.showFind(lst);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 118
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * Represents a todo. A todo task only has a description. It does not"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * have a date/time."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Returns a String representation of the ToDo that will be saved in the"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * hard disk."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return a String representation of the ToDo."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String getFormattedString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return \"T | \" + (super.isDone? 1 : 0) + \" | \" + super.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 25
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * Represents the user interface for the Duke application. The user interface is responsible"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " * for receiving commands from and displaying messages to the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        System.out.println(\"-------------------------------------------------------------------------------------\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Displays a welcome message to the user when the Duke application starts up."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Displays a farewell message to the user when the Duke application exits."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void showFarewell() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Displays an error message to the user when the Duke application encounters"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * an error."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param message the error message."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Displays a message indicating that a particular task has been marked as done."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param task the task that has been marked as done."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void showDone(Task task) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        System.out.println(\"    \" + task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Displays a message indicating that a new task has been added to the task list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * The total number of tasks in the task list after addition is also displayed."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param task the task that has been added to the task list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param size the total number of tasks in the task list after addition."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void showAdd(Task task, int size) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        System.out.println(\"    \" + task);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        System.out.println(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Displays a message indicating that a task has been deleted from the task list."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * The total number of tasks in the task list after deletion is also displayed."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param task the task that has been deleted from the task list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param size the total number of tasks in the task list after deletion."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void showDelete(Task task, int size) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        System.out.println(\"    \" + task);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        System.out.println(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Displays the tasks in the task list."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param lst a list of String objects representing the tasks in the task list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void showList(ArrayList\u003cString\u003e lst) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        System.out.println(\"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        for (int i \u003d 0; i \u003c lst.size(); i++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            System.out.println((i + 1) + \".\" + lst.get(i));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Displays the tasks in the task list that match the keyword given by"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * the user."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @param lst a list of String objects representing the tasks in the task list"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     *            that match the given keyword."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void showFind(ArrayList\u003cString\u003e lst) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        for (int i \u003d 0; i \u003c lst.size(); i++) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            System.out.println(\"    \" + (i + 1) + \".\" + lst.get(i));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * Reads the command entered by the user."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     * @return the user command."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 130
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void testFind() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            ArrayList\u003cString\u003e expectedList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            expectedList.add(\"Find\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            expectedList.add(\"book\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            assertEquals(expectedList, parser.processString(\"find book\", 10));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void testDate() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            assertEquals(\"Oct 15 2020 6.30pm\", parser.processDate(\"2020-10-15 1830\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        } catch (DateException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    public void testInvalidCommand() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "        assertThrows(InvalidTaskArgumentException.class,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "                () -\u003e new Parser().processString(\"event project meeting\", 10));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 37
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 11
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 4,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\Command.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\DateException.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\Deadline.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\DukeException.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\DukeTwin.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\Event.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\InvalidCommandException.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\InvalidDeleteException.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\InvalidDoneException.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\InvalidTaskArgumentException.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\Main.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\Parser.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\Storage.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\Task.java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\TaskList.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CalistaIo"
        },
        "content": "C:\\repos\\ip\\src\\main\\java\\ToDo.java"
      }
    ],
    "authorContributionMap": {
      "CalistaIo": 17
    }
  }
]
