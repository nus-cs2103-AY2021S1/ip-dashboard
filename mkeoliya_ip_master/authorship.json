[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "-": 24,
      "mkeoliya": 2
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "T~0~add book"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 1
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public Duke(String dataDirectory, String filePath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        storage \u003d new Storage(dataDirectory, filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        new Duke(\"data\", \"./data/duke.txt\").run();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Runs the command-line interface for the Duke program."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        String fullCommand;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        while(!isExit) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                fullCommand \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                isExit \u003d fullCommand.equalsIgnoreCase(\"bye\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            } catch(DukeException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                ui.print(e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 48
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 7
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "public class AddCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    Task task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Adds a task to the given list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * @param tasks current list of tasks which will be added to"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * @param ui user interface to show messages"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * @param storage storage interface to write the entire TaskList to file"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        ui.print(\"Got it. I\u0027ve added this task:\", \"\\t\" + task,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                         \"Now you have \" + tasks.size() + \" task(s) in the list\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        storage.write(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 30
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "public class ByeCommand implements Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    static final String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Prints the goodbye message to the user"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * @param tasks current list of tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * @param ui user interface to show messages"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * @param storage storage interface"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        ui.print(BYE_MESSAGE);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 21
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 10
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "public class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    int index; // 0-based"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Deletes the task at a specified index (0-based)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * @param tasks current list of tasks to be deleted from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * @param ui user interface to show messages"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * @param storage storage interface to write the current list of tasks in"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        if(index \u003c 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            throw new DukeException(\"That is not a valid item number.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        if(index \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            throw new DukeException(\"There are only \" + tasks.size() +  \" item(s) in the list, try entering a valid item number\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        tasks.delete(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        ui.print(\"The following task has been removed successfully:\", \"\\t\" + task.toString(),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                         \"Now you have \" + tasks.size() + \" items(s) left in the list.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        storage.write(tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 39
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "public class DoneCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    int index; // 0-based"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Marks the task at a specified index (0-based) as done/finished."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * @param tasks current list of tasks to be modified from"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * @param ui user interface to show messages"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * @param storage storage interface to write the current list of tasks in"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * @throws DukeException if the index passed is invalid, or if the task is already marked as done"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        if(index \u003c 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            throw new DukeException(\"That is not a valid item number.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        if(index \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            throw new DukeException(\"There are only \" + tasks.size() +  \" items in the list, try entering a valid item number.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        if(task.isDone) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            throw new DukeException(\"The task \\\u0027\" + task.getDescription() + \"\\\u0027 has already been marked as done.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        ui.print(\"Nice, I\u0027ve marked this task as done:\", \"\\t\" + task.toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        storage.write(tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 40
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "public class FindCommand implements Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    String keyword;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        System.out.println(keyword);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        if(tasks.isEmpty()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            ui.print(\"There are no items in the list right now.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            ui.print(tasks.filter(keyword).itemize(\"Here are the matching tasks in your list:\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 23
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "public class ListCommand implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Shows the itemized list of tasks to the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * @param tasks current list of tasks to be itemized and shown"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * @param ui user interface to show messages"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * @param storage storage interface to write the current list of tasks in"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        if(tasks.isEmpty()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            ui.print(\"There are no items in the list right now.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "           ui.print(tasks.itemize());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 25
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Parses a line of user input, splits it via regex (~), creates a Command object with required information"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * and returns it."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * @param fullCommand"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * @return the Command represented by the input string"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * @throws DukeException with appropriate message if command encountered is incorrect"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        String arr[] \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        String command \u003d arr[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        String remainingText \u003d arr.length \u003d\u003d 1 ? null : arr[1].trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        String[] taskItems;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            if (remainingText !\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                throw new DukeException(\"Did you mean to say \\\u0027list\\\u0027?\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            if (remainingText \u003d\u003d null) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                throw new DukeException(\"The description for a task cannot be empty.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            task \u003d new TodoTask(remainingText);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            return new AddCommand(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            if (remainingText \u003d\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                throw new DukeException(\"The description for a task cannot be empty.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            taskItems \u003d remainingText.split(\" /by \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            description \u003d taskItems[0].trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            if (taskItems.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                throw new DukeException(\"The date for a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            LocalDate by \u003d LocalDate.parse(taskItems[1].trim());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            task \u003d new DeadlineTask(description, by);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            return new AddCommand(task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            if (remainingText \u003d\u003d null) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                throw new DukeException(\"The description for a task cannot be empty.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            taskItems \u003d remainingText.split(\" /at \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            description \u003d taskItems[0].trim();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            if (taskItems.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                throw new DukeException(\"The date for an event cannot be empty.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            LocalDate at \u003d LocalDate.parse(taskItems[1].trim());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            task \u003d new EventTask(description, at);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            return new AddCommand(task);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            if (remainingText \u003d\u003d null) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                throw new DukeException(\"Please specify an item number.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            index \u003d Integer.parseInt(remainingText) - 1;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            return new DoneCommand(index);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            if (remainingText \u003d\u003d null) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                throw new DukeException(\"Please specify an item number.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            index \u003d Integer.parseInt(remainingText) - 1;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            return new DeleteCommand(index);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            if (remainingText !\u003d null) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                throw new DukeException(\"Did you mean to say \\\u0027bye\\\u0027?\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 93
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.task.TodoTask;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.task.DeadlineTask;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.task.EventTask;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    String dataDirectory;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    File file;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public Storage(String dataDirectory, String pathname) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        this.dataDirectory \u003d dataDirectory;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        this.file \u003d new File(pathname);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Load data from file, parses, and saves as tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * @return a list of tasks corresponding to the ones loaded"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public List\u003cTask\u003e load()  {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            Files.createDirectories(Paths.get(dataDirectory));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            String record;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                record \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                String tokens[] \u003d record.split(\"~\", 3);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                String taskType \u003d tokens[0];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                boolean isDone \u003d Integer.parseInt(tokens[1]) \u003d\u003d 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                String remainingText \u003d tokens[2];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                String description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                switch(taskType) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                    description \u003d remainingText;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                    list.add(new TodoTask(description, isDone));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                    String eventTokens[] \u003d remainingText.split(\"~\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                    description \u003d eventTokens[0];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                    LocalDate at \u003d LocalDate.parse(eventTokens[1]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                    list.add(new EventTask(description, at, isDone));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                    String deadlineTokens[] \u003d remainingText.split(\"~\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                    description \u003d deadlineTokens[0];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                    LocalDate by \u003d LocalDate.parse(deadlineTokens[1]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                    list.add(new DeadlineTask(description, by, isDone));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        } catch(IOException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        finally {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Stores data to file (rewritten after each function call)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public void write(TaskList tasks) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            Files.createDirectories(Paths.get(dataDirectory));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            FileWriter writer \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            for(Task task: tasks.getList()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                writer.write(task.toDBString() + System.lineSeparator());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        } catch(Exception e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 91
    }
  },
  {
    "path": "src/main/java/duke/task/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    private LocalDate by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    static final String TASK_TYPE \u003d \"D\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public DeadlineTask(String description, LocalDate by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public DeadlineTask(String description, LocalDate by, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Converts task to string - task type, tick/check and description"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        return String.format(\"[%s][%s] %s (by: %s)\", TASK_TYPE, getStatusIcon(), description,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Converts task to string representation in database- task type, 1 for done/0 for not done, and description"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public String toDBString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        return TASK_TYPE + \"~\" + super.toDBString() + \"~\" + by.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 35
    }
  },
  {
    "path": "src/main/java/duke/task/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    LocalDate at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    static final String TASK_TYPE \u003d \"E\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public EventTask(String description, LocalDate at) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public EventTask(String description, LocalDate at, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Converts task to string - task type, tick/check and description"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        return String.format(\"[%s][%s] %s (at: %s)\", TASK_TYPE, getStatusIcon(), description,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                at.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Converts task to string representation in database- task type, 1 for done/0 for not done, and description"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public String toDBString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        return TASK_TYPE + \"~\" + super.toDBString() + \"~\" + at.format(DateTimeFormatter.ofPattern(\"yyyy-mm-dd\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 35
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); // return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public String toDBString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        return String.format(\"%s~%s\", isDone ? 1 : 0, description);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 32
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Constructor that initializes the Tasklist with a list of tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public TaskList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Adds a task to the end of the list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * @param task the task to be added"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Removes a task at the given index (0-based)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * @param index index of the task to be deleted (0-based)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        list.remove(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Checks if the TaskList is empty or not"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        return list.isEmpty();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Get the task at a specified index"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * @param index index of the task to be returned (0-based)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * @return the task at the specified index (0-based)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        return list.get(index);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Returns the current size of the TaskList"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Getter for underlying List of Tasks"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Returns filtered tasks based on exact matching with keyword"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * @return a list of tasks that satisfy the constraints"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public TaskList filter(String keyword) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        List\u003cTask\u003e filteredList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        for(Task task: list) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            if(task.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                filteredList.add(task);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        return new TaskList(filteredList);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Returns itemized tasks, each with serial numbers (1-based)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * @return a list of strings of the form \"1. deadline sample task /by time\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public List\u003cString\u003e itemize() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        List\u003cString\u003e itemizedList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        for(int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            itemizedList.add((i + 1) + \". \" + list.get(i));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        return itemizedList;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Returns itemized tasks with an intro message, each with serial numbers (1-based)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * @param introText the text to be displayed before the itemized list"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * @return a list of strings of the form \"1. deadline sample task /by time\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public List\u003cString\u003e itemize(String introText) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        List\u003cString\u003e itemizedList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        itemizedList.add(introText);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        for(int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            itemizedList.add((i + 1) + \". \" + list.get(i));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        return itemizedList;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 111
    }
  },
  {
    "path": "src/main/java/duke/task/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    static final String TASK_TYPE \u003d \"T\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public TodoTask(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public TodoTask(String description, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Converts task to string - task type, tick/check and description"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        return String.format(\"[%s][%s] %s\", TASK_TYPE, getStatusIcon(), description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Converts task to string representation in database- task type, 1 for done/0 for not done, and description"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public String toDBString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        return TASK_TYPE + \"~\" + super.toDBString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 29
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Prints the greeting message and prompt when Duke is launched."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        print(\"Hello! I\u0027m Duke\", \"What can I do for you?\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        print(\"Oops! I wasn\u0027t able to load past tasks properly :(\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Prints the list of strings, each item separated by a newline"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * @param strings a list of strings to be displayed on separate lines"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public void print(List\u003cString\u003e strings) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        final String INDENT \u003d \"\\t\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        final String SEPARATOR \u003d \"_\".repeat(69);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        System.out.println(INDENT + SEPARATOR);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        for(String s: strings) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            System.out.println(INDENT + INDENT + s);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        System.out.println(INDENT + SEPARATOR + \"\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Prints the array of strings, each item separated by a newline"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * @param strings an array of strings to be displayed on separate lines"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public void print(String ...strings) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        print(Arrays.asList(strings));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 42
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.task.DeadlineTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import duke.task.EventTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Check if parser returns appropriate command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public void dukeParser_invalidCommand_throwsDukeException() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        String badCommand \u003d \"lepak rsfsefew\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        DukeException thrown \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(badCommand),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                \"Expected parse() to throw error, but it didn\u0027t\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        assertTrue(thrown.getMessage().contains(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Check if parsing of date during creation of DeadlineTask works"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public void deadlineTaskCreation_sampleObject_correctToString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        assertEquals(new DeadlineTask(\"return book\", LocalDate.parse(\"2019-10-15\")).toString(),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                \"[D][✘] return book (by: Oct 15 2019)\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     * Check if parsing of date during creation of EventTask works"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public void eventTaskCreation_sampleObject_correctToString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        assertEquals(new EventTask(\"COVID\", LocalDate.parse(\"2020-10-15\")).toString(),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                \"[E][✘] COVID (at: Oct 15 2020)\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 43
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "blah"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "mkeoliya": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "# set UTF-8 encoding"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "if"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "  )"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "mkeoliya": 9
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "../src/main/java/ByeCommand.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "../src/main/java/ListCommand.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "../src/main/java/TodoTask.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "../src/main/java/EventTask.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "../src/main/java/Command.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "../src/main/java/AddCommand.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "../src/main/java/DeadlineTask.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "../src/main/java/duke.Duke.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "../src/main/java/DoneCommand.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "../src/main/java/duke.DukeException.java"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 11
    }
  }
]
