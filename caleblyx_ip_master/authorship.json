[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    mainClassName \u003d \"bob.Bob\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 17,
      "-": 44
    }
  },
  {
    "path": "src/main/java/bob/Bob.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class Bob {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private UI uI;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public Bob(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        uI \u003d new UI();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            storage.initialiseStorage();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            storage.loadSave(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (BobException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            uI.printError(e.getMessage());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public Bob() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        System.out.println(uI.greet());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                String command \u003d uI.readCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                Command c \u003d Parser.parse(command);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                assert c !\u003d null : \"A command should be provided\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                System.out.println(c.execute(tasks, uI, storage));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            } catch (BobException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                System.out.println(uI.printError(e.getMessage()));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        new Bob(\"data/save.txt\").run();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    String getResponse(String input) throws BobException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            String command \u003d input;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            Command c \u003d Parser.parse(command);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            assert c !\u003d null : \"A command should be provided\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return c.execute(tasks, uI, storage);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "caleblyx": 62
    }
  },
  {
    "path": "src/main/java/bob/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.MainWindow;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.scene.effect.DropShadow;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.scene.paint.ImagePattern;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private Circle displayPicture;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private DialogBox(String text, Image img, String path) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(path));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        displayPicture.setStroke(Color.DODGERBLUE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        displayPicture.setFill(new ImagePattern(img));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        displayPicture.setEffect(new DropShadow(+25d, 0d, +2d, Color.DODGERBLUE));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        var db \u003d new DialogBox(text, img, \"/view/DialogBoxUser.fxml\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        var db \u003d new DialogBox(text, img, \"/view/DialogBox.fxml\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public static DialogBox getDukeDialogError(String text, Image img) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        var db \u003d new DialogBox(text, img, \"/view/DialogBoxError.fxml\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        db.displayPicture.setStroke(Color.CRIMSON);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        db.displayPicture.setEffect(new DropShadow(+25d, 0d, +2d, Color.CRIMSON));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 78
    }
  },
  {
    "path": "src/main/java/bob/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.Bob;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 9
    }
  },
  {
    "path": "src/main/java/bob/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public Main() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private Bob bob \u003d new Bob();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        AnchorPane anchorPane \u003d new MainWindow();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        Scene scene \u003d new Scene(anchorPane);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 30
    }
  },
  {
    "path": "src/main/java/bob/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.animation.PauseTransition;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private Bob bob;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private Image bobImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Bob.png\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    //@@Author"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public MainWindow() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        this.bob \u003d new Bob(\"data/save.txt\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(UI.greet(), bobImage));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        String response \u003d null;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            response \u003d bob.getResponse(input);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                    DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                    DialogBox.getDukeDialog(response, bobImage)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            );"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (BobException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            response \u003d e.getMessage();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                    DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                    DialogBox.getDukeDialogError(response, bobImage)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            );"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        if (response \u003d\u003d \"Bye! I hope to see you soon! \\n[This window will close in 3 seconds.]\") {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            Duration delay \u003d Duration.seconds(3);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            PauseTransition transition \u003d new PauseTransition(delay);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            transition.setOnFinished(evt -\u003e Platform.exit());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            transition.play();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 87
    }
  },
  {
    "path": "src/main/java/bob/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.command.RescheduleCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.command.SnoozeCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobFindNoKeyWordsException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobIncompleteDeadlineDescriptionException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobIncompleteEventDescriptionException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobIncorrectRescheduleFormatException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobIncorrectSnoozeFormatException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobNoDescriptionException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobNumberFormatException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.task.Deadline;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.task.Event;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.task.Task;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.task.Todo;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * This class consists of the parse method which parses user input and determines"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * the correct command for Bob to execute."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    static final int TODO_DESCRIPTION_INDEX \u003d 5;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    static final int DEADLINE_DESCRIPTION_INDEX \u003d 9;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    static final int EVENT_DESCRIPTION_INDEX \u003d 6;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    static final int FIND_KEYWORD_INDEX \u003d 5;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns the appropriate command for Bob to execute by parsing a provided String command by the user."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param command a String consisting of a command to be parsed for Bob to execute."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return a command that corresponds to provided String command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @throws BobException if a command cannot be parsed from the provided String command."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public static Command parse(String command) throws BobException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        boolean isTask \u003d command.contains(\"todo\") || command.contains(\"deadline\") || command.contains(\"event\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        if (command.startsWith(\"list\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } else if (command.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return parseDone(command);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } else if (isTask) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return parseTask(command);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } else if (command.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return parseDelete(command);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } else if (command.startsWith(\"bye\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } else if (command.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return parseFind(command);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } else if (command.startsWith(\"snooze\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return parseSnooze(command);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } else if (command.startsWith(\"reschedule\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return parseReschedule(command);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            throw new BobException();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    static Command parseTask(String command) throws BobException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        if (command.contains(\"todo\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                task \u003d new Todo(command.substring(TODO_DESCRIPTION_INDEX));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                throw new BobNoDescriptionException();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } else if (command.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                //finds the index of the char representing \u0027/\u0027"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                int index \u003d command.indexOf(47);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                if (command.substring(DEADLINE_DESCRIPTION_INDEX, index).isEmpty()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                    throw new BobIncompleteDeadlineDescriptionException();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                String description \u003d command.substring(DEADLINE_DESCRIPTION_INDEX, index - 1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                String deadline \u003d command.substring(index + 4);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                task \u003d new Deadline(description, deadline);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                throw new BobIncompleteDeadlineDescriptionException();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } else if (command.contains(\"event\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                //finds the index of the char representing \u0027/\u0027"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                int index \u003d command.indexOf(47);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                if (command.substring(EVENT_DESCRIPTION_INDEX, index).equals(\"\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                    throw new BobIncompleteEventDescriptionException();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                String description \u003d command.substring(EVENT_DESCRIPTION_INDEX, index - 1);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                String period \u003d command.substring(index + 4);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                task \u003d new Event(description, period);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                throw new BobIncompleteEventDescriptionException();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return new AddCommand(task);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    static Command parseDone(String command) throws BobException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            index \u003d Integer.parseInt(command.substring(command.length() - 1));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            throw new BobNumberFormatException();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return new DoneCommand(index);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    static Command parseDelete(String command) throws BobException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            index \u003d Integer.parseInt(command.substring(command.length() - 1));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            throw new BobNumberFormatException();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return new DeleteCommand(index);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    static Command parseFind(String command) throws BobException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return new FindCommand(command.substring(FIND_KEYWORD_INDEX));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            throw new BobFindNoKeyWordsException();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    static Command parseSnooze(String command) throws BobException {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            String[] split \u003d command.split(\"/\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            String deadline \u003d split[1].substring(3);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            int index \u003d Integer.parseInt(split[0].split(\" \")[1]);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return new SnoozeCommand(index, deadline);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            throw new BobIncorrectSnoozeFormatException();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            throw new BobIncorrectSnoozeFormatException();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    static Command parseReschedule(String command) throws BobException {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            String[] split \u003d command.split(\"/\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            String period \u003d split[1].substring(3);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            int index \u003d Integer.parseInt(split[0].split(\" \")[1]);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return new RescheduleCommand(index, period);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            throw new BobIncorrectRescheduleFormatException();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            throw new BobIncorrectRescheduleFormatException();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 159
    }
  },
  {
    "path": "src/main/java/bob/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobDateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobFileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobIOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobIndexOutOfBoundsException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobStorageInitialisationException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.task.Todo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * This class consists of methods pertaining to the management of data storage for Bob."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /** The File where data will be stored. */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private File save;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /** The FileWriter which will write data to storage. */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private FileWriter writer;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Constructs a text file for data storage at the provided file path."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param filePath the designated file path where data will be stored."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        this.save \u003d new File(filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Initialises storage for Bob."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * The method first checks if the provided file and its"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * directories exist, and creates them if they do not."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * The method also creates a writer for the file so that data may be written or appended to it."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @throws BobStorageInitialisationException"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public void initialiseStorage() throws BobStorageInitialisationException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        File directory \u003d new File(this.save.getParent());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        directory.mkdirs();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            save.createNewFile();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            throw new BobStorageInitialisationException();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            writer \u003d new FileWriter(save, true);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            throw new BobStorageInitialisationException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Loads existing data that may be accessed by Bob."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * A scanner scans a text file consisting of saved data, and"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * creates tasks accordingly, which are added to the provided TaskList"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * used by Bob."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param tasks the TaskList used by Bob. Created tasks from the text file"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *              will be added accordingly to this."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @throws BobFileNotFoundException if the file to load from does not exist."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public void loadSave(TaskList tasks) throws BobIOException, BobFileNotFoundException, BobDateTimeParseException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        Scanner sc \u003d null;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            sc \u003d new Scanner(save);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            throw new BobFileNotFoundException();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            String str \u003d sc.nextLine();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            if (!str.isEmpty()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                Task task \u003d loadTask(str);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**Updates the Storage\u0027s text file according to the tasks in a provided TaskList."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * The method clears all data on the Storage\u0027s text file. It then"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * iterates through all tasks on the TaskList and adds their data to the Storage\u0027s text file."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param tasks the TaskList consisting of all tasks tracked by Bob."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @throws BobIOException if the Storage\u0027s text file does not exist."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @throws BobIndexOutOfBoundsException if the method tries to get a task with an index that is not on the TaskList."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public void updateSave(TaskList tasks) throws BobIOException, BobIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        FileWriter deleter \u003d null;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            deleter \u003d new FileWriter(save);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            throw new BobIOException();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        for (int i \u003d 1; i \u003c tasks.size()+1; i++) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                deleter.append(task.saveFormat() + System.lineSeparator());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                throw new BobIOException();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            deleter.close();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            throw new BobIOException();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Appends provided data to the Storage\u0027s text file."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param data to be appended to the Storage\u0027s text file."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @throws BobIOException if the Storage\u0027s text file does not exist."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public void appendToStorage(String data) throws BobIOException {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            writer.append(data);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            throw new BobIOException();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Flushes the Storage\u0027s writer."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @throws BobIOException if the Storage\u0027s text file does not exist."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public void flushWriter() throws BobIOException {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            writer.flush();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            throw new BobIOException();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Closes the Storage\u0027s writer."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @throws BobIOException if the Storage\u0027s text file does not exist."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public void closeWriter() throws BobIOException {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            throw new BobIOException();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public Task loadTask(String data) throws BobDateTimeParseException {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        String[] taskDataArr \u003d data.split(\"\\\\|\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        char firstChar \u003d taskDataArr[0].charAt(0);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        boolean isDone \u003d taskDataArr[1].substring(1, 2).equals(\"1\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        if (firstChar \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            String description \u003d taskDataArr[2].substring(1);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return new Todo(isDone, description);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } else if (firstChar \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            String description \u003d taskDataArr[2].substring(1, taskDataArr[2].length() - 1);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            String deadline \u003d taskDataArr[3].substring(1);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return new Deadline(isDone, description, deadline);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } else if (firstChar \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            String description \u003d taskDataArr[2].substring(1, taskDataArr[2].length() - 1);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            String period \u003d taskDataArr[3].substring(1);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return new Event(isDone, description, period);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 183
    }
  },
  {
    "path": "src/main/java/bob/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobIndexOutOfBoundsException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "/** Encapsulates a list of tasks */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /** An array list consisting of tasks. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Constructs a TaskList by assigning the list parameter to a newly constructed"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * empty Task ArrayList."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Deletes a task from list with at index minus one."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param index the index (plus one) of the task to be removed from the list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @throws BobIndexOutOfBoundsException if a task on the list does not have the provided index."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public void delete(int index) throws BobIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            list.remove(index - 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            throw new BobIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Adds a task to list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param task the task to be added to the list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Retrieves the task at a provided index minus one from list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param index the index (plus one) of the task to be retrieved from list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @throws BobIndexOutOfBoundsException"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public Task get(int index) throws BobIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return list.get(index - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch(IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            throw new BobIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns the size of TaskList."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return the size of list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns a boolean value indicating if the TaskList is empty."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return true or false if the list is empty or not empty respectively."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return list.isEmpty();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns a TaskList of tasks containing the provided key words or phrases."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param keyWord the key words or phrases that are being searched for in the TaskList."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return a TaskList of tasks containing the provided key words or phrases."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @throws BobIndexOutOfBoundsException if trying to access an index that does not exist on TaskList."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public TaskList contains(String keyWord) throws BobIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        TaskList keyWordTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        for(int i \u003d 1; i \u003c this.size(); i++) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            if (this.get(i).toString().contains(keyWord)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                keyWordTasks.add(this.get(i));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return keyWordTasks;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 93
    }
  },
  {
    "path": "src/main/java/bob/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobIndexOutOfBoundsException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * This class consists of methods which prints out information that may be helpful to the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * It also consists of a single method which accepts user input, which may be passed to Bob\u0027s"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * parser."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /** A scanner which scans user\u0027s input */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Prints out a greeting from Bob to the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public static String greet() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        String greetings \u003d \"Hello! I\u0027m Bob\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return greetings;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Iterates through a TaskList to print out all tasks on the TaskList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param tasks the TaskList to be printed out."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @throws BobIndexOutOfBoundsException if the method tries to retrieve a task with an index not on the list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String printOutList(TaskList tasks) throws BobIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        String list \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        for (int i \u003d 1; i \u003c tasks.size()+1; i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            if (i \u003d\u003d tasks.size()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                list +\u003d i + \".\" + task.toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                list +\u003d i + \".\" + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return \"There are no tasks in the list at the moment. Feel free to add any.\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Prints out a message to indicate that a task of a particular index has been deleted from the TaskList."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param tasks the TaskList from which the task has been deleted."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param index the index of the task on the TaskList that has been deleted."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @throws BobIndexOutOfBoundsException if the index of the task to be deleted does not exist on the TaskList."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String deleteTask(TaskList tasks, int index) throws BobIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        int newSize \u003d tasks.size() - 1;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return \"Noted. I have removed the following task:\\n\\t\" + task.toString()"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                + \"\\nThere are now \" + newSize + \" remaining tasks on the list.\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Prints out a message to indicate that a task of a particular index has been marked as done on the TaskList."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param tasks the TaskList from which the task has been marked as done."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param index the index of the task on the TaskList that has been marked as done."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @throws BobIndexOutOfBoundsException if the index of the task to be marked as done does not exist on the TaskList."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String markAsDone(TaskList tasks, int index) throws BobIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return \"Good job! I have marked this task as done:\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                + \"\\n\\t\" + index + \".\" + task.toString();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Prints out a message to indicate that a task has been added to the TaskList."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param task the task that has been added to TaskList."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String addTask(Task task) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return \"Got it! I have added a new task to the list.\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                + \"\\n\\tadded: \\n\\t\" + task.toString();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns user input."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return user input."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Prints out an error message."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param error the error message to be printed out."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String printError(String error) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return error;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String findKeyWord(TaskList tasks) throws BobIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        if (!tasks.isEmpty()) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            String message \u003d \"Here are the tasks in your lists which match: \";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                message +\u003d \"\\n\\t\" + i + \".\" + task.toString();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return message;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return \"None of the tasks in your list match.\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String snoozeTask(TaskList tasks, int index) throws BobIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return \"Noted. I have updated the task to the following: \""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                + \"\\n\\t\" + tasks.get(index).toString();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String rescheduleTask(TaskList tasks, int index) throws BobIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return \"Noted. I have updated the task to the following: \""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                + \"\\n\\t\" + tasks.get(index).toString();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String exit() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return \"Bye! I hope to see you soon! \\n[This window will close in 3 seconds.]\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 130
    }
  },
  {
    "path": "src/main/java/bob/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobIOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * This command when executed adds a task to the TaskList and calls"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * the UI class and Storage class to print out the appropriate messages"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * and update stored data respectively."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /** The task to be added to the TaskList when the command is executed. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /** Constructs an AddCommand with a task assigned to the task parameter. */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Executes the command to add the task to TaskList and update the Storage data accordingly."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * It also calls on the provided UI to print out the appropriate messages."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param tasks the TaskList consisting of all tasks tracked by Bob."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param ui the UI which prints out all messages corresponding to the Command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param storage the Storage which manages all saved data to be updated."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @throws BobIOException if Storage\u0027s text file does not exist."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String execute(TaskList tasks, UI ui, Storage storage) throws BobIOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        assert task !\u003d null : \"A task should be provided\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        assert tasks !\u003d null : \"A tasklist should be provided\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        assert storage !\u003d null : \"Storage should be provided\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        assert ui !\u003d null : \"A UI should be provided\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        storage.appendToStorage(task.saveFormat() + System.lineSeparator());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        storage.flushWriter();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return ui.addTask(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns a boolean value to indicate if this command is equal to an object by determining if"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * task parameters are equal."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param o"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return true or false if AddCommand is equal or not equal to the object respectively."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } else if (o instanceof AddCommand) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            AddCommand c \u003d (AddCommand) o;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return c.task.equals(this.task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns the string representation of the AddCommand which includes the string representation of the to-be-added task."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return string representation of AddCommand."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return \"Adds \" + task.toString() + \" to list.\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 73
    }
  },
  {
    "path": "src/main/java/bob/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * An abstraction of commands which may be executed by Bob."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Executes the command by updating the TaskList and Storage accordingly, and printing out"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * the appropriate message from the UI."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param tasks the TaskList consisting of all tasks tracked by Bob."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param ui the UI which prints out all messages corresponding to the Command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param storage the Storage which manages all saved data to be updated."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @throws BobException if any errors arise."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public abstract String execute(TaskList tasks, UI ui, Storage storage) throws BobException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns a boolean value to indicate if Bob should stop accepting commands from the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return false to indicate that Bob should continue accepting commands."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 35
    }
  },
  {
    "path": "src/main/java/bob/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobIOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobIndexOutOfBoundsException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.UI;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * This command when executed deletes a task of a particular index from the TaskList and calls"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * the UI class and Storage class to print out the appropriate messages"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * and update stored data respectively."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /** The index of the task to be deleted from the TaskList */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /** Constructs a DeleteCommand by assigning a provided integer to the index parameter. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Executes the command to delete the task from the TaskList and update the Storage data accordingly."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * It also calls on the provided UI to print out the appropriate messages."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param tasks the TaskList consisting of all tasks tracked by Bob."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param ui the UI which prints out all messages corresponding to the Command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param storage the Storage which manages all saved data to be updated."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @throws BobIOException if Storage\u0027s text file does not exist."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @throws BobIndexOutOfBoundsException if the index of the task to be deleted does not exist on TaskList."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String execute(TaskList tasks, UI ui, Storage storage) throws BobIOException, BobIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        assert tasks !\u003d null : \"A tasklist should be provided\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        assert storage !\u003d null : \"Storage should be provided\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        assert ui !\u003d null : \"A UI should be provided\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        String message \u003d ui.deleteTask(tasks, index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        tasks.delete(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        storage.updateSave(tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 46
    }
  },
  {
    "path": "src/main/java/bob/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobIOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobIndexOutOfBoundsException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.UI;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * This command when executed marks a task of a particular index on the TaskList as done and calls"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * the UI class and Storage class to print out the appropriate messages"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * and update stored data respectively."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /** The index of the task to be marked as done on the TaskList */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /** Constructs a DoneCommand by assigning a provided integer to the index parameter. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Executes the command to mark the task as done on the TaskList and update the Storage data accordingly."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * It also calls on the provided UI to print out the appropriate messages."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param tasks the TaskList consisting of all tasks tracked by Bob."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param ui the UI which prints out all messages corresponding to the Command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param storage the Storage which manages all saved data to be updated."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @throws BobIOException if Storage\u0027s text file does not exist."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @throws BobIndexOutOfBoundsException if the index of the task to be marked as done does not exist on TaskList."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String execute(TaskList tasks, UI ui, Storage storage) throws BobIOException, BobIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        assert tasks !\u003d null : \"A tasklist should be provided\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        assert storage !\u003d null : \"Storage should be provided\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        assert ui !\u003d null : \"A UI should be provided\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        storage.updateSave(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return ui.markAsDone(tasks, index);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 44
    }
  },
  {
    "path": "src/main/java/bob/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * This command indicates that Bob may terminate."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Executes nothing."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param tasks the TaskList consisting of all tasks tracked by Bob."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param ui the UI which prints out all messages corresponding to the Command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param storage the Storage which manages all saved data to be updated."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @throws BobException"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return ui.exit();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns false to indicate that Bob may terminate."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 35
    }
  },
  {
    "path": "src/main/java/bob/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * This command when executed creates a TaskList of tasks that contains key words or phrases. The UI is called on"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * to print out this list alongside the appropriate messages."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * The key word or phrases to be searched for in a TaskList."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private String keyWord;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Constructs a FindCommand by assigning a String to the keyWord parameter."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param keyWord the key word or phrases to be searched for in the TaskList."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public FindCommand(String keyWord) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        this.keyWord \u003d keyWord;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Creates a TaskList of tasks that contains key words or phrases, that is then printed out by the UI"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * alongside appropriate messages."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param tasks the TaskList consisting of all tasks tracked by Bob."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param ui the UI which prints out all messages corresponding to the Command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param storage the Storage which manages all saved data to be updated."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @throws BobException"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String execute(TaskList tasks, UI ui, Storage storage) throws BobException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        assert tasks !\u003d null : \"A tasklist should be provided\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        assert storage !\u003d null : \"Storage should be provided\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        assert ui !\u003d null : \"A UI should be provided\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return ui.findKeyWord(tasks.contains(keyWord));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 45
    }
  },
  {
    "path": "src/main/java/bob/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobIndexOutOfBoundsException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * This command when executed prints out all tasks on a TaskList."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Executes the command by calling on the UI to print out the contents of a TaskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param tasks the TaskList consisting of all tasks tracked by Bob."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param ui the UI which prints out all messages corresponding to the Command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param storage the Storage which manages all saved data to be updated."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @throws BobIndexOutOfBoundsException"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String execute(TaskList tasks, UI ui, Storage storage) throws BobIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        assert tasks !\u003d null : \"A tasklist should be provided\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return ui.printOutList(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 26
    }
  },
  {
    "path": "src/main/java/bob/command/RescheduleCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobNotAnEventException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.task.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.task.Event;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class RescheduleCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private String newPeriod;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public RescheduleCommand(int index, String newPeriod) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        this.newPeriod \u003d newPeriod;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String execute(TaskList tasks, UI ui, Storage storage) throws BobException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        boolean isEvent \u003d task instanceof Event;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        if (isEvent) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            ((Event) task).reschedule(newPeriod);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            storage.updateSave(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return ui.rescheduleTask(tasks, index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            throw new BobNotAnEventException();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 36
    }
  },
  {
    "path": "src/main/java/bob/command/SnoozeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobNotADeadlineException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class SnoozeCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private String newDeadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public SnoozeCommand(int index, String newDeadline) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        this.newDeadline \u003d newDeadline;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String execute(TaskList tasks, UI ui, Storage storage) throws BobException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        boolean isDeadline \u003d task instanceof Deadline;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        if (isDeadline) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            ((Deadline) task).snooze(newDeadline);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            storage.updateSave(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return ui.snoozeTask(tasks, index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            throw new BobNotADeadlineException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 34
    }
  },
  {
    "path": "src/main/java/bob/exception/BobDateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class BobDateTimeException extends BobException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return \"Please provide dates using the following format: YYYY-MM-DD\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 8
    }
  },
  {
    "path": "src/main/java/bob/exception/BobDateTimeParseException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * An exception that may be thrown when an error occurs during the parsing of dates and times."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class BobDateTimeParseException extends BobException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns a message which indicates the correct format of dates and times."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return a message with the correct format of dates and times."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return \"Please input dates and times in the correct format. The format is: \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                + \"\\nyyyy-MM-dd HHMM\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                + \"\\nNote: Events require a start date and time and an end date and time with the following format:\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                + \"\\nyyyy-MM-dd HHMM to yyyy-MM-dd HHMM\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 20
    }
  },
  {
    "path": "src/main/java/bob/exception/BobException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * Encapsulates exceptions that may be thrown when Bob runs."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class BobException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns an error message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return an error message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return \"Sorry, but I do not understand your request. Please try again.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 16
    }
  },
  {
    "path": "src/main/java/bob/exception/BobFileNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * An exception which may be thrown when a desired file cannot be found."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class BobFileNotFoundException extends BobException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns a message to indicate that the file cannot be found."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return a message to indicate that the file cannot be found."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return \"File not found.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 16
    }
  },
  {
    "path": "src/main/java/bob/exception/BobFindNoKeyWordsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * An exception which may be thrown when a key words are not provided."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class BobFindNoKeyWordsException extends BobException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns a message to indicate that a key word was not provided."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return a message to indicate that a key word was not provided."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return \"A key word or phrase was not provided. \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                + \"Please provide the key word or phrase that you\u0027re trying to find.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 17
    }
  },
  {
    "path": "src/main/java/bob/exception/BobIOException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * An exception to be thrown when trying to access a file which does not exist."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class BobIOException extends BobException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns a message to indicate that information could not be saved to a file."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return a message to indicate that information could not be saved to a file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return \"Sorry, but I had difficulty saving your information. Please try again.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 17
    }
  },
  {
    "path": "src/main/java/bob/exception/BobIncompleteDeadlineDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * An exception to be thrown when an incomplete deadline description is provided."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class BobIncompleteDeadlineDescriptionException extends BobException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns a message that indicates the deadline description provided is incomplete, and the correct format."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return a message that indicates the deadline description provided is incomplete, and the correct format."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return \"The description for this deadline is incomplete. \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                + \"Please remember to include a brief description alongside a due date.\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                + \"Here\u0027s the format: deadline [brief description] /by [due date]\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 19
    }
  },
  {
    "path": "src/main/java/bob/exception/BobIncompleteEventDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * An exception to be thrown when an incomplete event description is provided."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class BobIncompleteEventDescriptionException extends BobException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns a message that indicates the event description provided is incomplete, and the correct format."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return a message that indicates the event description provided is incomplete, and the correct format."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return \"The description for this event is incomplete. \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                + \"Please remember to include a brief description alongside the period of this event.\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                + \"Here\u0027s the format: event [brief description] /at [period]\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 18
    }
  },
  {
    "path": "src/main/java/bob/exception/BobIncorrectRescheduleFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class BobIncorrectRescheduleFormatException extends BobException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return \"Please try to use the following format to snooze a task:\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                + \"\\n\\t snooze [index] /to [date 1] (YYYY-MM-DD) to [date 2] (YYYY-MM-DD)\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 8
    }
  },
  {
    "path": "src/main/java/bob/exception/BobIncorrectSnoozeFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class BobIncorrectSnoozeFormatException extends BobException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return \"Please try to use the following format to snooze a task:\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                + \"\\n\\t snooze [index] /to [deadline] (YYYY-MM-DD)\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 8
    }
  },
  {
    "path": "src/main/java/bob/exception/BobIndexOutOfBoundsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * An exception to be thrown when trying to access an index which does not exist."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class BobIndexOutOfBoundsException extends BobException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns a message that indicates the index on the TaskList does not exist."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return a message that indicates the index on the TaskList does not exist."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return \"There are no tasks on the list with the provided index. Please check the list and try again.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 17
    }
  },
  {
    "path": "src/main/java/bob/exception/BobNoDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * An exception to be thrown when a description is not provided."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class BobNoDescriptionException extends BobException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns a message that indicates a description has not been provided."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return a message that indicates a description has not been provided."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return \"Please include a description for this todo!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 17
    }
  },
  {
    "path": "src/main/java/bob/exception/BobNotADeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class BobNotADeadlineException extends BobException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return \"This task does not have a deadline and therefore may not be snoozed.\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 7
    }
  },
  {
    "path": "src/main/java/bob/exception/BobNotAnEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class BobNotAnEventException extends BobException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return \"This task is not an event and therefore may not be rescheduled.\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 7
    }
  },
  {
    "path": "src/main/java/bob/exception/BobNumberFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * An exception to be thrown when a required index is not provided."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class BobNumberFormatException extends BobException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns a message that indicates a required index has not been provided, alongside a format to be followed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return a message that indicates a required index has not been provided, alongside a format to be followed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return \"Please provide the index of a task on the list to mark it as done or to delete it.\\nHere\u0027s the \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                + \"format: \\n\\tdelete/done [index]\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 18
    }
  },
  {
    "path": "src/main/java/bob/exception/BobStorageInitialisationException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * An exception to be thrown when an error occurs during Storage initialisation."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class BobStorageInitialisationException extends BobException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns a message to indicate that the Storage could not be initialised."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return a message to indicate that the Storage could not be initialised."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return \"Could not initialise storage\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 17
    }
  },
  {
    "path": "src/main/java/bob/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobDateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * Encapsulates a task with a deadline."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**The deadline of the task to be completed by. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private LocalDateTime  deadline;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**The format of inputted dates that the class can accept. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private static final DateTimeFormatter INPUT_DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**The format of outputted dates by the class. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private static final DateTimeFormatter OUTPUT_DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Constructs a task that has not been completed"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * with a brief description and deadline for the task to be completed by."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param description a brief description of the deadline."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param deadline a String in a specific format (inputFormatter) which specifies a date."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public Deadline(String description, String deadline) throws BobDateTimeParseException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            this.deadline \u003d LocalDateTime.parse(deadline, INPUT_DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            throw new BobDateTimeParseException();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Constructs a task, which may or may not have been completed,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * with a brief description and deadline for the task to be completed by."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param isDone indicates if the deadline has been completed."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param description a brief description of the deadline."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param deadline a String in a specific format (inputFormatter) which specifies a date."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public Deadline(boolean isDone, String description, String deadline) throws BobDateTimeParseException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        super(isDone, description);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            this.deadline \u003d LocalDateTime.parse(deadline, INPUT_DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            throw new BobDateTimeParseException();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns a String representation of the deadline with the format of outputFormatter."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return a String representation of the deadline with the format of outputFormatter."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public void snooze(String newDeadline) throws BobDateTimeParseException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            this.deadline \u003d LocalDateTime.parse(newDeadline, INPUT_DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            throw new BobDateTimeParseException();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            throw new BobDateTimeParseException();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return this.deadline.format(OUTPUT_DATE_TIME_FORMAT).toString();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns a String representation of the task."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * This representation includes the status icon, description, and deadline in the format of outputFormatter."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return a String representation of the task."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription() + \" (by: \" + getDeadline() +\")\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns a boolean value indicating if the task is equal to"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * another object by determining if descriptions, deadline, and isDone parameters"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * are equal."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param o an object that is compared to the task to determine if both are equal"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return true or false if the task is equal or not equal to the object respectively."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } else if (o instanceof Deadline) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            Deadline task \u003d (Deadline) o;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            boolean isEqualDeadlines \u003d this.description.equals(task.description)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                    \u0026\u0026 this.deadline.equals(task.deadline) \u0026\u0026 this.isDone \u003d\u003d task.isDone;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return isEqualDeadlines;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns the string representation of the task in a format to be inputted into a text file for data storage."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return the string representation of the task to be saved in a text file."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String saveFormat() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return \"D | 1 | \" + this.getDescription() + \" | \" + this.deadline.format(INPUT_DATE_TIME_FORMAT).toString();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return \"D | 0 | \" + this.getDescription() + \" | \" + this.deadline.format(INPUT_DATE_TIME_FORMAT).toString();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 122
    }
  },
  {
    "path": "src/main/java/bob/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.Bob;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobDateTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobDateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * Encapsulates a task to be completed over a span of time (i.e period)."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**The date and time at which the event begins. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private LocalDateTime start;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**The date and time at which the event ends. */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private LocalDateTime end;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**The format of inputted dates and times that the class can accept. */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private static final DateTimeFormatter INPUT_DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**The format of outputted dates and times by the class. */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private static final DateTimeFormatter OUTPUT_DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private static final int END_OF_FIRST_DATE_TIME_INDEX \u003d 15;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    private static final int START_OF_SECOND_DATE_TIME_INDEX \u003d 19;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Constructs an event that has not been completed with a brief"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * description and period of time."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param description a brief description of the event."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param period two dates and times with the format of inputFormatter in the form of"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *               -start- to -end-."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public Event (String description, String period) throws BobDateTimeParseException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            this.start \u003d LocalDateTime.parse(period.substring(0, END_OF_FIRST_DATE_TIME_INDEX), INPUT_DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            this.end \u003d LocalDateTime.parse(period.substring(START_OF_SECOND_DATE_TIME_INDEX), INPUT_DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            throw new BobDateTimeParseException();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Constructs an event which may or may not be completed"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * with a brief description and period of time."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param isDone indicates if the event has been completed."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param description a brief description of the event."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param period two dates with the format of inputFormatter in the form of"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *               start date- to -end date-."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public Event(boolean isDone, String description, String period) throws BobDateTimeParseException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        super(isDone, description);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            this.start \u003d LocalDateTime.parse(period.substring(0, END_OF_FIRST_DATE_TIME_INDEX), INPUT_DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            this.end \u003d LocalDateTime.parse(period.substring(START_OF_SECOND_DATE_TIME_INDEX), INPUT_DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            throw new BobDateTimeParseException();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns the String representation of the period of time which the event occurred over. in the"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * form of -start- to -end-."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Dates and times are in the format of outputFormatter."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return the String representation of the period of which the event occurred over."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String getPeriod() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return this.start.format(OUTPUT_DATE_TIME_FORMAT).toString() + \" to \" + this.end.format(OUTPUT_DATE_TIME_FORMAT).toString();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public void reschedule(String newPeriod) throws BobDateTimeParseException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            this.start \u003d LocalDateTime.parse(newPeriod.substring(0, END_OF_FIRST_DATE_TIME_INDEX), INPUT_DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            this.end \u003d LocalDateTime.parse(newPeriod.substring(START_OF_SECOND_DATE_TIME_INDEX), INPUT_DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            throw new BobDateTimeParseException();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            throw new BobDateTimeParseException();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns the string representation of the event, which includes the status icon, description, and period."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return the string representation of the event."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription() + \" (at: \" + getPeriod() +\")\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns a boolean value indicating if the event is equal to another object by"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * determining if isDone, start, end, and description parameters are equal."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param o an object that is compared to the task to determine if both are equal"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return true or false if the event is equal or not equal to the object."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } else if (o instanceof Event) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            Event task \u003d (Event) o;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            boolean isEqualEvents \u003d this.description.equals(task.description) \u0026\u0026 this.start.equals(task.start)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                    \u0026\u0026 this.end.equals(task.end) \u0026\u0026 this.isDone \u003d\u003d task.isDone;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return isEqualEvents;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns the string representation of the task in a format to be inputted into a text file for data storage."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return the string representation of the task to be saved in a text file."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String saveFormat() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return \"E | 1 | \" + this.getDescription() + \" | \" + this.start.format(INPUT_DATE_TIME_FORMAT)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                    + \" to \" + this.end.format(INPUT_DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return \"E | 0 | \" + this.getDescription() + \" | \" + this.start.format(INPUT_DATE_TIME_FORMAT)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                    + \" to \" + this.end.format(INPUT_DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "caleblyx": 141
    }
  },
  {
    "path": "src/main/java/bob/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * Encapsulates a Task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /** A brief description of the task. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /** Tracks the completion of the task */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Constructs a task that has not been completed with a description."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param description a brief description of the task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Constructs a task, which may or may not have been completed, with a description."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param isDone indicates if the task has been completed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param description a brief description of the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public Task(boolean isDone, String description) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns the status icon of the task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns tick symbol when task is indicated as done."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns X symbol when task is not indicated as done."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return the status icon of the task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns the description of the task as a string."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return the description of the task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Indicates that the task has been completed."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns a boolean value indicating if the task is equal to"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * another object by determining if descriptions and isDone parameters"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * are equal."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param o an object that is compared to the task to determine if both are equal"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return true or false if the object is equal or not equal to the task respectively."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } else if (o instanceof Task) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            Task task \u003d (Task) o;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            boolean isEqualTask \u003d this.description.equals(task.description) \u0026\u0026 this.isDone \u003d\u003d task.isDone;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return isEqualTask;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns the string representation of task, which includes the status icon"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * and description."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return the string representation of the task."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Returns the string representation of the task in a format to be inputted into a text file for data storage."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @return the string representation of the task to be saved in a text file."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public String saveFormat() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return \"T | 1 | \" + this.getDescription();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            return \"T | 0 | \" + this.getDescription();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "caleblyx": 108
    }
  },
  {
    "path": "src/main/java/bob/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package bob.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " * Encapsulates a Todo which inherits a Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Constructs a Todo that has not been completed with a brief description."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param description a brief description of the Todo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * Constructs a Todo, which may or may not be done, with a brief description."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param isDone indicates if the todo is completed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     * @param description brief description of the todo."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public Todo(boolean isDone, String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        super(isDone, description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 27
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" snapToPixel\u003d\"false\" style\u003d\"-fx-background-color: PaleGreen; -fx-background-radius: 15; -fx-border-color: LimeGreen; -fx-border-radius: 15; -fx-label-padding: 5;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            \u003cFont name\u003d\"Arial\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "      \u003cCircle fx:id\u003d\"displayPicture\" fill\u003d\"DODGERBLUE\" radius\u003d\"23.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 23
    }
  },
  {
    "path": "src/main/resources/view/DialogBoxError.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" snapToPixel\u003d\"false\" style\u003d\"-fx-background-color: PaleGreen; -fx-background-radius: 15; -fx-border-color: LimeGreen; -fx-border-radius: 15; -fx-label-padding: 5;\" text\u003d\"Label\" textFill\u003d\"#ff0a0a\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            \u003cFont name\u003d\"Arial\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "      \u003cCircle fx:id\u003d\"displayPicture\" fill\u003d\"DODGERBLUE\" radius\u003d\"23.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 23
    }
  },
  {
    "path": "src/main/resources/view/DialogBoxUser.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" snapToPixel\u003d\"false\" style\u003d\"-fx-background-color: GainsBoro; -fx-background-radius: 15; -fx-border-color: DimGrey; -fx-border-radius: 15; -fx-label-padding: 5;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            \u003cFont name\u003d\"Arial\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "      \u003cCircle fx:id\u003d\"displayPicture\" fill\u003d\"DODGERBLUE\" radius\u003d\"23.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 23
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" type\u003d\"AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: OldLace;\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 19
    }
  },
  {
    "path": "src/test/java/main/java/BobEventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobDateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class BobEventTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public void getPeriod_period_success() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        Event event \u003d null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            event \u003d new Event(\"meet friends\",\"2020-05-18 2000 to 2020-05-18 2100\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (BobDateTimeParseException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        Assertions.assertEquals(\"May 18 2020 2000 to May 18 2020 2100\", event.getPeriod());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public void saveFormat_savedData_success() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        Event event \u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            event \u003d new Event(\"meet friends\",\"2020-05-18 2000 to 2020-05-18 2100\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (BobDateTimeParseException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        Assertions.assertEquals(\"E | 0 | meet friends | 2020-05-18 2000 to 2020-05-18 2100\", event.saveFormat());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public void toString_eventString_success() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        Event event \u003d null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            event \u003d new Event(\"meet friends\",\"2020-05-18 2000 to 2020-05-18 2100\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (BobDateTimeParseException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        Assertions.assertEquals(\"[\\u2718] meet friends (at: May 18 2020 2000 to May 18 2020 2100)\", event.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 42
    }
  },
  {
    "path": "src/test/java/main/java/BobParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobDateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.task.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.task.Event;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.task.Todo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class BobParserTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public void parse_Todo_success(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        Command c \u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            c \u003d Parser.parse(\"todo do homework\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (BobException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        Assertions.assertEquals( new AddCommand(new Todo(\"do homework\")), c);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public void parse_Deadline_success() throws BobDateTimeParseException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        Command c \u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            c \u003d Parser.parse(\"deadline do homework /by 2020-05-20 1700\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (BobException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        Assertions.assertEquals(new AddCommand(new Deadline(\"do homework\", \"2020-05-20 1700\")),c);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public void parse_Event_success() throws BobDateTimeParseException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        Command c \u003d null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            c \u003d Parser.parse(\"event do homework /at 2020-05-20 1700 to 2020-05-20 1800\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (BobException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        Assertions.assertEquals(new AddCommand(new Event(\"do homework\", \"2020-05-20 1700 to 2020-05-20 1800\")), c);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 49
    }
  },
  {
    "path": "src/test/java/main/java/BobTaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.exception.BobIndexOutOfBoundsException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import bob.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "public class BobTaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public void isEmpty_emptyTaskList_true() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        Assertions.assertEquals(true, tasks.isEmpty());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public void get_emptyTaskList_exceptionThrown(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            Assertions.assertEquals(tasks.get(1), new Task(\"empty\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (BobIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            Assertions.assertEquals(\"There are no tasks on the list with the provided index.\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "                    + \" Please check the list and try again!\", e.getMessage());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public void size_TaskListWith5Tasks_success() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        for (int i \u003d 0; i \u003c 5 ; i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            tasks.add(new Todo(\"empty\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        Assertions.assertEquals(5,tasks.size());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    public void addAndDelete_TaskListWith3Tasks_success() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        for (int i \u003d 0; i \u003c 5 ; i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            tasks.add(new Todo(\"empty\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            tasks.delete(1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "            tasks.delete(2);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        } catch (BobIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "        Assertions.assertEquals(3,tasks.size());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 51
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "hi"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "java -classpath ..\\bin Bob Task \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caleblyx"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "pause"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 7,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\Bob.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\Parser.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\Storage.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\TaskList.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\UI.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\command\\AddCommand.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\command\\Command.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\command\\DeleteCommand.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\command\\DoneCommand.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\command\\ExitCommand.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\command\\FindCommand.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\command\\ListCommand.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\exception\\BobDateTimeParseException.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\exception\\BobException.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\exception\\BobFileNotFoundException.java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\exception\\BobFindNoKeyWordsException.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\exception\\BobIncompleteDeadlineDescriptionException.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\exception\\BobIncompleteEventDescriptionException.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\exception\\BobIndexOutOfBoundsException.java"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\exception\\BobIOException.java"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\exception\\BobNoDescriptionException.java"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\exception\\BobNumberFormatException.java"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\exception\\BobStorageInitialisationException.java"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\task\\Deadline.java"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\task\\Event.java"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\task\\Task.java"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "caleblyx"
        },
        "content": "C:\\Users\\User\\Documents\\repos\\iprepo\\src\\main\\java\\bob\\task\\Todo.java"
      }
    ],
    "authorContributionMap": {
      "caleblyx": 27
    }
  }
]
