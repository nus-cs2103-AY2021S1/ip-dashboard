[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.8\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    implementation \u0027org.testng:testng:6.14.3\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 20,
      "-": 45
    }
  },
  {
    "path": "data/DukeData.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "E*hw *15:30*18:00*2020-11-20*N"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 1
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "# User Guide for Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "Duke is a schedule managing application that helps you track all your tasks. Duke supports the user by tracking 4 main types of tasks."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " * ToDos"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " * Events"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " * Deadlines"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " * DoWithins"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "![GitHub Logo](Ui.png)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "The specifications of each task and some additional functionality are discussed in the Features section."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "## Feature List"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "1.`todo` "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "2.`event` "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "3.`deadline` "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "4.`do` "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "5.`done` "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "6.`delete` "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "7.`list` "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "8.`find` "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "9.`bye` "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "Note that tasks are case-insensitive to make it for users to type in commands."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "##Usage"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "### `todo` - Create a new To Do task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "The `todo` command creates a new todo task with no date or time specification. "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "#### Format"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "`todo \u003cdescription\u003e`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "#### Example input"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "`todo Homework assignment` "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "#### Example output"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "```"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "Got it I\u0027ve now added this Task:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "[T][✘] Homework assignment"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "```"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "### `event` - Create a new Event task "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "The `event` command creates a new event task with the date, and the time period of the event specified. "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "#### Format"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "`event \u003cdescription\u003e /on \u003cdate (YYYY-MM-dd)\u003e /at \u003cstart (HH:mm)\u003e-\u003cend(HH:mm)\u003e`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "#### Example input"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "`event Dad\u0027s Birthday /at 2020-08-10 /on 15:30-18:00` "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "#### Example output"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "```"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "Got it I\u0027ve now added this Task:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "[E][✘] Dad\u0027s Birthday(on: Aug 10 2020 at: 15:30 - 18:00)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "```"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "### `deadline` - Create a new Deadline task "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "The `deadline` command creates a new deadline task with the deadline date specified. "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "#### Format"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "`deadline \u003cdescription\u003e /by \u003cdate (YYYY-MM-dd)\u003e`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "#### Example input"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "`deadline CS2103 IP /by 2020-09-17`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "#### Example output"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "```"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "Got it I\u0027ve now added this Task:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "[D][✘] CS2103 IP (by: Sep 17 2020)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "```"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "### `do` - Create a new Do Within task"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "The `do` command creates a new DoWithin task with the start and end date specified. "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "#### Format"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "`do \u003cdescription\u003e /within \u003cstart(YYYY-MM-dd)\u003e:\u003cend(YYYY-MM-dd)\u003e`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "#### Example input"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "`do CS2103 quiz /within 2020-09-10:2020-09-17`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "#### Example output"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "```"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "Got it I\u0027ve now added this Task:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "[W][✘] CS2103 quiz (within: Sep 10 2020 - Sep 17 2020)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "```"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "### `done` - Set a task as done"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "The `done` command sets a specified task as done"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "#### Format"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "`done \u003ctask number\u003e`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "#### Example input"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "`done 2`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "#### Example output"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "```"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "[E][✓] Dad\u0027s Birthday(on: Aug 10 2020 at: 15:30 - 18:00)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "```"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "### `delete` - Delete a task from Duke"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "The `delete` command deletes a specified task"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "#### Format"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "`delete \u003ctask number\u003e`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "#### Example input"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "#### Example output"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "```"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "Noted. I\u0027ve removed this task: "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "[T][✘] homework assignment"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "```"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "### `list` - List all tasks managed by Duke"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "The `list` lists all tasks managed by duke."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "#### Format"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "#### Example input"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "#### Example output"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "```"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "1.[E][✓] Dad\u0027s Birthday(on: Aug 10 2020 at: 15:30 - 18:00)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "2.[D][✘] CS2103 IP (by: Sep 17 2020)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "3.[W][✘] CS2103 quiz (within: Sep 10 2020 - Sep 17 2020)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "```"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "### `find` - Find a task managed by Duke"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "The `find` lists all the tasks which are similar to the hint provided"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "#### Format"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "`find \u003chint\u003e`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "#### Example input"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "`find Dad`"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "#### Example output"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "```"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "1.[E][✓] Dad\u0027s Birthday(on: Aug 10 2020 at: 15:30 - 18:00)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "```"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "### `bye` - Save your tasks"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "The `bye` command says goodbye to duke and saves all your tasks"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "#### Format"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "#### Example input"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "#### Example output"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "`Bye. Hope to see you again soon!`"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 126,
      "-": 11
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 55
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.Commands.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.DukeBot;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.DukeParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final Image user \u003d new Image(this.getClass().getResourceAsStream(\"images/DaUser.png\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final Image duke \u003d new Image(this.getClass().getResourceAsStream(\"images/DaDuke.jpg\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    VBox dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    TextField userInput \u003d new TextField();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        DukeBot.simulate();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        ScrollPane scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        Button sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        Scene scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        });"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        });"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e handleUserInput());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        userInput.setOnAction((event) -\u003e handleUserInput());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                DialogBox.getUserDialog(userText.getText(), new ImageView(user).getImage()),"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                DialogBox.getDukeDialog(dukeText.getText(), new ImageView(duke).getImage())"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        );"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        assert input!\u003d null : \"You didn\u0027t enter a command, please try again\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return DukeBot.simulateGui(input);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 102,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 7
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 25
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 49
    }
  },
  {
    "path": "src/main/java/Test/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.Tasks.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import org.testng.Assert;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import static org.testng.AssertJUnit.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public void toDoTest() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            ToDo task \u003d new ToDo(\"Do 2103 IP\", false);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            assertEquals(task.toString(), \"[T][\\u2718] Do 2103 IP\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        } catch (Exception ignored) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public void eventTest() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            Event task \u003d new Event(\"Dinner Party\", LocalTime.parse(\"15:30\"), LocalTime.parse(\"17:30\"), false, LocalDate.parse(\"2011-11-19\") );"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            assertEquals(task.toString(), \"[E][\\u2718] Dinner Party(on: Nov 19 2011 at: 15:30 - 17:30)\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        } catch (Exception ignored) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public void deadlineTest() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            Deadline task \u003d new Deadline(\"Graduation\", LocalDate.parse(\"2011-11-19\"), false);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            assertEquals(task.toString(), \"[D][\\u2718] Graduation(by: Nov 19 2011)\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        } catch (Exception ignored) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public void doWithinTest(){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            DoWithin task \u003d new DoWithin(\"Assignment\", LocalDate.parse(\"2020-09-15\"), LocalDate.parse(\"2020-09-18\"), false);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            assertEquals(task.toString(), \"[W][\\u2718] Assignment(within: Sep 15 2020 - Sep 18 2020)\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }catch (Exception ignored){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public void deleteTest(){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            TaskList ls \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            ToDo task \u003d new ToDo(\"Do 2103 IP\", false);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            ls.add(task);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            assertEquals(ls.delete(1), \"Noted. I\u0027ve removed this task: \\n\"+task.toString());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }catch(Exception ignored){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 67
    }
  },
  {
    "path": "src/main/java/com/Duke/Commands/BlahCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.UI;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " * This class acts as a model for the execution of the BlahCommand"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class BlahCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * Simulates Duke executing the blah Command"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @return The response of any undefined command"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return UI.blahCalled();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 20
    }
  },
  {
    "path": "src/main/java/com/Duke/Commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " * This class acts as a model for the execution of the ByeCommand"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public ByeCommand(TaskList taskList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * Simulates the execution of the Bye command by Duke"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @return The response to the command \"bye\"."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return UI.byeCalled(taskList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return UI.printError(e.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 34
    }
  },
  {
    "path": "src/main/java/com/Duke/Commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public abstract String execute();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 12
    }
  },
  {
    "path": "src/main/java/com/Duke/Commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.UI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.Tasks.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " * This class acts as a model for the execution of the DeadlineCommand"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final String[] splitList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public DeadlineCommand(String[] splitList, TaskList taskList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        this.splitList \u003d splitList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * Simulates Duke executing the Deadline Command"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @return The response to the command \"deadline\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            String[] splitList2 \u003d splitList[1].split(\"/by \", 2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            Deadline deadline \u003d new Deadline(splitList2[0], LocalDate.parse(splitList2[1]), false);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return UI.deadlineCalled(taskList, deadline);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return UI.printError(\"\\u2639 OOPS!!! The deadline is not of the proper format, make sure you enter it as YYYY-MM-dd\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return UI.printError(\"\\u2639 OOPS!!! The description is empty or you have not entered a proper deadline.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 37
    }
  },
  {
    "path": "src/main/java/com/Duke/Commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " * This class acts as a model for the execution of the DeleteCommand"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class DeleteCommand extends Command{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final int taskIndex;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public DeleteCommand(TaskList taskList, int taskIndex) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * Simulates Duke executing the Delete Command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @return The response to the command \"delete\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return UI.deleteCalled(taskList, taskIndex);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }catch(DukeException e){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return UI.printError(e.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 31
    }
  },
  {
    "path": "src/main/java/com/Duke/Commands/DoWithinCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.UI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.Tasks.DoWithin;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " * This class acts as a model for the execution of the DoWithinCommand"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class DoWithinCommand extends Command{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final String[] splitList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public DoWithinCommand(String[] splitList, TaskList taskList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        this.splitList \u003d splitList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * Simulates Duke executing the Do Within Command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @return The response to the command \"do\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        String result;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            String[] splitList2 \u003d splitList[1].split(\"/within \", 2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            String[] splitList3 \u003d splitList2[1].split(\":\", 2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            if (LocalDate.parse(splitList3[0].trim()).isBefore(LocalDate.parse(splitList3[1].trim()))) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                DoWithin doWithin \u003d new DoWithin(splitList2[0], LocalDate.parse(splitList3[0].trim()), LocalDate.parse(splitList3[1].trim()), false);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                result \u003d UI.doWithinCalled(taskList, doWithin);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                result \u003d UI.printError(\"\\u2639 OOPS!!! It appears the start date is after the end date\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            result \u003d UI.printError(\"\\u2639 OOPS!!! The do within is not of the proper format, make sure you enter the start or end date as YYYY-MM-dd\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            result \u003d UI.printError(\"\\u2639 OOPS!!! The description is empty or you have not entered a proper do within period.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 44
    }
  },
  {
    "path": "src/main/java/com/Duke/Commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " * This class acts as a model for the execution of the DoneCommand"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class DoneCommand extends Command{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final int taskIndex;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public DoneCommand(TaskList taskList, int taskIndex) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * Simulates Duke executing the Done Command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @return The response to the command \"done\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String execute(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return UI.doneCalled(taskList,taskIndex);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }catch (DukeException e){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return UI.printError(e.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }catch(Exception e){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return UI.printError(\"☹ OOPS!!! There arent that many tasks in your list\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 33
    }
  },
  {
    "path": "src/main/java/com/Duke/Commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.UI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.Tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " * This class acts as a model for the execution of the EventCommand"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class EventCommand extends Command{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final String[] splitList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public EventCommand(String[] splitList, TaskList taskList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        this.splitList \u003d splitList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * Simulates Duke executing the Event Command"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @return The response to the command \"event\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            String[] splitList2 \u003d splitList[1].split(\"/on\", 2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            String[] splitList3 \u003d splitList2[1].split(\"/at \", 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            String[] splitList4 \u003d splitList3[1].split(\"-\", 2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            Event event \u003d new Event(splitList2[0],"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    LocalTime.parse(splitList4[0].trim()),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    LocalTime.parse(splitList4[1].trim()),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    false,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    LocalDate.parse(splitList3[0].trim()));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return UI.eventCalled(taskList,event);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }catch(DateTimeParseException e){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return UI.printError(\"\\u2639 OOPS!!! The format of your start or end time is not correct, format it as HH:mm\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        } catch(Exception e){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return UI.printError(\"\\u2639 OOPS!!! The description or the time duration of a event cannot be empty.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 46
    }
  },
  {
    "path": "src/main/java/com/Duke/Commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " * This class acts as a model for the execution of the FindCommand"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class FindCommand extends Command{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final String hint;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public FindCommand(TaskList taskList, String hint) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        this.hint \u003d hint;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * Simulates Duke executing the Find Command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @return The response to the command \"find\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return UI.findCalled(taskList, hint);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }catch (DukeException e){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return UI.printError(e.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 29
    }
  },
  {
    "path": "src/main/java/com/Duke/Commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " * This class acts as a model for the execution of the ListCommand"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public ListCommand(TaskList taskList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * Simulates Duke executing the List Command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @return The response to the command \"list\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String execute(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return UI.listCalled(taskList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }catch(DukeException e){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return UI.printError(e.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 27
    }
  },
  {
    "path": "src/main/java/com/Duke/Commands/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.UI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.Tasks.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " * This class acts as a model for the execution of the TodoCommand"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class ToDoCommand extends Command{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final String task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public ToDoCommand(String task, TaskList taskList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * Simulates Duke executing the Find Command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @return The response to the command \"todo\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        String result;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            ToDo todo \u003d new ToDo(task, false);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            result \u003d UI.toDoCalled(taskList, todo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            result \u003d UI.printError(\"     \\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 31
    }
  },
  {
    "path": "src/main/java/com/Duke/DataManager/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke.DataManager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.DukeException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.TaskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.Tasks.*;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " * This Class manages read and write operations into the storage files"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * This method writes a given list of tasks into the storage file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @param taskList This is the taskList that is stored"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public static void write(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        assert taskList !\u003d null : new DukeException(\"Unable to create a files for storage\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        String homeDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        Path dataFolderPath \u003d Paths.get(homeDir, \"data\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        if (Files.exists(dataFolderPath)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                Files.createDirectories(dataFolderPath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                throw new DukeException(\"Unable to create a files for storage\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        Path dataFilePath \u003d Paths.get(homeDir, \"data\", \"DukeData.txt\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        File dukeData \u003d dataFilePath.toFile();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        if (!dukeData.exists()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                dukeData.createNewFile();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                throw new DukeException(\"Unable to create a files for storage\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            FileWriter writer \u003d new FileWriter(dukeData);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            for (Task item : taskList.getListOfTasks()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                writer.write(item.toSaveFormat() + \"\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            throw new DukeException(\"Error saving files\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * This method reads a given list of tasks and returns a List of tasks"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @return Returns a list of Tasks that can be used to create a TaskList object"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public static List\u003cTask\u003e read() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            String homeDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            Path filePath \u003d Paths.get(homeDir, \"data\", \"DukeData.txt\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            File file \u003d filePath.toFile();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                String data \u003d sc.nextLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                String[] dataArr \u003d data.split(\"\\\\*\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                if (\"T\".equals(dataArr[0])) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    if (dataArr[2].equals(\"Y\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                        taskList.add(new ToDo(dataArr[1], true));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                        taskList.add(new ToDo(dataArr[1], false));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                } else if (\"E\".equals(dataArr[0])) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    if (dataArr[5].equals(\"Y\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                        taskList.add(new Event(dataArr[1], LocalTime.parse(dataArr[2]), LocalTime.parse(dataArr[3]), true, LocalDate.parse(dataArr[4])));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                        taskList.add(new Event(dataArr[1], LocalTime.parse(dataArr[2]), LocalTime.parse(dataArr[3]), false, LocalDate.parse(dataArr[4])));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                } else if (\"D\".equals(dataArr[0])) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    if (dataArr[3].equals(\"Y\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                        taskList.add(new Deadline(dataArr[1], LocalDate.parse(dataArr[2]), true));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                        taskList.add(new Deadline(dataArr[1], LocalDate.parse(dataArr[2]), false));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                } else if(\"W\".equals(dataArr[0])){"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    if(dataArr[4].equals(\"Y\")){"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                        taskList.add(new DoWithin(dataArr[1], LocalDate.parse(dataArr[2]), LocalDate.parse(dataArr[3]), true));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    }else{"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                        taskList.add(new DoWithin(dataArr[1], LocalDate.parse(dataArr[2]), LocalDate.parse(dataArr[3]), false));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        } catch (FileNotFoundException | DukeException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 108
    }
  },
  {
    "path": "src/main/java/com/Duke/DukeBot.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.Commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.DataManager.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.DukeParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.UI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "* This Class handles the simulation of the Duke Chat bot"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "* It creates the lists for storing data and facilitates the"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "* parser and storage processes"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class DukeBot {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * This method begins the CLI simulation of Duke"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public static void simulate(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        TaskList ls \u003d new TaskList(Storage.read());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        boolean hasBye \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        UI.dukeInit();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        DukeParser inputParser \u003d new DukeParser(ls);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        while(!hasBye) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            Command command \u003d inputParser.parse(input);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            hasBye \u003d command.isDone();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            if(!hasBye){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * This method begins the GUI simulation of Duke"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public static String simulateGui(String input) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        TaskList ls \u003d new TaskList(Storage.read());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        DukeParser inputParser \u003d new DukeParser(ls);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        Command command \u003d inputParser.parse(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return command.execute();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 53
    }
  },
  {
    "path": "src/main/java/com/Duke/TaskManager/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke.TaskManager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final String errorMsg;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public DukeException(String errorMsg){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        this.errorMsg \u003d errorMsg;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return \"     \\u2639 OOPS!!!\" + errorMsg;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 14
    }
  },
  {
    "path": "src/main/java/com/Duke/TaskManager/DukeParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke.TaskManager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.Commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " * This class is the parser that reads user input and feeds it as Commands to Duke"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class DukeParser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final TaskList ls;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public DukeParser(TaskList ls) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        this.ls \u003d ls;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * This method parses a given input and processes it to become a command for Duke"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @return The Command for Duke to execute."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public Command parse(String input){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        String[] splitList \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        if(input.toLowerCase().equals(\"bye\")){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return new ByeCommand(ls);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }else if(input.toLowerCase().equals(\"list\")){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return new ListCommand(ls);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }else if(splitList[0].toLowerCase().equals(\"done\")){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return new DoneCommand(ls, Integer.parseInt(splitList[1]) - 1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }else if(splitList[0].toLowerCase().equals(\"todo\")){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return new ToDoCommand(splitList[1],ls);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }else if(splitList[0].toLowerCase().equals(\"deadline\")){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return new DeadlineCommand(splitList,ls);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }else if(splitList[0].toLowerCase().equals(\"event\")){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return new EventCommand(splitList,ls);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }else if(splitList[0].toLowerCase().equals(\"do\")){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return new DoWithinCommand(splitList,ls);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }else if(splitList[0].toLowerCase().equals(\"delete\")){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return new DeleteCommand(ls,Integer.parseInt(splitList[1]));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }else if(splitList[0].toLowerCase().equals(\"find\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return new FindCommand(ls, splitList[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return new BlahCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 44
    }
  },
  {
    "path": "src/main/java/com/Duke/TaskManager/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke.TaskManager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.Tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " * This class models the list of pending or done tasks managed by Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public final List\u003cTask\u003e ls;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public TaskList(List\u003cTask\u003e ls) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        this.ls \u003d ls;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public int length(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return ls.size();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * This method takes a int which represents the position of the task and"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * sets the task to be done"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public void setDone(int task) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        assert task \u003e 0 : \"Invalid task entered\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        if(task\u003els.size()){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            throw new DukeException(\"You don\u0027t have that many tasks\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            ls.set(task, ls.get(task).done());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * Takes a hint string to find all tasks within the tasklist with similar task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * names"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @param hint"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @return a list of tasks with similar task names to the hint"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public TaskList findTask(String hint){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        assert hint !\u003dnull : \"I couldn\u0027t understand the hint please try again\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        TaskList containsHint \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        getListOfTasks()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                .filter(task-\u003etask"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                        .getTask()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                        .contains(hint))"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                .forEach(containsHint::add);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return containsHint;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public List\u003cTask\u003e getListOfTasks() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return this.ls;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * Takes a int position of the task within this list and removes it"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * from the task list"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @return returns the delete message to be displayed on GUI"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String delete(int task) throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        if(task\u003els.size()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            throw new DukeException(\"You don\u0027t have that many tasks\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            System.out.println(\"     Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            System.out.println(\"       \" + ls.get(task-1).toString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            String deleted \u003d ls.get(task-1).toString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            ls.remove(task-1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            return \"Noted. I\u0027ve removed this task: \\n\"+deleted;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        ls.add(task);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 83
    }
  },
  {
    "path": "src/main/java/com/Duke/TaskManager/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke.TaskManager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.DataManager.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.Tasks.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final static String line \u003d \"     ___________________________________________________________________\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public static void dukeInit(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        String introText1 \u003d \"     Hello! I\u0027m Duke\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        String introText2 \u003d \"     What can I do for you?\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(introText1);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(introText2);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public static String printError(String msg){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public static String byeCalled(TaskList ls) throws DukeException{"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        Storage.write(ls);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public static String listCalled(TaskList list) throws DukeException{"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        if(list.ls.isEmpty()){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            throw new DukeException(\"Sorry you have no tasks in your list.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            for (int i \u003d 0; i \u003c list.ls.size(); i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                int j \u003d i + 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                System.out.println(\"     \" + j + \".\" + list.ls.get(i).toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                builder.append(list.ls.get(i).toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        Storage.write(list);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public static String doneCalled(TaskList list, int task)throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        list.setDone(task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(\"     Nice! I\u0027ve marked this task as done: \\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(\"       \" + list.ls.get(task).toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        Storage.write(list);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done: \\n\" + list.ls.get(task).toString();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public static String toDoCalled(TaskList ls, ToDo toDo) throws DukeException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(\"     Got it I\u0027ve now added this Task:\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(\"       \" + toDo.toString());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        ls.add(toDo);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(\"     Now you have \" + ls.length() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        Storage.write(ls);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return \"Got it I\u0027ve now added this Task: \\n\" + toDo.toString() + \"\\n\" + \"Now you have \" + ls.length() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public static String deadlineCalled(TaskList ls, Deadline deadline) throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(\"     Got it I\u0027ve now added this Task:\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(\"       \" + deadline.toString());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        ls.add(deadline);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(\"     Now you have \" + ls.length() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        Storage.write(ls);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return \"Got it I\u0027ve now added this Task: \\n\" + deadline.toString() + \"\\n\" + \"Now you have \" + ls.length() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public static String eventCalled(TaskList ls, Event event) throws DukeException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(\"     Got it I\u0027ve now added this Task:\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(\"       \" + event.toString());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        ls.add(event);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(\"     Now you have \" + ls.length() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        Storage.write(ls);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return \"Got it I\u0027ve now added this Task: \\n\" + event.toString() + \"\\n\" + \"Now you have \" + ls.length() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public static String doWithinCalled(TaskList ls, DoWithin doWithin) throws DukeException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(\"     Got it I\u0027ve now added this Task:\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(\"       \" + doWithin.toString());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        ls.add(doWithin);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(\"     Now you have \" + ls.length() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        Storage.write(ls);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return \"Got it I\u0027ve now added this Task: \\n\" + doWithin.toString() + \"\\n\" + \"Now you have \" + ls.length() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public static String blahCalled() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        String blahMessage \u003d Blah.blahCreated();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(blahMessage);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return blahMessage;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public static String deleteCalled(TaskList ls, int task)throws DukeException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        String deletedMessage \u003d ls.delete(task);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(\"     Now you have \" + ls.length() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        Storage.write(ls);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return deletedMessage+\"\\n\"+ \"Now you have \" + ls.length() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public static String findCalled(TaskList ls, String hint) throws DukeException {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        TaskList containsHint \u003d ls.findTask(hint);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        if(containsHint.ls.isEmpty()){"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            throw new DukeException(\"Sorry you have no tasks that match that description\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            System.out.println(\"     Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            builder.append(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            for (int i \u003d 0; i \u003c containsHint.ls.size(); i++) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                int j \u003d i + 1;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                System.out.println(\"     \" + j + \".\" + containsHint.ls.get(i).toString());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                builder.append(j).append(\".\").append(containsHint.ls.get(i).toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 142
    }
  },
  {
    "path": "src/main/java/com/Duke/Tasks/Blah.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " * Class that encapsulates the blah Input"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class Blah {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public static String blahCreated(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return \"I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 11
    }
  },
  {
    "path": "src/main/java/com/Duke/Tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " * This Class encapsulates the command Deadline"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final LocalDate deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * Constructor for the Deadline class"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @param task Represents the description of the task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @param deadline Represents the deadline date of the task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @param isDone Represents whether the task is done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public Deadline(String task, LocalDate deadline, boolean isDone)throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        super(task,isDone);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String getDeadline(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return \"(by: \" + deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\" ;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * Method to create the done version of this task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @return Returns a Deadline with the isDone state as true"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public Deadline done() throws DukeException{"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return new Deadline(task, deadline,true);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * Method to Create the text format that is Saved"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String toSaveFormat(){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return isDone"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                ? \"D*\" + task + \"*\" + deadline + \"*Y\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                : \"D*\" + task + \"*\" + deadline + \"*N\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return this.isDone ?"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                (\"[D][\\u2713] \" + getTask() + getDeadline())"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                :"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                (\"[D][\\u2718] \" + getTask() + getDeadline());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 55
    }
  },
  {
    "path": "src/main/java/com/Duke/Tasks/DoWithin.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class DoWithin extends Task{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final LocalDate dateStart;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final LocalDate dateEnd;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * Constructor for the DoWithin class"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @param task Represents the description of the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @param dateStart Represents the start date of the task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @param dateEnd Represents the end date of the task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @param isDone Represents whether the task is done"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public DoWithin(String task, LocalDate dateStart, LocalDate dateEnd, boolean isDone)throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        super(task,isDone);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        this.dateStart \u003d dateStart;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        this.dateEnd \u003d dateEnd;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String getWithinPeriod(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return \"(within: \" + dateStart.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" - \" + dateEnd.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\" ;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * Method to create the done version of this task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @return Returns a DoWithin with the isDone state as true"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public DoWithin done() throws DukeException{"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        assert dateEnd.isAfter(dateEnd);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return new DoWithin(task, dateStart, dateEnd, true);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * Method to Create the text format that is Saved"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String toSaveFormat(){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return isDone"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                ? \"W*\" + task + \"*\" + dateStart + \"*\" + dateEnd + \"*Y\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                : \"W*\" + task + \"*\" + dateStart + \"*\" + dateEnd + \"*N\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return this.isDone ?"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                (\"[W][\\u2713] \" + getTask() + getWithinPeriod())"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                :"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                (\"[W][\\u2718] \" + getTask() + getWithinPeriod());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 56
    }
  },
  {
    "path": "src/main/java/com/Duke/Tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " * This Class encapsulates the command Event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final LocalTime start;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final LocalTime end;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * Constructor for Event class"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @param task Represents the description of the task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @param start Represents the start time of the event"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @param end Represents the end time of the event"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @param isDone Represents whether the task is done"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @param date"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public Event(String task, LocalTime start, LocalTime end, boolean isDone, LocalDate date)throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        super(task,isDone);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        this.start \u003d start;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        this.end \u003d end;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * Method to Create the text format that is Saved"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String toSaveFormat(){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return isDone"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                ? \"E*\" + task + \"*\" + start + \"*\"+ end + \"*\" + date + \"*Y\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                : \"E*\" + task + \"*\" + start + \"*\"+ end + \"*\" + date + \"*N\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String getDeadline(){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return \"(on: \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                + \" at: \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                + start.format(DateTimeFormatter.ofPattern(\"HH:mm\"))"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                + \" - \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                + end.format(DateTimeFormatter.ofPattern(\"HH:mm\"))"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * Method to create the done version of this event"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @return Returns a Event with the isDone state as true"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public Event done() throws DukeException{"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return new Event(task, start, end, true, date);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return this.isDone ?"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                (\"[E][\\u2713] \" + getTask() + getDeadline())"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                :"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                (\"[E][\\u2718] \" + getTask() + getDeadline());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 69
    }
  },
  {
    "path": "src/main/java/com/Duke/Tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " * This Class encapsulates a unnamed task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    protected final String task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    protected final boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * Constructor for the To Do class"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @param task Represents the description of the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @param isDone Represents whether the task is done"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public Task(String task, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        if(task.trim().isEmpty()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            throw new DukeException(\"The description of a task cannot be empty.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            this.task \u003d task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * Method to Create the text format that is Saved"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String toSaveFormat(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return isDone"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                ? task + \"*Y\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                : task + \"*N\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public boolean getIsDone(){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * Method to create the done version of this task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @return Returns a task with the isDone state as true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public Task done() throws DukeException{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return new Task(this.task, true);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String getTask(){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return this.task;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return this.isDone ?"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                (\"[\\u2713] \" + this.getTask())"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                :"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                (\"[\\u2718] \" + this.getTask());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 60
    }
  },
  {
    "path": "src/main/java/com/Duke/Tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "package com.Duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "import com.Duke.TaskManager.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " * This Class encapsulates the command To Do"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "public final class ToDo extends Task{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    * Constructor for the To Do class"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    * @param task Represents the description of the task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    * @param isDone Represents whether the task is done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public ToDo(String task, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        super(task,isDone);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * Method to create the done version of this task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * @return Returns a To Do with the isDone state as true"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public ToDo done() throws DukeException{"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return new ToDo(this.task, true);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     * Method to Create the text format that is Saved"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String toSaveFormat(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return isDone"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                ? \"T*\" + task + \"*Y\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                : \"T*\" + task + \"*N\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        return this.isDone ?"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                (\"[T][\\u2713] \" + this.getTask())"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                :"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                (\"[T][\\u2718] \" + this.getTask());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 46
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-background-color: c1e1ec; -fx-background-radius: 15; -fx-border-radius: 15; -fx-label-padding: 20;\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"109.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" style\u003d\"-fx-background-radius: 15; -fx-border-radius: 15;\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 19
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "todo Buy Dinner"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "todo Eat Chicken"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "deadline /by friday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkamSinghPandher"
        },
        "content": "done 2"
      }
    ],
    "authorContributionMap": {
      "EkamSinghPandher": 4
    }
  }
]
