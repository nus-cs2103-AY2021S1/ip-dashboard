[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    id \"java-test-fixtures\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 3,
      "-": 43
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import duke.resource.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import duke.resource.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * Duke is a bot that functions as a user\u0027s task manager."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Constructor that creates a Duke object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param filePath the filepath task sessions will be saved in"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        ui.welcome();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            tasks \u003d TaskList.parse(this.storage.load());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            ui.printLoaded(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            ui.printError(e);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Runs Duke\u0027s user input scanning that only terminates when a \"bye\" command is given."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        ui.start();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                String command \u003d ui.read();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                Command c \u003d Parser.parse(command);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                isExit \u003d c.shouldExit();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                ui.printError(e);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Creates a new Duke object and runs it, starting the entire chat-bot."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param args input arguments for main; unused"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        // change the filePath below to save elsewhere"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        new Duke(\"./src/main/data/duke.txt\").run();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 61,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import duke.resource.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * Command class that handles the logic flow of commands input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private final String[] input;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private boolean shouldExit \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Constructor that creates a Command object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param input command string that has been split"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public Command(String[] input) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Evaluates the syntax of the input command and executes it, throwing"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * a DukeException if the syntax is incorrect."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param tasks the TaskList object associated with the current Duke object"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param ui the Ui object associated with the current Duke object"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param storage the Storage object associated with the current Duke object"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @throws DukeException thrown if any errors are detected with the input"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        switch (input[0]) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            ui.printBye();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            this.shouldExit \u003d true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        case \"list\": {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            ui.printList(tasks);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        case \"done\": {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            int index;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            if (input.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                throw new DukeException(\"    Please select a task to mark as completed!\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                index \u003d Integer.parseInt(input[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                throw new DukeException(\"    Please choose an integer value!\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            if (index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                throw new DukeException(\"    Please choose an integer greater than 0!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            } else if (index \u003e tasks.size()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                throw new DukeException(\"    Your task list is not that long yet!\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            tasks.completeTask(index);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            ui.printDone(tasks.getTask(index));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        case \"delete\": {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            int index;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            if (input.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                throw new DukeException(\"    Please select a task to mark as completed!\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                index \u003d Integer.parseInt(input[1]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                throw new DukeException(\"    Please choose an integer value!\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            if (index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                throw new DukeException(\"    Please choose an integer greater than 0!\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            } else if (index \u003e tasks.size()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                throw new DukeException(\"    Your task list is not that long yet!\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            Task task \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            tasks.deleteTask(index);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            ui.printDelete(tasks, task);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        case \"find\": {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            if (input.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                throw new DukeException(\"    Please use a keyword you\u0027d like to search with!\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            if (input.length \u003e 2) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                throw new DukeException(\"    Please use only one keyword!\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            List\u003cTask\u003e matches \u003d tasks.search(input[1]);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            ui.printFind(matches);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        case \"deadline\": {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            StringBuilder description \u003d new StringBuilder();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            StringBuilder time \u003d new StringBuilder();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            if (input.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                throw new DukeException(\"    A deadline requires a description and a time!\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            int i \u003d 1;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            while (!input[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                description.append(input[i++]).append(\" \");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                if (i \u003d\u003d input.length) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    throw new DukeException(\"    deadline requires the use of \\\"/by\\\"!\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                throw new DukeException(\"    The description of a deadline cannot be empty!\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            while (++i \u003c input.length) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                time.append(input[i]).append(\" \");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            if (time.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                throw new DukeException(\"    The time of a deadline cannot be empty!\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            description.deleteCharAt(description.length() - 1);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            time.deleteCharAt(time.length() - 1);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                task \u003d new Deadline(description.toString(), time.toString(), false);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                tasks.addTask(task);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                ui.printAdd(tasks, task);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                storage.save(tasks);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                throw new DukeException("
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        \"    Error: Please use the following format instead:\\n\""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                + \"        dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        case \"event\": {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            StringBuilder description \u003d new StringBuilder();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            StringBuilder time \u003d new StringBuilder();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            if (input.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                throw new DukeException(\"    An event requires a description and a time!\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            int i \u003d 1;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            while (!input[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                description.append(input[i++]).append(\" \");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                if (i \u003d\u003d input.length) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    throw new DukeException(\"    event requires the use of \\\"/at\\\"!\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                throw new DukeException(\"    The description of an event cannot be empty!\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            while (++i \u003c input.length) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                time.append(input[i]).append(\" \");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            if (time.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                throw new DukeException(\"    The time of an event cannot be empty!\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            description.deleteCharAt(description.length() - 1);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            time.deleteCharAt(time.length() - 1);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                task \u003d new Event(description.toString(), time.toString(), false);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                tasks.addTask(task);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                ui.printAdd(tasks, task);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                storage.save(tasks);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                throw new DukeException("
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        \"    Error: Please use the following format instead:\\n\""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                + \"        dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        case \"todo\": {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            if (input.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                throw new DukeException(\"    The description of a todo cannot be empty!\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            StringBuilder description \u003d new StringBuilder();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            for (int i \u003d 1; i \u003c input.length; i++) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                description.append(input[i]).append(\" \");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            description.deleteCharAt(description.length() - 1);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            task \u003d new ToDo(description.toString(), false);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            tasks.addTask(task);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            ui.printAdd(tasks, task);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            throw new DukeException(\"    I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public boolean shouldExit() {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return this.shouldExit;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 205
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import duke.resource.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * Storage class that handles the reading and writing process from a designated text file,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * referred to as a save file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Constructor that creates a Storage object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param filePath the filepath task sessions will be saved in"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Reads the save file and returns the List of Tasks in it. Throws a DukeException"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * if the file is not found and proceeds to create one, or if a file cannot be created."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a List of Tasks in the save file"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @throws DukeException thrown if a save file is not found or cannot be created"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        var list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(this.filePath));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            br.lines().forEach(str -\u003e {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    list.add(Task.parse(str));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                } catch (DukeException de) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    System.out.println(\"    Error: \" + de.getMessage());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            });"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            new File(\"./src/main/data\").mkdirs();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                new File(\"./src/main/data/duke.txt\").createNewFile();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            } catch (IOException ioe) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                throw new DukeException("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        \"Sorry, the file couldn\u0027t be created!\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                + \"Please try again.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            throw new DukeException("
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    \"    No save file found in [root]/src/main/data/duke.txt.\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            + \"    A file has been created by default.\\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            + \"    If you\u0027d like to import one, simply copy the file\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            + \"    over to the above location and rerun me!\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Writes the current TaskList to a save file."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param tasks TaskList containing Tasks to write."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        String toWrite \u003d tasks.stream()"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                .map(Task::toSave)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                .reduce((x, y) -\u003e x + \"\\n\" + y)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                .orElse(\"\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"./src/main/data/duke.txt\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            fw.write(toWrite);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        } catch (IOException ignored) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 91
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import duke.resource.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * Ui class that handles the user interaction component of the bot."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private static final String LINE \u003d"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private final Scanner sc;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Constructor that creates a Ui object, with a Scanner that reads user input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Prints to user if the given save file has loaded successfully and the tasks found"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * in the save file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param tasks a TaskList containing the tasks in the save file"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void printLoaded(TaskList tasks) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                \"    A save file has been found and loaded!\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        + \"    Your current tasks are: \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            System.out.println(\"    ... empty! Good work!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            while (tasks.size() \u003e i) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                System.out.println(\"        \" + ++i + \". \" + tasks.getTask(i).toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Prints to user if a Task has successfully been added to the TaskList and"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * the current number of Tasks in it."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param tasks the TaskList associated with the current Duke object."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param task the Task that was added to the TaskList."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void printAdd(TaskList tasks, Task task) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                \"    Got it. I\u0027ve added this task:\\n        \""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        + task.toString()"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        + \"\\n    You now have \" + tasks.size()"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        + (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\")"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        + \" in your list.\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        + LINE);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Prints to user if the user has entered the terminate command."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void printBye() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                \"    Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        + LINE);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Prints to user if a Task has been marked as complete."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param task the Task that was marked as complete."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void printDone(Task task) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                \"    Nice! I\u0027ve marked this task as done:\\n        \""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        + LINE);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Prints to user if a Task has successfully been deleted from the TaskList and"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * the current number of Tasks in it."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param tasks the TaskList associated with the current Duke object."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param task the Task that was deleted from the TaskList."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void printDelete(TaskList tasks, Task task) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                \"    Noted. I\u0027ve removed this task:\\n        \""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        + task.toString()"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        + \"\\n    You now have \" + tasks.size()"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        + (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\")"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        + \" in your list.\\n\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        + LINE);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Prints to user if a DukeException has been caught, printing the corresponding"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * error message."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param e a DukeException containing the error message"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void printError(DukeException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                e.getMessage() + \"\\n\" + LINE);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Prints to user a list of matching Tasks given a keyword to search for"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param list a list of matching Tasks"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void printFind(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        System.out.println(\"    Here are the matching tasks in your list: \");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        while (list.size() \u003e i) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            System.out.println(\"        \" + ++i + \". \" + list.get(i - 1).toString());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Prints to user the current Tasks found in the TaskList."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param list the TaskList associated with the current Duke object"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void printList(TaskList list) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        System.out.println(\"    Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        while (list.size() \u003e i) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            System.out.println(\"        \" + ++i + \". \" + list.getTask(i).toString());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Reads and returns the next line of user input."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return the next line of user input"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String read() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Prints a starting message to indicate that Duke is ready to take in user input."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                \"    Awaiting input...\\n\" + LINE);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Prints a welcome message for the user."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void welcome() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        String logo \u003d \"     ____        _        \\n\""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                + \"    |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                + \"    | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                + \"    | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                + \"    |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        System.out.println(LINE + \"\\n\" + logo + \"\\n    Hello! I\u0027m Duke!\\n\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 185
    }
  },
  {
    "path": "src/main/java/duke/resource/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package duke.resource;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import duke.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * Parser class that parses the user input."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Parses the given user input, then returns a Command object with the associated input."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param command a String that contains the user input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a Command object with the associated input"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public static Command parse(String command) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return new Command(command.split(\" \"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 22
    }
  },
  {
    "path": "src/main/java/duke/resource/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package duke.resource;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * TaskList class that stores the Tasks in the Duke object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private final List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Overloaded constructor that creates an empty TaskList object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Overloaded constructor that takes in a List of Tasks and creates a TaskList object"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * and populates it with the Tasks in the List."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param tasks a List containing Tasks to store in the TaskList"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Adds a Task to the TaskList."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param task the Task to be added."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Completes a Task in the TaskList."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param index the index of the Task to be completed."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void completeTask(int index) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.tasks.get(index - 1).complete();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Deletes a Task in the TaskList."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param index the index of the Task to be deleted."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.tasks.remove(index - 1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Retrieves a Task in the TaskList."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param index the index of the Task to be retrieved."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return the Task retrieved at the associated index."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return this.tasks.get(index - 1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Parses a given List of Tasks, returning a TaskList containing the Tasks found."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param tasks the List of Tasks to parse"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a TaskList object containing the Tasks in the List"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public static TaskList parse(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return new TaskList(tasks);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Returns a List of Tasks with descriptions that match the given keyword."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param keyword a String representing the keyword to search for"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a List of Tasks with descriptions that match the given keyword"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public List\u003cTask\u003e search(String keyword) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return tasks.stream()"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                .filter(t -\u003e Arrays.asList(t.getDescription().split(\" \"))"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        .contains(keyword))"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Returns a Stream of the Tasks in the TaskList."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a Stream of the Tasks in the TaskList"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public Stream\u003cTask\u003e stream() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return this.tasks.stream();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Returns the number of Tasks in the TaskList."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * ß"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return the number of Tasks in the TaskList"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 124
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * Deadline class that represents a Task with a deadline. Extends from the Task class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private final LocalDateTime deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Constructor that creates a Deadline object that has a description of the"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * task, the date and time of the deadline, and whether the task has been"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * completed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param description a String representing the description of the task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param deadline a LocalDateTime representing the date and time of the deadline"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param isDone a boolean representing whether the task has been completed"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @throws DateTimeParseException exception thrown if input date was not"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *                                correctly formatted"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public Deadline(String description, String deadline, boolean isDone)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            throws DateTimeParseException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        super(description, \"D\", isDone);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.deadline \u003d LocalDateTime.parse(deadline,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Returns a String formatted to how an Deadline should be saved in the associated"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * save file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a formatted String to be written to the save file"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return String.format(\"%s | %s\", super.toSave(),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                this.deadline.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\")));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return String.format(\"%s (by: %s)\", super.toString(),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                this.deadline.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\")));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 53
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * Event class that represents a Task that is an event. Extends from the Task class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private final LocalDateTime time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Constructor that creates an Event object that has a description of the"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * task, the date and time of the event, and whether the task has been"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * completed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param description a String representing the description of the task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param time a LocalDateTime representing the date and time of the event"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param isDone a boolean representing whether the task has been completed"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @throws DateTimeParseException exception thrown if input date was not"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *                                correctly formatted"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public Event(String description, String time, boolean isDone)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            throws DateTimeParseException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        super(description, \"E\", isDone);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.time \u003d LocalDateTime.parse(time,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Returns a String formatted to how an Event should be saved in the associated"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * save file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a formatted String to be written to the save file"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return String.format(\"%s | %s\", super.toSave(),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                this.time.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\")));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return String.format(\"%s (at: %s)\", super.toString(),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                this.time.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\")));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 53
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * Task class that represents a task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    protected String tag;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Constructor that creates a Task object that has a description of the"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * task, a tag representing the type of task, and whether the task has been"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * completed. Protected so only subclasses of Task can access and create a"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Task object, to prevent any instances from being directly created."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param description a String representing the description of the task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param tag a String representing the type of task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param isDone a boolean representing whether the task has been completed"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    protected Task(String description, String tag, boolean isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Marks the task as complete by changing the isDone boolean to true."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void complete() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Parses a string that has been validated to contain the necessary information,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * then returning a Task matching the information. Throws an exception if the tag"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * given is incorrect, or if too few arguments are given."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param str a String containing the necessary information to create a Task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a Task object with the information stated in the String"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @throws DukeException thrown if the tag given is incorrect, or if too few arguments"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *                       are given"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public static Task parse(String str) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        String[] input \u003d str.split(Pattern.quote(\" | \"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            boolean isDone \u003d input[1].equals(\"1\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            switch (input[0]) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                return new ToDo(input[2], isDone);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                return new Deadline(input[2], input[3], isDone);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                return new Event(input[2], input[3], isDone);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                throw new DukeException(\"One or more Tasks are wrongly tagged!\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException aiooe) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            throw new DukeException(\"One or more Tasks have too few arguments!\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Returns a String formatted to how an Deadline should be saved in the associated"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * save file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a formatted String to be written to the save file"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return String.format(\"%s | %s | %s\", this.tag, isDone ? \"1\" : \"0\", this.description);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return String.format(\"[%s][%s] %s\", this.tag, this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 94
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * ToDo class that represents a Task that has to be done. Extends from the Task class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Constructor that creates a ToDo object that has a description of the"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * task and whether the task has been completed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param description a String representing the description of the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param isDone a boolean representing whether the task has been completed"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        super(description, \"T\", isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 21
    }
  },
  {
    "path": "src/main/java/duke/util/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 7
    }
  },
  {
    "path": "src/test/java/duke/resource/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package duke.resource;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void taskList_addTask_taskAdded() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        var list \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        list.addTask(new ToDo(\"placeholder\", false));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        assertEquals(list.size(), 1);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        assertEquals(list.getTask(1).toString(), \"[T][\\u2718] placeholder\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void taskList_completeTask_taskCompleted() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        var list \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        list.addTask(new ToDo(\"placeholder\", false));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        list.completeTask(1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        assertEquals(list.getTask(1).toString(), \"[T][\\u2713] placeholder\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void taskList_deleteTask_taskDeleted() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        var list \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        list.addTask(new ToDo(\"placeholder\", false));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        list.deleteTask(1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        assertEquals(list.size(), 0);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 36
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 10
    }
  }
]
