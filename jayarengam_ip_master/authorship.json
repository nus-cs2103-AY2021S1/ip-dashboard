[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"# Cartona"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"Cartona is a todo-list manager with a simple GUI and CLI-like commands."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"## Running the program"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":"Prerequisites: Java 11 or above installed on your computer"},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":"1. Download the latest `cartona.jar` from [Releases](https://github.com/jayarengam/ip/releases)."},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":"1. Copy the file to the folder you want to use as the home folder for Cartona."},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":"1. Double click the file to run it. "},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":"    - Note that running the program will create a _tasklist.txt_ file in the same directory that will be used to save a running list of tasks."},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":"- Refer to the [User Guide](https://jayarengam.github.io/ip/) to learn how to use the application."},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":"## Setting up in IntelliJ (For Developers)"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   1. Click `OK`"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":25,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":27,"author":{"gitId":"jayarengam"},"content":"1. After the importing is complete, locate the `src/main/java/cartona/Main.java` file, right-click it, and choose `Run Main.main()`. If the setup is correct, a window like the one shown above should open."}],"authorContributionMap":{"jayarengam":14,"-":13}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00276.0.0\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"jayarengam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"jayarengam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"jayarengam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"jayarengam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"jayarengam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"jayarengam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"jayarengam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"jayarengam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"jayarengam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"jayarengam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"jayarengam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"jayarengam"},"content":"    mainClassName \u003d \"cartona.Main\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"jayarengam"},"content":"    archiveBaseName \u003d \"cartona\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jayarengam":18,"-":43}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"# Cartona"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"Cartona is a todo-list manager with a simple GUI and CLI-like commands."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"## Contents"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":"- [Quick Start](#Quick-Start \"Goto Quick Start\")"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":"\u003cbr\u003e"},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":"- [Features](#Features \"Goto Features\")"},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":"    - [Add Tasks](#Add-Tasks-add \"Goto Add-Tasks-add\")"},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":"        - [Todo](#Add-todo \"Goto Add-todo\")"},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":"        - [Deadline](#Add-deadline \"Goto Add-deadline\")"},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":"        - [Event](#Add-event \"Goto Add-event\")"},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":"    - [List Tasks](#List-Tasks-list \"Goto List-Tasks-list\")"},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":"    - [Delete Tasks](#Delete-Tasks-delete \"Goto Delete-Tasks-delete\")"},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":"    \u003cbr\u003e"},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":"    - [Mark Done/Not Done](#Mark-DoneNot-Done-done-undone \"Goto Mark-DoneNot-Done-done-undone\")"},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":"    - [Edit Tasks](#Edit-Tasks-edit \"Goto Edit-Tasks-edit\")"},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":"    - [Find Tasks (by keyword)](#Find-Tasks-find \"Goto Find-Tasks-find\")"},{"lineNumber":19,"author":{"gitId":"jayarengam"},"content":"    \u003cbr\u003e"},{"lineNumber":20,"author":{"gitId":"jayarengam"},"content":"    - [Exit Program](#Exit-bye \"Goto Exit-bye\")"},{"lineNumber":21,"author":{"gitId":"jayarengam"},"content":"    \u003cbr\u003e"},{"lineNumber":22,"author":{"gitId":"jayarengam"},"content":"## Quick start"},{"lineNumber":23,"author":{"gitId":"jayarengam"},"content":"Prerequisites: Java 11 or above installed on your computer"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"jayarengam"},"content":"1. Download the latest `cartona.jar` from [here](https://github.com/jayarengam/ip/releases)."},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"jayarengam"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for Cartona."},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"jayarengam"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. (The app contains some sample data).\u003cbr\u003e"},{"lineNumber":30,"author":{"gitId":"jayarengam"},"content":"   ![Ui](Ui.png)"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"jayarengam"},"content":"1. Type the command in the command box and press Enter to execute it.\u003cbr\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"jayarengam"},"content":"1. Refer to the [Features](#features) below for details of each command."},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"jayarengam"},"content":"# Features"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"jayarengam"},"content":"**Summary:** "},{"lineNumber":39,"author":{"gitId":"jayarengam"},"content":"- There are three different types of Tasks in Cartona: `Todo` `Deadline` and `Event` All tasks have a **name** and an **isDone** field."},{"lineNumber":40,"author":{"gitId":"jayarengam"},"content":"    - `Deadlines` also have a field representing the (time and date) at which they are **due**"},{"lineNumber":41,"author":{"gitId":"jayarengam"},"content":"    - `Events` have a **start** and **end** time on the same day."},{"lineNumber":42,"author":{"gitId":"jayarengam"},"content":"    \u003cbr\u003e"},{"lineNumber":43,"author":{"gitId":"jayarengam"},"content":"- Tasks can added and removed, and the above fields can be edited for existing tasks"},{"lineNumber":44,"author":{"gitId":"jayarengam"},"content":"\u003cbr\u003e"},{"lineNumber":45,"author":{"gitId":"jayarengam"},"content":"- Tasks are saved automatically upon the execution of any command in `./tasklist.txt`"},{"lineNumber":46,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":47,"author":{"gitId":"jayarengam"},"content":"## Add Tasks: `add`"},{"lineNumber":48,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":49,"author":{"gitId":"jayarengam"},"content":"Add a task to Cartona\u0027s list"},{"lineNumber":50,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":51,"author":{"gitId":"jayarengam"},"content":"add TASK_TYPE NAME [ADDITIONAL FIELDS]"},{"lineNumber":52,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":53,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":54,"author":{"gitId":"jayarengam"},"content":"- Allowed TASK_TYPEs: `todo`, `deadline`, `event`"},{"lineNumber":55,"author":{"gitId":"jayarengam"},"content":"- The name can be any number of characters, including spaces (but cannot be empty)"},{"lineNumber":56,"author":{"gitId":"jayarengam"},"content":"\u003cbr\u003e"},{"lineNumber":57,"author":{"gitId":"jayarengam"},"content":"### Add `todo`"},{"lineNumber":58,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":59,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":60,"author":{"gitId":"jayarengam"},"content":"add todo NAME"},{"lineNumber":61,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":62,"author":{"gitId":"jayarengam"},"content":"\u003cbr\u003e"},{"lineNumber":63,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":64,"author":{"gitId":"jayarengam"},"content":"**Example:**"},{"lineNumber":65,"author":{"gitId":"jayarengam"},"content":"`add todo clean room`"},{"lineNumber":66,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":67,"author":{"gitId":"jayarengam"},"content":"Expected result:"},{"lineNumber":68,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":69,"author":{"gitId":"jayarengam"},"content":" Got it. I\u0027ve added this task:"},{"lineNumber":70,"author":{"gitId":"jayarengam"},"content":"       [T][✗] clean room"},{"lineNumber":71,"author":{"gitId":"jayarengam"},"content":"    Now you have 1 tasks in the list."},{"lineNumber":72,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":73,"author":{"gitId":"jayarengam"},"content":"\u003cbr\u003e"},{"lineNumber":74,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":75,"author":{"gitId":"jayarengam"},"content":"### Add ```deadline```"},{"lineNumber":76,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":77,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":78,"author":{"gitId":"jayarengam"},"content":"add deadline /by YYYY/MM/DD HHmm"},{"lineNumber":79,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":80,"author":{"gitId":"jayarengam"},"content":"\u003cbr\u003e"},{"lineNumber":81,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":82,"author":{"gitId":"jayarengam"},"content":"**Example:**"},{"lineNumber":83,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":84,"author":{"gitId":"jayarengam"},"content":"add deadline CS assignment /by 2020/09/18 2359"},{"lineNumber":85,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":86,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":87,"author":{"gitId":"jayarengam"},"content":"Expected result:"},{"lineNumber":88,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":89,"author":{"gitId":"jayarengam"},"content":" Got it. I\u0027ve added this task:"},{"lineNumber":90,"author":{"gitId":"jayarengam"},"content":"       [D][✗] CS assignment (by: Sep 18 2020 2359)"},{"lineNumber":91,"author":{"gitId":"jayarengam"},"content":"    Now you have 2 tasks in the list."},{"lineNumber":92,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":93,"author":{"gitId":"jayarengam"},"content":"\u003cbr\u003e"},{"lineNumber":94,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":95,"author":{"gitId":"jayarengam"},"content":"### Add ```event```"},{"lineNumber":96,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":97,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":98,"author":{"gitId":"jayarengam"},"content":"add event /at YYYY/MM/DD HHmm HHmm"},{"lineNumber":99,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":100,"author":{"gitId":"jayarengam"},"content":"\u003cbr\u003e"},{"lineNumber":101,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":102,"author":{"gitId":"jayarengam"},"content":"**Example:**"},{"lineNumber":103,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":104,"author":{"gitId":"jayarengam"},"content":"add event CS tutorial /at 2020/09/05 1000 1200"},{"lineNumber":105,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":106,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":107,"author":{"gitId":"jayarengam"},"content":"Expected result:"},{"lineNumber":108,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":109,"author":{"gitId":"jayarengam"},"content":" Got it. I\u0027ve added this task:"},{"lineNumber":110,"author":{"gitId":"jayarengam"},"content":"       [E][✗] CS tutorial (at: Sep 05 2020 1000 - 1200)"},{"lineNumber":111,"author":{"gitId":"jayarengam"},"content":"    Now you have 3 tasks in the list."},{"lineNumber":112,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":113,"author":{"gitId":"jayarengam"},"content":"\u003cbr\u003e"},{"lineNumber":114,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":115,"author":{"gitId":"jayarengam"},"content":"## List Tasks: ```list```"},{"lineNumber":116,"author":{"gitId":"jayarengam"},"content":"Lists the tasks currently stored."},{"lineNumber":117,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":118,"author":{"gitId":"jayarengam"},"content":"list"},{"lineNumber":119,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":120,"author":{"gitId":"jayarengam"},"content":"Example result:"},{"lineNumber":121,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":122,"author":{"gitId":"jayarengam"},"content":"Here are the tasks in your list:"},{"lineNumber":123,"author":{"gitId":"jayarengam"},"content":" 1. [T][✗] clean room"},{"lineNumber":124,"author":{"gitId":"jayarengam"},"content":" 2. [D][✗] CS assignment (by: Sep 18 2020 2359)"},{"lineNumber":125,"author":{"gitId":"jayarengam"},"content":" 3. [E][✗] CS tutorial (at: Sep 05 2020 1000 - 1200)"},{"lineNumber":126,"author":{"gitId":"jayarengam"},"content":" 4. [T][✗] cook lunch"},{"lineNumber":127,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":128,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":129,"author":{"gitId":"jayarengam"},"content":"\u003cbr\u003e"},{"lineNumber":130,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":131,"author":{"gitId":"jayarengam"},"content":"## Delete Tasks: ```delete```"},{"lineNumber":132,"author":{"gitId":"jayarengam"},"content":"Delete a task from the list"},{"lineNumber":133,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":134,"author":{"gitId":"jayarengam"},"content":"delete TASK_NUM"},{"lineNumber":135,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":136,"author":{"gitId":"jayarengam"},"content":"**Example:**"},{"lineNumber":137,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":138,"author":{"gitId":"jayarengam"},"content":"delete 4"},{"lineNumber":139,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":140,"author":{"gitId":"jayarengam"},"content":"Example response:"},{"lineNumber":141,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":142,"author":{"gitId":"jayarengam"},"content":" Noted. I\u0027ve removed this task:"},{"lineNumber":143,"author":{"gitId":"jayarengam"},"content":"       [T][✗] cook lunch"},{"lineNumber":144,"author":{"gitId":"jayarengam"},"content":"    Now you have 3 tasks in the list."},{"lineNumber":145,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":146,"author":{"gitId":"jayarengam"},"content":"\u003cbr\u003e"},{"lineNumber":147,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":148,"author":{"gitId":"jayarengam"},"content":"## Mark Done/Not Done: ```done```, ```undone```"},{"lineNumber":149,"author":{"gitId":"jayarengam"},"content":"Mark a task as done or not done"},{"lineNumber":150,"author":{"gitId":"jayarengam"},"content":"Examples:"},{"lineNumber":151,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":152,"author":{"gitId":"jayarengam"},"content":"#### Done"},{"lineNumber":153,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":154,"author":{"gitId":"jayarengam"},"content":"done 1"},{"lineNumber":155,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":156,"author":{"gitId":"jayarengam"},"content":"Response:"},{"lineNumber":157,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":158,"author":{"gitId":"jayarengam"},"content":" Nice! I\u0027ve marked this task as done:"},{"lineNumber":159,"author":{"gitId":"jayarengam"},"content":"   [T][✓] clean room"},{"lineNumber":160,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":161,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":162,"author":{"gitId":"jayarengam"},"content":"#### Not Done"},{"lineNumber":163,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":164,"author":{"gitId":"jayarengam"},"content":"undone 1"},{"lineNumber":165,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":166,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":167,"author":{"gitId":"jayarengam"},"content":"\u003cbr\u003e"},{"lineNumber":168,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":169,"author":{"gitId":"jayarengam"},"content":"## Edit Tasks: ```edit```"},{"lineNumber":170,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":171,"author":{"gitId":"jayarengam"},"content":"Edit a task in Cartona\u0027s list"},{"lineNumber":172,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":173,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":174,"author":{"gitId":"jayarengam"},"content":"edit TASK_NUM /FIELD_NAME NEW_VALUE"},{"lineNumber":175,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":176,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":177,"author":{"gitId":"jayarengam"},"content":"### Field keywords to edit:"},{"lineNumber":178,"author":{"gitId":"jayarengam"},"content":"- Todo: `/name`"},{"lineNumber":179,"author":{"gitId":"jayarengam"},"content":"- Deadline: `/name`, `/due`"},{"lineNumber":180,"author":{"gitId":"jayarengam"},"content":"- Event: "},{"lineNumber":181,"author":{"gitId":"jayarengam"},"content":"    - `/name`"},{"lineNumber":182,"author":{"gitId":"jayarengam"},"content":"    - `/start HHmm (edit start time of event)"},{"lineNumber":183,"author":{"gitId":"jayarengam"},"content":"    - `/end HHmm` (edit end time of event)"},{"lineNumber":184,"author":{"gitId":"jayarengam"},"content":"    - `/date YYYY/MM/DD` (edit date of event)"},{"lineNumber":185,"author":{"gitId":"jayarengam"},"content":"    - `/range YYYY/MM/DD HHmm HHm` (edit date *and* time range of event)"},{"lineNumber":186,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":187,"author":{"gitId":"jayarengam"},"content":"**Example inputs:**"},{"lineNumber":188,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":189,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":190,"author":{"gitId":"jayarengam"},"content":"edit 1 /name mop floor"},{"lineNumber":191,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":192,"author":{"gitId":"jayarengam"},"content":"\u003cbr\u003e"},{"lineNumber":193,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":194,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":195,"author":{"gitId":"jayarengam"},"content":"edit 2 /due 2020/09/15 2359"},{"lineNumber":196,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":197,"author":{"gitId":"jayarengam"},"content":"\u003cbr\u003e"},{"lineNumber":198,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":199,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":200,"author":{"gitId":"jayarengam"},"content":"edit 3 /range 2020/09/10 1130 1330"},{"lineNumber":201,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":202,"author":{"gitId":"jayarengam"},"content":"**Example response:**"},{"lineNumber":203,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":204,"author":{"gitId":"jayarengam"},"content":" Nice! I\u0027ve edited task 3:"},{"lineNumber":205,"author":{"gitId":"jayarengam"},"content":"   [E][✗] CS tutorial (at: Sep 10 2020 1130 - 1330)"},{"lineNumber":206,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":207,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":208,"author":{"gitId":"jayarengam"},"content":"## Find Tasks: `find`"},{"lineNumber":209,"author":{"gitId":"jayarengam"},"content":"Find all tasks containing a particular keyword."},{"lineNumber":210,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":211,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":212,"author":{"gitId":"jayarengam"},"content":"find KEYWORD"},{"lineNumber":213,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":214,"author":{"gitId":"jayarengam"},"content":"\u003cbr\u003e"},{"lineNumber":215,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":216,"author":{"gitId":"jayarengam"},"content":"**Example:**"},{"lineNumber":217,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":218,"author":{"gitId":"jayarengam"},"content":"find CS"},{"lineNumber":219,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":220,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":221,"author":{"gitId":"jayarengam"},"content":"Response:"},{"lineNumber":222,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":223,"author":{"gitId":"jayarengam"},"content":"Here are the matching tasks in your list:"},{"lineNumber":224,"author":{"gitId":"jayarengam"},"content":" 1. [D][✗] CS assignment (by: Sep 18 2020 2359)"},{"lineNumber":225,"author":{"gitId":"jayarengam"},"content":" 2. [E][✗] CS tutorial (at: Sep 10 2020 1130 - 1330)"},{"lineNumber":226,"author":{"gitId":"jayarengam"},"content":"```"},{"lineNumber":227,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":228,"author":{"gitId":"jayarengam"},"content":"## Exit: `bye`"},{"lineNumber":229,"author":{"gitId":"jayarengam"},"content":"Exits the program and closes the application window."}],"authorContributionMap":{"jayarengam":220,"-":9}},{"path":"src/main/java/cartona/Application.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"import cartona.ui.MainWindow;"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":" * A GUI for Cartona using FXML."},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":" *"},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":" * @author Jaya Rengam"},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":" */"},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":"public class Application extends javafx.application.Application {"},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":19,"author":{"gitId":"jayarengam"},"content":"    private Cartona cartona \u003d new Cartona();"},{"lineNumber":20,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":21,"author":{"gitId":"jayarengam"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"jayarengam"},"content":"    public void start(Stage stage) {"},{"lineNumber":23,"author":{"gitId":"jayarengam"},"content":"        cartona.load();"},{"lineNumber":24,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":25,"author":{"gitId":"jayarengam"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"jayarengam"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Application.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":27,"author":{"gitId":"jayarengam"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":28,"author":{"gitId":"jayarengam"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":29,"author":{"gitId":"jayarengam"},"content":"            stage.setScene(scene);"},{"lineNumber":30,"author":{"gitId":"jayarengam"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setCartona(cartona);"},{"lineNumber":31,"author":{"gitId":"jayarengam"},"content":"            stage.show();"},{"lineNumber":32,"author":{"gitId":"jayarengam"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"jayarengam"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":37,"author":{"gitId":"jayarengam"},"content":"    public static void main(String[] args) {"},{"lineNumber":38,"author":{"gitId":"jayarengam"},"content":"        Application.launch(Application.class, args);"},{"lineNumber":39,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":40}},{"path":"src/main/java/cartona/Cartona.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"import cartona.command.Command;"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":"import cartona.command.Parser;"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":"import cartona.exception.CartonaException;"},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":"import cartona.task.TaskList;"},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":"import cartona.ui.Ui;"},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":" * Cartona is a simple to-do list application with JavaFX GUI. When run from the console, it reads input from the user"},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":" * and adds and deletes items (called Tasks). It also saves the running list tasks to a file that it loads when"},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":" * re-opened."},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":" *"},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":" * @author Jaya Rengam"},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":" */"},{"lineNumber":19,"author":{"gitId":"jayarengam"},"content":"public class Cartona {"},{"lineNumber":20,"author":{"gitId":"jayarengam"},"content":"    private TaskList taskList;"},{"lineNumber":21,"author":{"gitId":"jayarengam"},"content":"    private Parser parser;"},{"lineNumber":22,"author":{"gitId":"jayarengam"},"content":"    private Ui ui;"},{"lineNumber":23,"author":{"gitId":"jayarengam"},"content":"    private Storage storage;"},{"lineNumber":24,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":25,"author":{"gitId":"jayarengam"},"content":"    Cartona() {"},{"lineNumber":26,"author":{"gitId":"jayarengam"},"content":"        this.taskList \u003d new TaskList();"},{"lineNumber":27,"author":{"gitId":"jayarengam"},"content":"        this.parser \u003d new Parser();"},{"lineNumber":28,"author":{"gitId":"jayarengam"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":29,"author":{"gitId":"jayarengam"},"content":"        this.storage \u003d new Storage(\"./tasklist.txt\");"},{"lineNumber":30,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":32,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"jayarengam"},"content":"     * Loads the saved list of tasks from the text file into the taskList."},{"lineNumber":34,"author":{"gitId":"jayarengam"},"content":"     * Used when the Cartona instance is first created."},{"lineNumber":35,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"jayarengam"},"content":"     * @return a String describing the result of attempting to load a list from the text file, along with"},{"lineNumber":37,"author":{"gitId":"jayarengam"},"content":"     *         the welcome message"},{"lineNumber":38,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"jayarengam"},"content":"    public String load() {"},{"lineNumber":40,"author":{"gitId":"jayarengam"},"content":"        String lineMessage \u003d \"\";"},{"lineNumber":41,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":42,"author":{"gitId":"jayarengam"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"jayarengam"},"content":"            if (!storage.checkAndCreateFile()) {"},{"lineNumber":44,"author":{"gitId":"jayarengam"},"content":"                lineMessage \u003d \" Existing list not found, creating new list\\n\";"},{"lineNumber":45,"author":{"gitId":"jayarengam"},"content":"            } else {"},{"lineNumber":46,"author":{"gitId":"jayarengam"},"content":"                this.taskList \u003d storage.getListFromStorage();"},{"lineNumber":47,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":48,"author":{"gitId":"jayarengam"},"content":"                if (taskList.getSize() \u003d\u003d 0) {"},{"lineNumber":49,"author":{"gitId":"jayarengam"},"content":"                    lineMessage \u003d \" Found an existing list, but it was empty!\\n\";"},{"lineNumber":50,"author":{"gitId":"jayarengam"},"content":"                } else {"},{"lineNumber":51,"author":{"gitId":"jayarengam"},"content":"                    lineMessage \u003d String.format(\" Found an existing list at %s%n\", storage.getPath());"},{"lineNumber":52,"author":{"gitId":"jayarengam"},"content":"                }"},{"lineNumber":53,"author":{"gitId":"jayarengam"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":55,"author":{"gitId":"jayarengam"},"content":"            return String.format(\"%s%s\", lineMessage, ui.getWelcomeMessageFormatted());"},{"lineNumber":56,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":57,"author":{"gitId":"jayarengam"},"content":"        } catch (IOException e) {"},{"lineNumber":58,"author":{"gitId":"jayarengam"},"content":"            return ui.getErrorMessageFormatted(e.getMessage());"},{"lineNumber":59,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":62,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"jayarengam"},"content":"     * Processes the input string from the user (via the GUI) and returns a message to be printed to the GUI."},{"lineNumber":64,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"jayarengam"},"content":"     * @param inputString the input entered by the user into the GUI"},{"lineNumber":66,"author":{"gitId":"jayarengam"},"content":"     * @return the message returned when a relevant Command is successfully executed, or an error message."},{"lineNumber":67,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"jayarengam"},"content":"    public String getResponse(String inputString) {"},{"lineNumber":69,"author":{"gitId":"jayarengam"},"content":"        try {"},{"lineNumber":70,"author":{"gitId":"jayarengam"},"content":"            // Parse and execute command"},{"lineNumber":71,"author":{"gitId":"jayarengam"},"content":"            Command nextCommand \u003d parser.parseCommand(inputString);"},{"lineNumber":72,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":73,"author":{"gitId":"jayarengam"},"content":"            String response \u003d nextCommand.execute(taskList, ui, storage);"},{"lineNumber":74,"author":{"gitId":"jayarengam"},"content":"            return response;"},{"lineNumber":75,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":76,"author":{"gitId":"jayarengam"},"content":"        } catch (CartonaException e) {"},{"lineNumber":77,"author":{"gitId":"jayarengam"},"content":"            // If errors are encountered, print the error message to the console."},{"lineNumber":78,"author":{"gitId":"jayarengam"},"content":"            return ui.getErrorMessageFormatted(e.getMessage());"},{"lineNumber":79,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":82,"author":{"gitId":"jayarengam"},"content":"    public static void main(String[] args) {"},{"lineNumber":83,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":84,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":85}},{"path":"src/main/java/cartona/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":" * The Main class contains the main method that starts the program."},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":" *"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":" * @author Jaya Rengam"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":" */"},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":"public class Main {"},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":"        Application.main(args);"},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":12}},{"path":"src/main/java/cartona/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":"import java.nio.charset.StandardCharsets;"},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":"import java.nio.file.Files;"},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":"import java.nio.file.Path;"},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":"import java.util.List;"},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":"import cartona.command.Parser;"},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":"import cartona.task.TaskList;"},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":" * The Storage class handles the saving of the TaskList to a file, and the loading of Tasks from a file."},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":" *"},{"lineNumber":19,"author":{"gitId":"jayarengam"},"content":" * @author Jaya Rengam"},{"lineNumber":20,"author":{"gitId":"jayarengam"},"content":" */"},{"lineNumber":21,"author":{"gitId":"jayarengam"},"content":"public class Storage {"},{"lineNumber":22,"author":{"gitId":"jayarengam"},"content":"    private static final String HORIZONTAL_LINE \u003d \"    ____________________________________________________________\\n\";"},{"lineNumber":23,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":24,"author":{"gitId":"jayarengam"},"content":"    private String pathString;"},{"lineNumber":25,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":26,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"jayarengam"},"content":"     * Creates a Storage object that uses the file in the path specified."},{"lineNumber":28,"author":{"gitId":"jayarengam"},"content":"     * @param pathString The path of the text file used."},{"lineNumber":29,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"jayarengam"},"content":"    public Storage(String pathString) {"},{"lineNumber":31,"author":{"gitId":"jayarengam"},"content":"        this.pathString \u003d pathString;"},{"lineNumber":32,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":34,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"jayarengam"},"content":"     * Checks if the file located at the pathString exists. If the file does not exist, a new file will be created."},{"lineNumber":36,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"jayarengam"},"content":"     * @returns true if the file exists at the specified path, false if it does not and a new file was created."},{"lineNumber":38,"author":{"gitId":"jayarengam"},"content":"     * @throws IOException if there is an error in creating the file"},{"lineNumber":39,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"jayarengam"},"content":"    public boolean checkAndCreateFile() throws IOException {"},{"lineNumber":41,"author":{"gitId":"jayarengam"},"content":"        File file \u003d new File(pathString);"},{"lineNumber":42,"author":{"gitId":"jayarengam"},"content":"        boolean isCreated \u003d file.exists();"},{"lineNumber":43,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":44,"author":{"gitId":"jayarengam"},"content":"        if (!isCreated) {"},{"lineNumber":45,"author":{"gitId":"jayarengam"},"content":"            file.createNewFile();"},{"lineNumber":46,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":48,"author":{"gitId":"jayarengam"},"content":"        return isCreated;"},{"lineNumber":49,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":51,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"jayarengam"},"content":"     * Gets the list of Tasks, as a TaskList, from the (pre-assigned) text file."},{"lineNumber":53,"author":{"gitId":"jayarengam"},"content":"     * If the file does not exist, it returns an empty TaskList."},{"lineNumber":54,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"jayarengam"},"content":"     * @return the TaskList containing the Tasks recorded in the text file."},{"lineNumber":56,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"jayarengam"},"content":"    public TaskList getListFromStorage() {"},{"lineNumber":58,"author":{"gitId":"jayarengam"},"content":"        // Create File object"},{"lineNumber":59,"author":{"gitId":"jayarengam"},"content":"        Path path \u003d Path.of(pathString);"},{"lineNumber":60,"author":{"gitId":"jayarengam"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":61,"author":{"gitId":"jayarengam"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":62,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":63,"author":{"gitId":"jayarengam"},"content":"        try {"},{"lineNumber":64,"author":{"gitId":"jayarengam"},"content":"            //Scanner sc \u003d new Scanner(new File(pathString));"},{"lineNumber":65,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":66,"author":{"gitId":"jayarengam"},"content":"            // Read the contents of the file"},{"lineNumber":67,"author":{"gitId":"jayarengam"},"content":"            List\u003cString\u003e contents \u003d Files.readAllLines(path, StandardCharsets.UTF_8);"},{"lineNumber":68,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":69,"author":{"gitId":"jayarengam"},"content":"            // Parse each line of text and add it to the TaskList"},{"lineNumber":70,"author":{"gitId":"jayarengam"},"content":"            for (String taskLine : contents) {"},{"lineNumber":71,"author":{"gitId":"jayarengam"},"content":"                if (taskLine.equals(\"\")) {"},{"lineNumber":72,"author":{"gitId":"jayarengam"},"content":"                    continue;"},{"lineNumber":73,"author":{"gitId":"jayarengam"},"content":"                }"},{"lineNumber":74,"author":{"gitId":"jayarengam"},"content":"                taskList.addTask(parser.parseFromStorage(taskLine));"},{"lineNumber":75,"author":{"gitId":"jayarengam"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"jayarengam"},"content":"        } catch (Exception e) {"},{"lineNumber":77,"author":{"gitId":"jayarengam"},"content":"            e.printStackTrace();"},{"lineNumber":78,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":80,"author":{"gitId":"jayarengam"},"content":"        return taskList;"},{"lineNumber":81,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":83,"author":{"gitId":"jayarengam"},"content":"    public String getPath() {"},{"lineNumber":84,"author":{"gitId":"jayarengam"},"content":"        return pathString;"},{"lineNumber":85,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":87,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"jayarengam"},"content":"     * Saves the given TaskList to the pre-assigned text file."},{"lineNumber":89,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":90,"author":{"gitId":"jayarengam"},"content":"     * @param taskList The TaskList to be saved."},{"lineNumber":91,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"jayarengam"},"content":"    public void saveListToFile(TaskList taskList) {"},{"lineNumber":93,"author":{"gitId":"jayarengam"},"content":"        try {"},{"lineNumber":94,"author":{"gitId":"jayarengam"},"content":"            assert checkAndCreateFile();"},{"lineNumber":95,"author":{"gitId":"jayarengam"},"content":"        } catch (IOException e) {"},{"lineNumber":96,"author":{"gitId":"jayarengam"},"content":"            // accounts for case where parent directory of file does not exist"},{"lineNumber":97,"author":{"gitId":"jayarengam"},"content":"            throw new AssertionError(\"File should have been created\");"},{"lineNumber":98,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":100,"author":{"gitId":"jayarengam"},"content":"        String stringToWrite \u003d taskList.getListForStorage();"},{"lineNumber":101,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":102,"author":{"gitId":"jayarengam"},"content":"        try {"},{"lineNumber":103,"author":{"gitId":"jayarengam"},"content":"            FileWriter writer \u003d new FileWriter(pathString, StandardCharsets.UTF_8);"},{"lineNumber":104,"author":{"gitId":"jayarengam"},"content":"            writer.write(stringToWrite, 0, stringToWrite.length());"},{"lineNumber":105,"author":{"gitId":"jayarengam"},"content":"            writer.close();"},{"lineNumber":106,"author":{"gitId":"jayarengam"},"content":"        } catch (IOException e) {"},{"lineNumber":107,"author":{"gitId":"jayarengam"},"content":"            e.printStackTrace();"},{"lineNumber":108,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":110}},{"path":"src/main/java/cartona/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona.command;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"import cartona.Storage;"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":"import cartona.exception.CartonaException;"},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"import cartona.task.Task;"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":"import cartona.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":"import cartona.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":" * The AddCommand class, when executed, runs the steps required to add a Task to a TaskList."},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":" *"},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":" * @author Jaya Rengam"},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":" */"},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":"public class AddCommand implements Command {"},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":"    private boolean isDone;"},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":"    /** The task to be added */"},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":"    private Task taskToAdd;"},{"lineNumber":19,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":20,"author":{"gitId":"jayarengam"},"content":"    AddCommand(Task taskToAdd) {"},{"lineNumber":21,"author":{"gitId":"jayarengam"},"content":"        this.isDone \u003d false;"},{"lineNumber":22,"author":{"gitId":"jayarengam"},"content":"        this.taskToAdd \u003d taskToAdd;"},{"lineNumber":23,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":25,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"jayarengam"},"content":"     * Adds the Task given by taskToAdd to the TaskList and updates the Storage text file."},{"lineNumber":27,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"jayarengam"},"content":"     * @param taskList the TaskList being modified"},{"lineNumber":29,"author":{"gitId":"jayarengam"},"content":"     * @param ui the Ui object that is used to print the action to the console"},{"lineNumber":30,"author":{"gitId":"jayarengam"},"content":"     * @param storage the Storage object used to update the text file"},{"lineNumber":31,"author":{"gitId":"jayarengam"},"content":"     * @throws CartonaException if the command has already been executed"},{"lineNumber":32,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"jayarengam"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"jayarengam"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws CartonaException {"},{"lineNumber":35,"author":{"gitId":"jayarengam"},"content":"        // Check if the command has already been executed."},{"lineNumber":36,"author":{"gitId":"jayarengam"},"content":"        if (isDone) {"},{"lineNumber":37,"author":{"gitId":"jayarengam"},"content":"            throw new CartonaException(\"Error: AddCommand already executed\");"},{"lineNumber":38,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":40,"author":{"gitId":"jayarengam"},"content":"        taskList.addTask(taskToAdd);"},{"lineNumber":41,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":42,"author":{"gitId":"jayarengam"},"content":"        this.isDone \u003d true;"},{"lineNumber":43,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":44,"author":{"gitId":"jayarengam"},"content":"        // Update Storage"},{"lineNumber":45,"author":{"gitId":"jayarengam"},"content":"        storage.saveListToFile(taskList);"},{"lineNumber":46,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":47,"author":{"gitId":"jayarengam"},"content":"        // Return UI message"},{"lineNumber":48,"author":{"gitId":"jayarengam"},"content":"        return ui.printTaskAddingMessage(taskToAdd, taskList.getSize());"},{"lineNumber":49,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":50,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":52,"author":{"gitId":"jayarengam"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"jayarengam"},"content":"    public boolean isExitCmd() {"},{"lineNumber":54,"author":{"gitId":"jayarengam"},"content":"        return false;"},{"lineNumber":55,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":56}},{"path":"src/main/java/cartona/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona.command;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"import cartona.Storage;"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":"import cartona.exception.CartonaException;"},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"import cartona.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":"import cartona.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":" * The Command class is an interface for classes that are used to run commands from the user."},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":" *"},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":" * @author Jaya Rengam"},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":" */"},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":"public interface Command {"},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":"     * Executes the command using the given arguments."},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":"     * @param taskList The TaskList being manipulated by the Command"},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":"     * @param ui The Ui object that is used to print the action to the console."},{"lineNumber":19,"author":{"gitId":"jayarengam"},"content":"     * @param storage The Storage object used to update the text file, if the TaskList is being modified."},{"lineNumber":20,"author":{"gitId":"jayarengam"},"content":"     * @return The string to be printed to the console upon execution of the command."},{"lineNumber":21,"author":{"gitId":"jayarengam"},"content":"     * @throws CartonaException if there is an error during execution of the command."},{"lineNumber":22,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"jayarengam"},"content":"    String execute(TaskList taskList, Ui ui, Storage storage) throws CartonaException;"},{"lineNumber":24,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":25,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"jayarengam"},"content":"     * Get a boolean describing whether the command is an exit command."},{"lineNumber":27,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"jayarengam"},"content":"    boolean isExitCmd();"},{"lineNumber":29,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":29}},{"path":"src/main/java/cartona/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona.command;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"import cartona.Storage;"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":"import cartona.exception.CartonaException;"},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"import cartona.task.Task;"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":"import cartona.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":"import cartona.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":" * The DeleteCommand class, when executed, runs the steps required to delete a Task from a TaskList."},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":" *"},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":" * @author Jaya Rengam"},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":" */"},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":"public class DeleteCommand implements Command {"},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":"    private boolean hasExecuted;"},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":"    /** The ID in the TaskList of the Task to be deleted. */"},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":"    private int taskIdToDelete;"},{"lineNumber":19,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":20,"author":{"gitId":"jayarengam"},"content":"    DeleteCommand(int taskIdToDelete) {"},{"lineNumber":21,"author":{"gitId":"jayarengam"},"content":"        this.hasExecuted \u003d false;"},{"lineNumber":22,"author":{"gitId":"jayarengam"},"content":"        this.taskIdToDelete \u003d taskIdToDelete;"},{"lineNumber":23,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":25,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"jayarengam"},"content":"     * Deletes the Task given by taskIdToComplete in the TaskList and updates the Storage text file."},{"lineNumber":27,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"jayarengam"},"content":"     * @param taskList the TaskList being modified"},{"lineNumber":29,"author":{"gitId":"jayarengam"},"content":"     * @param ui the Ui object that is used to print the action to the console"},{"lineNumber":30,"author":{"gitId":"jayarengam"},"content":"     * @param storage the Storage object used to update the text file"},{"lineNumber":31,"author":{"gitId":"jayarengam"},"content":"     * @throws CartonaException if the command has already been executed"},{"lineNumber":32,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"jayarengam"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"jayarengam"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws CartonaException {"},{"lineNumber":35,"author":{"gitId":"jayarengam"},"content":"        // Check if the command has already been executed."},{"lineNumber":36,"author":{"gitId":"jayarengam"},"content":"        if (hasExecuted) {"},{"lineNumber":37,"author":{"gitId":"jayarengam"},"content":"            throw new CartonaException(\"Error: DeleteCommand already executed\");"},{"lineNumber":38,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":40,"author":{"gitId":"jayarengam"},"content":"        // Delete the task"},{"lineNumber":41,"author":{"gitId":"jayarengam"},"content":"        Task deletedTask \u003d taskList.getTask(taskIdToDelete);"},{"lineNumber":42,"author":{"gitId":"jayarengam"},"content":"        taskList.deleteTask(taskIdToDelete);"},{"lineNumber":43,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":44,"author":{"gitId":"jayarengam"},"content":"        // Update Storage"},{"lineNumber":45,"author":{"gitId":"jayarengam"},"content":"        storage.saveListToFile(taskList);"},{"lineNumber":46,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":47,"author":{"gitId":"jayarengam"},"content":"        this.hasExecuted \u003d true;"},{"lineNumber":48,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":49,"author":{"gitId":"jayarengam"},"content":"        // Return UI message"},{"lineNumber":50,"author":{"gitId":"jayarengam"},"content":"        return ui.printTaskDeletionMessage(deletedTask, taskList.getSize());"},{"lineNumber":51,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":53,"author":{"gitId":"jayarengam"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"jayarengam"},"content":"    public boolean isExitCmd() {"},{"lineNumber":55,"author":{"gitId":"jayarengam"},"content":"        return false;"},{"lineNumber":56,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":57}},{"path":"src/main/java/cartona/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":" * The DoneCommand class, when executed, runs the steps required to mark a Task in a TaskList as done."},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":" *"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":" * @author Jaya Rengam"},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":" */"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":"package cartona.command;"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":"import cartona.Storage;"},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":"import cartona.exception.CartonaException;"},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":"import cartona.task.Task;"},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":"import cartona.task.TaskList;"},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":"import cartona.ui.Ui;"},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":"public class DoneCommand implements Command {"},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":"    private boolean hasExecuted;"},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":"    /** The ID in the list of the task to be marked as complete. */"},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":"    private int taskIdToComplete;"},{"lineNumber":19,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":20,"author":{"gitId":"jayarengam"},"content":"    DoneCommand(int taskIdToComplete) {"},{"lineNumber":21,"author":{"gitId":"jayarengam"},"content":"        this.hasExecuted \u003d false;"},{"lineNumber":22,"author":{"gitId":"jayarengam"},"content":"        this.taskIdToComplete \u003d taskIdToComplete;"},{"lineNumber":23,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":25,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"jayarengam"},"content":"     * Completes the Task given by taskIdToComplete in the TaskList and updates the Storage text file."},{"lineNumber":27,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"jayarengam"},"content":"     * @param taskList the TaskList being modified"},{"lineNumber":29,"author":{"gitId":"jayarengam"},"content":"     * @param ui the Ui object that is used to print the action to the console"},{"lineNumber":30,"author":{"gitId":"jayarengam"},"content":"     * @param storage the Storage object used to update the text file"},{"lineNumber":31,"author":{"gitId":"jayarengam"},"content":"     * @throws CartonaException if the command has already been executed"},{"lineNumber":32,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"jayarengam"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"jayarengam"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws CartonaException {"},{"lineNumber":35,"author":{"gitId":"jayarengam"},"content":"        // Check if the command has already been executed."},{"lineNumber":36,"author":{"gitId":"jayarengam"},"content":"        if (hasExecuted) {"},{"lineNumber":37,"author":{"gitId":"jayarengam"},"content":"            throw new CartonaException(\"Error: DoneCommand already executed\");"},{"lineNumber":38,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":40,"author":{"gitId":"jayarengam"},"content":"        taskList.completeTask(taskIdToComplete);"},{"lineNumber":41,"author":{"gitId":"jayarengam"},"content":"        Task completedTask \u003d taskList.getTask(taskIdToComplete);"},{"lineNumber":42,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":43,"author":{"gitId":"jayarengam"},"content":"        // Update Storage"},{"lineNumber":44,"author":{"gitId":"jayarengam"},"content":"        storage.saveListToFile(taskList);"},{"lineNumber":45,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":46,"author":{"gitId":"jayarengam"},"content":"        // Return UI message"},{"lineNumber":47,"author":{"gitId":"jayarengam"},"content":"        return ui.printTaskDoneMessage(completedTask);"},{"lineNumber":48,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":50,"author":{"gitId":"jayarengam"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"jayarengam"},"content":"    public boolean isExitCmd() {"},{"lineNumber":52,"author":{"gitId":"jayarengam"},"content":"        return false;"},{"lineNumber":53,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":54}},{"path":"src/main/java/cartona/command/EditCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona.command;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"import cartona.Storage;"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":"import cartona.exception.CartonaException;"},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"import cartona.task.Task;"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":"import cartona.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":"import cartona.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":" * The EditCommand class, when executed, runs the steps required to edit a specific Task within the TaskList."},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":" *"},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":" * @author Jaya Rengam"},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":" */"},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":"public class EditCommand implements Command {"},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":"    private static EditParser editParser \u003d new EditParser();"},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":"    private boolean hasExecuted;"},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":19,"author":{"gitId":"jayarengam"},"content":"    private int taskIdToEdit;"},{"lineNumber":20,"author":{"gitId":"jayarengam"},"content":"    /** The String from the user containing information about the task to be edited */"},{"lineNumber":21,"author":{"gitId":"jayarengam"},"content":"    private String editInstruction;"},{"lineNumber":22,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":23,"author":{"gitId":"jayarengam"},"content":"    EditCommand(int taskIdToEdit, String editString) {"},{"lineNumber":24,"author":{"gitId":"jayarengam"},"content":"        this.hasExecuted \u003d false;"},{"lineNumber":25,"author":{"gitId":"jayarengam"},"content":"        this.taskIdToEdit \u003d taskIdToEdit;"},{"lineNumber":26,"author":{"gitId":"jayarengam"},"content":"        this.editInstruction \u003d editString;"},{"lineNumber":27,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":29,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"jayarengam"},"content":"     * Edits the Task given by taskIdToComplete in the TaskList and updates the Storage text file."},{"lineNumber":31,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"jayarengam"},"content":"     * @param taskList the TaskList being modified"},{"lineNumber":33,"author":{"gitId":"jayarengam"},"content":"     * @param ui the Ui object that is used to print the action to the console"},{"lineNumber":34,"author":{"gitId":"jayarengam"},"content":"     * @param storage the Storage object used to update the text file"},{"lineNumber":35,"author":{"gitId":"jayarengam"},"content":"     * @throws CartonaException if the command has already been executed"},{"lineNumber":36,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"jayarengam"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"jayarengam"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws CartonaException {"},{"lineNumber":39,"author":{"gitId":"jayarengam"},"content":"        // Check if the command has already been executed."},{"lineNumber":40,"author":{"gitId":"jayarengam"},"content":"        if (hasExecuted) {"},{"lineNumber":41,"author":{"gitId":"jayarengam"},"content":"            throw new CartonaException(\"Error: DeleteCommand already executed\");"},{"lineNumber":42,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":44,"author":{"gitId":"jayarengam"},"content":"        // Edit the Task"},{"lineNumber":45,"author":{"gitId":"jayarengam"},"content":"        Task replacementTask \u003d editParser.parseReplacement(taskList, taskIdToEdit, editInstruction);"},{"lineNumber":46,"author":{"gitId":"jayarengam"},"content":"        taskList.editTask(taskIdToEdit, replacementTask);"},{"lineNumber":47,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":48,"author":{"gitId":"jayarengam"},"content":"        // Update Storage"},{"lineNumber":49,"author":{"gitId":"jayarengam"},"content":"        storage.saveListToFile(taskList);"},{"lineNumber":50,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":51,"author":{"gitId":"jayarengam"},"content":"        this.hasExecuted \u003d true;"},{"lineNumber":52,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":53,"author":{"gitId":"jayarengam"},"content":"        // Return UI message"},{"lineNumber":54,"author":{"gitId":"jayarengam"},"content":"        return ui.printTaskEditMessage(taskIdToEdit, replacementTask);"},{"lineNumber":55,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":57,"author":{"gitId":"jayarengam"},"content":"    @Override"},{"lineNumber":58,"author":{"gitId":"jayarengam"},"content":"    public boolean isExitCmd() {"},{"lineNumber":59,"author":{"gitId":"jayarengam"},"content":"        return false;"},{"lineNumber":60,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":61}},{"path":"src/main/java/cartona/command/EditParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona.command;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"import cartona.exception.CartonaException;"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":"import cartona.exception.InvalidEditFieldException;"},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"import cartona.exception.InvalidTaskTimeException;"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":"import cartona.task.DateParser;"},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":"import cartona.task.Deadline;"},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":"import cartona.task.Event;"},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":"import cartona.task.Task;"},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":"import cartona.task.TaskDate;"},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":"import cartona.task.TaskList;"},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":"import cartona.task.Todo;"},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":"public class EditParser {"},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":"    private Task parseTodo(String[] editFields, Todo taskToEdit) throws InvalidEditFieldException {"},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":19,"author":{"gitId":"jayarengam"},"content":"        // Start from 1 because the first element will include the part of the string before the \u0027/\u0027"},{"lineNumber":20,"author":{"gitId":"jayarengam"},"content":"        String newField \u003d editFields[1];"},{"lineNumber":21,"author":{"gitId":"jayarengam"},"content":"        boolean isDone \u003d taskToEdit.checkIfDone();"},{"lineNumber":22,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":23,"author":{"gitId":"jayarengam"},"content":"        // Check that field of the Todo to be edited is the name"},{"lineNumber":24,"author":{"gitId":"jayarengam"},"content":"        if (!newField.split(\" \")[0].equals(\"name\")) {"},{"lineNumber":25,"author":{"gitId":"jayarengam"},"content":"            throw new InvalidEditFieldException(\"Error: Unrecognized field name in Todo\");"},{"lineNumber":26,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":28,"author":{"gitId":"jayarengam"},"content":"        return new Todo(newField.substring(5), isDone);"},{"lineNumber":29,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":31,"author":{"gitId":"jayarengam"},"content":"    private Deadline parseDeadline(String[] editFields, Deadline taskToEdit) throws InvalidEditFieldException,"},{"lineNumber":32,"author":{"gitId":"jayarengam"},"content":"            InvalidTaskTimeException {"},{"lineNumber":33,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":34,"author":{"gitId":"jayarengam"},"content":"        String name \u003d taskToEdit.getName();"},{"lineNumber":35,"author":{"gitId":"jayarengam"},"content":"        TaskDate dueTime \u003d taskToEdit.getDueTime();"},{"lineNumber":36,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":37,"author":{"gitId":"jayarengam"},"content":"        // Iterate across the fields to be changed"},{"lineNumber":38,"author":{"gitId":"jayarengam"},"content":"        for (int i \u003d 1; i \u003c editFields.length; i++) {"},{"lineNumber":39,"author":{"gitId":"jayarengam"},"content":"            String nextField \u003d editFields[i];"},{"lineNumber":40,"author":{"gitId":"jayarengam"},"content":"            String fieldName \u003d nextField.split(\" \")[0];"},{"lineNumber":41,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":42,"author":{"gitId":"jayarengam"},"content":"            // Iterate through the fields the user wants to change, updating accordingly"},{"lineNumber":43,"author":{"gitId":"jayarengam"},"content":"            switch (fieldName) {"},{"lineNumber":44,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":45,"author":{"gitId":"jayarengam"},"content":"            case (\"name\"):"},{"lineNumber":46,"author":{"gitId":"jayarengam"},"content":"                name \u003d nextField.substring(5);"},{"lineNumber":47,"author":{"gitId":"jayarengam"},"content":"                break;"},{"lineNumber":48,"author":{"gitId":"jayarengam"},"content":"            case (\"due\"):"},{"lineNumber":49,"author":{"gitId":"jayarengam"},"content":"                String dateString \u003d nextField.substring(4);"},{"lineNumber":50,"author":{"gitId":"jayarengam"},"content":"                dueTime \u003d DateParser.parseTaskDate(dateString);"},{"lineNumber":51,"author":{"gitId":"jayarengam"},"content":"                break;"},{"lineNumber":52,"author":{"gitId":"jayarengam"},"content":"            default:"},{"lineNumber":53,"author":{"gitId":"jayarengam"},"content":"                throw new InvalidEditFieldException(\"Error: Unrecognised field name in Deadline\");"},{"lineNumber":54,"author":{"gitId":"jayarengam"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":57,"author":{"gitId":"jayarengam"},"content":"        return new Deadline(name, false, dueTime);"},{"lineNumber":58,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":60,"author":{"gitId":"jayarengam"},"content":"    private Event parseEvent(String[] editFields, Event taskToEdit) throws InvalidTaskTimeException,"},{"lineNumber":61,"author":{"gitId":"jayarengam"},"content":"            InvalidEditFieldException {"},{"lineNumber":62,"author":{"gitId":"jayarengam"},"content":"        String name \u003d taskToEdit.getName();"},{"lineNumber":63,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":64,"author":{"gitId":"jayarengam"},"content":"        TaskDate startDate \u003d taskToEdit.getStartDate();"},{"lineNumber":65,"author":{"gitId":"jayarengam"},"content":"        TaskDate endDate \u003d taskToEdit.getEndDate();"},{"lineNumber":66,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":67,"author":{"gitId":"jayarengam"},"content":"        String startTime \u003d startDate.getTime();"},{"lineNumber":68,"author":{"gitId":"jayarengam"},"content":"        String endTime \u003d taskToEdit.getEndDate().getTime();"},{"lineNumber":69,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":70,"author":{"gitId":"jayarengam"},"content":"        for (int i \u003d 1; i \u003c editFields.length; i++) {"},{"lineNumber":71,"author":{"gitId":"jayarengam"},"content":"            String nextField \u003d editFields[i];"},{"lineNumber":72,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":73,"author":{"gitId":"jayarengam"},"content":"            String fieldName \u003d nextField.split(\" \")[0];"},{"lineNumber":74,"author":{"gitId":"jayarengam"},"content":"            System.out.println(fieldName);"},{"lineNumber":75,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":76,"author":{"gitId":"jayarengam"},"content":"            switch (fieldName) {"},{"lineNumber":77,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":78,"author":{"gitId":"jayarengam"},"content":"            case (\"name\"):"},{"lineNumber":79,"author":{"gitId":"jayarengam"},"content":"                name \u003d nextField.substring(5);"},{"lineNumber":80,"author":{"gitId":"jayarengam"},"content":"                break;"},{"lineNumber":81,"author":{"gitId":"jayarengam"},"content":"            case (\"date\"):"},{"lineNumber":82,"author":{"gitId":"jayarengam"},"content":"                startDate \u003d DateParser.parseTaskDate(nextField.substring(5) + \" \" + startTime);"},{"lineNumber":83,"author":{"gitId":"jayarengam"},"content":"                endDate \u003d DateParser.parseTaskDate(nextField.substring(5) + \" \" + endTime);"},{"lineNumber":84,"author":{"gitId":"jayarengam"},"content":"                break;"},{"lineNumber":85,"author":{"gitId":"jayarengam"},"content":"            case (\"start\"):"},{"lineNumber":86,"author":{"gitId":"jayarengam"},"content":"                startTime \u003d nextField.substring(6);"},{"lineNumber":87,"author":{"gitId":"jayarengam"},"content":"                startDate \u003d new TaskDate(startDate.getDate(), startTime);"},{"lineNumber":88,"author":{"gitId":"jayarengam"},"content":"                break;"},{"lineNumber":89,"author":{"gitId":"jayarengam"},"content":"            case (\"end\"):"},{"lineNumber":90,"author":{"gitId":"jayarengam"},"content":"                endTime \u003d nextField.substring(4);"},{"lineNumber":91,"author":{"gitId":"jayarengam"},"content":"                endDate \u003d new TaskDate(endDate.getDate(), endTime);"},{"lineNumber":92,"author":{"gitId":"jayarengam"},"content":"                break;"},{"lineNumber":93,"author":{"gitId":"jayarengam"},"content":"            case (\"range\"):"},{"lineNumber":94,"author":{"gitId":"jayarengam"},"content":"                String rangeString \u003d nextField.substring(6);"},{"lineNumber":95,"author":{"gitId":"jayarengam"},"content":"                startDate \u003d DateParser.getRange(rangeString, true);"},{"lineNumber":96,"author":{"gitId":"jayarengam"},"content":"                endDate \u003d DateParser.getRange(rangeString, false);"},{"lineNumber":97,"author":{"gitId":"jayarengam"},"content":"                break;"},{"lineNumber":98,"author":{"gitId":"jayarengam"},"content":"            default:"},{"lineNumber":99,"author":{"gitId":"jayarengam"},"content":"                throw new InvalidEditFieldException(\"Error: Unrecognised field name in Event\");"},{"lineNumber":100,"author":{"gitId":"jayarengam"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":103,"author":{"gitId":"jayarengam"},"content":"        return new Event(name, false, startDate, endDate);"},{"lineNumber":104,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":106,"author":{"gitId":"jayarengam"},"content":"    Task parseReplacement(TaskList taskList, int taskIdToEdit, String editString) throws CartonaException,"},{"lineNumber":107,"author":{"gitId":"jayarengam"},"content":"            InvalidEditFieldException, InvalidTaskTimeException {"},{"lineNumber":108,"author":{"gitId":"jayarengam"},"content":"        Task taskToEdit \u003d taskList.getTask(taskIdToEdit);"},{"lineNumber":109,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":110,"author":{"gitId":"jayarengam"},"content":"        String taskType \u003d taskToEdit.getType();"},{"lineNumber":111,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":112,"author":{"gitId":"jayarengam"},"content":"        Task replacementTask \u003d null;"},{"lineNumber":113,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":114,"author":{"gitId":"jayarengam"},"content":"        String[] editFields \u003d editString.split(\" /\");"},{"lineNumber":115,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":116,"author":{"gitId":"jayarengam"},"content":"        switch (taskType) {"},{"lineNumber":117,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":118,"author":{"gitId":"jayarengam"},"content":"        case (\"T\"):"},{"lineNumber":119,"author":{"gitId":"jayarengam"},"content":"            replacementTask \u003d parseTodo(editFields, (Todo) taskToEdit);"},{"lineNumber":120,"author":{"gitId":"jayarengam"},"content":"            break;"},{"lineNumber":121,"author":{"gitId":"jayarengam"},"content":"        case (\"D\"):"},{"lineNumber":122,"author":{"gitId":"jayarengam"},"content":"            replacementTask \u003d parseDeadline(editFields, (Deadline) taskToEdit);"},{"lineNumber":123,"author":{"gitId":"jayarengam"},"content":"            break;"},{"lineNumber":124,"author":{"gitId":"jayarengam"},"content":"        case (\"E\"):"},{"lineNumber":125,"author":{"gitId":"jayarengam"},"content":"            replacementTask \u003d parseEvent(editFields, (Event) taskToEdit);"},{"lineNumber":126,"author":{"gitId":"jayarengam"},"content":"            break;"},{"lineNumber":127,"author":{"gitId":"jayarengam"},"content":"        default:"},{"lineNumber":128,"author":{"gitId":"jayarengam"},"content":"            throw new CartonaException(\"Invalid task type\");"},{"lineNumber":129,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":131,"author":{"gitId":"jayarengam"},"content":"        return replacementTask;"},{"lineNumber":132,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":133}},{"path":"src/main/java/cartona/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona.command;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"import cartona.Storage;"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":"import cartona.exception.CartonaException;"},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"import cartona.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":"import cartona.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":" * The ExitCommand class runs the steps required before termination of the program."},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":" *"},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":" * @author Jaya Rengam"},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":" */"},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":"public class ExitCommand implements Command {"},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":"    private boolean hasExecuted;"},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":"    public ExitCommand() {"},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":"        this.hasExecuted \u003d false;"},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":20,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"jayarengam"},"content":"     * Prints the exit message to console."},{"lineNumber":22,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"jayarengam"},"content":"     * @param taskList the running TaskList"},{"lineNumber":24,"author":{"gitId":"jayarengam"},"content":"     * @param ui the Ui object that is used to print the action to the console"},{"lineNumber":25,"author":{"gitId":"jayarengam"},"content":"     * @param storage the Storage object in use"},{"lineNumber":26,"author":{"gitId":"jayarengam"},"content":"     * @throws CartonaException"},{"lineNumber":27,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"jayarengam"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"jayarengam"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws CartonaException {"},{"lineNumber":30,"author":{"gitId":"jayarengam"},"content":"        // Check if the command has already been executed."},{"lineNumber":31,"author":{"gitId":"jayarengam"},"content":"        if (hasExecuted) {"},{"lineNumber":32,"author":{"gitId":"jayarengam"},"content":"            throw new CartonaException(\"Error: PrintErrorCommand already executed\");"},{"lineNumber":33,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":35,"author":{"gitId":"jayarengam"},"content":"        this.hasExecuted \u003d true;"},{"lineNumber":36,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":37,"author":{"gitId":"jayarengam"},"content":"        System.exit(0);"},{"lineNumber":38,"author":{"gitId":"jayarengam"},"content":"        // Print UI message"},{"lineNumber":39,"author":{"gitId":"jayarengam"},"content":"        return ui.printExitMessage();"},{"lineNumber":40,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":42,"author":{"gitId":"jayarengam"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"jayarengam"},"content":"    public boolean isExitCmd() {"},{"lineNumber":44,"author":{"gitId":"jayarengam"},"content":"        return true;"},{"lineNumber":45,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":46}},{"path":"src/main/java/cartona/command/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona.command;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"import cartona.Storage;"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":"import cartona.exception.CartonaException;"},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"import cartona.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":"import cartona.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":" * The FindCommand class, when executed, runs the steps required to find the list of tasks within the taskList that"},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":" * contain the search keyword."},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":" *"},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":" * @author Jaya Rengam"},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":" */"},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":"public class FindTaskCommand implements Command {"},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":"    private boolean isDone;"},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":"    /** The search keyword used to find tasks */"},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":"    private String searchKeyword;"},{"lineNumber":19,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":20,"author":{"gitId":"jayarengam"},"content":"    FindTaskCommand(String searchKeyword) {"},{"lineNumber":21,"author":{"gitId":"jayarengam"},"content":"        this.isDone \u003d false;"},{"lineNumber":22,"author":{"gitId":"jayarengam"},"content":"        this.searchKeyword \u003d searchKeyword;"},{"lineNumber":23,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":25,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"jayarengam"},"content":"     * Finds the list of tasks whose names contain the searchKeyword and prints the list to the console."},{"lineNumber":27,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"jayarengam"},"content":"     * @param taskList the running TaskList in use"},{"lineNumber":29,"author":{"gitId":"jayarengam"},"content":"     * @param ui the Ui object that is used to print the action to the console"},{"lineNumber":30,"author":{"gitId":"jayarengam"},"content":"     * @param storage the Storage object in use"},{"lineNumber":31,"author":{"gitId":"jayarengam"},"content":"     * @throws CartonaException if the command has already been executed"},{"lineNumber":32,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"jayarengam"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"jayarengam"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws CartonaException {"},{"lineNumber":35,"author":{"gitId":"jayarengam"},"content":"        // Check if the command has already been executed."},{"lineNumber":36,"author":{"gitId":"jayarengam"},"content":"        if (isDone) {"},{"lineNumber":37,"author":{"gitId":"jayarengam"},"content":"            throw new CartonaException(\"Error: FindTaskCommand already executed\");"},{"lineNumber":38,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":40,"author":{"gitId":"jayarengam"},"content":"        TaskList matchingList \u003d new TaskList();"},{"lineNumber":41,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":42,"author":{"gitId":"jayarengam"},"content":"        // Iterate through the taskList and add matching tasks to new list"},{"lineNumber":43,"author":{"gitId":"jayarengam"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.getSize(); i++) {"},{"lineNumber":44,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":45,"author":{"gitId":"jayarengam"},"content":"            String nextTaskName \u003d taskList.getTask(i).getName();"},{"lineNumber":46,"author":{"gitId":"jayarengam"},"content":"            if (nextTaskName.contains(this.searchKeyword)) {"},{"lineNumber":47,"author":{"gitId":"jayarengam"},"content":"                matchingList.addTask(taskList.getTask(i));"},{"lineNumber":48,"author":{"gitId":"jayarengam"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":51,"author":{"gitId":"jayarengam"},"content":"        this.isDone \u003d true;"},{"lineNumber":52,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":53,"author":{"gitId":"jayarengam"},"content":"        return ui.printMatchingTaskList(matchingList);"},{"lineNumber":54,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":56,"author":{"gitId":"jayarengam"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"jayarengam"},"content":"    public boolean isExitCmd() {"},{"lineNumber":58,"author":{"gitId":"jayarengam"},"content":"        return false;"},{"lineNumber":59,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":60}},{"path":"src/main/java/cartona/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona.command;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"import cartona.exception.EmptyTaskDescriptionException;"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":"import cartona.exception.InvalidInputException;"},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"import cartona.exception.InvalidTaskIdException;"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":"import cartona.exception.InvalidTaskTimeException;"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":"import cartona.exception.UnknownCommandException;"},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":"import cartona.task.DateParser;"},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":"import cartona.task.Deadline;"},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":"import cartona.task.Event;"},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":"import cartona.task.Task;"},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":"import cartona.task.TaskDate;"},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":"import cartona.task.Todo;"},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":" * The Parser class is responsible for parsing various types of Strings encountered within the program."},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":" *"},{"lineNumber":19,"author":{"gitId":"jayarengam"},"content":" * @author Jaya Rengam"},{"lineNumber":20,"author":{"gitId":"jayarengam"},"content":" */"},{"lineNumber":21,"author":{"gitId":"jayarengam"},"content":"public class Parser {"},{"lineNumber":22,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":23,"author":{"gitId":"jayarengam"},"content":"    private Todo parseTodo(String name) {"},{"lineNumber":24,"author":{"gitId":"jayarengam"},"content":"        return new Todo(name, false);"},{"lineNumber":25,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":27,"author":{"gitId":"jayarengam"},"content":"    private Deadline parseDeadline(String nameAndDate) throws InvalidTaskTimeException, EmptyTaskDescriptionException {"},{"lineNumber":28,"author":{"gitId":"jayarengam"},"content":"        String deadlineName;"},{"lineNumber":29,"author":{"gitId":"jayarengam"},"content":"        String time;"},{"lineNumber":30,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":31,"author":{"gitId":"jayarengam"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"jayarengam"},"content":"            String[] nameAndTime \u003d nameAndDate.split(\" /by \");"},{"lineNumber":33,"author":{"gitId":"jayarengam"},"content":"            deadlineName \u003d nameAndTime[0];"},{"lineNumber":34,"author":{"gitId":"jayarengam"},"content":"            time \u003d nameAndTime[1];"},{"lineNumber":35,"author":{"gitId":"jayarengam"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":36,"author":{"gitId":"jayarengam"},"content":"            throw new InvalidTaskTimeException(\"Error: Missing \u0027/by\u0027 keyword\");"},{"lineNumber":37,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":39,"author":{"gitId":"jayarengam"},"content":"        if (deadlineName.equals(\"\")) {"},{"lineNumber":40,"author":{"gitId":"jayarengam"},"content":"            throw new EmptyTaskDescriptionException(\"Error: Empty task name not allowed\");"},{"lineNumber":41,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"jayarengam"},"content":"        if (time.equals(\"\")) {"},{"lineNumber":43,"author":{"gitId":"jayarengam"},"content":"            throw new InvalidTaskTimeException(\"Error: Please enter a valid time for the deadline\");"},{"lineNumber":44,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":46,"author":{"gitId":"jayarengam"},"content":"        TaskDate dateTime \u003d DateParser.parseTaskDate(time);"},{"lineNumber":47,"author":{"gitId":"jayarengam"},"content":"        return new Deadline(deadlineName, false, dateTime);"},{"lineNumber":48,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":50,"author":{"gitId":"jayarengam"},"content":"    private Event parseEvent(String nameAndDate) throws InvalidTaskTimeException, EmptyTaskDescriptionException {"},{"lineNumber":51,"author":{"gitId":"jayarengam"},"content":"        String eventName;"},{"lineNumber":52,"author":{"gitId":"jayarengam"},"content":"        String timeRange;"},{"lineNumber":53,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":54,"author":{"gitId":"jayarengam"},"content":"        try {"},{"lineNumber":55,"author":{"gitId":"jayarengam"},"content":"            String[] nameAndTime \u003d nameAndDate.split(\" /at \");"},{"lineNumber":56,"author":{"gitId":"jayarengam"},"content":"            eventName \u003d nameAndTime[0];"},{"lineNumber":57,"author":{"gitId":"jayarengam"},"content":"            timeRange \u003d nameAndTime[1];"},{"lineNumber":58,"author":{"gitId":"jayarengam"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":59,"author":{"gitId":"jayarengam"},"content":"            throw new InvalidTaskTimeException(\"Error: Missing \u0027/at\u0027 keyword or time range\");"},{"lineNumber":60,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":62,"author":{"gitId":"jayarengam"},"content":"        if (eventName.equals(\"\")) {"},{"lineNumber":63,"author":{"gitId":"jayarengam"},"content":"            throw new EmptyTaskDescriptionException(\"Error: Empty task name not allowed\");"},{"lineNumber":64,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"jayarengam"},"content":"        if (timeRange.equals(\"\")) {"},{"lineNumber":66,"author":{"gitId":"jayarengam"},"content":"            throw new InvalidTaskTimeException(\"Error: Please input a time range\");"},{"lineNumber":67,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":69,"author":{"gitId":"jayarengam"},"content":"        TaskDate startDateTime \u003d DateParser.getRange(timeRange, true);"},{"lineNumber":70,"author":{"gitId":"jayarengam"},"content":"        TaskDate endDateTime \u003d DateParser.getRange(timeRange, false);"},{"lineNumber":71,"author":{"gitId":"jayarengam"},"content":"        return new Event(eventName, false, startDateTime, endDateTime);"},{"lineNumber":72,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":74,"author":{"gitId":"jayarengam"},"content":"    private Task parseTaskToAdd(String consoleArg) throws InvalidInputException {"},{"lineNumber":75,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":76,"author":{"gitId":"jayarengam"},"content":"        // checks if there is any text after \"add \""},{"lineNumber":77,"author":{"gitId":"jayarengam"},"content":"        if (consoleArg.length() \u003c\u003d 4) {"},{"lineNumber":78,"author":{"gitId":"jayarengam"},"content":"            throw new UnknownCommandException(\"Error: Missing task type keyword\");"},{"lineNumber":79,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":81,"author":{"gitId":"jayarengam"},"content":"        String keyword \u003d consoleArg.substring(4).split(\" \")[0];"},{"lineNumber":82,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":83,"author":{"gitId":"jayarengam"},"content":"        switch (keyword) {"},{"lineNumber":84,"author":{"gitId":"jayarengam"},"content":"        case(\"todo\"):"},{"lineNumber":85,"author":{"gitId":"jayarengam"},"content":"            if (consoleArg.length() \u003c\u003d 9) {"},{"lineNumber":86,"author":{"gitId":"jayarengam"},"content":"                throw new EmptyTaskDescriptionException(\"Error: Empty task name not allowed\");"},{"lineNumber":87,"author":{"gitId":"jayarengam"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":89,"author":{"gitId":"jayarengam"},"content":"            return parseTodo(consoleArg.substring(9));"},{"lineNumber":90,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":91,"author":{"gitId":"jayarengam"},"content":"        case(\"deadline\"):"},{"lineNumber":92,"author":{"gitId":"jayarengam"},"content":"            return parseDeadline(consoleArg.substring(13));"},{"lineNumber":93,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":94,"author":{"gitId":"jayarengam"},"content":"        case(\"event\"):"},{"lineNumber":95,"author":{"gitId":"jayarengam"},"content":"            return parseEvent(consoleArg.substring(10));"},{"lineNumber":96,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":97,"author":{"gitId":"jayarengam"},"content":"        default:"},{"lineNumber":98,"author":{"gitId":"jayarengam"},"content":"            throw new UnknownCommandException(\"Error: Invalid Event Type, please try again.\");"},{"lineNumber":99,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":102,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":103,"author":{"gitId":"jayarengam"},"content":"     * Parses one line of user input and returns a Command describing what type of action to execute."},{"lineNumber":104,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":105,"author":{"gitId":"jayarengam"},"content":"     * @throws InvalidInputException if there is a formatting error in the input after the first keyword."},{"lineNumber":106,"author":{"gitId":"jayarengam"},"content":"     * @throws UnknownCommandException if the keyword is not recognised."},{"lineNumber":107,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"jayarengam"},"content":"    public Command parseCommand(String userInput) throws InvalidInputException, UnknownCommandException {"},{"lineNumber":109,"author":{"gitId":"jayarengam"},"content":"        String[] words \u003d userInput.split(\" \");"},{"lineNumber":110,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":111,"author":{"gitId":"jayarengam"},"content":"        switch (words[0]) {"},{"lineNumber":112,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":113,"author":{"gitId":"jayarengam"},"content":"        case (\"bye\"):"},{"lineNumber":114,"author":{"gitId":"jayarengam"},"content":"            return new ExitCommand();"},{"lineNumber":115,"author":{"gitId":"jayarengam"},"content":"        case (\"list\"):"},{"lineNumber":116,"author":{"gitId":"jayarengam"},"content":"            return new PrintListCommand();"},{"lineNumber":117,"author":{"gitId":"jayarengam"},"content":"        case (\"add\"):"},{"lineNumber":118,"author":{"gitId":"jayarengam"},"content":"            Task taskToAdd \u003d parseTaskToAdd(userInput);"},{"lineNumber":119,"author":{"gitId":"jayarengam"},"content":"            return new AddCommand(taskToAdd);"},{"lineNumber":120,"author":{"gitId":"jayarengam"},"content":"        case (\"delete\"):"},{"lineNumber":121,"author":{"gitId":"jayarengam"},"content":"            try {"},{"lineNumber":122,"author":{"gitId":"jayarengam"},"content":"                if (words.length \u003c 2) {"},{"lineNumber":123,"author":{"gitId":"jayarengam"},"content":"                    throw new InvalidInputException(\"Error: No number argument after \u0027delete\u0027\");"},{"lineNumber":124,"author":{"gitId":"jayarengam"},"content":"                }"},{"lineNumber":125,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":126,"author":{"gitId":"jayarengam"},"content":"                int taskIdToDelete \u003d Integer.parseInt(words[1]);"},{"lineNumber":127,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":128,"author":{"gitId":"jayarengam"},"content":"                if (taskIdToDelete \u003c 1) {"},{"lineNumber":129,"author":{"gitId":"jayarengam"},"content":"                    throw new InvalidInputException(\"Error: Task numbers start from 1\");"},{"lineNumber":130,"author":{"gitId":"jayarengam"},"content":"                }"},{"lineNumber":131,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":132,"author":{"gitId":"jayarengam"},"content":"                return new DeleteCommand(taskIdToDelete);"},{"lineNumber":133,"author":{"gitId":"jayarengam"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":134,"author":{"gitId":"jayarengam"},"content":"                throw new InvalidInputException(\"Error: Invalid number argument after \u0027delete\u0027\");"},{"lineNumber":135,"author":{"gitId":"jayarengam"},"content":"            }"},{"lineNumber":136,"author":{"gitId":"jayarengam"},"content":"        case (\"done\"):"},{"lineNumber":137,"author":{"gitId":"jayarengam"},"content":"            try {"},{"lineNumber":138,"author":{"gitId":"jayarengam"},"content":"                if (words.length \u003c 2) {"},{"lineNumber":139,"author":{"gitId":"jayarengam"},"content":"                    throw new InvalidInputException(\"Error: No number argument after \u0027delete\u0027\");"},{"lineNumber":140,"author":{"gitId":"jayarengam"},"content":"                }"},{"lineNumber":141,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":142,"author":{"gitId":"jayarengam"},"content":"                Integer taskIdToComplete;"},{"lineNumber":143,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":144,"author":{"gitId":"jayarengam"},"content":"                try {"},{"lineNumber":145,"author":{"gitId":"jayarengam"},"content":"                    taskIdToComplete \u003d Integer.parseInt(words[1]);"},{"lineNumber":146,"author":{"gitId":"jayarengam"},"content":"                } catch (NumberFormatException e) {"},{"lineNumber":147,"author":{"gitId":"jayarengam"},"content":"                    throw new InvalidTaskIdException(\"Error: Task ID is invalid\");"},{"lineNumber":148,"author":{"gitId":"jayarengam"},"content":"                }"},{"lineNumber":149,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":150,"author":{"gitId":"jayarengam"},"content":"                if (taskIdToComplete \u003c 1) {"},{"lineNumber":151,"author":{"gitId":"jayarengam"},"content":"                    throw new InvalidInputException(\"Error: Task numbers start from 1\");"},{"lineNumber":152,"author":{"gitId":"jayarengam"},"content":"                }"},{"lineNumber":153,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":154,"author":{"gitId":"jayarengam"},"content":"                return new DoneCommand(taskIdToComplete);"},{"lineNumber":155,"author":{"gitId":"jayarengam"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":156,"author":{"gitId":"jayarengam"},"content":"                throw new InvalidInputException(\"Error: Invalid number argument after \u0027delete\u0027\");"},{"lineNumber":157,"author":{"gitId":"jayarengam"},"content":"            }"},{"lineNumber":158,"author":{"gitId":"jayarengam"},"content":"        case (\"undone\"):"},{"lineNumber":159,"author":{"gitId":"jayarengam"},"content":"            try {"},{"lineNumber":160,"author":{"gitId":"jayarengam"},"content":"                if (words.length \u003c 2) {"},{"lineNumber":161,"author":{"gitId":"jayarengam"},"content":"                    throw new InvalidInputException(\"Error: No number argument after \u0027delete\u0027\");"},{"lineNumber":162,"author":{"gitId":"jayarengam"},"content":"                }"},{"lineNumber":163,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":164,"author":{"gitId":"jayarengam"},"content":"                Integer taskIdToUncomplete;"},{"lineNumber":165,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":166,"author":{"gitId":"jayarengam"},"content":"                try {"},{"lineNumber":167,"author":{"gitId":"jayarengam"},"content":"                    taskIdToUncomplete \u003d Integer.parseInt(words[1]);"},{"lineNumber":168,"author":{"gitId":"jayarengam"},"content":"                } catch (NumberFormatException e) {"},{"lineNumber":169,"author":{"gitId":"jayarengam"},"content":"                    throw new InvalidTaskIdException(\"Error: Task ID is invalid\");"},{"lineNumber":170,"author":{"gitId":"jayarengam"},"content":"                }"},{"lineNumber":171,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":172,"author":{"gitId":"jayarengam"},"content":"                if (taskIdToUncomplete \u003c 1) {"},{"lineNumber":173,"author":{"gitId":"jayarengam"},"content":"                    throw new InvalidInputException(\"Error: Task numbers start from 1\");"},{"lineNumber":174,"author":{"gitId":"jayarengam"},"content":"                }"},{"lineNumber":175,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":176,"author":{"gitId":"jayarengam"},"content":"                return new UndoneCommand(taskIdToUncomplete);"},{"lineNumber":177,"author":{"gitId":"jayarengam"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":178,"author":{"gitId":"jayarengam"},"content":"                throw new InvalidInputException(\"Error: Invalid number argument after \u0027delete\u0027\");"},{"lineNumber":179,"author":{"gitId":"jayarengam"},"content":"            }"},{"lineNumber":180,"author":{"gitId":"jayarengam"},"content":"        case (\"find\"):"},{"lineNumber":181,"author":{"gitId":"jayarengam"},"content":"            if (userInput.length() \u003c\u003d 5) {"},{"lineNumber":182,"author":{"gitId":"jayarengam"},"content":"                throw new InvalidInputException(\"Error: Please specify search keyword\");"},{"lineNumber":183,"author":{"gitId":"jayarengam"},"content":"            }"},{"lineNumber":184,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":185,"author":{"gitId":"jayarengam"},"content":"            String keyword \u003d userInput.substring(5);"},{"lineNumber":186,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":187,"author":{"gitId":"jayarengam"},"content":"            return new FindTaskCommand(keyword);"},{"lineNumber":188,"author":{"gitId":"jayarengam"},"content":"        case (\"edit\"):"},{"lineNumber":189,"author":{"gitId":"jayarengam"},"content":"            if (words.length \u003c 4) {"},{"lineNumber":190,"author":{"gitId":"jayarengam"},"content":"                throw new InvalidInputException(\"Error: Edit parameters missing\");"},{"lineNumber":191,"author":{"gitId":"jayarengam"},"content":"            }"},{"lineNumber":192,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":193,"author":{"gitId":"jayarengam"},"content":"            Integer taskIdToEdit;"},{"lineNumber":194,"author":{"gitId":"jayarengam"},"content":"            try {"},{"lineNumber":195,"author":{"gitId":"jayarengam"},"content":"                taskIdToEdit \u003d Integer.parseInt(words[1]);"},{"lineNumber":196,"author":{"gitId":"jayarengam"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":197,"author":{"gitId":"jayarengam"},"content":"                throw new InvalidTaskIdException(\"Error: Task ID is invalid\");"},{"lineNumber":198,"author":{"gitId":"jayarengam"},"content":"            }"},{"lineNumber":199,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":200,"author":{"gitId":"jayarengam"},"content":"            // Pass on edit string to Command"},{"lineNumber":201,"author":{"gitId":"jayarengam"},"content":"            return new EditCommand(taskIdToEdit, userInput);"},{"lineNumber":202,"author":{"gitId":"jayarengam"},"content":"        default:"},{"lineNumber":203,"author":{"gitId":"jayarengam"},"content":"            throw new UnknownCommandException(\"Error: Invalid command keyword!\");"},{"lineNumber":204,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":205,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":206,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":207,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":208,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":209,"author":{"gitId":"jayarengam"},"content":"     * Parses the storage string representation of a Task and returns the Task."},{"lineNumber":210,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":211,"author":{"gitId":"jayarengam"},"content":"     * @param storageLine A storage string representation of a Task."},{"lineNumber":212,"author":{"gitId":"jayarengam"},"content":"     * @return The task represented by storageLine."},{"lineNumber":213,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":214,"author":{"gitId":"jayarengam"},"content":"    public Task parseFromStorage(String storageLine) {"},{"lineNumber":215,"author":{"gitId":"jayarengam"},"content":"        String[] taskData \u003d storageLine.split(\" \\\\| \");"},{"lineNumber":216,"author":{"gitId":"jayarengam"},"content":"        assert taskData.length \u003e\u003d 2"},{"lineNumber":217,"author":{"gitId":"jayarengam"},"content":"                : \"Task storage line is missing fields\";"},{"lineNumber":218,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":219,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":220,"author":{"gitId":"jayarengam"},"content":"        String taskType \u003d taskData[0];"},{"lineNumber":221,"author":{"gitId":"jayarengam"},"content":"        assert taskType.equals(\"T\") || taskType.equals(\"D\") || taskType.equals(\"E\")"},{"lineNumber":222,"author":{"gitId":"jayarengam"},"content":"                : \"Task type in storage does not match expected characters\";"},{"lineNumber":223,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":224,"author":{"gitId":"jayarengam"},"content":"        boolean taskIsDone \u003d Integer.parseInt(taskData[1]) \u003d\u003d 1;"},{"lineNumber":225,"author":{"gitId":"jayarengam"},"content":"        String taskName \u003d taskData[2];"},{"lineNumber":226,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":227,"author":{"gitId":"jayarengam"},"content":"        if (taskType.equals(\"T\")) {"},{"lineNumber":228,"author":{"gitId":"jayarengam"},"content":"            return new Todo(taskName, taskIsDone);"},{"lineNumber":229,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":230,"author":{"gitId":"jayarengam"},"content":"        } else {"},{"lineNumber":231,"author":{"gitId":"jayarengam"},"content":"            String taskTime \u003d taskData[3];"},{"lineNumber":232,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":233,"author":{"gitId":"jayarengam"},"content":"            if (taskType.equals(\"D\")) {"},{"lineNumber":234,"author":{"gitId":"jayarengam"},"content":"                TaskDate dueTime \u003d DateParser.parseDateFromStorage(taskTime);"},{"lineNumber":235,"author":{"gitId":"jayarengam"},"content":"                return new Deadline(taskName, taskIsDone, dueTime);"},{"lineNumber":236,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":237,"author":{"gitId":"jayarengam"},"content":"            } else {"},{"lineNumber":238,"author":{"gitId":"jayarengam"},"content":"                TaskDate startDate \u003d DateParser.parseRangeFromStorage(taskTime, true);"},{"lineNumber":239,"author":{"gitId":"jayarengam"},"content":"                TaskDate endDate \u003d DateParser.parseRangeFromStorage(taskTime, false);"},{"lineNumber":240,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":241,"author":{"gitId":"jayarengam"},"content":"                return new Event(taskName, taskIsDone, startDate, endDate);"},{"lineNumber":242,"author":{"gitId":"jayarengam"},"content":"            }"},{"lineNumber":243,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":244,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":245,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":245}},{"path":"src/main/java/cartona/command/PrintErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona.command;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"import cartona.Storage;"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":"import cartona.exception.CartonaException;"},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"import cartona.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":"import cartona.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":" * The PrintErrorCommand, when executed prints an error message to the console."},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":" *"},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":" * @author Jaya Rengam"},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":" */"},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":"public class PrintErrorCommand implements Command {"},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":"    private boolean hasExecuted;"},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":"    /** The error message to be printed */"},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":"    private String errorMessage;"},{"lineNumber":19,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":20,"author":{"gitId":"jayarengam"},"content":"    PrintErrorCommand(String errorMessage) {"},{"lineNumber":21,"author":{"gitId":"jayarengam"},"content":"        this.hasExecuted \u003d false;"},{"lineNumber":22,"author":{"gitId":"jayarengam"},"content":"        this.errorMessage \u003d errorMessage;"},{"lineNumber":23,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":25,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"jayarengam"},"content":"     * Prints the error message in the errorMessage field to the console."},{"lineNumber":27,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"jayarengam"},"content":"     * @param taskList The current TaskList in use"},{"lineNumber":29,"author":{"gitId":"jayarengam"},"content":"     * @param ui The Ui object that is used to print the action to the console."},{"lineNumber":30,"author":{"gitId":"jayarengam"},"content":"     * @param storage The Storage object in use"},{"lineNumber":31,"author":{"gitId":"jayarengam"},"content":"     * @throws CartonaException if the command has already been executed."},{"lineNumber":32,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"jayarengam"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"jayarengam"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws CartonaException {"},{"lineNumber":35,"author":{"gitId":"jayarengam"},"content":"        if (hasExecuted) {"},{"lineNumber":36,"author":{"gitId":"jayarengam"},"content":"            throw new CartonaException(\"Error: PrintErrorCommand already executed\");"},{"lineNumber":37,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":39,"author":{"gitId":"jayarengam"},"content":"        this.hasExecuted \u003d true;"},{"lineNumber":40,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":41,"author":{"gitId":"jayarengam"},"content":"        return ui.getErrorMessageFormatted(errorMessage);"},{"lineNumber":42,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":44,"author":{"gitId":"jayarengam"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"jayarengam"},"content":"    public boolean isExitCmd() {"},{"lineNumber":46,"author":{"gitId":"jayarengam"},"content":"        return false;"},{"lineNumber":47,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"jayarengam"},"content":"}"},{"lineNumber":49,"author":{"gitId":"jayarengam"},"content":""}],"authorContributionMap":{"jayarengam":49}},{"path":"src/main/java/cartona/command/PrintListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona.command;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"import cartona.Storage;"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":"import cartona.exception.CartonaException;"},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"import cartona.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":"import cartona.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":" * The PrintListCommand class, when executed, prints the contents of the TaskList to the console."},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":" *"},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":" * @author Jaya Rengam"},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":" */"},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":"public class PrintListCommand implements Command {"},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":"    private boolean isDone;"},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":"    PrintListCommand() {"},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":"        this.isDone \u003d false;"},{"lineNumber":19,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":21,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"jayarengam"},"content":"     * Prints the contents of a TaskList to the console."},{"lineNumber":23,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"jayarengam"},"content":"     * @param taskList The TaskList to be printed."},{"lineNumber":25,"author":{"gitId":"jayarengam"},"content":"     * @param ui The Ui object that is used to print the action to the console."},{"lineNumber":26,"author":{"gitId":"jayarengam"},"content":"     * @param storage The Storage object in use."},{"lineNumber":27,"author":{"gitId":"jayarengam"},"content":"     * @throws CartonaException if the command has already been executed."},{"lineNumber":28,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"jayarengam"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"jayarengam"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws CartonaException {"},{"lineNumber":31,"author":{"gitId":"jayarengam"},"content":"        // Check if the command has already been executed."},{"lineNumber":32,"author":{"gitId":"jayarengam"},"content":"        if (isDone) {"},{"lineNumber":33,"author":{"gitId":"jayarengam"},"content":"            throw new CartonaException(\"Error: PrintListCommand already executed\");"},{"lineNumber":34,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":36,"author":{"gitId":"jayarengam"},"content":"        // Update Storage"},{"lineNumber":37,"author":{"gitId":"jayarengam"},"content":"        this.isDone \u003d true;"},{"lineNumber":38,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":39,"author":{"gitId":"jayarengam"},"content":"        // Print UI message"},{"lineNumber":40,"author":{"gitId":"jayarengam"},"content":"        return ui.printTaskList(taskList);"},{"lineNumber":41,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":43,"author":{"gitId":"jayarengam"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"jayarengam"},"content":"    public boolean isExitCmd() {"},{"lineNumber":45,"author":{"gitId":"jayarengam"},"content":"        return false;"},{"lineNumber":46,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":47}},{"path":"src/main/java/cartona/command/UndoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":" * The UndoneCommand class, when executed, runs the steps required to mark a Task in a TaskList as NOT done."},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":" *"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":" * @author Jaya Rengam"},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":" */"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":"package cartona.command;"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":"import cartona.Storage;"},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":"import cartona.exception.CartonaException;"},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":"import cartona.task.Task;"},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":"import cartona.task.TaskList;"},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":"import cartona.ui.Ui;"},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":"public class UndoneCommand implements Command {"},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":"    private boolean hasExecuted;"},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":"    /** The ID in the list of the task to be marked as complete. */"},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":"    private int taskIdToUncomplete;"},{"lineNumber":19,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":20,"author":{"gitId":"jayarengam"},"content":"    UndoneCommand(int taskIdToUncomplete) {"},{"lineNumber":21,"author":{"gitId":"jayarengam"},"content":"        this.hasExecuted \u003d false;"},{"lineNumber":22,"author":{"gitId":"jayarengam"},"content":"        this.taskIdToUncomplete \u003d taskIdToUncomplete;"},{"lineNumber":23,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":25,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"jayarengam"},"content":"     * Completes the Task given by taskIdToComplete in the TaskList and updates the Storage text file."},{"lineNumber":27,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"jayarengam"},"content":"     * @param taskList the TaskList being modified"},{"lineNumber":29,"author":{"gitId":"jayarengam"},"content":"     * @param ui the Ui object that is used to print the action to the console"},{"lineNumber":30,"author":{"gitId":"jayarengam"},"content":"     * @param storage the Storage object used to update the text file"},{"lineNumber":31,"author":{"gitId":"jayarengam"},"content":"     * @throws CartonaException if the command has already been executed"},{"lineNumber":32,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"jayarengam"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"jayarengam"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws CartonaException {"},{"lineNumber":35,"author":{"gitId":"jayarengam"},"content":"        // Check if the command has already been executed."},{"lineNumber":36,"author":{"gitId":"jayarengam"},"content":"        if (hasExecuted) {"},{"lineNumber":37,"author":{"gitId":"jayarengam"},"content":"            throw new CartonaException(\"Error: DoneCommand already executed\");"},{"lineNumber":38,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":40,"author":{"gitId":"jayarengam"},"content":"        taskList.uncompleteTask(taskIdToUncomplete);"},{"lineNumber":41,"author":{"gitId":"jayarengam"},"content":"        Task uncompletedTask \u003d taskList.getTask(taskIdToUncomplete);"},{"lineNumber":42,"author":{"gitId":"jayarengam"},"content":"        assert !(uncompletedTask.checkIfDone()) : \"Task not uncompleted\";"},{"lineNumber":43,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":44,"author":{"gitId":"jayarengam"},"content":"        // Update Storage"},{"lineNumber":45,"author":{"gitId":"jayarengam"},"content":"        storage.saveListToFile(taskList);"},{"lineNumber":46,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":47,"author":{"gitId":"jayarengam"},"content":"        // Return UI message"},{"lineNumber":48,"author":{"gitId":"jayarengam"},"content":"        return ui.printTaskUndoneMessage(uncompletedTask);"},{"lineNumber":49,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":51,"author":{"gitId":"jayarengam"},"content":"    @Override"},{"lineNumber":52,"author":{"gitId":"jayarengam"},"content":"    public boolean isExitCmd() {"},{"lineNumber":53,"author":{"gitId":"jayarengam"},"content":"        return false;"},{"lineNumber":54,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":55}},{"path":"src/main/java/cartona/exception/CartonaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona.exception;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"public class CartonaException extends Exception {"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":"    public CartonaException(String errorMsg) {"},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"        super(errorMsg);"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":7}},{"path":"src/main/java/cartona/exception/EmptyTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona.exception;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"public class EmptyTaskDescriptionException extends InvalidInputException {"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":"    public EmptyTaskDescriptionException(String errorMsg) {"},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"        super(errorMsg);"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":7}},{"path":"src/main/java/cartona/exception/InvalidEditFieldException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona.exception;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"public class InvalidEditFieldException extends CartonaException {"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":"    public InvalidEditFieldException(String errorMsg) {"},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"        super(errorMsg);"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":7}},{"path":"src/main/java/cartona/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona.exception;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"public class InvalidInputException extends CartonaException {"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":"    public InvalidInputException(String errorMsg) {"},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"        super(errorMsg);"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":7}},{"path":"src/main/java/cartona/exception/InvalidTaskIdException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona.exception;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"public class InvalidTaskIdException extends InvalidInputException {"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":"    public InvalidTaskIdException(String errorMsg) {"},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"        super(errorMsg);"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":7}},{"path":"src/main/java/cartona/exception/InvalidTaskTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona.exception;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"public class InvalidTaskTimeException extends InvalidInputException {"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":"    public InvalidTaskTimeException(String errorMsg) {"},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"        super(errorMsg);"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":7}},{"path":"src/main/java/cartona/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona.exception;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"public class UnknownCommandException extends InvalidInputException {"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":"    public UnknownCommandException(String errorMsg) {"},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"        super(errorMsg);"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":7}},{"path":"src/main/java/cartona/task/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona.task;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"import java.time.DateTimeException;"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":"import java.time.LocalTime;"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":"import cartona.exception.InvalidTaskTimeException;"},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":" * The DateParser class is a group of static methods used to parse dates."},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":" *"},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":" * @author Jaya Rengam"},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":" */"},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":"public class DateParser {"},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"jayarengam"},"content":"     * Parses the TaskDate from a user\u0027s input."},{"lineNumber":20,"author":{"gitId":"jayarengam"},"content":"     * @return A TaskDate representing the date and time."},{"lineNumber":21,"author":{"gitId":"jayarengam"},"content":"     * @throws InvalidTaskTimeException if there is an error in formatting of the date or time."},{"lineNumber":22,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"jayarengam"},"content":"    public static TaskDate parseTaskDate(String dateString) throws InvalidTaskTimeException {"},{"lineNumber":24,"author":{"gitId":"jayarengam"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"jayarengam"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(dateString,"},{"lineNumber":26,"author":{"gitId":"jayarengam"},"content":"                    DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\"));"},{"lineNumber":27,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":28,"author":{"gitId":"jayarengam"},"content":"            return new TaskDate(dateTime);"},{"lineNumber":29,"author":{"gitId":"jayarengam"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":30,"author":{"gitId":"jayarengam"},"content":"            throw new InvalidTaskTimeException(\"Date/time formatting error: \" + e.getMessage());"},{"lineNumber":31,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":34,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"jayarengam"},"content":"     * Parses the date of a new Event input string to get the start or end date of the event"},{"lineNumber":36,"author":{"gitId":"jayarengam"},"content":"     * @param dateString The input string."},{"lineNumber":37,"author":{"gitId":"jayarengam"},"content":"     * @param startOrEnd Value representing which date to get:"},{"lineNumber":38,"author":{"gitId":"jayarengam"},"content":"     *                       true to get the start date and false to get the end date."},{"lineNumber":39,"author":{"gitId":"jayarengam"},"content":"     * @return The start/end date of the event represented by a TaskDate"},{"lineNumber":40,"author":{"gitId":"jayarengam"},"content":"     * @throws InvalidTaskTimeException if there is an error in the formatting of the date or time."},{"lineNumber":41,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"jayarengam"},"content":"    public static TaskDate getRange(String dateString, boolean startOrEnd) throws InvalidTaskTimeException {"},{"lineNumber":43,"author":{"gitId":"jayarengam"},"content":"        String[] dateAndTimes \u003d dateString.split(\" \");"},{"lineNumber":44,"author":{"gitId":"jayarengam"},"content":"        String[] dates \u003d dateAndTimes[0].split(\"/\");"},{"lineNumber":45,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":46,"author":{"gitId":"jayarengam"},"content":"        int year \u003d Integer.valueOf(dates[0]);"},{"lineNumber":47,"author":{"gitId":"jayarengam"},"content":"        int month \u003d Integer.valueOf(dates[1]);"},{"lineNumber":48,"author":{"gitId":"jayarengam"},"content":"        int day \u003d Integer.valueOf(dates[2]);"},{"lineNumber":49,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":50,"author":{"gitId":"jayarengam"},"content":"        try {"},{"lineNumber":51,"author":{"gitId":"jayarengam"},"content":"            if (startOrEnd) {"},{"lineNumber":52,"author":{"gitId":"jayarengam"},"content":"                return new TaskDate(LocalDate.of(year, month, day)"},{"lineNumber":53,"author":{"gitId":"jayarengam"},"content":"                                    .atTime(LocalTime.parse(dateAndTimes[1],"},{"lineNumber":54,"author":{"gitId":"jayarengam"},"content":"                                                            DateTimeFormatter.ofPattern(\"HHmm\"))));"},{"lineNumber":55,"author":{"gitId":"jayarengam"},"content":"            } else {"},{"lineNumber":56,"author":{"gitId":"jayarengam"},"content":"                return new TaskDate(LocalDate.of(year, month, day)"},{"lineNumber":57,"author":{"gitId":"jayarengam"},"content":"                                    .atTime(LocalTime.parse(dateAndTimes[2],"},{"lineNumber":58,"author":{"gitId":"jayarengam"},"content":"                                            DateTimeFormatter.ofPattern(\"HHmm\"))));"},{"lineNumber":59,"author":{"gitId":"jayarengam"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"jayarengam"},"content":"        } catch (DateTimeException | IndexOutOfBoundsException e) {"},{"lineNumber":61,"author":{"gitId":"jayarengam"},"content":"            throw new InvalidTaskTimeException(\"Date/time formatting error: \""},{"lineNumber":62,"author":{"gitId":"jayarengam"},"content":"                    + \"please enter event dates in the format YYYY/MM/DD HHmm HHmm\");"},{"lineNumber":63,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":66,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"jayarengam"},"content":"     * Parses the date of a new Event input string from a text file to get the start or end date of the event."},{"lineNumber":68,"author":{"gitId":"jayarengam"},"content":"     * @param storedString The stored string."},{"lineNumber":69,"author":{"gitId":"jayarengam"},"content":"     * @param startOrEnd Value representing which date to get:"},{"lineNumber":70,"author":{"gitId":"jayarengam"},"content":"     *                       true to get the start date and false to get the end date."},{"lineNumber":71,"author":{"gitId":"jayarengam"},"content":"     * @return The start/end date of the event represented by a TaskDate"},{"lineNumber":72,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"jayarengam"},"content":"    public static TaskDate parseRangeFromStorage(String storedString, boolean startOrEnd) {"},{"lineNumber":74,"author":{"gitId":"jayarengam"},"content":"        String[] dateAndTime \u003d storedString.split(\" - \");;"},{"lineNumber":75,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":76,"author":{"gitId":"jayarengam"},"content":"        if (startOrEnd) {"},{"lineNumber":77,"author":{"gitId":"jayarengam"},"content":"            return new TaskDate(LocalDateTime.parse(dateAndTime[0],"},{"lineNumber":78,"author":{"gitId":"jayarengam"},"content":"                    DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\")));"},{"lineNumber":79,"author":{"gitId":"jayarengam"},"content":"        } else {"},{"lineNumber":80,"author":{"gitId":"jayarengam"},"content":"            return new TaskDate(LocalDate.parse(dateAndTime[0],"},{"lineNumber":81,"author":{"gitId":"jayarengam"},"content":"                    DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"))"},{"lineNumber":82,"author":{"gitId":"jayarengam"},"content":"                            .atTime(LocalTime.parse(dateAndTime[1],"},{"lineNumber":83,"author":{"gitId":"jayarengam"},"content":"                                        DateTimeFormatter.ofPattern(\"HHmm\"))));"},{"lineNumber":84,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":87,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"jayarengam"},"content":"     * Parses the date from a line of text in the storage file."},{"lineNumber":89,"author":{"gitId":"jayarengam"},"content":"     * @return The date represented by a TaskDate"},{"lineNumber":90,"author":{"gitId":"jayarengam"},"content":"     * @throws InvalidTaskTimeException if there is an error in formatting of the date or time."},{"lineNumber":91,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"jayarengam"},"content":"    public static TaskDate parseDateFromStorage(String storedString) {"},{"lineNumber":93,"author":{"gitId":"jayarengam"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(storedString,"},{"lineNumber":94,"author":{"gitId":"jayarengam"},"content":"                                    DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"));"},{"lineNumber":95,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":96,"author":{"gitId":"jayarengam"},"content":"        return new TaskDate(dateTime);"},{"lineNumber":97,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":98}},{"path":"src/main/java/cartona/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona.task;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":" * The Deadline class is a Task that has a due time, represented as a TaskDate."},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":" *"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":" * @author Jaya Rengam"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":" */"},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":"public class Deadline extends Task {"},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":"    private TaskDate dueTime;"},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":"     * Creates a Deadline object."},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":"     * @param name the name of the Deadline"},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":"     * @param isDone whether the Deadline has been completed or not"},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":"     * @param dueTime the dude date of the Deadline."},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":"    public Deadline(String name, boolean isDone, TaskDate dueTime) {"},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":"        super(name, isDone, \"D\");"},{"lineNumber":19,"author":{"gitId":"jayarengam"},"content":"        this.dueTime \u003d dueTime;"},{"lineNumber":20,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":22,"author":{"gitId":"jayarengam"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"jayarengam"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"jayarengam"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.dueTime);"},{"lineNumber":25,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":27,"author":{"gitId":"jayarengam"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"jayarengam"},"content":"    public String getAbbreviatedString() {"},{"lineNumber":29,"author":{"gitId":"jayarengam"},"content":"        int isDoneRep \u003d this.isDone ? 1 : 0;"},{"lineNumber":30,"author":{"gitId":"jayarengam"},"content":"        return String.format(\"%s | %d | %s | %s\", this.type, isDoneRep, this.name, this.dueTime);"},{"lineNumber":31,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":33,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"jayarengam"},"content":"     * Returns the due date of the Deadline."},{"lineNumber":35,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"jayarengam"},"content":"    public TaskDate getDueTime() {"},{"lineNumber":37,"author":{"gitId":"jayarengam"},"content":"        return this.dueTime;"},{"lineNumber":38,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":39}},{"path":"src/main/java/cartona/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona.task;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":" * The Event class is a Task that represents an event, with a start date and an end date - represented by TaskDates."},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":" *"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":" * @author Jaya Rengam"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":" */"},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":"public class Event extends Task {"},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":"    private TaskDate start;"},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":"    private TaskDate end;"},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":"     * Creates an Event object."},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":"     * @param name the name of the Event"},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":"     * @param isDone whether the Event has been completed or not"},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":"     * @param start the starting date and time of the Event"},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":"     * @param end the ending date and time of the Event"},{"lineNumber":19,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"jayarengam"},"content":"    public Event(String name, boolean isDone, TaskDate start, TaskDate end) {"},{"lineNumber":21,"author":{"gitId":"jayarengam"},"content":"        super(name, isDone, \"E\");"},{"lineNumber":22,"author":{"gitId":"jayarengam"},"content":"        this.start \u003d start;"},{"lineNumber":23,"author":{"gitId":"jayarengam"},"content":"        this.end \u003d end;"},{"lineNumber":24,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":26,"author":{"gitId":"jayarengam"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"jayarengam"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"jayarengam"},"content":"        return String.format(\"[E]%s (at: %s - %s)\", super.toString(), this.start, this.end.getTime());"},{"lineNumber":29,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":31,"author":{"gitId":"jayarengam"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"jayarengam"},"content":"    public String getAbbreviatedString() {"},{"lineNumber":33,"author":{"gitId":"jayarengam"},"content":"        int isDoneRep \u003d this.isDone ? 1 : 0;"},{"lineNumber":34,"author":{"gitId":"jayarengam"},"content":"        return String.format(\"%s | %d | %s | %s - %s\", this.type, isDoneRep, this.name,"},{"lineNumber":35,"author":{"gitId":"jayarengam"},"content":"                                this.start.toString(), this.end.getTime());"},{"lineNumber":36,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":38,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"jayarengam"},"content":"     * Returns the start date of the Event."},{"lineNumber":40,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"jayarengam"},"content":"    public TaskDate getStartDate() {"},{"lineNumber":42,"author":{"gitId":"jayarengam"},"content":"        return this.start;"},{"lineNumber":43,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":45,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"jayarengam"},"content":"     * Returns the end date of the Event."},{"lineNumber":47,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"jayarengam"},"content":"    public TaskDate getEndDate() {"},{"lineNumber":49,"author":{"gitId":"jayarengam"},"content":"        return this.end;"},{"lineNumber":50,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":51}},{"path":"src/main/java/cartona/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona.task;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"import cartona.exception.CartonaException;"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":" * The Task class represents a task."},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":" *"},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":" * @author Jaya Rengam"},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":" */"},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":"public abstract class Task {"},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":"    protected String name;"},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":"    protected boolean isDone;"},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":"    protected String type;"},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":"     * Creates a Task object"},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":"     * @param name the name of the task"},{"lineNumber":19,"author":{"gitId":"jayarengam"},"content":"     * @param isDone whether the task has been completed or not"},{"lineNumber":20,"author":{"gitId":"jayarengam"},"content":"     * @param type the type of the task"},{"lineNumber":21,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"jayarengam"},"content":"    Task(String name, boolean isDone, String type) {"},{"lineNumber":23,"author":{"gitId":"jayarengam"},"content":"        this.name \u003d name;"},{"lineNumber":24,"author":{"gitId":"jayarengam"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":25,"author":{"gitId":"jayarengam"},"content":"        this.type \u003d type;"},{"lineNumber":26,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":28,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"jayarengam"},"content":"     * Sets isDone to true."},{"lineNumber":30,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"jayarengam"},"content":"     * @throws CartonaException if the task is already done"},{"lineNumber":32,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"jayarengam"},"content":"    public void complete() throws CartonaException {"},{"lineNumber":34,"author":{"gitId":"jayarengam"},"content":"        if (this.isDone) {"},{"lineNumber":35,"author":{"gitId":"jayarengam"},"content":"            throw new CartonaException(String.format(\"Error: Task %s is already done\", this.toString()));"},{"lineNumber":36,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"jayarengam"},"content":"        this.isDone \u003d true;"},{"lineNumber":38,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":40,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"jayarengam"},"content":"     * Sets isDone to false."},{"lineNumber":42,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"jayarengam"},"content":"     * @throws CartonaException if the task is not done"},{"lineNumber":44,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"jayarengam"},"content":"    public void uncomplete() throws CartonaException {"},{"lineNumber":46,"author":{"gitId":"jayarengam"},"content":"        if (!this.isDone) {"},{"lineNumber":47,"author":{"gitId":"jayarengam"},"content":"            throw new CartonaException(String.format((\"Error: Task %s is not done yet\"), this.toString()));"},{"lineNumber":48,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":50,"author":{"gitId":"jayarengam"},"content":"        this.isDone \u003d false;"},{"lineNumber":51,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":53,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"jayarengam"},"content":"     * Returns the name of the Task."},{"lineNumber":55,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"jayarengam"},"content":"    public String getName() {"},{"lineNumber":57,"author":{"gitId":"jayarengam"},"content":"        return this.name;"},{"lineNumber":58,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":60,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"jayarengam"},"content":"     * Returns the 1-character String denoting the type of the Task."},{"lineNumber":62,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"jayarengam"},"content":"    public String getType() {"},{"lineNumber":64,"author":{"gitId":"jayarengam"},"content":"        return this.type;"},{"lineNumber":65,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":67,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"jayarengam"},"content":"     * Gets the formatted string representation of the task"},{"lineNumber":69,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"jayarengam"},"content":"     * @return the formatted string representation of the task"},{"lineNumber":71,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"jayarengam"},"content":"    @Override"},{"lineNumber":73,"author":{"gitId":"jayarengam"},"content":"    public String toString() {"},{"lineNumber":74,"author":{"gitId":"jayarengam"},"content":"        if (this.isDone) {"},{"lineNumber":75,"author":{"gitId":"jayarengam"},"content":"            return String.format(\"[\\u2713] %s\", name);"},{"lineNumber":76,"author":{"gitId":"jayarengam"},"content":"        } else {"},{"lineNumber":77,"author":{"gitId":"jayarengam"},"content":"            return String.format(\"[\\u2717] %s\", name);"},{"lineNumber":78,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":81,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"jayarengam"},"content":"     * Gets a shortened string representation of the task"},{"lineNumber":83,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":84,"author":{"gitId":"jayarengam"},"content":"     * @return the shortened string representation of the task"},{"lineNumber":85,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"jayarengam"},"content":"    public String getAbbreviatedString() {"},{"lineNumber":87,"author":{"gitId":"jayarengam"},"content":"        int isDoneRep \u003d this.isDone ? 1 : 0;"},{"lineNumber":88,"author":{"gitId":"jayarengam"},"content":"        return String.format(\"%s | %d | %s\", this.type, isDoneRep, this.name);"},{"lineNumber":89,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":91,"author":{"gitId":"jayarengam"},"content":"    public boolean checkIfDone() {"},{"lineNumber":92,"author":{"gitId":"jayarengam"},"content":"        return this.isDone;"},{"lineNumber":93,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":94}},{"path":"src/main/java/cartona/task/TaskDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona.task;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"import java.time.LocalTime;"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":" * The TaskDate class represents the Date associated with some subclasses of Tasks."},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":" *"},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":" * @author Jaya Rengam"},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":" */"},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":"public class TaskDate {"},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":"    private LocalDateTime dateTime;"},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":"     * Creates a TaskDate from a LocalDate and a string representing the time"},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"jayarengam"},"content":"     * @param date LocalDate representing the date of the TaskDate"},{"lineNumber":20,"author":{"gitId":"jayarengam"},"content":"     * @param time the time of the TaskDate (format HHmm)"},{"lineNumber":21,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"jayarengam"},"content":"    public TaskDate(LocalDate date, String time) {"},{"lineNumber":23,"author":{"gitId":"jayarengam"},"content":"        this.dateTime \u003d date.atTime(LocalTime"},{"lineNumber":24,"author":{"gitId":"jayarengam"},"content":"                                    .parse(time, DateTimeFormatter.ofPattern(\"HHmm\")));"},{"lineNumber":25,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":27,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"jayarengam"},"content":"     * Creates a TaskDate object with the given date and time."},{"lineNumber":29,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"jayarengam"},"content":"     * @param dateTime The LocalDateTime object signifying the date and time of the TaskDate."},{"lineNumber":31,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"jayarengam"},"content":"    public TaskDate(LocalDateTime dateTime) {"},{"lineNumber":33,"author":{"gitId":"jayarengam"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":34,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":36,"author":{"gitId":"jayarengam"},"content":"    public LocalDate getDate() {"},{"lineNumber":37,"author":{"gitId":"jayarengam"},"content":"        return this.dateTime.toLocalDate();"},{"lineNumber":38,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":40,"author":{"gitId":"jayarengam"},"content":"    public String getTime() {"},{"lineNumber":41,"author":{"gitId":"jayarengam"},"content":"        return this.dateTime.toLocalTime()"},{"lineNumber":42,"author":{"gitId":"jayarengam"},"content":"                            .format(DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":43,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":45,"author":{"gitId":"jayarengam"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"jayarengam"},"content":"    public String toString() {"},{"lineNumber":47,"author":{"gitId":"jayarengam"},"content":"        return this.dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"));"},{"lineNumber":48,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":49}},{"path":"src/main/java/cartona/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona.task;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"import cartona.exception.CartonaException;"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":" * The TaskList class represents the running list of Tasks. It uses the ArrayList to store Tasks."},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":" * Note that the list uses one-based numbering."},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":" *"},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":" * @author Jaya Rengam"},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":" */"},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":"public class TaskList {"},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":"    private ArrayList\u003cTask\u003e taskArrayList;"},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":"    public TaskList() {"},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":"        this.taskArrayList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":19,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"jayarengam"},"content":"     * Adds a Task to the end of the list."},{"lineNumber":21,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"jayarengam"},"content":"    public void addTask(Task newTask) {"},{"lineNumber":23,"author":{"gitId":"jayarengam"},"content":"        taskArrayList.add(newTask);"},{"lineNumber":24,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":26,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"jayarengam"},"content":"     * Removes the Task at the specified position in the list."},{"lineNumber":28,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"jayarengam"},"content":"    public void deleteTask(int taskNum) {"},{"lineNumber":30,"author":{"gitId":"jayarengam"},"content":"        taskArrayList.remove(taskNum - 1);"},{"lineNumber":31,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":33,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"jayarengam"},"content":"     * Gets the Task at the specified position in the list."},{"lineNumber":35,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"jayarengam"},"content":"    public Task getTask(int taskNum) {"},{"lineNumber":37,"author":{"gitId":"jayarengam"},"content":"        return this.taskArrayList.get(taskNum - 1);"},{"lineNumber":38,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":40,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"jayarengam"},"content":"     * Marks the Task at the specified position as done."},{"lineNumber":42,"author":{"gitId":"jayarengam"},"content":"     * @throws CartonaException if the given task is already done"},{"lineNumber":43,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"jayarengam"},"content":"    public void completeTask(int taskNum) throws CartonaException {"},{"lineNumber":45,"author":{"gitId":"jayarengam"},"content":"        Task toComplete \u003d null;"},{"lineNumber":46,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":47,"author":{"gitId":"jayarengam"},"content":"        try {"},{"lineNumber":48,"author":{"gitId":"jayarengam"},"content":"            toComplete \u003d taskArrayList.get(taskNum - 1);"},{"lineNumber":49,"author":{"gitId":"jayarengam"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":50,"author":{"gitId":"jayarengam"},"content":"            throw new CartonaException(\"Error: Task with that number does not exist.\");"},{"lineNumber":51,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":53,"author":{"gitId":"jayarengam"},"content":"        if (toComplete.checkIfDone()) {"},{"lineNumber":54,"author":{"gitId":"jayarengam"},"content":"            throw new CartonaException(String.format(\"Error: Task %d is already done.\", taskNum));"},{"lineNumber":55,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":57,"author":{"gitId":"jayarengam"},"content":"        toComplete.complete();"},{"lineNumber":58,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":60,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"jayarengam"},"content":"     * Marks the Task at the specified position as NOT done."},{"lineNumber":62,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"jayarengam"},"content":"     * @throws CartonaException if the given task is already done"},{"lineNumber":64,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"jayarengam"},"content":"    public void uncompleteTask(int taskNum) throws CartonaException {"},{"lineNumber":66,"author":{"gitId":"jayarengam"},"content":"        Task toUncomplete \u003d null;"},{"lineNumber":67,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":68,"author":{"gitId":"jayarengam"},"content":"        try {"},{"lineNumber":69,"author":{"gitId":"jayarengam"},"content":"            toUncomplete \u003d taskArrayList.get(taskNum - 1);"},{"lineNumber":70,"author":{"gitId":"jayarengam"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":71,"author":{"gitId":"jayarengam"},"content":"            throw new CartonaException(\"Error: Task with that number does not exist.\");"},{"lineNumber":72,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":74,"author":{"gitId":"jayarengam"},"content":"        if (!toUncomplete.checkIfDone()) {"},{"lineNumber":75,"author":{"gitId":"jayarengam"},"content":"            throw new CartonaException(String.format(\"Error: Task %d is not done.\", taskNum));"},{"lineNumber":76,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":78,"author":{"gitId":"jayarengam"},"content":"        toUncomplete.uncomplete();"},{"lineNumber":79,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":81,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"jayarengam"},"content":"     * Replaces the Task at the specified position with a replacement Task."},{"lineNumber":83,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":84,"author":{"gitId":"jayarengam"},"content":"     * @throws CartonaException if the task number argument is invalid."},{"lineNumber":85,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"jayarengam"},"content":"    public void editTask(int taskIdToEdit, Task replacementTask) throws CartonaException {"},{"lineNumber":87,"author":{"gitId":"jayarengam"},"content":"        try {"},{"lineNumber":88,"author":{"gitId":"jayarengam"},"content":"            taskArrayList.remove(taskIdToEdit - 1);"},{"lineNumber":89,"author":{"gitId":"jayarengam"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":90,"author":{"gitId":"jayarengam"},"content":"            throw new CartonaException(\"Error: Task with that number does not exist.\");"},{"lineNumber":91,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":93,"author":{"gitId":"jayarengam"},"content":"        taskArrayList.add(taskIdToEdit - 1, replacementTask);"},{"lineNumber":94,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":96,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"jayarengam"},"content":"     * Gets a string representation of the TaskList"},{"lineNumber":98,"author":{"gitId":"jayarengam"},"content":"     * Tasks are listed in order and are separated by a newline."},{"lineNumber":99,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":100,"author":{"gitId":"jayarengam"},"content":"     * @return a String representation of the TaskList"},{"lineNumber":101,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"jayarengam"},"content":"    @Override"},{"lineNumber":103,"author":{"gitId":"jayarengam"},"content":"    public String toString() {"},{"lineNumber":104,"author":{"gitId":"jayarengam"},"content":"        int counter \u003d 0;"},{"lineNumber":105,"author":{"gitId":"jayarengam"},"content":"        String printedListString \u003d \"\";"},{"lineNumber":106,"author":{"gitId":"jayarengam"},"content":"        for (Task task: taskArrayList) {"},{"lineNumber":107,"author":{"gitId":"jayarengam"},"content":"            counter++;"},{"lineNumber":108,"author":{"gitId":"jayarengam"},"content":"            printedListString +\u003d String.format(\"  %d. %s%n\", counter, task);"},{"lineNumber":109,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"jayarengam"},"content":"        return printedListString;"},{"lineNumber":111,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":113,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"jayarengam"},"content":"     * Gets the String representation of the TaskList for storage."},{"lineNumber":115,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":116,"author":{"gitId":"jayarengam"},"content":"     * @return a shortened String representation of the TaskList for storage"},{"lineNumber":117,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"jayarengam"},"content":"    public String getListForStorage() {"},{"lineNumber":119,"author":{"gitId":"jayarengam"},"content":"        String stringToWrite \u003d \"\";"},{"lineNumber":120,"author":{"gitId":"jayarengam"},"content":"        for (int i \u003d 1; i \u003c\u003d this.getSize(); i++) {"},{"lineNumber":121,"author":{"gitId":"jayarengam"},"content":"            Task task \u003d this.getTask(i);"},{"lineNumber":122,"author":{"gitId":"jayarengam"},"content":"            stringToWrite +\u003d task.getAbbreviatedString() + \"\\n\";"},{"lineNumber":123,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":125,"author":{"gitId":"jayarengam"},"content":"        return stringToWrite;"},{"lineNumber":126,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":128,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":129,"author":{"gitId":"jayarengam"},"content":"     * Gets the current size of the TaskList."},{"lineNumber":130,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":131,"author":{"gitId":"jayarengam"},"content":"    public int getSize() {"},{"lineNumber":132,"author":{"gitId":"jayarengam"},"content":"        return this.taskArrayList.size();"},{"lineNumber":133,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":134}},{"path":"src/main/java/cartona/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona.task;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":" * The Todo class is a basic subclass of a Task."},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":" *"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":" * @author Jaya Rengam"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":" */"},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":"public class Todo extends Task {"},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":"    public Todo(String name, boolean isDone) {"},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":"        super(name, isDone, \"T\");"},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":17}},{"path":"src/main/java/cartona/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona.ui;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":"import javafx.geometry.Insets;"},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":"import javafx.geometry.Pos;"},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":"import javafx.scene.Node;"},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":"import javafx.scene.control.Label;"},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":"import javafx.scene.image.Image;"},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":19,"author":{"gitId":"jayarengam"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":20,"author":{"gitId":"jayarengam"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":21,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":22,"author":{"gitId":"jayarengam"},"content":"/**."},{"lineNumber":23,"author":{"gitId":"jayarengam"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s (bot or user) face and a"},{"lineNumber":24,"author":{"gitId":"jayarengam"},"content":" * label containing text from the speaker."},{"lineNumber":25,"author":{"gitId":"jayarengam"},"content":" *"},{"lineNumber":26,"author":{"gitId":"jayarengam"},"content":" * @author Jaya Rengam"},{"lineNumber":27,"author":{"gitId":"jayarengam"},"content":" */"},{"lineNumber":28,"author":{"gitId":"jayarengam"},"content":"public class DialogBox extends HBox {"},{"lineNumber":29,"author":{"gitId":"jayarengam"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"jayarengam"},"content":"    private Label dialog;"},{"lineNumber":31,"author":{"gitId":"jayarengam"},"content":"    @FXML"},{"lineNumber":32,"author":{"gitId":"jayarengam"},"content":"    private ImageView displayPicture;"},{"lineNumber":33,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":34,"author":{"gitId":"jayarengam"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":35,"author":{"gitId":"jayarengam"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"jayarengam"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":37,"author":{"gitId":"jayarengam"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":38,"author":{"gitId":"jayarengam"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":39,"author":{"gitId":"jayarengam"},"content":"            fxmlLoader.load();"},{"lineNumber":40,"author":{"gitId":"jayarengam"},"content":"        } catch (IOException e) {"},{"lineNumber":41,"author":{"gitId":"jayarengam"},"content":"            e.printStackTrace();"},{"lineNumber":42,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":44,"author":{"gitId":"jayarengam"},"content":"        dialog.setText(text);"},{"lineNumber":45,"author":{"gitId":"jayarengam"},"content":"        displayPicture.setImage(img);"},{"lineNumber":46,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":48,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"jayarengam"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":50,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"jayarengam"},"content":"    private void flip() {"},{"lineNumber":52,"author":{"gitId":"jayarengam"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":53,"author":{"gitId":"jayarengam"},"content":"        Collections.reverse(tmp);"},{"lineNumber":54,"author":{"gitId":"jayarengam"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":55,"author":{"gitId":"jayarengam"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":56,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":58,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"jayarengam"},"content":"     * Returns a formatted DialogBox that is used to show user text"},{"lineNumber":60,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"jayarengam"},"content":"     * @param text input text from the user"},{"lineNumber":62,"author":{"gitId":"jayarengam"},"content":"     * @param img image of the user"},{"lineNumber":63,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"jayarengam"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":65,"author":{"gitId":"jayarengam"},"content":"        DialogBox userDialog \u003d new DialogBox(text, img);"},{"lineNumber":66,"author":{"gitId":"jayarengam"},"content":"        Background dialogBackground \u003d new Background("},{"lineNumber":67,"author":{"gitId":"jayarengam"},"content":"                new BackgroundFill(Color.rgb(255, 240, 0, 0.5),"},{"lineNumber":68,"author":{"gitId":"jayarengam"},"content":"                new CornerRadii(10.0), new Insets(5.0)));"},{"lineNumber":69,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":70,"author":{"gitId":"jayarengam"},"content":"        userDialog.dialog.setBackground(dialogBackground);"},{"lineNumber":71,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":72,"author":{"gitId":"jayarengam"},"content":"        return userDialog;"},{"lineNumber":73,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":75,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"jayarengam"},"content":"     * Returns a formatted DialogBox that is used to show text returned from Cartona"},{"lineNumber":77,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"jayarengam"},"content":"     * @param text text from the program to be displayed"},{"lineNumber":79,"author":{"gitId":"jayarengam"},"content":"     * @param img image of Cartona"},{"lineNumber":80,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"jayarengam"},"content":"    public static DialogBox getCartonaDialog(String text, Image img) {"},{"lineNumber":82,"author":{"gitId":"jayarengam"},"content":"        var cartonaDialog \u003d new DialogBox(text, img);"},{"lineNumber":83,"author":{"gitId":"jayarengam"},"content":"        cartonaDialog.flip();"},{"lineNumber":84,"author":{"gitId":"jayarengam"},"content":"        Background cartonaBackground \u003d new Background("},{"lineNumber":85,"author":{"gitId":"jayarengam"},"content":"                new BackgroundFill(Color.rgb(160, 200, 190, 0.5),"},{"lineNumber":86,"author":{"gitId":"jayarengam"},"content":"                        new CornerRadii(2.0), new Insets(10.0)));"},{"lineNumber":87,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":88,"author":{"gitId":"jayarengam"},"content":"        cartonaDialog.dialog.setBackground(cartonaBackground);"},{"lineNumber":89,"author":{"gitId":"jayarengam"},"content":"        return cartonaDialog;"},{"lineNumber":90,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":91}},{"path":"src/main/java/cartona/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona.ui;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"import cartona.Cartona;"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":"import javafx.fxml.FXML;"},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":" * Controller for MainWindow, which is where the UI of the program is displayed."},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":" * Provides the layout for the other controls."},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":" */"},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":19,"author":{"gitId":"jayarengam"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"jayarengam"},"content":"    private VBox dialogContainer;"},{"lineNumber":21,"author":{"gitId":"jayarengam"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"jayarengam"},"content":"    private TextField userInput;"},{"lineNumber":23,"author":{"gitId":"jayarengam"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"jayarengam"},"content":"    private Button sendButton;"},{"lineNumber":25,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":26,"author":{"gitId":"jayarengam"},"content":"    private Cartona cartona;"},{"lineNumber":27,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":28,"author":{"gitId":"jayarengam"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":29,"author":{"gitId":"jayarengam"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/cartona.png\"));"},{"lineNumber":30,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":31,"author":{"gitId":"jayarengam"},"content":"    @FXML"},{"lineNumber":32,"author":{"gitId":"jayarengam"},"content":"    public void initialize() {"},{"lineNumber":33,"author":{"gitId":"jayarengam"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":34,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":36,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"jayarengam"},"content":"     * Initialises the window by linking it to a Cartona instance and prints the welcome message."},{"lineNumber":38,"author":{"gitId":"jayarengam"},"content":"     * @param cartona"},{"lineNumber":39,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"jayarengam"},"content":"    public void setCartona(Cartona cartona) {"},{"lineNumber":41,"author":{"gitId":"jayarengam"},"content":"        this.cartona \u003d cartona;"},{"lineNumber":42,"author":{"gitId":"jayarengam"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":43,"author":{"gitId":"jayarengam"},"content":"                DialogBox.getCartonaDialog(cartona.load(), dukeImage)"},{"lineNumber":44,"author":{"gitId":"jayarengam"},"content":"        );"},{"lineNumber":45,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":47,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"jayarengam"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":49,"author":{"gitId":"jayarengam"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":50,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"jayarengam"},"content":"    @FXML"},{"lineNumber":52,"author":{"gitId":"jayarengam"},"content":"    private void handleUserInput() {"},{"lineNumber":53,"author":{"gitId":"jayarengam"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":54,"author":{"gitId":"jayarengam"},"content":"        String response \u003d cartona.getResponse(input);"},{"lineNumber":55,"author":{"gitId":"jayarengam"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":56,"author":{"gitId":"jayarengam"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":57,"author":{"gitId":"jayarengam"},"content":"                DialogBox.getCartonaDialog(response, dukeImage)"},{"lineNumber":58,"author":{"gitId":"jayarengam"},"content":"        );"},{"lineNumber":59,"author":{"gitId":"jayarengam"},"content":"        userInput.clear();"},{"lineNumber":60,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":61}},{"path":"src/main/java/cartona/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"package cartona.ui;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"import cartona.task.Task;"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":"import cartona.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":" * The Ui class generates text strings that represent messages from the program."},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":" *"},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":" * @author Jaya Rengam"},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":" */"},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":"public class Ui {"},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":"     * Returns the given error message to the console."},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":"     * @param errorMessage"},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":"    public String getErrorMessageFormatted(String errorMessage) {"},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":"        assert !(errorMessage.equals(\"\")) : \"Error message cannot be empty\";"},{"lineNumber":19,"author":{"gitId":"jayarengam"},"content":"        return String.format(\" %s%n\", errorMessage);"},{"lineNumber":20,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":22,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"jayarengam"},"content":"     * Returns the startup message."},{"lineNumber":24,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"jayarengam"},"content":"    public String getWelcomeMessageFormatted() {"},{"lineNumber":26,"author":{"gitId":"jayarengam"},"content":"        return String.format(\" Hello! I\u0027m Cartona.%n\""},{"lineNumber":27,"author":{"gitId":"jayarengam"},"content":"                        + \" What can I do for you?\");"},{"lineNumber":28,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":30,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"jayarengam"},"content":"     * Returns a message reflecting the successful adding of a Task."},{"lineNumber":32,"author":{"gitId":"jayarengam"},"content":"     * @param task The task that was added."},{"lineNumber":33,"author":{"gitId":"jayarengam"},"content":"     * @param taskListSize The current size of the TaskList."},{"lineNumber":34,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"jayarengam"},"content":"    public String printTaskAddingMessage(Task task, int taskListSize) {"},{"lineNumber":36,"author":{"gitId":"jayarengam"},"content":"        return String.format(\" Got it. I\u0027ve added this task:%n       %s%n     \""},{"lineNumber":37,"author":{"gitId":"jayarengam"},"content":"                            + \"Now you have %d tasks in the list.\","},{"lineNumber":38,"author":{"gitId":"jayarengam"},"content":"                        task, taskListSize);"},{"lineNumber":39,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":41,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"jayarengam"},"content":"     * Returns a message reflecting the successful deletion of a Task."},{"lineNumber":43,"author":{"gitId":"jayarengam"},"content":"     * @param task The task that was deleted."},{"lineNumber":44,"author":{"gitId":"jayarengam"},"content":"     * @param taskListSize The current size of the TaskList."},{"lineNumber":45,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"jayarengam"},"content":"    public String printTaskDeletionMessage(Task task, int taskListSize) {"},{"lineNumber":47,"author":{"gitId":"jayarengam"},"content":"        return String.format(\" Noted. I\u0027ve removed this task:%n       %s%n\""},{"lineNumber":48,"author":{"gitId":"jayarengam"},"content":"                + \" Now you have %d tasks in the list.%n\","},{"lineNumber":49,"author":{"gitId":"jayarengam"},"content":"                    task, taskListSize);"},{"lineNumber":50,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":52,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"jayarengam"},"content":"     * Returns a message reflecting the successful completion of a Task."},{"lineNumber":54,"author":{"gitId":"jayarengam"},"content":"     * @param task The task that was marked as completed."},{"lineNumber":55,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"jayarengam"},"content":"    public String printTaskDoneMessage(Task task) {"},{"lineNumber":57,"author":{"gitId":"jayarengam"},"content":"        return String.format(\" Nice! I\u0027ve marked this task as done:%n\""},{"lineNumber":58,"author":{"gitId":"jayarengam"},"content":"                + \"   %s%n\","},{"lineNumber":59,"author":{"gitId":"jayarengam"},"content":"                    task);"},{"lineNumber":60,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":62,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"jayarengam"},"content":"     * Returns a message reflecting the marking of a Task as not done."},{"lineNumber":64,"author":{"gitId":"jayarengam"},"content":"     * @param task The task that was marked as completed."},{"lineNumber":65,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"jayarengam"},"content":"    public String printTaskUndoneMessage(Task task) {"},{"lineNumber":67,"author":{"gitId":"jayarengam"},"content":"        return String.format(\" Okay, I\u0027ve marked this task as not done:%n\""},{"lineNumber":68,"author":{"gitId":"jayarengam"},"content":"                        + \"   %s%n\","},{"lineNumber":69,"author":{"gitId":"jayarengam"},"content":"                task);"},{"lineNumber":70,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":72,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"jayarengam"},"content":"     * Returns a message reflecting the successful edit of a Task."},{"lineNumber":74,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"jayarengam"},"content":"    public String printTaskEditMessage(int taskIdToEdit, Task task) {"},{"lineNumber":76,"author":{"gitId":"jayarengam"},"content":"        return String.format(\" Nice! I\u0027ve edited task %d:%n\""},{"lineNumber":77,"author":{"gitId":"jayarengam"},"content":"                + \"   %s%n\","},{"lineNumber":78,"author":{"gitId":"jayarengam"},"content":"                    taskIdToEdit, task);"},{"lineNumber":79,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":81,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"jayarengam"},"content":"     * Returns a numbered list of Tasks from the provided TaskList."},{"lineNumber":83,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"jayarengam"},"content":"    public String printTaskList(TaskList taskList) {"},{"lineNumber":85,"author":{"gitId":"jayarengam"},"content":"        return String.format(\" Here are the tasks in your list:%n\""},{"lineNumber":86,"author":{"gitId":"jayarengam"},"content":"                            + \"%s\","},{"lineNumber":87,"author":{"gitId":"jayarengam"},"content":"                    taskList);"},{"lineNumber":88,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":90,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"jayarengam"},"content":"     * Returns a numbered list of matching Tasks (from a FindTask Command operation)"},{"lineNumber":92,"author":{"gitId":"jayarengam"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"jayarengam"},"content":"     * @param matchingTaskList the TaskList to be printed"},{"lineNumber":94,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"jayarengam"},"content":"    public String printMatchingTaskList(TaskList matchingTaskList) {"},{"lineNumber":96,"author":{"gitId":"jayarengam"},"content":"        return String.format(\" Here are the matching tasks in your list:%n\""},{"lineNumber":97,"author":{"gitId":"jayarengam"},"content":"                            + \"%s\","},{"lineNumber":98,"author":{"gitId":"jayarengam"},"content":"                matchingTaskList);"},{"lineNumber":99,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":101,"author":{"gitId":"jayarengam"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"jayarengam"},"content":"     * Returns the exit message."},{"lineNumber":103,"author":{"gitId":"jayarengam"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"jayarengam"},"content":"    public String printExitMessage() {"},{"lineNumber":105,"author":{"gitId":"jayarengam"},"content":"        return String.format(\" List saved! Goodbye!%n\");"},{"lineNumber":106,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":107}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":"  \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":"    \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" translateY\u003d\"10.0\" wrapText\u003d\"true\"\u003e"},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":"         \u003cpadding\u003e"},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":"            \u003cInsets top\u003d\"20.0\" bottom\u003d\"20.0\" left\u003d\"15.0\" right\u003d\"15.0\" /\u003e"},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":"         \u003c/padding\u003e\u003c/Label\u003e"},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":"  \u003c/children\u003e"},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":"  \u003cpadding\u003e"},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":"  \u003c/padding\u003e"},{"lineNumber":19,"author":{"gitId":"jayarengam"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"jayarengam":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":"\u003c?import javafx.scene.effect.InnerShadow?\u003e"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"650.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"cartona.ui.MainWindow\"\u003e"},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":"  \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"8.0\" layoutY\u003d\"557.4\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"567.0\" text\u003d\"Type here...\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":"         \u003ceffect\u003e"},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":"            \u003cInnerShadow blurType\u003d\"TWO_PASS_BOX\" height\u003d\"16.14\" radius\u003d\"7.57\" width\u003d\"16.14\" /\u003e"},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":"         \u003c/effect\u003e\u003c/TextField\u003e"},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"581.0\" layoutY\u003d\"561.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"36.0\" prefWidth\u003d\"66.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"558.0\" prefWidth\u003d\"650.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":"      \u003ccontent\u003e"},{"lineNumber":19,"author":{"gitId":"jayarengam"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"643.0\" /\u003e"},{"lineNumber":20,"author":{"gitId":"jayarengam"},"content":"      \u003c/content\u003e"},{"lineNumber":21,"author":{"gitId":"jayarengam"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":22,"author":{"gitId":"jayarengam"},"content":"  \u003c/children\u003e"},{"lineNumber":23,"author":{"gitId":"jayarengam"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"jayarengam":23}},{"path":"src/test/InputSampleList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"T | 0 | test1"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":"D | 0 | test2 | Aug 30 2020 1800"},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"E | 0 | test3 | Aug 30 2020 2000 - 2200"}],"authorContributionMap":{"jayarengam":3}},{"path":"src/test/ReadSampleList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"D | 1 | task1 | Aug 20 2020 0800"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":"E | 0 | task2 | Aug 21 2020 1230 - 1800"},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"T | 1 | task 3"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":"D | 0 | task 4 | Aug 31 2020 1900"}],"authorContributionMap":{"jayarengam":4}},{"path":"src/test/addtasktest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"T | 0 | test2@"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":"D | 0 | test3 | Sep 10 2020 0800"},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"E | 0 | test4 | Oct 30 2020 0800 - 1000"}],"authorContributionMap":{"jayarengam":3}},{"path":"src/test/java/CartonaTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":"import java.nio.file.Files;"},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"import java.nio.file.Path;"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":"import cartona.task.DateParser;"},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":"import cartona.Storage;"},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":"import cartona.command.Command;"},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":"import cartona.command.Parser;"},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":"import cartona.exception.CartonaException;"},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":"import cartona.exception.InvalidInputException;"},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":"import cartona.task.Deadline;"},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":"import cartona.task.Event;"},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":"import cartona.task.TaskDate;"},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":"import cartona.task.TaskList;"},{"lineNumber":19,"author":{"gitId":"jayarengam"},"content":"import cartona.task.Todo;"},{"lineNumber":20,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":21,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":22,"author":{"gitId":"jayarengam"},"content":"import cartona.ui.Ui;"},{"lineNumber":23,"author":{"gitId":"jayarengam"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":24,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":25,"author":{"gitId":"jayarengam"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":26,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":27,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":28,"author":{"gitId":"jayarengam"},"content":"public class CartonaTest {"},{"lineNumber":29,"author":{"gitId":"jayarengam"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"jayarengam"},"content":"    public void parserParseInvalidInputTest() {"},{"lineNumber":31,"author":{"gitId":"jayarengam"},"content":"        assertThrows(InvalidInputException.class, () -\u003e new Parser().parseCommand(\"a\"));"},{"lineNumber":32,"author":{"gitId":"jayarengam"},"content":"        assertThrows(InvalidInputException.class, () -\u003e new Parser().parseCommand(\"add\"));"},{"lineNumber":33,"author":{"gitId":"jayarengam"},"content":"        assertThrows(InvalidInputException.class, () -\u003e new Parser().parseCommand(\"add \"));"},{"lineNumber":34,"author":{"gitId":"jayarengam"},"content":"        assertThrows(InvalidInputException.class, () -\u003e new Parser().parseCommand(\"add todo\"));"},{"lineNumber":35,"author":{"gitId":"jayarengam"},"content":"        assertThrows(InvalidInputException.class, () -\u003e new Parser().parseCommand(\"add deadline /by\"));"},{"lineNumber":36,"author":{"gitId":"jayarengam"},"content":"        assertThrows(InvalidInputException.class, () -\u003e new Parser().parseCommand(\"add deadline/by\"));"},{"lineNumber":37,"author":{"gitId":"jayarengam"},"content":"        assertThrows(InvalidInputException.class, () -\u003e new Parser()"},{"lineNumber":38,"author":{"gitId":"jayarengam"},"content":"                                                            .parseCommand(\"add deadline /by 20-20-2020 1800\"));"},{"lineNumber":39,"author":{"gitId":"jayarengam"},"content":"        assertThrows(InvalidInputException.class, () -\u003e new Parser().parseCommand(\"add event /at\"));"},{"lineNumber":40,"author":{"gitId":"jayarengam"},"content":"        assertThrows(InvalidInputException.class, () -\u003e"},{"lineNumber":41,"author":{"gitId":"jayarengam"},"content":"                                                new Parser().parseCommand(\"add event /at 20/01/2020 1200\"));"},{"lineNumber":42,"author":{"gitId":"jayarengam"},"content":"        assertThrows(InvalidInputException.class, () -\u003e new Parser().parseCommand(\"add event /at 01/20/2020\"));"},{"lineNumber":43,"author":{"gitId":"jayarengam"},"content":"        assertThrows(InvalidInputException.class, () -\u003e new Parser().parseCommand(\"delete t\"));"},{"lineNumber":44,"author":{"gitId":"jayarengam"},"content":"        assertThrows(InvalidInputException.class, () -\u003e new Parser().parseCommand(\"delete\"));"},{"lineNumber":45,"author":{"gitId":"jayarengam"},"content":"        assertThrows(InvalidInputException.class, () -\u003e new Parser().parseCommand(\"done \"));"},{"lineNumber":46,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":48,"author":{"gitId":"jayarengam"},"content":"    @Test"},{"lineNumber":49,"author":{"gitId":"jayarengam"},"content":"    public void storageInputTest() throws CartonaException, IOException {"},{"lineNumber":50,"author":{"gitId":"jayarengam"},"content":"        String testFileString \u003d \"./src/test/InputSampleList.txt\";"},{"lineNumber":51,"author":{"gitId":"jayarengam"},"content":"        Path path \u003d Path.of(testFileString);"},{"lineNumber":52,"author":{"gitId":"jayarengam"},"content":"        Runnable inputTest \u003d () -\u003e {"},{"lineNumber":53,"author":{"gitId":"jayarengam"},"content":"            TaskList inputList \u003d new TaskList();"},{"lineNumber":54,"author":{"gitId":"jayarengam"},"content":"            Parser parser \u003d new Parser();"},{"lineNumber":55,"author":{"gitId":"jayarengam"},"content":"            Ui ui \u003d new Ui();   // not used"},{"lineNumber":56,"author":{"gitId":"jayarengam"},"content":"            Storage storage \u003d new Storage(testFileString);"},{"lineNumber":57,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":58,"author":{"gitId":"jayarengam"},"content":"            assertDoesNotThrow(() -\u003e storage.checkAndCreateFile());"},{"lineNumber":59,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":60,"author":{"gitId":"jayarengam"},"content":"            try {"},{"lineNumber":61,"author":{"gitId":"jayarengam"},"content":"                Command todoCommand \u003d parser.parseCommand(\"add todo test1\");"},{"lineNumber":62,"author":{"gitId":"jayarengam"},"content":"                Command deadlineCommand \u003d parser.parseCommand(\"add deadline test2 /by 2020/08/30 1800\");"},{"lineNumber":63,"author":{"gitId":"jayarengam"},"content":"                Command eventCommand \u003d parser.parseCommand(\"add event test3 /at 2020/08/30 2000 2200\");"},{"lineNumber":64,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":65,"author":{"gitId":"jayarengam"},"content":"                todoCommand.execute(inputList, ui, storage);"},{"lineNumber":66,"author":{"gitId":"jayarengam"},"content":"                deadlineCommand.execute(inputList, ui, storage);"},{"lineNumber":67,"author":{"gitId":"jayarengam"},"content":"                eventCommand.execute(inputList, ui, storage);"},{"lineNumber":68,"author":{"gitId":"jayarengam"},"content":"            } catch (CartonaException e) {"},{"lineNumber":69,"author":{"gitId":"jayarengam"},"content":"                e.printStackTrace();"},{"lineNumber":70,"author":{"gitId":"jayarengam"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"jayarengam"},"content":"        };"},{"lineNumber":72,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":73,"author":{"gitId":"jayarengam"},"content":"        String savedtxt \u003d \"\";"},{"lineNumber":74,"author":{"gitId":"jayarengam"},"content":"        try {"},{"lineNumber":75,"author":{"gitId":"jayarengam"},"content":"            inputTest.run();"},{"lineNumber":76,"author":{"gitId":"jayarengam"},"content":"            savedtxt \u003d Files.readString(path);"},{"lineNumber":77,"author":{"gitId":"jayarengam"},"content":"            Scanner txtReader \u003d null;"},{"lineNumber":78,"author":{"gitId":"jayarengam"},"content":"            txtReader \u003d new Scanner(path);"},{"lineNumber":79,"author":{"gitId":"jayarengam"},"content":"        } catch (Exception e) {"},{"lineNumber":80,"author":{"gitId":"jayarengam"},"content":"            e.printStackTrace();"},{"lineNumber":81,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"jayarengam"},"content":"        String expectedString \u003d \"T | 0 | test1\\n\" + \"D | 0 | test2 | Aug 30 2020 1800\\n\" +"},{"lineNumber":83,"author":{"gitId":"jayarengam"},"content":"                                    \"E | 0 | test3 | Aug 30 2020 2000 - 2200\\n\";"},{"lineNumber":84,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":85,"author":{"gitId":"jayarengam"},"content":"        assertEquals(savedtxt, expectedString);"},{"lineNumber":86,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":88,"author":{"gitId":"jayarengam"},"content":"    @Test"},{"lineNumber":89,"author":{"gitId":"jayarengam"},"content":"    public void storageOutputTest() throws IOException {"},{"lineNumber":90,"author":{"gitId":"jayarengam"},"content":"        TaskList expectedList \u003d new TaskList();"},{"lineNumber":91,"author":{"gitId":"jayarengam"},"content":"        expectedList.addTask(new Deadline(\"task1\", true,"},{"lineNumber":92,"author":{"gitId":"jayarengam"},"content":"                                new TaskDate(LocalDateTime.of(2020, 8, 20, 8, 0))));"},{"lineNumber":93,"author":{"gitId":"jayarengam"},"content":"        expectedList.addTask((new Event(\"task2\", false,"},{"lineNumber":94,"author":{"gitId":"jayarengam"},"content":"                                new TaskDate(LocalDateTime.of(2020, 8, 21, 12, 30)),"},{"lineNumber":95,"author":{"gitId":"jayarengam"},"content":"                                new TaskDate(LocalDateTime.of(2020, 8, 21, 18, 0)))));"},{"lineNumber":96,"author":{"gitId":"jayarengam"},"content":"        expectedList.addTask(new Todo(\"task 3\", true));"},{"lineNumber":97,"author":{"gitId":"jayarengam"},"content":"        expectedList.addTask(new Deadline(\"task 4\", false,"},{"lineNumber":98,"author":{"gitId":"jayarengam"},"content":"                                new TaskDate(LocalDateTime.of(2020, 8, 31, 19, 0))));"},{"lineNumber":99,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":100,"author":{"gitId":"jayarengam"},"content":"        Storage actualStorage \u003d new Storage(\"./src/test/ReadSampleList.txt\");"},{"lineNumber":101,"author":{"gitId":"jayarengam"},"content":"        TaskList actualList \u003d actualStorage.getListFromStorage();"},{"lineNumber":102,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":103,"author":{"gitId":"jayarengam"},"content":"        assertEquals(4, actualList.getSize());"},{"lineNumber":104,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":105,"author":{"gitId":"jayarengam"},"content":"        for (int i \u003d 1; i \u003c\u003d 4; i++) {"},{"lineNumber":106,"author":{"gitId":"jayarengam"},"content":"            assertEquals(expectedList.getTask(i).toString(), actualList.getTask(i).toString());"},{"lineNumber":107,"author":{"gitId":"jayarengam"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":110,"author":{"gitId":"jayarengam"},"content":"    @Test"},{"lineNumber":111,"author":{"gitId":"jayarengam"},"content":"    public void editTaskTest() {"},{"lineNumber":112,"author":{"gitId":"jayarengam"},"content":"        String testTxtString \u003d \"./src/test/addtasktest.txt\";"},{"lineNumber":113,"author":{"gitId":"jayarengam"},"content":"        Path path \u003d Path.of(testTxtString);"},{"lineNumber":114,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":115,"author":{"gitId":"jayarengam"},"content":"        Runnable editTest \u003d () -\u003e {"},{"lineNumber":116,"author":{"gitId":"jayarengam"},"content":"            TaskList taskList \u003d new TaskList();"},{"lineNumber":117,"author":{"gitId":"jayarengam"},"content":"            Parser parser \u003d new Parser();"},{"lineNumber":118,"author":{"gitId":"jayarengam"},"content":"            Ui ui \u003d new Ui();   // not used"},{"lineNumber":119,"author":{"gitId":"jayarengam"},"content":"            Storage storage \u003d new Storage(testTxtString);"},{"lineNumber":120,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":121,"author":{"gitId":"jayarengam"},"content":"            assertDoesNotThrow(() -\u003e storage.checkAndCreateFile());"},{"lineNumber":122,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":123,"author":{"gitId":"jayarengam"},"content":"            try {"},{"lineNumber":124,"author":{"gitId":"jayarengam"},"content":"                // Test editing todos"},{"lineNumber":125,"author":{"gitId":"jayarengam"},"content":"                Command addTodo \u003d parser.parseCommand(\"add todo test1\");"},{"lineNumber":126,"author":{"gitId":"jayarengam"},"content":"                Command editTodo \u003d parser.parseCommand(\"edit 1 /name test2@\");"},{"lineNumber":127,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":128,"author":{"gitId":"jayarengam"},"content":"                addTodo.execute(taskList, ui, storage);"},{"lineNumber":129,"author":{"gitId":"jayarengam"},"content":"                editTodo.execute(taskList, ui, storage);"},{"lineNumber":130,"author":{"gitId":"jayarengam"},"content":"                assertEquals(taskList.getTask(1).toString(),"},{"lineNumber":131,"author":{"gitId":"jayarengam"},"content":"                        new Todo(\"test2@\", false).toString());"},{"lineNumber":132,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":133,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":134,"author":{"gitId":"jayarengam"},"content":"                // Test editing Deadlines"},{"lineNumber":135,"author":{"gitId":"jayarengam"},"content":"                Command addDeadline \u003d parser.parseCommand(\"add deadline test2 /by 2020/08/30 1800\");"},{"lineNumber":136,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":137,"author":{"gitId":"jayarengam"},"content":"                Command editDeadlineName \u003d parser.parseCommand(\"edit 2 /name test3\");"},{"lineNumber":138,"author":{"gitId":"jayarengam"},"content":"                addDeadline.execute(taskList, ui, storage);"},{"lineNumber":139,"author":{"gitId":"jayarengam"},"content":"                editDeadlineName.execute(taskList, ui, storage);"},{"lineNumber":140,"author":{"gitId":"jayarengam"},"content":"                assertEquals(new Deadline(\"test3\", false,"},{"lineNumber":141,"author":{"gitId":"jayarengam"},"content":"                                                DateParser.parseTaskDate(\"2020/08/30 1800\"))"},{"lineNumber":142,"author":{"gitId":"jayarengam"},"content":"                                .toString(),"},{"lineNumber":143,"author":{"gitId":"jayarengam"},"content":"                        taskList.getTask(2).toString());"},{"lineNumber":144,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":145,"author":{"gitId":"jayarengam"},"content":"                Command editDeadlineDue \u003d parser.parseCommand(\"edit 2 /due 2020/09/10 0800\");"},{"lineNumber":146,"author":{"gitId":"jayarengam"},"content":"                editDeadlineDue.execute(taskList, ui, storage);"},{"lineNumber":147,"author":{"gitId":"jayarengam"},"content":"                assertEquals(new Deadline(\"test3\", false,"},{"lineNumber":148,"author":{"gitId":"jayarengam"},"content":"                                                DateParser.parseTaskDate(\"2020/09/10 0800\"))"},{"lineNumber":149,"author":{"gitId":"jayarengam"},"content":"                                .toString(),"},{"lineNumber":150,"author":{"gitId":"jayarengam"},"content":"                        taskList.getTask(2).toString());"},{"lineNumber":151,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":152,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":153,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":154,"author":{"gitId":"jayarengam"},"content":"                // Test editing Commands"},{"lineNumber":155,"author":{"gitId":"jayarengam"},"content":"                Command addEvent \u003d parser.parseCommand(\"add event test3 /at 2020/08/30 2000 2200\");"},{"lineNumber":156,"author":{"gitId":"jayarengam"},"content":"                addEvent.execute(taskList, ui, storage);"},{"lineNumber":157,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":158,"author":{"gitId":"jayarengam"},"content":"                Event originalEvent \u003d (Event) taskList.getTask(3);"},{"lineNumber":159,"author":{"gitId":"jayarengam"},"content":"                TaskDate startDate \u003d originalEvent.getStartDate();"},{"lineNumber":160,"author":{"gitId":"jayarengam"},"content":"                TaskDate endDate \u003d originalEvent.getEndDate();"},{"lineNumber":161,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":162,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":163,"author":{"gitId":"jayarengam"},"content":"                Command editEventName \u003d parser.parseCommand(\"edit 3 /name test4\");"},{"lineNumber":164,"author":{"gitId":"jayarengam"},"content":"                editEventName.execute(taskList, ui, storage);"},{"lineNumber":165,"author":{"gitId":"jayarengam"},"content":"                assertEquals(new Event(\"test4\", false, startDate, endDate).toString(),"},{"lineNumber":166,"author":{"gitId":"jayarengam"},"content":"                        taskList.getTask(3).toString());"},{"lineNumber":167,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":168,"author":{"gitId":"jayarengam"},"content":"                Command editEventDate \u003d parser.parseCommand(\"edit 3 /date 2020/09/30\");"},{"lineNumber":169,"author":{"gitId":"jayarengam"},"content":"                editEventDate.execute(taskList, ui, storage);"},{"lineNumber":170,"author":{"gitId":"jayarengam"},"content":"                TaskDate newStart \u003d DateParser.parseTaskDate(\"2020/09/30 2000\");"},{"lineNumber":171,"author":{"gitId":"jayarengam"},"content":"                TaskDate newEnd \u003d DateParser.parseTaskDate(\"2020/09/30 2200\");"},{"lineNumber":172,"author":{"gitId":"jayarengam"},"content":"                assertEquals(new Event(\"test4\", false, newStart, newEnd).toString(),"},{"lineNumber":173,"author":{"gitId":"jayarengam"},"content":"                        taskList.getTask(3).toString());"},{"lineNumber":174,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":175,"author":{"gitId":"jayarengam"},"content":"                Command editEventStart \u003d parser.parseCommand(\"edit 3 /start 1000\");"},{"lineNumber":176,"author":{"gitId":"jayarengam"},"content":"                Command editEventEnd \u003d parser.parseCommand(\"edit 3 /end 2100\");"},{"lineNumber":177,"author":{"gitId":"jayarengam"},"content":"                TaskDate newStart2 \u003d DateParser.parseTaskDate(\"2020/09/30 1000\");"},{"lineNumber":178,"author":{"gitId":"jayarengam"},"content":"                TaskDate newEnd2 \u003d DateParser.parseTaskDate(\"2020/09/30 2100\");"},{"lineNumber":179,"author":{"gitId":"jayarengam"},"content":"                editEventStart.execute(taskList, ui, storage);"},{"lineNumber":180,"author":{"gitId":"jayarengam"},"content":"                editEventEnd.execute(taskList, ui, storage);"},{"lineNumber":181,"author":{"gitId":"jayarengam"},"content":"                assertEquals(new Event(\"test4\", false, newStart2, newEnd2).toString(),"},{"lineNumber":182,"author":{"gitId":"jayarengam"},"content":"                        taskList.getTask(3).toString());"},{"lineNumber":183,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":184,"author":{"gitId":"jayarengam"},"content":"                Command editEventRange \u003d parser.parseCommand(\"edit 3 /range 2020/10/30 0800 1000\");"},{"lineNumber":185,"author":{"gitId":"jayarengam"},"content":"                TaskDate newStart3 \u003d DateParser.parseTaskDate(\"2020/10/30 0800\");"},{"lineNumber":186,"author":{"gitId":"jayarengam"},"content":"                TaskDate newEnd3 \u003d DateParser.parseTaskDate(\"2020/10/30 1000\");"},{"lineNumber":187,"author":{"gitId":"jayarengam"},"content":"                editEventRange.execute(taskList, ui, storage);"},{"lineNumber":188,"author":{"gitId":"jayarengam"},"content":"                assertEquals(new Event(\"test4\", false, newStart3, newEnd3).toString(),"},{"lineNumber":189,"author":{"gitId":"jayarengam"},"content":"                        taskList.getTask(3).toString());"},{"lineNumber":190,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":191,"author":{"gitId":"jayarengam"},"content":"            } catch (CartonaException e) {"},{"lineNumber":192,"author":{"gitId":"jayarengam"},"content":"                e.printStackTrace();"},{"lineNumber":193,"author":{"gitId":"jayarengam"},"content":"            }"},{"lineNumber":194,"author":{"gitId":"jayarengam"},"content":"        };"},{"lineNumber":195,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":196,"author":{"gitId":"jayarengam"},"content":"        assertDoesNotThrow(() -\u003e editTest.run());"},{"lineNumber":197,"author":{"gitId":"jayarengam"},"content":"    }"},{"lineNumber":198,"author":{"gitId":"jayarengam"},"content":"}"}],"authorContributionMap":{"jayarengam":198}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jayarengam"},"content":"add todo read book"},{"lineNumber":2,"author":{"gitId":"jayarengam"},"content":"done 1"},{"lineNumber":3,"author":{"gitId":"jayarengam"},"content":"del 1"},{"lineNumber":4,"author":{"gitId":"jayarengam"},"content":"list"},{"lineNumber":5,"author":{"gitId":"jayarengam"},"content":"add deadline return book"},{"lineNumber":6,"author":{"gitId":"jayarengam"},"content":"add deadline return book /by June 6th"},{"lineNumber":7,"author":{"gitId":"jayarengam"},"content":"add event project meeting"},{"lineNumber":8,"author":{"gitId":"jayarengam"},"content":"add event project meeting /at Aug 6th 2-4pm"},{"lineNumber":9,"author":{"gitId":"jayarengam"},"content":"add todo join sports club"},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":"list"},{"lineNumber":11,"author":{"gitId":"jayarengam"},"content":"done 1"},{"lineNumber":12,"author":{"gitId":"jayarengam"},"content":"done 2"},{"lineNumber":13,"author":{"gitId":"jayarengam"},"content":"del 2"},{"lineNumber":14,"author":{"gitId":"jayarengam"},"content":"list"},{"lineNumber":15,"author":{"gitId":"jayarengam"},"content":"add todo borrow book"},{"lineNumber":16,"author":{"gitId":"jayarengam"},"content":"add deadline do homework /by no idea??? :)"},{"lineNumber":17,"author":{"gitId":"jayarengam"},"content":"add todo"},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":"list"},{"lineNumber":19,"author":{"gitId":"jayarengam"},"content":"bye"}],"authorContributionMap":{"jayarengam":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"jayarengam"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"jayarengam"},"content":"java -classpath ..\\bin Cartona \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":22,"author":{"gitId":"jayarengam"},"content":""},{"lineNumber":23,"author":{"gitId":"jayarengam"},"content":"pause"}],"authorContributionMap":{"jayarengam":4,"-":19}}]
