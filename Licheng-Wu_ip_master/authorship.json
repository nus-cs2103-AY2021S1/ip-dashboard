[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "-": 24,
      "Licheng-Wu": 2
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "compileJava {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    options.encoding \u003d \"UTF-8\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "tasks.withType(JavaCompile) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 45,
      "Licheng-Wu": 24
    }
  },
  {
    "path": "data/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "E | 1 | competition | 2020-09-23 9pm-10pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "T | 0 | eat dinner"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "T | 0 | eat"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "T | 0 | sleep"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "T | 0 | read book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "T | 0 | singing competition"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "T | 0 | eat supper"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "T | 0 | thinking out loud"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 9
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.commands.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.task.TaskManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " * Encapsulates the greenfield project Duke that manages user tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private TaskManager taskManager;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Constructs a duke object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.storage \u003d new Storage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            // Try to load data from text file"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            this.storage.loadFromTextFile(this.taskList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            // If text file does not exist yet, create the text file"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            this.storage.createFile();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.taskManager \u003d new TaskManager(taskList, ui, storage, parser);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Initialises the program by using ui object to display the welcome message,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * and calls on taskManager object to begin requesting and processing user input."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.taskManager.manage();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                CommandResult commandResult \u003d c.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                return commandResult.getMessageAfterExecution();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            } catch (NumberFormatException error) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                // When \"done\" is not followed by a valid number"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                throw new DukeException(\"OOPS!!! Please enter a valid index!\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException error) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                // When \"done\" is not followed by any number"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                throw new DukeException(\"OOPS!!! Please enter a valid index!\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            } catch (IndexOutOfBoundsException error) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                // When \"done is followed by a number that is out of range"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                throw new DukeException(\"OOPS!!! That index is out of range!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                throw new DukeException(\"OOPS!!! Please enter the date in yyyy-mm-dd format!\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        } catch (DukeException error) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            System.out.println(error.getMessage());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        // Required because the catch block for DukeException does not throw/return"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return \"Invalid input\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Drives program."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param args command line arguments"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "Licheng-Wu": 87
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            scene.getStylesheets().add(\"view/styles.css\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 32
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.ui.DialogBox;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/JohnnyBravo.jpg\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/MrsDino.jpg\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                DialogBox.getDukeDialog(ui.getWelComeMessage(), dukeImage)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        );"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        );"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 57
    }
  },
  {
    "path": "src/main/java/duke/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " * Encapsulates a command for Mrs Dino to exit."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Whether this command is a terminal command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private final boolean HAS_FINISHED \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public CommandResult execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        ui.printBye();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return new CommandResult(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return this.HAS_FINISHED;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 26
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " * Encapsulates commands received by Mrs Dino."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Checks whether the command is a terminal command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @return boolean determining whether the command will cause Mrs Dino to terminate."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Executes the corresponding command and returns the result of the command as CommandResult."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param taskList the task list object that tracks the current task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param ui the instance of UI class that prints messages to the console."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param storage the instance of Storage class that stores the changed data."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @return An instance of CommandResult that represents the result of the command execution."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @throws DukeException Encapsulates exceptions specific to Mrs Dino."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public abstract CommandResult execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Generates a string representation of the contents in the task list for the GUI to display."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param todoList Target todoList for the string representation."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @return A string representation of the target todoList."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public String taskListToString(ArrayList\u003cTask\u003e todoList) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        for (int i \u003d 0; i \u003c todoList.size(); i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            int index \u003d i + 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            str.append(index).append(\". \").append(todoList.get(i).toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            if (i !\u003d todoList.size() - 1) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                str.append(\"\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return str.toString();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Generates a String representation of the message to users after adding a task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param targetTask Corresponding task that is added."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param size New size of the arraylist of tasks"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @return String representation of the message to users after adding a task.."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public String addTaskToString(Task targetTask, int size) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        str.append(\"Got it. I\u0027ve added this task:\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        str.append(targetTask.toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        str.append(\"Now you have \").append(size).append(\" tasks in the list.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return str.toString();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Generates a String representation of the message to users after deleting a task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param targetTask Corresponding task that is deleted."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param size New size of the arraylist of tasks"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @return String representation of the message to users after adding a task.."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public String deleteTaskToString(Task targetTask, int size) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        str.append(\"Noted. I\u0027ve removed this task:\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        str.append(targetTask.toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        str.append(\"Now you have \").append(size).append(\" tasks in the list.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return str.toString();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Generates a String representation of the message to users after rescheduling a task."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param oldTask the task that we want to modify, with outdated date and time."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param newTask the task after modification, with updated date and time."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @return String representation of the message to users after rescheduling the task."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public String rescheduleTaskToString(Task oldTask, Task newTask) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        str.append(\"Got it. I\u0027ve rescheduled this task:\\n\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        str.append(oldTask.toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        str.append(\"To:\\n\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        str.append(newTask.toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return str.toString();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 96
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " * Encapsulates the result after execution of a command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Message to output to the user after execution of a command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private String messageAfterExecution;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Contructs a CommandResult object with the given output message to the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param messageAfterExecution Message to output to the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public CommandResult(String messageAfterExecution) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.messageAfterExecution \u003d messageAfterExecution;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Getter method for the message to output to the user after execution of a command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @return Message to output to the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public String getMessageAfterExecution() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return this.messageAfterExecution;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 29
    }
  },
  {
    "path": "src/main/java/duke/commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " * Encapsulates a command for Mrs Dino to add a Deadline task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Whether this command is a terminal command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private final boolean HAS_FINISHED \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Array containing details of the deadline task to add."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * First element is the name of the task, second element is the date and time that task is due."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private String[] deadlineTaskDetails;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Constructs a new Deadline object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param deadlineTaskDetails Array containing details of the deadline task to add."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public DeadlineCommand(String[] deadlineTaskDetails) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.deadlineTaskDetails \u003d deadlineTaskDetails;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public CommandResult execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        taskList.addDeadline(\"0\", deadlineTaskDetails[0], deadlineTaskDetails[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        storage.saveTasks(taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        int size \u003d taskList.getSize();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        Task targetTask \u003d taskList.get(size - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        ui.printTaskAdded(targetTask.toString(), size);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        String messageAfterExecution \u003d addTaskToString(targetTask, size);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return new CommandResult(messageAfterExecution);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return this.HAS_FINISHED;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 49
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " * Encapsulates a command for Mrs Dino to delete a task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Whether this command is a terminal command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private final boolean HAS_FINISHED \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Index of the task in the todoList that needs to be deleted."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private int indexOfTaskToBeDeleted;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Constructs a new DeleteCommand."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param indexOfTaskToBeDeleted index of the task in the todoList that needs to be deleted."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public DeleteCommand(int indexOfTaskToBeDeleted) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.indexOfTaskToBeDeleted \u003d indexOfTaskToBeDeleted;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public CommandResult execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        Task targetTask \u003d taskList.get(indexOfTaskToBeDeleted - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        taskList.remove(indexOfTaskToBeDeleted - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        storage.saveTasks(taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        int size \u003d taskList.getSize();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        ui.printTaskDeleted(targetTask.toString(), size);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        String messageAfterExecution \u003d deleteTaskToString(targetTask, size);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return new CommandResult(messageAfterExecution);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return this.HAS_FINISHED;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 48
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " * Encapsulates a command for Mrs Dino to mark a task as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Whether this command is a terminal command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private final boolean HAS_FINISHED \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Index of the task in the todoList that needs to be marked as done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private int indexOfTaskToBeDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Constructs a new DoneCommand."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param indexOfTaskToBeDone Index of the task in the todoList that needs to be marked as done."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public DoneCommand(int indexOfTaskToBeDone) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.indexOfTaskToBeDone \u003d indexOfTaskToBeDone;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public CommandResult execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        Task targetTask \u003d taskList.get(indexOfTaskToBeDone - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        String message \u003d targetTask.completeTask();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        storage.saveTasks(taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        ui.printDone(message);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return new CommandResult(message);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return this.HAS_FINISHED;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 46
    }
  },
  {
    "path": "src/main/java/duke/commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " * Encapsulates a command for Mrs Dino to add an Event task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Whether this command is a terminal command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private final boolean HAS_FINISHED \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Array containing details of the event task to add."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * First element is the name of the task, second element is the date and time that task occurs."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private String[] eventTaskDetails;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Constructs a new EventCommand."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param eventTaskDetails Array containing details of the event task to add."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public EventCommand(String[] eventTaskDetails) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.eventTaskDetails \u003d eventTaskDetails;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public CommandResult execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        taskList.addEvent(\"0\", eventTaskDetails[0], eventTaskDetails[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        storage.saveTasks(taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        int size \u003d taskList.getSize();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        Task targetTask \u003d taskList.get(size - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        ui.printTaskAdded(targetTask.toString(), size);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        String messageAfterExecution \u003d addTaskToString(targetTask, size);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return new CommandResult(messageAfterExecution);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return this.HAS_FINISHED;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 49
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " * Encapsulates a command for Mrs Dino to find tasks using keywords given."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Whether this command is a terminal command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private final boolean HAS_FINISHED \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * The target keyword to search for relevant tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Constructs a new FindCommand."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param keyword The target keyword to search for relevant tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public CommandResult execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        String[] keywords \u003d keyword.split(\" \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        // For CLI"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        taskList.find(keywords);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        // For GUI"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d taskList.findForGui(keywords);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        str.append(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        str.append(taskListToString(matchingTasks));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return new CommandResult(str.toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return this.HAS_FINISHED;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 50
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " * Encapsulates a command for Mrs Dino to list all current tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Whether this command is a terminal command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private final boolean HAS_FINISHED \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public CommandResult execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        // for CLI"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        taskList.list();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        // for GUI"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        ArrayList\u003cTask\u003e todoList \u003d taskList.getList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        String messageAfterExecution \u003d taskListToString(todoList);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return new CommandResult(messageAfterExecution);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return this.HAS_FINISHED;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 34
    }
  },
  {
    "path": "src/main/java/duke/commands/RescheduleCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " * Encapsulates a command for Mrs Dino to reschedule tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "public class RescheduleCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Whether this command is a terminal command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private final boolean HAS_FINISHED \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Updated date and tome of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private String newDateAndTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Index in the todoList of the target task to reschedule."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private int indexOfTaskToReschedule;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Constructs a new RescheduleCommand."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param indexOfTaskToReschedule Index in the todoList of the target task to reschedule."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param newDateAndTime Updated date and tome of the task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public RescheduleCommand(int indexOfTaskToReschedule, String newDateAndTime) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.newDateAndTime \u003d newDateAndTime;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.indexOfTaskToReschedule \u003d indexOfTaskToReschedule;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public CommandResult execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        Task targetTask \u003d taskList.get(indexOfTaskToReschedule - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        String isCompleted \u003d targetTask.isCompleted() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        String taskName \u003d targetTask.getTaskName();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        Task rescheduledTask;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        switch (targetTask.getType()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        case(\"E\"): {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            rescheduledTask \u003d new Event(isCompleted, taskName, newDateAndTime);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            taskList.getList().set(indexOfTaskToReschedule - 1, rescheduledTask);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            storage.saveTasks(taskList);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        case(\"D\"): {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            rescheduledTask \u003d new Deadline(isCompleted, taskName, newDateAndTime);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            taskList.getList().set(indexOfTaskToReschedule - 1, rescheduledTask);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            storage.saveTasks(taskList);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        default: {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            throw new DukeException(\"Task of this type cannot be rescheduled!\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        ui.printTaskRescheduled(targetTask.toString(), rescheduledTask.toString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        String messageAfterExecution \u003d rescheduleTaskToString(targetTask, rescheduledTask);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return new CommandResult(messageAfterExecution);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return this.HAS_FINISHED;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 74
    }
  },
  {
    "path": "src/main/java/duke/commands/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " * Encapsulates a command for Mrs Dino to add a Todo task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Whether this command is a terminal command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private final boolean HAS_FINISHED \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Details of the todo task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private String todoTaskDetails;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Constructs a new TodoCommand."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param todoTaskDetails Details of the todo task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public TodoCommand(String todoTaskDetails) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.todoTaskDetails \u003d todoTaskDetails;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public CommandResult execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        taskList.addTodo(\"0\", todoTaskDetails);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "//        storage.writeToFile(\"T\", \"0\", todoTaskDetails, \"\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        storage.saveTasks(taskList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        int size \u003d taskList.getSize();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        Task targetTask \u003d taskList.get(size - 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        ui.printTaskAdded(targetTask.toString(), size);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        String messageAfterExecution \u003d addTaskToString(targetTask, size);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return new CommandResult(messageAfterExecution);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return this.HAS_FINISHED;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 48
    }
  },
  {
    "path": "src/main/java/duke/echo/Echo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "package duke.echo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " * Encapsulates an Echo class that repeats commands from the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "public class Echo {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Whether Mrs Dino should terminate."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private static boolean terminate \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Initialises the program to echo user inputs."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public static void initialise() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        while (!Echo.terminate) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            Scanner sc \u003d new Scanner(System.in);  // Create a Scanner object"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            String command \u003d sc.nextLine();  // Read user input"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            Echo.echoMessage(command); // Output user input"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Reads user input and outputs them exactly as how the user typed."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param message Message user typed."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public static void echoMessage(String message) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        if (!message.equals(\"bye\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            System.out.println(message);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            Echo.terminate \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 38
    }
  },
  {
    "path": "src/main/java/duke/enums/CommandEnum.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "package duke.enums;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " * A class that encapsulates the type of Command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "public enum CommandEnum {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    BYE(\"bye\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    LIST(\"list\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    DONE(\"done\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    TODO(\"todo\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    EVENT(\"event\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    DELETE(\"delete\"),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    FIND(\"find\"),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    RESCHEDULE(\"reschedule\"),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    INVALID;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Key is the String representation of the enum, and value is the enumeration."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private static HashMap\u003cString, CommandEnum\u003e lookup \u003d new HashMap\u003cString, CommandEnum\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * String representation of each enumeration value."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private String label;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Default constructor for the CommandEnum class."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    CommandEnum() {}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Constructs the CommandEnum, with the label as commandEnum."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param commandEnum String representation of the enumeration."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    CommandEnum(String commandEnum) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.label \u003d commandEnum;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Static method that loads the HashMap with key-value pairs of all enumeration values."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        for (CommandEnum commandEnum : CommandEnum.values()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            lookup.put(commandEnum.getLabel(), commandEnum);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Getter method for the labels of the enumeration."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @return Label of the enumeration."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private String getLabel() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return this.label;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Takes in the String representation of the enumeration and returns the corresponding enumeration."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param commandEnum String representation of the enumeration to return."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @return The value of the enumeration."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public static CommandEnum stringToEnum(String commandEnum) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        if (lookup.containsKey(commandEnum)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            return lookup.get(commandEnum);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            return CommandEnum.INVALID;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 74
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " * Encapsulates exceptions specific to Mrs Dino."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 10
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.enums.CommandEnum;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " * Encapsulates a parser that interprets user input, and decides what to do with the given input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Instance of UI class that helps display messages to the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Constructs a new Parser object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Parses commands by the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param command Input given by the user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @return Relevant command to execute after input is parsed."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @throws DukeException Exceptions from parsing of user input."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public static Command parse (String command) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        String[] splitCommand \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        CommandEnum commandEnum \u003d CommandEnum.stringToEnum(splitCommand[0]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        switch (commandEnum) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        case LIST: {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            return parseList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        case BYE: {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            return parseBye();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        case DONE: {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            int indexOfTaskToBeDone \u003d Integer.parseInt(splitCommand[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            return parseDone(indexOfTaskToBeDone);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        case DEADLINE: {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            return parseDeadline(splitCommand[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        case EVENT: {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            return parseEvent(splitCommand[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        case TODO: {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                if (splitCommand.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                    throw new DukeException(\"OOPS!!! The description of a todo cannot be empty\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                    return parseTodo(splitCommand[1]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            } catch (DukeException error) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                System.out.println(error.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        case DELETE: {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            int indexOfTaskToBeDeleted \u003d Integer.parseInt(splitCommand[1]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            return parseDelete(indexOfTaskToBeDeleted);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        case FIND : {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            return parseFind(splitCommand[1]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        case RESCHEDULE: {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            String[] indexAndDate \u003d splitCommand[1].split(\" \", 2);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            int indexOfTaskToReschedule \u003d Integer.parseInt(indexAndDate[0]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            return parseReschedule(indexOfTaskToReschedule, indexAndDate[1]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        default: {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Called when the user wants a List command."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @return ListCommand to based on user request."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private static ListCommand parseList() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return new ListCommand();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Called when the user wants a List command."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @return ListCommand based on user request."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public static ByeCommand parseBye() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return new ByeCommand();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Called when the user wants a Done command."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param indexOfTaskToBeDone Index of the task in the todoList that needs to be marked as done."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @return DoneCommand based on user request."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public static DoneCommand parseDone(int indexOfTaskToBeDone) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return new DoneCommand(indexOfTaskToBeDone);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Called when the user wants a Deadline command."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param details Information about the Deadline task, without the Deadline command word."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @return DeadlineCommand based on user request."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public static DeadlineCommand parseDeadline(String details) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        String[] deadlineTaskDetails \u003d details.split(\" /by \");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return new DeadlineCommand(deadlineTaskDetails);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Called when the user wants an Event command."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param details Information about the Event task, without the Event command word."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @return EventCommand based on user request."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public static EventCommand parseEvent(String details) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        String[] eventTaskDetails \u003d details.split(\" /at \");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return new EventCommand(eventTaskDetails);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Called when the user wants a Todo command."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param details Information about the Todo task, without the Todo command word."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @return TodoCommand based on user request."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public static TodoCommand parseTodo(String details) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return new TodoCommand(details);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Called when the user wants a Delete command."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param indexOfTaskToBeDeleted Index of the task in the todoList that needs to be deleted."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @return DeleteCommand based on user request."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public static DeleteCommand parseDelete(int indexOfTaskToBeDeleted) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return new DeleteCommand(indexOfTaskToBeDeleted);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Called when the user wants a Find command."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param keyword The target keyword to search for relevant tasks."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @return FindCommand based on user request."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public static FindCommand parseFind(String keyword) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return new FindCommand(keyword);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Called when the user wants a Reschedule command."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param indexOfTaskToReschedule Index in the todoList of the target task to reschedule."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param newDateAndTime Updated date and tome of the task."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @return RescheduleCommand based on user request."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public static RescheduleCommand parseReschedule(int indexOfTaskToReschedule, String newDateAndTime) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return new RescheduleCommand(indexOfTaskToReschedule, newDateAndTime);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 170
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " * Encapsulates a Storage class that handles saving and retrieving of stored data, to initialise the task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Path of the root directory."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private String rootPath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Path of the directory where the storage file resides."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private String directoryPath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Path of the storage file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * New line string that depends on user\u0027s operating system."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private String lineSeparator \u003d System.getProperty(\"line.separator\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Constructs a new Storage object."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.rootPath \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.directoryPath \u003d this.rootPath + File.separator + \"data\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.filePath \u003d this.directoryPath + File.separator + \"data.txt\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Creates a new file to store data if it does not exist yet."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public void createFile() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        File dataFolder \u003d new File(this.directoryPath);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            // Make directory if it doesn\u0027t exist yet"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            dataFolder.mkdir();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            File dataFile \u003d new File(this.directoryPath, \"data.txt\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            // Make file if it doesn\u0027t exist yet"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            dataFile.createNewFile();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Saves data in the current taskList to the storage file."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param taskList Target taskList whose data we want to store."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @throws DukeException Encapsulates exceptions specific to Mrs Dino."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public void saveTasks(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            FileWriter writer \u003d new FileWriter(\"data/data.txt\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            for (Task task: taskList.getList()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                int bit \u003d task.isCompleted() ? 1 : 0;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                String taskType \u003d task.getType();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                String lineToWrite;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                case(\"T\"): {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                    lineToWrite \u003d taskType + \" | \" + bit + \" | \" + task.getTaskName();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                case (\"E\"):"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                case (\"D\"):"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                    lineToWrite \u003d taskType + \" | \" + bit + \" | \" + task.getTaskName() + \" | \" + task.getDateAndTime();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                default: {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                    throw new DukeException(\"Write to file error\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                writer.write(lineToWrite + this.lineSeparator);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            throw new DukeException(\"Save data error\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Retrieves data store in the storage file and loads them into the task list."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @param taskList TaskList that we want to load the data into."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @throws FileNotFoundException "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public void loadFromTextFile(TaskList taskList) throws FileNotFoundException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        File file \u003d new File(this.filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        Scanner s \u003d new Scanner(file); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            String currentLine \u003d s.nextLine();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            String details[] \u003d currentLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            switch(details[0].trim()) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            // Trims away whitespaces at the start and end of string"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                taskList.addTodo(details[1].trim(), details[2].trim());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                taskList.addDeadline(details[1].trim(), details[2].trim(), details[3].trim());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                taskList.addEvent(details[1].trim(), details[2].trim(), details[3].trim());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        s.close();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 126
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " * Encapsulates a Deadline Task which contains the details of the task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " * as well as the date that the task should be completed by."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private String time \u003d \"\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Constructs a Deadline Task by providing information such as whether the task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * is completed, the task name and the date of the deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public Deadline(String isCompleted, String taskName, String by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        super(\"D\", isCompleted, taskName);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        // In case time is included"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        String dateAndTime[] \u003d by.split(\"\\\\s\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            assert dateAndTime[0] !\u003d null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            this.date \u003d LocalDate.parse(dateAndTime[0]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        if (dateAndTime.length \u003e 1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            // If time is given as well"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            this.time \u003d dateAndTime[1].trim();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public String getDateAndTime() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Overrides the Object toString() method."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        String formattedDate \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \" \" + this.time + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 45
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " * Encapsulates a Event Task which contains the details of the task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " * as well as the date that the event will occur."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private String time \u003d \"\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Constructs a Event Task by providing information such as whether the task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * is completed, the task name and the event date."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public Event(String isCompleted, String taskName, String at) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        super(\"E\", isCompleted, taskName);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        String dateAndTime[] \u003d at.split(\"\\\\s\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        assert dateAndTime[0] !\u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.date \u003d LocalDate.parse(dateAndTime[0]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        if (dateAndTime.length \u003e 1) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            // If time is given as well"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            this.time \u003d dateAndTime[1].trim();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public String getDateAndTime() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Overrides the Object toString() method."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        String formattedDate \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + formattedDate + \" \" + this.time + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 44
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " * Encapsulates a Task which contains information on whether the task is"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " * completed and also the task name."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private boolean isCompleted;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Constructs a new Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public Task(String type, String isCompleted, String taskName) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        if (isCompleted.equals(\"0\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            this.isCompleted \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            this.isCompleted \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Completes the current task by setting the boolean taskCompleted to true."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * @return all details regarding this task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public String completeTask() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.isCompleted \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return this.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public boolean isCompleted() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return this.isCompleted;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public abstract String getDateAndTime();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return this.taskName;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Overrides the Object toString() method."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        if (isCompleted) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            return \"[✓] \" + taskName;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            return \"[✗] \" + taskName;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 60
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import static java.util.stream.Collectors.toCollection;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private ArrayList\u003cTask\u003e todoList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.todoList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public void list() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.ui.generateDivider();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        for (int i \u003d 0; i \u003c todoList.size(); i++) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            int index \u003d i + 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            this.ui.generateLeftPadding();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            System.out.println(index + \". \" + todoList.get(i).toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.ui.generateDivider();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return this.todoList.get(index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public void remove(int index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.todoList.remove(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return this.todoList.size();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return this.todoList;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public void addTodo(String isCompleted, String task) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        Todo newTodo \u003d new Todo(isCompleted, task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.todoList.add(newTodo);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public void addDeadline(String isCompleted, String task, String deadline) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(isCompleted, task, deadline);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.todoList.add(newDeadline);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public void addEvent(String isCompleted, String task, String eventDate) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        Event newEvent \u003d new Event(isCompleted, task, eventDate);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.todoList.add(newEvent);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public void find(String[] keywords) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        ArrayList\u003cTask\u003e tempArrayList \u003d todoList.stream()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                .filter(task -\u003e matchesAllKeywords(task, keywords)).collect(toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.ui.printMatchingTasks(tempArrayList);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public ArrayList\u003cTask\u003e findForGui(String[] keywords) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        ArrayList\u003cTask\u003e tempArrayList \u003d todoList.stream()"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                .filter(task -\u003e matchesAllKeywords(task, keywords)).collect(toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return tempArrayList;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private boolean matchesAllKeywords(Task task, String[] keywords) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        boolean containsKeyword \u003d true;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        for (String keyword : keywords) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            if (!task.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                containsKeyword \u003d false;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return containsKeyword;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 82
    }
  },
  {
    "path": "src/main/java/duke/task/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public TaskManager(TaskList taskList, Ui ui, Storage storage, Parser parser) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.parser \u003d parser;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public void manage() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        // Take in user input"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in); // Create a Scanner object"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            String fullCommand \u003d sc.nextLine(); // Read user input"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                    Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                    c.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                    isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                } catch (NumberFormatException error) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                    // When \"done\" is not followed by a valid number"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                    throw new DukeException(\"OOPS!!! Please enter a valid index!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException error) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                    // When \"done\" is not followed by any number"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                    throw new DukeException(\"OOPS!!! Please enter a valid index!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                } catch (IndexOutOfBoundsException error) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                    // When \"done is followed by a number that is out of range"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                    throw new DukeException(\"OOPS!!! That index is out of range!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                    throw new DukeException(\"OOPS!!! Please enter the date in yyyy-mm-dd format!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            } catch (DukeException error) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                System.out.println(error.getMessage());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 56
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " * Encapsulates a Todo Task which contains the details of the task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Constructs a Todo Task by providing information such as whether the task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * is done and the task name."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public Todo(String isCompleted, String taskName) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        super(\"T\", isCompleted, taskName);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public String getDateAndTime() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Overrides the Object toString() method."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 28
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.MainWindow;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private Label userDialog;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private DialogBox(String text, Image img, String type) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            FXMLLoader fxmlLoader;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            if (type.equals(\"user\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/userDialogBox.fxml\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        if (type.equals(\"user\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            userDialog.setText(text);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            dialog.setText(text);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        String type \u003d \"user\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return new DialogBox(text, img, type);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        String type \u003d \"duke\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        var db \u003d new DialogBox(text, img, type);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 74
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private static final int PADDING_LEFT_LENGTH \u003d 5;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private static final int DIVIDER_LENGTH \u003d 60;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private static String PADDING_LEFT \u003d \"\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    private static String DIVIDER \u003d \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public void generateLeftPadding() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        if (PADDING_LEFT.equals(\"\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            for (int i \u003d 0; i \u003c PADDING_LEFT_LENGTH; i++) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                PADDING_LEFT +\u003d \" \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        System.out.print(PADDING_LEFT);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public void generateDivider() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        if (DIVIDER.equals(\"\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            for (int j \u003d 0; j \u003c DIVIDER_LENGTH; j++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                DIVIDER +\u003d \"_\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        String logo \u003d \"    _____                 ________  .__\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                + \"   /     \\\\_______  ______ \\\\______ \\\\ |__| ____   ____\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                + \"  /  \\\\ /  \\\\_  __ \\\\/  ___/  |    |  \\\\|  |/    \\\\ /  _ \\\\ \\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                + \" /    Y    \\\\  | \\\\/\\\\___ \\\\   |    |   \\\\  |   |  (  \u003c_\u003e ) \\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                + \" \\\\____|__  /__|  /____  \u003e /_______  /__|___|  /\\\\____/ \\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                + \"         \\\\/           \\\\/          \\\\/        \\\\/ \\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        System.out.println(\"Welcome!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        System.out.println(\"What can Mrs Dino do for you?\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public void printBye() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        generateDivider();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        generateLeftPadding();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        generateDivider();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public void printDone(String message) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        generateDivider();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        generateLeftPadding();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        generateDivider();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public void printTaskAdded(String message, int size) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        generateDivider();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        generateLeftPadding();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        System.out.println(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        generateDivider();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public void printTaskRescheduled(String oldTask, String newTask) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        generateDivider();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve rescheduled this task:\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        generateLeftPadding();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        System.out.println(oldTask);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        generateLeftPadding();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        generateLeftPadding();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        System.out.println(\"To:\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        generateLeftPadding();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        System.out.println(newTask);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        generateDivider();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public void printTaskDeleted(String message, int size) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        generateDivider();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        generateLeftPadding();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        System.out.println(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        generateDivider();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public void printMatchingTasks(ArrayList\u003cTask\u003e tempArrayList) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        generateDivider();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        for (int i \u003d 0; i \u003c tempArrayList.size(); i++) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            int index \u003d i + 1;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            generateLeftPadding();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            System.out.println(index + \". \" + tempArrayList.get(i).toString());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        generateDivider();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public String getWelComeMessage() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        String logo \u003d \"    _____                 ________  .__\\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                + \"   /     \\\\_______  ______ \\\\______ \\\\ |__| ____   ____\\n\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                + \"  /  \\\\ /  \\\\_  __ \\\\/  ___/  |    |  \\\\|  |/    \\\\ /  _ \\\\ \\n\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                + \" /    Y    \\\\  | \\\\/\\\\___ \\\\   |    |   \\\\  |   |  (  \u003c_\u003e ) \\n\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                + \" \\\\____|__  /__|  /____  \u003e /_______  /__|___|  /\\\\____/ \\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                + \"         \\\\/           \\\\/          \\\\/        \\\\/ \\n\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        String hello \u003d \"Hello from \\n\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        String welcome \u003d \"Welcome!\\n\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        String helpUser \u003d \"What can Mrs Dino do for you?\\n\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        return hello + logo + welcome + helpUser;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 112
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth \u003d \"-Infinity\" prefWidth\u003d\"700.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"false\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"500.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    \u003cstyle\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "\u003c!--        -fx-background-color: \"blue\";--\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    \u003c/style\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 19
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"710.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"639.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"639.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"710.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 19
    }
  },
  {
    "path": "src/main/resources/view/UserDialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth \u003d \"-Infinity\" prefWidth\u003d\"700.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        \u003cLabel fx:id\u003d\"userDialog\" text\u003d\"Label\" wrapText\u003d\"false\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"500.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    \u003cstyle\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        \u003c!--        -fx-background-color: \"blue\";--\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    \u003c/style\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 19
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public void initialiseNewDeadline_notDone_pass() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        Deadline testDeadline \u003d new Deadline(\"0\", \"read book\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                \"2020-08-31 6pm\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        String expectedOutput \u003d \"[D][✗] read book (by: Aug 31 2020 6pm)\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        assertEquals(expectedOutput, testDeadline.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public void initialiseNewDeadline_done_pass() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        Deadline testDeadline \u003d new Deadline(\"1\", \"read book\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                \"2020-08-31 6pm\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        String expectedOutput \u003d \"[D][✓] read book (by: Aug 31 2020 6pm)\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        assertEquals(expectedOutput, testDeadline.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 23
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public void initialiseNewEvent_notDone_pass() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        Event testEvent \u003d new Event(\"0\", \"training\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                \"2020-08-31 6pm\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        String expectedOutput \u003d \"[E][✗] training (at: Aug 31 2020 6pm)\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        assertEquals(expectedOutput, testEvent.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    public void initialiseNewEvent_done_pass() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        Event testEvent \u003d new Event(\"1\", \"training\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "                \"2020-08-31 6pm\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        String expectedOutput \u003d \"[E][✓] training (at: Aug 31 2020 6pm)\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "        assertEquals(expectedOutput, testEvent.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 23
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "blah"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "todo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "done a"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Licheng-Wu": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "    PAUSE"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Licheng-Wu"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "Licheng-Wu": 4
    }
  }
]
