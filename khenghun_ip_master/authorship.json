[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khenghun"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khenghun"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "khenghun": 2,
      "-": 24
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khenghun"
        },
        "content": "T|false|q"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khenghun"
        },
        "content": "E|true|w|2020-12-25 19:00"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khenghun"
        },
        "content": "D|false|e|2020-11-11 04:32"
      }
    ],
    "authorContributionMap": {
      "khenghun": 3
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khenghun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khenghun"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khenghun"
        },
        "content": "      private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khenghun"
        },
        "content": "      private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khenghun"
        },
        "content": "      private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khenghun"
        },
        "content": "      private Parser parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public Duke(String filepath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        ui.welcome();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        String str \u003d sc.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        while (!str.equals(\"bye\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            ui.line();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            parser.command(str, tasks, storage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            ui.line();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            str \u003d sc.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        ui.exit();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khenghun": 34,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khenghun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khenghun"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khenghun"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public void command(String str, TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            if (str.equals(\"list\")) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                tasks.displayTasks();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                if (str.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                    tasks.completeTask(str);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                } else if (str.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                    tasks.deleteTask(str);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                    tasks.addTask(str);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                storage.save(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khenghun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khenghun": 26
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khenghun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khenghun"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khenghun"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khenghun"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khenghun"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khenghun"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khenghun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khenghun"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    private final String filepath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(filepath));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            String str;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            while ((str \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                Task T;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                if (str.startsWith(\"T\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                    T \u003d ToDo.load(str);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                } else if (str.startsWith(\"E\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                    T \u003d Event.load(str);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                } else if (str.startsWith(\"D\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                    T \u003d Deadline.load(str);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                tasks.add(T);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            System.out.println(\"Starting a new task list\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            File file \u003d new File(\"./data\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            file.mkdir();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filepath);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            for (Task t : tasks.getTasks()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                fw.write(t.store() + \"\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            System.out.println(\"error in saving\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khenghun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khenghun": 60
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khenghun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khenghun"
        },
        "content": "import duke.exceptions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khenghun"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khenghun"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khenghun"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khenghun"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khenghun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khenghun"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public TaskList (ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public void displayTasks() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            System.out.println(i + \".\" + t.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public void addTask(String s) throws InvalidCommandException, EmptyCommandException, MissingTimeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        String str \u003d s.trim();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        if (str.equals(\"todo\") || str.equals(\"deadline\") || str.equals(\"event\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            throw new EmptyCommandException(str);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        if (str.contains(\" \")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            String[] arr \u003d str.split(\" \", 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            String str2 \u003d arr[1];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            switch (arr[0]) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                    ToDo td \u003d new ToDo(str2);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                    insert(td);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                    if (str2.contains(\"/by\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                        String[] arr2 \u003d str2.split(\"/by\", 2);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                        if (arr2[0].isBlank()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                            throw new EmptyCommandException(\"deadline\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                        if (arr2[1].isBlank()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                            throw new MissingTimeException(\"deadline\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                        Deadline dl \u003d new Deadline(arr2[0], arr2[1].trim());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                        insert(dl);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                        throw new MissingTimeException(\"deadline\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                    if (str2.contains(\"/at\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                        String[] arr2 \u003d str2.split(\"/at\", 2);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                        if (arr2[0].isBlank()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                            throw new EmptyCommandException(\"event\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                        if (arr2[1].isBlank()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                            throw new MissingTimeException(\"event\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                        Event ev \u003d new Event(arr2[0], arr2[1].trim());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                        insert(ev);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                        throw new MissingTimeException(\"event\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                    throw new InvalidCommandException();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    private void insert(Task task) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        System.out.println(\"Task has been added:\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        System.out.println(task.toString());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        System.out.println(\"You now have \" + tasks.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    private void delete(int i) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        Task t \u003d tasks.get(i - 1);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        tasks.remove(i - 1);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        System.out.println(\"Task has been removed.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        System.out.println(t.toString());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        System.out.println(\"You now have \" + tasks.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public void completeTask(String str) throws TaskCompletionException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        if (!str.startsWith(\"done \")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            throw new TaskCompletionException(tasks.size());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        String val \u003d str.substring(5);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        if (isInteger(val)) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            int i \u003d Integer.parseInt(val);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            if (i \u003e 0 \u0026\u0026 i \u003c\u003d tasks.size()) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                tasks.get(i - 1).complete();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                throw new TaskCompletionException(tasks.size());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            throw new TaskCompletionException(tasks.size());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public void deleteTask(String str) throws TaskDeletionException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        if (!str.startsWith(\"delete \")) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            throw new TaskDeletionException(tasks.size());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        String val \u003d str.substring(7);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        if (isInteger(val)) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            int i \u003d Integer.parseInt(val);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            if (i \u003e 0 \u0026\u0026 i \u003c\u003d tasks.size()) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                delete(i);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                throw new TaskDeletionException(tasks.size());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            throw new TaskDeletionException(tasks.size());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    private static boolean isInteger(String str) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            Integer.parseInt(str);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "khenghun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khenghun": 141
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khenghun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khenghun"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public void welcome() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        System.out.println(\"Hello! I\u0027m duke. What can I do for you? \\n\" + logo);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public void line() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        for (int i \u003d 0; i \u003c 75; i++) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            System.out.print(\"\\u2500\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khenghun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khenghun": 24
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khenghun"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khenghun"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        return \"duke.Duke has encountered an error.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khenghun"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "khenghun": 9
    }
  },
  {
    "path": "src/main/java/duke/exceptions/EmptyCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khenghun"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khenghun"
        },
        "content": "public class EmptyCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    private String cmd;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public EmptyCommandException (String cmd) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        this.cmd \u003d cmd;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        return \"Sorry, the description of a \" + cmd + \" cannot be empty.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khenghun"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "khenghun": 14
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khenghun"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khenghun"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        return \"Your command cannot be processed. Please key in a valid command.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khenghun"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "khenghun": 9
    }
  },
  {
    "path": "src/main/java/duke/exceptions/MissingTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khenghun"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khenghun"
        },
        "content": "public class MissingTimeException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    private String cmd;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public MissingTimeException(String cmd) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        this.cmd \u003d cmd;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        return \"Please indicate the time for the \" + cmd + \".\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khenghun"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "khenghun": 14
    }
  },
  {
    "path": "src/main/java/duke/exceptions/TaskCompletionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khenghun"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khenghun"
        },
        "content": "public class TaskCompletionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    protected int size;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public TaskCompletionException (int size) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        this.size \u003d size;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        return \"Please select a task from 1 to \" + size +\".\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khenghun"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "khenghun": 13
    }
  },
  {
    "path": "src/main/java/duke/exceptions/TaskDeletionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khenghun"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khenghun"
        },
        "content": "public class TaskDeletionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    protected int size;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public TaskDeletionException(int size) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        this.size \u003d size;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        return \"Please select a task from 1 to \" + size +\".\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khenghun"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "khenghun": 13
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khenghun"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khenghun"
        },
        "content": "public class Deadline extends TimedTask {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        super(description, by);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        this.connecting \u003d \" (by: \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        this.firstLetter \u003d \"[D]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public static Deadline load(String str) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        String[] arr \u003d str.split(\"\\\\|\", 4);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        Deadline dl \u003d new Deadline(arr[2], arr[3]);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        if (arr[1].equals(\"true\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            dl.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        return dl;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public String store() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        return \"D|\" + super.store() + \"|\" + this.dateTime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khenghun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khenghun": 25
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khenghun"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khenghun"
        },
        "content": "public class Event extends TimedTask {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        super(description,at);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        this.connecting \u003d \" (at: \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        this.firstLetter \u003d \"[E]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public static Event load(String str) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        String[] arr \u003d str.split(\"\\\\|\", 4);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        Event ev \u003d new Event(arr[2], arr[3]);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        if (arr[1].equals(\"true\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            ev.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        return ev;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public String store() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        return \"E|\" + super.store() + \"|\" + this.dateTime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khenghun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khenghun": 25
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khenghun"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khenghun"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        this.description \u003d description.trim();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public void complete() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            System.out.println(\"Task is already completed.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            System.out.println(\"Task completed: \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        System.out.println(this.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public String store() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        return this.isDone + \"|\" + this.description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khenghun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khenghun": 34
    }
  },
  {
    "path": "src/main/java/duke/task/TimedTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khenghun"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khenghun"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khenghun"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khenghun"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khenghun"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khenghun"
        },
        "content": "public class TimedTask extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    protected String dateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    protected Date time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    protected String time2;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    protected boolean hasDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    protected boolean hasTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    protected String firstLetter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    protected String connecting;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public TimedTask(String description, String dateTime) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        this.dateTime \u003d dateTime.trim();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        this.hasDate \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            String[] arr \u003d this.dateTime.split(\" \", 2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            this.date \u003d LocalDate.parse(arr[0]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            this.hasDate \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            if (!this.dateTime.contains(\" \")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                this.hasTime \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                time2 \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                    this.time \u003d new SimpleDateFormat(\"hh:mm\").parse(arr[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                    this.hasTime \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                    this.time2 \u003d \" \" + arr[1];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                    this.hasTime \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        if (hasDate) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            if (hasTime) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                SimpleDateFormat dfFormat \u003d new SimpleDateFormat(\"h:mm a\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                return firstLetter + super.toString() + connecting + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" + dfFormat.format(time) + \")\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khenghun"
        },
        "content": "                return firstLetter + super.toString() + connecting + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))  + time2 + \")\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            return firstLetter + super.toString() + connecting + dateTime + \")\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khenghun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khenghun": 57
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khenghun"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khenghun"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public static ToDo load(String str) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        String[] arr \u003d str.split(\"\\\\|\", 3);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        ToDo td \u003d new ToDo(arr[2]);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        if (arr[1].equals(\"true\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khenghun"
        },
        "content": "            td.isDone \u003d true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        return td;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public String store() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        return \"T|\" + super.store();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khenghun"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khenghun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khenghun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khenghun": 26
    }
  },
  {
    "path": "text-ui-test/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khenghun"
        },
        "content": "D|false|homework|2020-03-19 18:30"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khenghun"
        },
        "content": "T|true|project"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khenghun"
        },
        "content": "D|false|lunch|noon"
      }
    ],
    "authorContributionMap": {
      "khenghun": 3
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khenghun"
        },
        "content": "deadline homework /by 2020-03-19 18:30"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khenghun"
        },
        "content": "event meeting /at 2021-02-24 05:00"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khenghun"
        },
        "content": "todo project"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khenghun"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khenghun"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khenghun"
        },
        "content": "deadline lunch /by noon"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khenghun"
        },
        "content": "done 7"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khenghun"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khenghun"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khenghun"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "khenghun": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khenghun"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\exceptions\\*.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khenghun"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khenghun"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "khenghun": 4
    }
  }
]
