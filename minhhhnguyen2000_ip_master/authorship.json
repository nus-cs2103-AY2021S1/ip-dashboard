[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    String deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        return \"[D]\" + super.getStatus() + \" (by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "minhhhnguyen2000": 15
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        Scanner myScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        while(true) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "            String cmd \u003d myScanner.nextLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "            if(cmd.equals(\"bye\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "            else if(cmd.equals(\"list\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                for(int i \u003d 1; i \u003c\u003d tasks.size(); ++i) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    System.out.println(i + \".\" + tasks.get(i - 1).getStatus());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "            else if(cmd.length() \u003e\u003d 4 \u0026\u0026 cmd.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                int c \u003d 0;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                for(int i \u003d 5; i \u003c cmd.length(); ++i) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    c \u003d c * 10 + cmd.charAt(i) - \u00270\u0027;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                tasks.get(c - 1).done();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                System.out.println(tasks.get(c - 1).getStatus());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "            else if(cmd.length() \u003e\u003d 4 \u0026\u0026 cmd.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    checkCmd(cmd, 4, \"â˜¹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    String getName \u003d cmd.substring(5);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    Todo tmp \u003d new Todo(getName);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    System.out.println(\"  \" + tmp.getStatus());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    tasks.add(tmp);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                catch (DukeException ex) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "            else if(cmd.length() \u003e\u003d 8 \u0026\u0026cmd.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    checkCmd(cmd, 8, \"â˜¹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    String getName \u003d \"\", getDeadline \u003d \"\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    for (int i \u003d 0; i \u003c cmd.length(); ++i) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                        if (cmd.charAt(i) \u003d\u003d \u0027/\u0027 \u0026\u0026 cmd.charAt(i + 1) \u003d\u003d \u0027b\u0027 \u0026\u0026 cmd.charAt(i + 2) \u003d\u003d \u0027y\u0027) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                            getDeadline \u003d cmd.substring(i + 4);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                            getName \u003d cmd.substring(9, i - 1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    Deadline tmp \u003d new Deadline(getName, getDeadline);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    System.out.println(\"  \" + tmp.getStatus());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    tasks.add(tmp);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                catch (DukeException ex) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "            else if(cmd.length() \u003e\u003d 5 \u0026\u0026cmd.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    checkCmd(cmd, 5, \"â˜¹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    String getName \u003d \"\", getTime \u003d \"\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    for (int i \u003d 0; i \u003c cmd.length(); ++i) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                        if (cmd.charAt(i) \u003d\u003d \u0027/\u0027 \u0026\u0026 cmd.charAt(i + 1) \u003d\u003d \u0027a\u0027 \u0026\u0026 cmd.charAt(i + 2) \u003d\u003d \u0027t\u0027) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                            getTime \u003d cmd.substring(i + 4);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                            getName \u003d cmd.substring(6, i - 1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    Event tmp \u003d new Event(getName, getTime);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    System.out.println(\"  \" + tmp.getStatus());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    tasks.add(tmp);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    //"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                catch (DukeException ex) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "            else if(cmd.length() \u003e\u003d 6 \u0026\u0026 cmd.substring(0, 6).equals(\"delete\")){"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                int c \u003d 0;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                for(int i \u003d 7; i \u003c cmd.length(); ++i) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    c \u003d c * 10 + cmd.charAt(i) - \u00270\u0027;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                System.out.println(tasks.get(c - 1).getStatus());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                tasks.remove(c - 1);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "            else System.out.println(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    public static void checkCmd(String cmd, int len, String Ex) throws DukeException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        if(cmd.length() \u003d\u003d len) throw new DukeException(Ex);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "minhhhnguyen2000": 99,
      "-": 11
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "minhhhnguyen2000": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    String time;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        return \"[E]\" + super.getStatus() + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "minhhhnguyen2000": 15
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    public void done() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "minhhhnguyen2000": 26
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        return \"[T]\" + super.getStatus();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "minhhhnguyen2000": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "bye"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "minhhhnguyen2000": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "minhhhnguyen2000": 1,
      "-": 20
    }
  }
]
