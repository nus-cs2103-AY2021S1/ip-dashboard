[
  {
    "path": "src/main/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rnmy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rnmy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rnmy"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rnmy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            this.by \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            throw new DukeException(\"Please enter dates in yyyy-mm-dd format!\\n\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        return \"D | \" + super.toData() + \" | \" + by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        String formattedDate \u003d by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rnmy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rnmy": 27
    }
  },
  {
    "path": "src/main/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rnmy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rnmy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rnmy"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    protected final static String DATA_FILE_PATH \u003d \"data/dukeData.txt\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        ui.printLogo();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        System.out.println(\"Initializing...\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            ArrayList\u003cTask\u003e existingTasks \u003d storage.loadExistingData();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            tasks \u003d new TaskList(existingTasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            ui.printWelcome(existingTasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            ui.printLoadingError();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            parser.parse(input, tasks, storage, ui);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        new Duke(DATA_FILE_PATH).run();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rnmy": 42,
      "-": 1
    }
  },
  {
    "path": "src/main/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rnmy"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rnmy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rnmy": 5
    }
  },
  {
    "path": "src/main/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rnmy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rnmy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rnmy"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rnmy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            this.at \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            throw new DukeException(\"Please enter dates in yyyy-mm-dd format!\\n\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        return \"E | \" + super.toData() + \" | \" + at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        String formattedDate \u003d at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + formattedDate + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rnmy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rnmy": 27
    }
  },
  {
    "path": "src/main/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rnmy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rnmy"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public void parse(String input, TaskList taskList, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        String[] inputInfo \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        String command \u003d inputInfo[0];"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                case (\"list\"):"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    ui.printTasks(storage.loadExistingData());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                case (\"bye\"):"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    ui.printGoodbye();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                case (\"done\"):"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    if (inputInfo.length \u003c 2) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                        throw new DukeException(\"Error! To mark a task as done, please enter \u0027done [task number]\u0027.\\n\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                        String info \u003d inputInfo[1];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                        handleDone(info, taskList, storage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                case (\"delete\"):"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    if (inputInfo.length \u003c 2) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                        throw new DukeException(\"Error! To delete a task, please enter \u0027delete [task number]\u0027.\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                        String info \u003d inputInfo[1];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                        handleDelete(info, taskList, storage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                case (\"todo\"):"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    if (inputInfo.length \u003c 2) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                        throw new DukeException(\"Error! To add a todo, please enter \u0027todo [description]\u0027.\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                        String info \u003d inputInfo[1];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                        handleToDo(info, taskList, storage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                case (\"deadline\"):"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    if (inputInfo.length \u003c 2) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                        throw new DukeException(\"Error! To add a deadline, please enter \u0027deadline [description] /by [date in yyyy-mm-dd format]\u0027.\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                        String info \u003d inputInfo[1];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                        handleDeadline(info, taskList, storage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                case (\"event\"):"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    if (inputInfo.length \u003c 2) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                        throw new DukeException(\"Error! To add an event, please enter \u0027event [description] /at [date in yyyy-mm-dd format]\u0027.\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                        String info \u003d inputInfo[1];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                        handleEvent(info, taskList, storage);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            new Ui(e.getMessage()).printMessage();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            new Ui(\"An error occurred while retrieving the data.\").printMessage();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public void handleToDo(String info, TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        Task toDo \u003d new ToDo(info);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        taskList.addTask(toDo);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        storage.updateHardDisk(taskList.getTasks());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public void handleDeadline(String info, TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        String[] descriptionAndBy \u003d info.split(\" /by \", 2);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        if (descriptionAndBy.length \u003c 2) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            throw new DukeException(\"Error! To add a deadline, please enter \u0027deadline [description] /by [date in yyyy-mm-dd format]\u0027.\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            Task deadline \u003d new Deadline(descriptionAndBy[0], descriptionAndBy[1]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            taskList.addTask(deadline);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            storage.updateHardDisk(taskList.getTasks());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public void handleEvent(String info, TaskList taskList, Storage storage) throws DukeException{"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        String[] descriptionAndAt \u003d info.split(\" /at \", 2);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        if (descriptionAndAt.length \u003c 2) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            throw new DukeException(\"Error! To add an event, please enter \u0027event [description] /at [date in yyyy-mm-dd format]\u0027.\\n\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            Task event \u003d new Event(descriptionAndAt[0], descriptionAndAt[1]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            taskList.addTask(event);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            storage.updateHardDisk(taskList.getTasks());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public void handleDelete(String info, TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            int deleteIndex \u003d Integer.valueOf(info) - 1;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            taskList.deleteTask(deleteIndex);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            storage.updateHardDisk(taskList.getTasks());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            throw new DukeException(\"Error! Please enter a valid task number.\\n\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            throw new DukeException(\"Error! This task does not exist, please enter a valid task number.\\n\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public void handleDone(String info, TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            int doneIndex \u003d Integer.valueOf(info) - 1;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            taskList.markDone(doneIndex);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            storage.updateHardDisk(taskList.getTasks());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            throw new DukeException(\"Error! Please enter a valid task number.\\n\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            throw new DukeException(\"Error! This task does not exist, please enter a valid task number.\\n\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rnmy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rnmy": 117
    }
  },
  {
    "path": "src/main/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rnmy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rnmy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rnmy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rnmy"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rnmy"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rnmy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rnmy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rnmy"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            File dataFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            if (!dataFile.getParentFile().exists()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                if (dataFile.mkdirs()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    new Ui(\"Data Directory is created...\").printMessage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    new Ui(\"Oops...the data directory cannot be created :(\").printMessage();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                new Ui(\"Data directory located...\").printMessage();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            if (!dataFile.exists()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                if (dataFile.createNewFile()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    new Ui(\"Data file is created...\\nInitialization complete!\\n\").printMessage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    new Ui(\"Oops...the data file cannot be created :(\").printMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                new Ui(\"Data file located...\").printMessage();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                loadExistingData();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                new Ui(\"Initialization complete!\").printMessage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            new Ui(\"An error occurred.\").printMessage();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            new Ui(\"Initialization failed.\\ne.getMessage()\\n\").printMessage();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public ArrayList\u003cTask\u003e loadExistingData() throws IOException, DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            String[] taskInfo \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            if (taskInfo.length \u003c 3) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                throw new DukeException(\"Corrupted file: missing field.\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            } else if (!(taskInfo[1].equals(\"0\") || taskInfo[1].equals(\"1\"))) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                throw new DukeException(\"Corrupted file: invalid done field.\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                String type \u003d taskInfo[0];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                boolean isDone \u003d taskInfo[1].equals(\"1\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                String desc \u003d taskInfo[2];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    case (\"T\"):"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                        task \u003d new ToDo(desc);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    case (\"D\"):"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                        String by \u003d taskInfo[3];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                        task \u003d new Deadline(desc, by);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    case (\"E\"):"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                        String at \u003d taskInfo[3];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                        task \u003d new Event(desc, at);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                        throw new DukeException(\"Corrupted file: invalid task type.\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                if (isDone) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    task.makeDone();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public void updateHardDisk(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            FileWriter writer \u003d new FileWriter(filePath, false);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            for (Task t : tasks) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                writer.write(t.toData() + \"\\n\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            System.out.println(\"An error occurred.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rnmy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rnmy": 98
    }
  },
  {
    "path": "src/main/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rnmy"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public void makeDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        String done \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        return done + \" | \" + description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rnmy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rnmy": 31
    }
  },
  {
    "path": "src/main/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rnmy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rnmy"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    protected ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        String addTaskMessage \u003d \"Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                newTask.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                \"Now you have \" + taskList.size() + (taskList.size() \u003e 1 ? \" tasks \" : \" task \") + \"in the list.\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        new Ui(addTaskMessage).printMessageWithBorders();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        Task task \u003d taskList.remove(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        String deleteTaskMessage \u003d \"Noted. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        new Ui(deleteTaskMessage).printMessageWithBorders();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public void markDone(int i) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        task.makeDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        String markDoneMessage \u003d \"Nice! I\u0027ve marked this task as done:\\n\" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                \"[\\u2713] \" + task.getDescription() + \"\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        new Ui(markDoneMessage).printMessageWithBorders();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rnmy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rnmy": 40
    }
  },
  {
    "path": "src/main/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rnmy"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        return \"T | \" + super.toData();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rnmy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rnmy": 15
    }
  },
  {
    "path": "src/main/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rnmy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rnmy"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    String message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    String divider;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        divider \u003d \"____________________________________________________\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public Ui(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        divider \u003d \"____________________________________________________\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public void setMessage(String message) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public void printMessage() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public void printMessageWithBorders() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        System.out.println(divider);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        System.out.println(divider);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public void printLogo() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public void printWelcome(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        message \u003d \"Hello, I\u0027m Duke!\\n\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        if (taskList.size() \u003c 1) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            message +\u003d \"You currently have no tasks. \";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            message +\u003d  \"Here are your existing tasks:\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                message +\u003d i + 1 + \".\" + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            message +\u003d \"\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        message +\u003d \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        setMessage(message);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        printMessageWithBorders();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public void printLoadingError() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        message \u003d \"An error occurred while loading the data...\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        printMessage();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public void printTasks(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        if (taskList.size() \u003c 1) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            message \u003d \"You currently have no tasks.\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            message \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                String taskString \u003d i + 1 + \".\" + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                message +\u003d taskString;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        printMessageWithBorders();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public void printGoodbye() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        message \u003d \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        printMessageWithBorders();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rnmy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rnmy": 79
    }
  },
  {
    "path": "src/main/data/dukeData.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rnmy"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rnmy"
        },
        "content": "D | 1 | return book | 2020-06-06"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rnmy"
        },
        "content": "E | 0 | project meeting | 2020-08-06"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rnmy"
        },
        "content": "D | 0 | iP | 2021-01-02"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rnmy"
        },
        "content": "T | 0 | eat dinner"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rnmy"
        },
        "content": "D | 0 | readings | 2020-08-27"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rnmy"
        },
        "content": "E | 0 | graded team meeting | 2020-08-28"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rnmy"
        },
        "content": "T | 0 | eat"
      }
    ],
    "authorContributionMap": {
      "rnmy": 8
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rnmy"
        },
        "content": "import org.junit.Assert;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rnmy"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rnmy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rnmy"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rnmy"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rnmy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rnmy"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    private final PrintStream standardOut \u003d System.out;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        System.setOut(new PrintStream(outputStreamCaptor));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public void taskListAddTask_addThreeTasks_success() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            Event event \u003d new Event(\"team meeting\", \"2020-09-01\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            Deadline deadline \u003d new Deadline(\"training\", \"2020-09-03\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            ToDo toDo \u003d new ToDo(\"buy gifts\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            taskList.addTask(event);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            taskList.addTask(deadline);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            taskList.addTask(toDo);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            ArrayList\u003cTask\u003e expectedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            expectedTasks.add(new Event(\"team meeting\", \"2020-09-01\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            expectedTasks.add(new Deadline(\"training\", \"2020-09-03\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            expectedTasks.add(new ToDo(\"buy gifts\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            for(int i \u003d 0; i \u003c expectedTasks.size(); i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                Assert.assertEquals(tasks.get(i).toString(), expectedTasks.get(i).toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            System.out.println(\"Error occurred while testing\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public void taskListMakeDone_makeToDoDone_success() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            Event event \u003d new Event(\"team meeting\", \"2020-09-01\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            Deadline deadline \u003d new Deadline(\"training\", \"2020-09-03\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            ToDo toDo \u003d new ToDo(\"buy gifts\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            taskList.addTask(event);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            taskList.addTask(deadline);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            taskList.addTask(toDo);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            taskList.markDone(2);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            Assert.assertEquals(tasks.get(0).toString(), new Event(\"team meeting\", \"2020-09-01\").toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            Assert.assertEquals(tasks.get(2).toString(), \"[T][✓] buy gifts\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            System.out.println(\"Error occurred while testing\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rnmy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rnmy": 65
    }
  },
  {
    "path": "src/test/java/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rnmy"
        },
        "content": "import org.junit.Assert;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rnmy"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rnmy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rnmy"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rnmy"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rnmy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rnmy"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    private final PrintStream standardOut \u003d System.out;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        System.setOut(new PrintStream(outputStreamCaptor));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public void uiPrintMessage_customMessage_success() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        String expected \u003d \"Hi there. This is a custom message.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        Ui ui \u003d new Ui(\"Hi there. This is a custom message.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        ui.printMessage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        Assert.assertEquals(expected, outputStreamCaptor.toString().trim());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    public void uiPrintTasks_customTaskList_success() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            String expected \u003d \"____________________________________________________\\n\\n\" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    \"Here are the tasks in your list:\\n\" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    \"1.[T][✘] CS2103 iP\\n\" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    \"2.[D][✘] NOC Application (by: Aug 30 2020)\\n\" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    \"3.[E][✘] Suite Dinner (at: Sep 1 2020)\\n\\n\" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rnmy"
        },
        "content": "                    \"____________________________________________________\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            tasks.add(new ToDo(\"CS2103 iP\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            tasks.add(new Deadline(\"NOC Application\", \"2020-08-30\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            tasks.add(new Event(\"Suite Dinner\", \"2020-09-01\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            ui.printTasks(tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rnmy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            Assert.assertEquals(expected, outputStreamCaptor.toString().trim());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rnmy"
        },
        "content": "            System.out.println(\"Error occurred while testing\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rnmy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rnmy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rnmy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rnmy": 49
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rnmy"
        },
        "content": "blah"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rnmy"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rnmy"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rnmy"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rnmy"
        },
        "content": "deadline return book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rnmy"
        },
        "content": "deadline return book /by"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rnmy"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rnmy"
        },
        "content": "event"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rnmy"
        },
        "content": "event project meeting"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rnmy"
        },
        "content": "event project meeting /at"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rnmy"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rnmy"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rnmy"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rnmy"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rnmy"
        },
        "content": "done"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rnmy"
        },
        "content": "done a"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rnmy"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rnmy"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rnmy"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rnmy"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rnmy"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rnmy"
        },
        "content": "list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rnmy"
        },
        "content": "delete"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rnmy"
        },
        "content": "delete 100"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rnmy"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rnmy"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rnmy"
        },
        "content": "list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rnmy"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "rnmy": 28
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rnmy"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rnmy"
        },
        "content": "java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "rnmy": 2
    }
  }
]
