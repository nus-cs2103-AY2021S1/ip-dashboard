[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    implementation \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 42,
      "athuyaoo": 19
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": " * Deadlines are tasks that need to be done before a specific date/time e.g., submit report by 11/10/2019 5pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public Deadline(String name, String dateString) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        this(name, dateString, false);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    Deadline(String name, String dateString, boolean isCompleted) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        super(name, isCompleted);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        this.date \u003d LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Creates a deadline using a string command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @return a Deadline"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public static Deadline create(String description) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        String[] keywords \u003d description.split(\" /by \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        if (keywords.length \u003c 2) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Add a date using \\\" /by YYYY-MM-DD\\\".\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return new Deadline(keywords[0], keywords[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return \"D | \" + super.toSaveFormat() + \" | \" + date;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "athuyaoo": 43
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Creates a dialog box"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @param l label for dialog box"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @param iv image of dialog box"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        this.setPadding(new Insets(10, 0, 10, 0));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        this.setSpacing(20);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "athuyaoo": 54
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": " * Duke is a Personal Assistant bot that helps you to keep track of various tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Creates a duke application"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        String home \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        Path savePath \u003d Paths.get(home, \"data\", \"duke.txt\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        this.storage \u003d new Storage(savePath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        this.tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Starts duke"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        boolean isEnd \u003d false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        while (!isEnd) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                String command \u003d ui.readCommand();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                String[] commandBlocks \u003d Parser.parse(command);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                String response \u003d handleCommand(commandBlocks);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                ui.show(response);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                isEnd \u003d response.equals(ui.getByeMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            } catch (DukeException dukeException) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                ui.show(ui.getExceptionMessage(dukeException));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        });"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        });"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        });"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        });"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        Label dukeText \u003d new Label(ui.getWelcomeMessage());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        );"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        );"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        if (dukeText.getText().equals(ui.getByeMessage())) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    private String getResponse(String input) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            String[] commandBlocks \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            return handleCommand(commandBlocks);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        } catch (DukeException dukeException) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            return ui.getExceptionMessage(dukeException);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    private String handleCommand(String[] commands) throws DukeException {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        switch (commands[0]) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            Parser.checkValidAddCommand(commands);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            task \u003d tasks.addTask(new Todo(commands[1]));"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            return ui.getAddTaskMessage(task, tasks);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            Parser.checkValidAddCommand(commands);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            task \u003d tasks.addTask(Deadline.create(commands[1]));"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            return ui.getAddTaskMessage(task, tasks);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            Parser.checkValidAddCommand(commands);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            task \u003d tasks.addTask(Event.create(commands[1]));"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            return ui.getAddTaskMessage(task, tasks);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            return ui.getTaskList(tasks);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            task \u003d tasks.markTaskDone(commands);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            return ui.getTaskDoneMessage(task);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            task \u003d tasks.deleteTask(commands);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            return ui.getDeleteMessage(task, tasks);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            return ui.getByeMessage();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            String result \u003d tasks.getSearchResult(commands);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            return ui.getSearchResults(result);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "athuyaoo": 227
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": " * DukeException represents exceptions specific to Duke, which is used by Duke to handle errors"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    DukeException (String errorMessage) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "athuyaoo": 8
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": " * The Event class acts as a task that occurs on a specific day."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": " * It extends the parent class Task and has a LocalDate at to represent the specified date"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    Event(String name, String time) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        this(name, time, false);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    Event(String name, String time, boolean isCompleted) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        super(name, isCompleted);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Creates an event from the user command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @return a event with details from the user input"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public static Event create(String description) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        String[] keywords \u003d description.split(\" /at \", 2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        if (keywords.length \u003c 2) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            throw new DukeException(\"Add a time using \\\" /at \u003ctime\u003e\\\".\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return new Event(keywords[0], keywords[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return \"E | \" + super.toSaveFormat() + \" | \" + time;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "athuyaoo": 38
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "athuyaoo": 10
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": " * Parser class deals with making sense of the user command"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": " * It has functions that will help in parsing user commands"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Splits what the user types in to 2 parts"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @return a 2 sized String array that is related to a command"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public static String[] parse(String command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return command.split(\" \", 2);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Gets the task index of a task list using a command, something like \"{command} {number}\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @param commands"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @return a number related to the task list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public static int getTaskIndex(String[] commands, List\u003cTask\u003e taskList) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        if (commands.length \u003c 2) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            throw new DukeException(\"Please put a number to select a task for the \\\"\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                   + commands[0] + \"\\\" action!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            int index \u003d Integer.parseInt(commands[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            Task task \u003d taskList.get(index - 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            return index - 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            throw new DukeException(\"Please input an actual number e.g. 1, 2, 3.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        } catch (IndexOutOfBoundsException iobe) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            throw new DukeException(\"Please select a valid task.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Checks if the add command is valid, throws a duke exception if it is not"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @param commands"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public static void checkValidAddCommand(String[] commands) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        if (commands.length \u003c 2) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            throw new DukeException(\"The description of a \" + commands[0] + \" cannot be empty.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "athuyaoo": 50
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": " * The storage class is the class responsible for loading and saving the list of tasks into a file"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": " * It can load tasks from a file that is formatted correctly."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": " * And write a list of tasks to a file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    private Path savePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Creates a storage object with a savePath to load and save the file to"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @param savePath"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    Storage(Path savePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        this.savePath \u003d savePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Saves the TaskList to the object path"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public void save(TaskList taskList) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        File saveFile \u003d savePath.toFile();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            if (!saveFile.exists()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                saveFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                saveFile.createNewFile();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            FileWriter writer \u003d new FileWriter(saveFile);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            List\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                writer.append(task.toSaveFormat() + \"\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            System.out.println(\"Couldn\u0027t save to file :(\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Loads the Task List from the file savePath."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @return a task list with the tasks loaded from the file"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public List\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        if (!savePath.toFile().exists()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        try (Stream\u003cString\u003e stream \u003d Files.lines(savePath)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            stream.forEach((s -\u003e {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                String[] saveParts \u003d s.split(\" \\\\| \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                switch (saveParts[0]) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                    taskList.add(new Todo(saveParts[2], saveParts[1].equals(\"1\")));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                    taskList.add(new Deadline(saveParts[2], saveParts[3], saveParts[1].equals(\"1\")));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                    taskList.add(new Event(saveParts[2], saveParts[3], saveParts[1].equals(\"1\")));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            }));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "athuyaoo": 82
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": " * The Task class is the abstract class for deadline, event and todos."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": " * It has the task name, and can be marked as done."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    protected boolean isCompleted \u003d false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    protected Task (String name, boolean isCompleted) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        this.isCompleted \u003d isCompleted;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        isCompleted \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        String completionStatus \u003d isCompleted ? \"[\\u2713]\" : \"[\\u2718]\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return completionStatus + \" \" + name;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Converts a todo to a string format to be written into a file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @return string format to be written into a file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        String completionStatus \u003d isCompleted ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return completionStatus + \" | \" + name;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "athuyaoo": 35
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": " * TaskList contains the task list e.g., it has operations to add/delete tasks in the list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Returns search results that contain the search from commands"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @param commands"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @return string of search results"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public String getSearchResult(String[] commands) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        if (commands.length \u003c 2) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            throw new DukeException(\"Please give a search term!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        String searchTerm \u003d commands[1];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            Task currentTask \u003d tasks.get(i);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            if (currentTask.name.contains(searchTerm)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                stringBuilder.append((i + 1) + \".\" + currentTask.toString() + \u0027\\n\u0027);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        stringBuilder.setLength(stringBuilder.length() - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Returns the number of the tasks in the TaskList"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @return the size of the task list"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Adds a task to the task list"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @return the task that has been added to the task list"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public Task addTask(Task task) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Marks a task in the TaskList as done"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @param commands"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @return the task that has been marked as done"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public Task markTaskDone(String[] commands) throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        int index \u003d Parser.getTaskIndex(commands, tasks);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        task.markDone();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Deletes a task that is in the index specified by the command"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @param commands"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @return the deleted task"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public Task deleteTask(String[] commands) throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        int index \u003d Parser.getTaskIndex(commands, tasks);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        Task task \u003d tasks.remove(index);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Gets the tasks"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @return a List of Tasks"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            stringBuilder.append((i + 1) + \".\" + tasks.get(i) + \"\\n\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        stringBuilder.setLength(stringBuilder.length() - 1);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "athuyaoo": 94
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": " * Todo is a task without any date/time attached to it e.g., visit new theme park"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Creates a todo with the string name that has not been done"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    Todo(String name) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        this(name, false);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Creates a todo with the name and isCompleted"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @param isCompleted"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    Todo(String name, boolean isCompleted) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        super(name, isCompleted);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return \"T | \" + super.toSaveFormat();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "athuyaoo": 31
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": " * Ui class deals with interactions with the user"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    private static final String DIVIDER \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    private static final String LINE_SEPARATOR \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Creates a UI object with the standard system in and out as its input and output"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    Ui() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Creates a UI object with the specified input and output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @param in"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @param out"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    Ui(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Gets search results from taskList when searching the list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @param result"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @return a string of search results"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public String getSearchResults(String result) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        if (result.isBlank()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            return (\"No matching tasks, sorry\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            return \"Here are the matching tasks in your list:\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                    + (result);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Checks when to ignore a command line"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @param line"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @return returns true if line should be ignored, else false"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public boolean shouldIgnore(String line) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return line.trim().isEmpty();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Prints out the divider line"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        out.println(DIVIDER);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Prints out the input message, and asks for user input"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @return the user input"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        String commandLine \u003d in.nextLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        while (shouldIgnore(commandLine)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "            commandLine \u003d in.nextLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return commandLine;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Shows the welcome message"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        out.println(getWelcomeMessage());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Returns the welcome message"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @return the welcome message"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return \"Hello! I\u0027m Thuya\\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                + \"What may I do for you, sir/madam?\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Gets the message for a successfully deletion of a task"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @param task that was succesfully deleted"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @param taskList TaskList that task was deleted to"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @return message when task is successfully deleted"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public String getDeleteMessage(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return \"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                + \"Now you have \" + taskList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Gets the message when task is successfully"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @param task task that was successfully added"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @param taskList taskList that task was added to"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @return message that task is successfully added"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public String getAddTaskMessage(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                + \"Now you have \" + taskList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Generates the exit message when user is finished with the program"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @return the exit message"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public String getByeMessage() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return (\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Gets the exception message when duke encounters an error"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @param dukeException"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @return the exception message"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public String getExceptionMessage(DukeException dukeException) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return \"Oops Duke ran into an error: \" + dukeException.getMessage();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * gets the done task message"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @return message that task is done"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public String getTaskDoneMessage(Task task) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "                + task.toString();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Prints out the message."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @param message message to be printed out"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public void show(String message) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        out.println(message);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * Returns the list of tasks and related information that the user currently has"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     * @return list of task in string form"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public String getTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        return taskList.toString();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "athuyaoo": 159
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertArrayEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public void parseTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        assertArrayEquals(Parser.parse(\"todo finish cs2103t\"), new String[]{\"todo\", \"finish cs2103t\"});"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "athuyaoo": 10
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public void loadEmptyFile() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        Storage storage \u003d new Storage(Paths.get(System.getProperty(\"user.dir\")));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        assertEquals(storage.load().size(), 0);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "athuyaoo": 13
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    public void addTaskTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        tasks.addTask(new Todo(\"Test\", false));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "        assertEquals(tasks.toString(), \"1.[T][\\u2718] Test\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "athuyaoo": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "deadline return book /by 2020-09-03"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "blah"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "event project meeting at Mon 2-4pm"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "todo"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "deadline project"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "find book"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "find meeting"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "done one"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "delete one"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "delete"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "athuyaoo": 23
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "REM delete data afterwards"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "rmdir  /s /q \"data\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "athuyaoo": 5
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "athuyaoo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 34,
      "athuyaoo": 6
    }
  }
]
