[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.1\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    mainClassName \u003d \"duke.core.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    archiveBaseName \u003d \"dutchTaskManager\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 44,
      "tigerting98": 17
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "# Dutch Task Tracker"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "Dutch Task Tracker is a task tracking application (as the name implies). It was made for the iP part of CS2103 at NUS. "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "With this application, one can track different kinds of tasks and their deadlines. It was named after the character \"Dutch van der Linde\" from "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "the video game \"Red Dead Redemption 2\"."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "## User Guide"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "### Adding tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "There are 3 kinds of tasks that can be added. The command syntax is also shown below."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "1. Todo: todo **taskDescription**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "2. Events: event **taskDescription** /at **date** "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "3. Deadlines: deadline **taskDescription** /by **date**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "Take note that the **date** has to be in YYYY-MM-DD format."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "The application will then return a confirmation message if the task was added successfully, and an error message if some part of the command was wrong."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "### Listing tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "The syntax for listing all currently stored tasks: list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "The application will then list all currently stored tasks, as well as its index number."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "### Deleting tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "The syntax for deletion is as follows: delete **taskIndex**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "The **taskIndex** refers the number attached to the task when \"list\" is used."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "### Tagging tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "The syntax for tagging is as follows: tag **taskIndex** **tagDescription**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "The **taskIndex** refers the number attached to the task when \"list\" is used."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "The **tagDescription** should be a string with not spaces within."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "### Find tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "The syntax for searching is as follows: find **searchTerm**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "The application will then list all the tasks that contain the search term fully. For dates, the input has be in DD-MMM-YYYY format."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "The search is not case-sensitive."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "### Saving and exiting"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "The syntax for exiting is as follows: bye"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "This will save your current task list into a .txt file and exit the applicaiton."
      }
    ],
    "authorContributionMap": {
      "-": 12,
      "tigerting98": 32
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * Represents a command where a new task will be added to the TaskList during the usage of the Duke programme."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private Task taskToAdd;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Private constructor that assigns the task to be added to this AddCommand."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param task the task to be assigned to this AddCommand"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private AddCommand(Task task) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        taskToAdd \u003d task;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Public method to construct an AddCommand to add a Todo object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param description the description of the Todo object"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @return an AddCommand used to add a Todo object to the TaskList"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @see Todo"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public static AddCommand addTodo(String description) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return new AddCommand(new Todo(description));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Public method to construct an AddCommand to add an Event object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param description the description of the Event"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param date the date of the Event in the form of a LocalDate object"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @return an AddCommand used to add a Event object to the TaskList"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @see Event"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public static AddCommand addEvent(String description, LocalDate date) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return new AddCommand(new Event(description, date));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Public method to construct an AddCommand to add an Deadline object."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param description the description of the Deadline"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param date the date of the Deadline in the form of a LocalDate object"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @return an AddCommand used to add a Deadline object to the TaskList"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @see Deadline"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public static AddCommand addDeadline(String description, LocalDate date) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return new AddCommand(new Deadline(description, date));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Overridden abstract method used to add the Task stored in this AddCommand to the TaskList given."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * After adding the Task, the task information and total number of tasks will be printed."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param tasks the TaskList to add Task objects into"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param storage unused Storage object"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param ui unused Ui object"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String execute(TaskList tasks, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        tasks.addTask(taskToAdd);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return \"Alrighty, I\u0027ll put it on yer tab:\\n\" + taskToAdd.toString() + \"\\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                + \"You\u0027ve got a total of \" + tasks.size() + \" items right now.\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 74
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * A template class for different commands generated by the Parser during the usage of the Duke programme."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public abstract String execute(TaskList tasks, Storage storage, Ui ui);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 14
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * Represents a command where a task in the TaskList will be deleted during the usage of the Duke programme."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Public constructor"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param index the index of the Task in the TaskList that needs to be deleted."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Deletes the Task with the index specified within this DeleteCommand."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Prints out an error message if the index is out of bounds of the TaskList."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * After successful deletion, the deleted Task\u0027s information and total number of Tasks left is printed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param tasks the TaskList to delete the Task from"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param storage unused Storage object"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param ui unused Ui object"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String execute(TaskList tasks, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            if (index \u003e tasks.size()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                throw new DukeException(\"C\u0027mon pardner! That task doesn\u0027t exist cos you don\u0027t got so many!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            Task toBeRemoved \u003d tasks.get(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            tasks.deleteTask(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            return \"Alrighty, I\u0027m taking that one out:\\n\" + toBeRemoved.toString() + \"\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                    + \"You\u0027ve got a total of \" + tasks.size() + \" items right now.\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 46
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * Represents a command where a Task in the TaskList is marked as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Public constructor"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param index the index of the Task in the TaskList that is to be marked as done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Marks the Task with the index specified within this DoneCommand as done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * An error message is printed if the index is out of bounds of the TaskList."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * After successfully marking a task as done, the Task information is printed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param tasks the TaskList in which a Task is to be marked as done"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param storage unused Storage object"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param ui unused Ui object"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String execute(TaskList tasks, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            if (index \u003e tasks.size()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                throw new DukeException(\"C\u0027mon pardner! That task doesn\u0027t exist cos you don\u0027t go so many!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            Task toBeDone \u003d tasks.get(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            tasks.markAsDone(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            return \"Sure thing baws! This right here is marked as done!\\n\" + toBeDone.toString();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 45
    }
  },
  {
    "path": "src/main/java/duke/command/EmptyCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * Represents a Command where nothing needs to be done."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * Used when an invalid user input is detected and nothing is done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class EmptyCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String execute(TaskList tasks, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 16
    }
  },
  {
    "path": "src/main/java/duke/command/EndCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * Represents a Command to terminate the Duke programme."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class EndCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Deactivates the given Ui object to signal the termination of the Duke programme."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param tasks unused TaskList object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param storage unused Storage object"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param ui Ui object to be deactivated."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @see duke.core.Duke"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String execute (TaskList tasks, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        ui.setInactive();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        storage.saveData(tasks.exportTaskList());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return \"Well I\u0027ll see you around, pardner!!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 25
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private String searchTerm;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public FindCommand(String searchTerm) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        this.searchTerm \u003d searchTerm.toLowerCase();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String execute(TaskList tasks, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        StringBuffer buffer \u003d new StringBuffer();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        buffer.append(\"Lemme look through them records real lickity-split!\\n\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        buffer.append(tasks.listSearch(searchTerm));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return buffer.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 22
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * Represents a Command where the Tasks in the TaskList are printed out sequentially during the usage"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * of the Duke programme."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Prints out all the Tasks in a given TaskList in order."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param tasks the TaskList with Tasks to be printed out"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param storage unused Storage object"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param ui unused Ui object"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String execute(TaskList tasks, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        StringBuffer buffer \u003d new StringBuffer();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        buffer.append(\"Here\u0027s yer current list of thingymajigs\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        buffer.append(tasks.list());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return buffer.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 27
    }
  },
  {
    "path": "src/main/java/duke/command/TagCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.task.Tag;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class TagCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private Tag tag;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public TagCommand(int index, Tag tag) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String execute(TaskList tasks, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        Task toBeTagged \u003d tasks.get(index);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        toBeTagged.addTag(tag);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return \"I\u0027ve tagged this task with \" + tag.toString() + \"!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 25
    }
  },
  {
    "path": "src/main/java/duke/core/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private Text dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        DialogBox box \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        box.setStyle(\"-fx-background-color : #ffe4e1\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return box;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        db.setStyle(\"-fx-background-color : #c0d6e4\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 64
    }
  },
  {
    "path": "src/main/java/duke/core/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.command.EndCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * The Duke programme implements an application that works as task tracker productivity tool."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * It can track things to do, deadlines and events as well as their status - done or not yet done."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * Users input text commands, and the programme will parse it and generate an appropriate response."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * The programme terminates after the Ui object within is deactivated"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * @see Ui"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private static final String PROJECT_ROOT \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private static final String DEFAULT_FILE_PATH \u003d PROJECT_ROOT + File.separator + \"data\" + File.separator + \"saveData.txt\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private static final String DEFAULT_DIRECTORY \u003d PROJECT_ROOT + File.separator + \"data\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Public constructor to create a Duke object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Required for JavaFX to instantiate the object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                              + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                              + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                              + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                              + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        System.out.println(\"Howdy pardner!! I\u0027m\\n\" + logo);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        System.out.println(\"What can I get yer for?\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        storage \u003d new Storage(DEFAULT_FILE_PATH, DEFAULT_DIRECTORY);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        taskList.loadTasks(storage.loadData());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            Command command \u003d parser.parse(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            String reply \u003d command.execute(taskList, storage, ui);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            if (command instanceof EndCommand) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                Platform.exit();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 7,
      "tigerting98": 57
    }
  },
  {
    "path": "src/main/java/duke/core/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        assert Main.class !\u003d null;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 10
    }
  },
  {
    "path": "src/main/java/duke/core/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            stage.setTitle(\"Dutch Task Tracker\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            DialogBox box \u003d DialogBox.getDukeDialog(\"Hello\", dukeImage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 36
    }
  },
  {
    "path": "src/main/java/duke/core/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/arthur.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/dutch.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        String introMessage \u003d \"Howdy pardner, the name\u0027s Dutch! What can I get yer for?\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        DialogBox box \u003d DialogBox.getDukeDialog(introMessage, dukeImage);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        dialogContainer.getChildren().add(box);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        assert userImage !\u003d null : dukeImage !\u003d null;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 56
    }
  },
  {
    "path": "src/main/java/duke/core/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.command.EmptyCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.command.EndCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.command.TagCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.task.Tag;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * An object used to parse user input given during the usage of the Duke programme."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Returns an appropriate Command object that corresponds to the textToParse."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * If the format of the textToParse is invalid, an appropriate error message will be printed and the user can"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * try again."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param textToParse a String that represents the user input that is given by the Ui object"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @return an appropriate command based on the first word of the textToParse"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @see Ui"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @see Command"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public Command parse(String textToParse) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        String[] inputArray \u003d textToParse.split(\" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        String firstWord \u003d inputArray[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        Command command \u003d new EmptyCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        if (firstWord.toLowerCase().equals(\"bye\")) { // for termination"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            command \u003d new EndCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        } else if (firstWord.toLowerCase().equals(\"list\")) { // to display list of tasks"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            command \u003d new ListCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        } else if (firstWord.toLowerCase().equals(\"done\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            command \u003d parseDone(inputArray);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        } else if (firstWord.toLowerCase().equals(\"delete\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            command \u003d parseDelete(inputArray);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        } else if (firstWord.toLowerCase().equals(\"find\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            command \u003d parseFind(inputArray);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        } else if (firstWord.toLowerCase().equals(\"tag\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            command \u003d parseAddTag(inputArray);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            switch (firstWord.toLowerCase()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                command \u003d parseAddTodo(inputArray);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                String[] eventSplit \u003d textToParse.split(\"/at\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                command \u003d parseAddEvent(inputArray, eventSplit);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                String[] deadlineSplit \u003d textToParse.split(\"/by\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                command \u003d parseAddDeadline(inputArray, deadlineSplit);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                throw new DukeException(\"Sorry, I didn\u0027t quite catch that!\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        assert command !\u003d null;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private Command parseAddTag(String[] inputArray) throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        if (inputArray.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            throw new DukeException(\"Which task do you want tagged?\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        if (inputArray.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            throw new DukeException(\"You\u0027re missing either the description for your tag or the task number!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            int index \u003d Integer.parseInt(inputArray[1]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            Tag tag \u003d new Tag(inputArray[2]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            return new TagCommand(index - 1, tag);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            throw new DukeException(\"You gotta give me the task index before the tag description!\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private Command parseDelete(String[] inputArray) throws DukeException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        if (inputArray.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            throw new DukeException(\"Sorry, which item did you want me to strike off again?\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            int index \u003d Integer.parseInt(inputArray[1]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            return new DeleteCommand(index - 1);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            throw new DukeException(\"I need a number not a word in this case. \""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                                            + \"Could ya pass that by me one more time?\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private Command parseFind(String[] inputArray) throws DukeException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        if (inputArray.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            throw new DukeException(\"Sorry, \" + \"didn\u0027t quite catch what you wanted to find!\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        String searchTerm \u003d stringCombiner(inputArray, 1, inputArray.length - 1).trim();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return new FindCommand(searchTerm);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private Command parseDone(String[] inputArray) throws DukeException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        if (inputArray.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            throw new DukeException(\"Sorry, which item did you want me to mark as done again?\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        int index \u003d Integer.parseInt(inputArray[1]);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return new DoneCommand(index - 1);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private Command parseAddTodo(String[] inputArray) throws DukeException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        if (inputArray.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            throw new DukeException(\"Sorry, but I can\u0027t do anything \""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                                            + \"if you don\u0027t give me the description of your todo!\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        String desc \u003d stringCombiner(inputArray, 1, inputArray.length - 1);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return AddCommand.addTodo(desc.trim());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private Command parseAddEvent(String[] inputArray, String[] eventSplit) throws DukeException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        int dateKeywordIndex \u003d indexFinder(inputArray, \"/at\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        if (dateKeywordIndex \u003d\u003d 0) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            throw new DukeException(\"Think you forgot the /at keyword, pardner!\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        if (dateKeywordIndex \u003d\u003d 1) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            throw new DukeException(\"I\u0027m gonna need a description for this here event!\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        if (eventSplit.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            throw new DukeException(\"I\u0027m gonna need a date or time for this!\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(eventSplit[1].trim());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            return AddCommand.addEvent(stringCombiner(inputArray, 1, dateKeywordIndex - 1).trim(), date);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            throw new DukeException(\"Can\u0027t seem to make out this date over here\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private Command parseAddDeadline(String[] inputArray, String[] deadlineSplit) throws DukeException {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        int dateKeywordIndex \u003d indexFinder(inputArray, \"/by\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        if (dateKeywordIndex \u003d\u003d 0) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            throw new DukeException(\"Think you forgot the /by keyword, pardner!\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        if (dateKeywordIndex \u003d\u003d 1) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            throw new DukeException(\"I\u0027m gonna need a description for this here deadline!\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        if (deadlineSplit.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            throw new DukeException(\"I\u0027m gonna need a date or time for this!\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(deadlineSplit[1].trim());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            return AddCommand.addDeadline(stringCombiner(inputArray, 1, dateKeywordIndex - 1).trim(), date);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            throw new DukeException(\"Can\u0027t seem to make out this date over here\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private static String stringCombiner(String[] arr, int start, int end) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        StringBuffer str \u003d new StringBuffer();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        for (int i \u003d start; i \u003c\u003d end; i++) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            str.append(arr[i] + \" \");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return str.toString();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private static int indexFinder(String[] arr, String exp) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        for (int i \u003d 0; i \u003c arr.length; i++) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            if (arr[i].equals(exp)) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                assert i \u003e\u003d index;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                index \u003d i;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 182
    }
  },
  {
    "path": "src/main/java/duke/core/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.task.Tag;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * An object used to load and save the user\u0027s task list during startup and termination of the Duke programme."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private File saveData;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private String dirPath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Public constructor to create a Storage object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param filePath the path to the saveData.txt file that stores the user\u0027s past task list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param dirPath the path to the folder where the saveData.txt is found"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public Storage(String filePath, String dirPath) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        this.dirPath \u003d dirPath;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Loads old task list data if it exists, and creates the necessary directories and file if it does not exist."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * The path and name of the save data file to find or create depends on the file path and directory path"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * specified in the construction of this Storage object."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * If any line in the save data is in an incorrect format"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * the data will not be loaded and an error message will be displayed."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @return an ArrayList of Task objects that is used"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public ArrayList\u003cTask\u003e loadData() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        saveData \u003d new File(filePath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        boolean dirExists \u003d new File(dirPath).exists();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        if (!dirExists) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            new File(dirPath).mkdirs();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        // checking if the save file is already there"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            boolean fileCreated \u003d saveData.createNewFile();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            if (fileCreated) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                System.out.println(\"Haven\u0027t seen a new face around \u0027ere for awhile, have a seat!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                System.out.println(\"A regular! The usual, I presume?\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        + \"I\u0027ve still got your order history, care to take a look?\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                Scanner saveReader \u003d new Scanner(saveData);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                while (saveReader.hasNextLine()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        String saveEntry \u003d saveReader.nextLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        readTask(saveEntry, tasks);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                    } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        System.out.println(\"Looks like some of your records got messed up! Sorry \u0027bout that!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            System.out.println(exception);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private void readTask(String saveEntry, ArrayList\u003cTask\u003e tasks) throws DateTimeParseException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        String[] keywords \u003d saveEntry.split(\":\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        String[] tags \u003d saveEntry.split(\"tags \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        Task savedTask \u003d null;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        switch (keywords[0]) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            savedTask \u003d new Todo(keywords[2]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            savedTask \u003d new Deadline(keywords[2], LocalDate.parse(keywords[3]));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            savedTask \u003d new Event(keywords[2], LocalDate.parse(keywords[3]));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        if (savedTask !\u003d null) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            if (tags.length \u003e 1) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                String[] individualTags \u003d tags[1].split(\"#\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                for (int i \u003d 1; i \u003c individualTags.length; i++) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                    Tag toBeAdded \u003d new Tag(individualTags[i].trim());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                    savedTask.addTag(toBeAdded);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            if (keywords[1].equals(\"y\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                savedTask.markAsDone();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            tasks.add(savedTask);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Saves the current task list data onto a text file in the path specified during the construction"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * of the Storage object."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param taskList an ArrayList of Task objects that become saved as text in a text file"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @see Task"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void saveData(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        BufferedWriter saveWriter \u003d null;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            saveWriter \u003d new BufferedWriter(new FileWriter(saveData));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            StringBuffer saveContentBuffer \u003d new StringBuffer();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                saveContentBuffer.append(task.createSaveDataLine() + \"\\n\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            String saveContent \u003d saveContentBuffer.toString();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            saveWriter.write(saveContent);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            System.out.println(exception);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                if (saveWriter !\u003d null) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                    saveWriter.close();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 142
    }
  },
  {
    "path": "src/main/java/duke/core/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * Encapsulates an ArrayList of Task objects and handles the tracking of tasks during the usage of the"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * Duke programme."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * No-argument method that returns out the current tasks in this TaskList sequentially as a String."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @return a string including newline characters that depict the tasks in this TaskList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String list() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        StringBuffer buffer \u003d new StringBuffer();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            buffer.append(i + 1 + \". \" + task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return buffer.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Searches the TaskList for all tasks with descriptions containing the search term and prints them out in order."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param searchTerm the string to be searched for within all the task descriptions"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String listSearch(String searchTerm) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        StringBuffer buffer \u003d new StringBuffer();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            if (task.toString().toLowerCase().contains(searchTerm.trim().toLowerCase())) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                buffer.append(i + 1 + \". \" + task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return buffer.toString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return tasks.get(i);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * No-argument method that returns the ArrayList of Task objects in this TaskList."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * This is used by a Storage object to save the task list during the termination of the Duke programme."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @return the ArrayList of Task objects in this TaskList"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @see Storage"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public ArrayList\u003cTask\u003e exportTaskList() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * This method is used to add tasks from an ArrayList of Task objects created by the Storage object"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * when it reads from saveData.txt to this TaskList object."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param savedTasks an ArrayList of Task objects to be added to this TaskList object\u0027s ArrayList"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @see Storage"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void loadTasks(ArrayList\u003cTask\u003e savedTasks) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        if (!savedTasks.isEmpty()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            tasks.addAll(savedTasks);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        assert tasks.size() \u003e 0;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void markAsDone(int index) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 91
    }
  },
  {
    "path": "src/main/java/duke/core/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * An object used to receive User input during the usage of the Duke programme."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private boolean active;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private Scanner userInput;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Public no-argument constructor for Ui."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Initializes the Ui object to be active and assigns a scanner to"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * receive user input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        active \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        userInput \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * No-argument method to check the status of this Ui object"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @return a boolean value indicating the status (active or inactive) of this Ui object"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public boolean isActive() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return active;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * No-argument method for this Ui object to receive user input."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @return a string that represents the user input"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String receiveInput() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        String input \u003d userInput.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * No-argument method to deactivate this Ui object."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * This is used to terminate the Duke programme."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @see Duke"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void setInactive() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        active \u003d false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 48
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return this.getMessage();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 13
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public Deadline(String description, LocalDate deadline) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        super(description, deadline);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String createSaveDataLine() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return \"D:\" + getStatusLetter() + \":\" + description + \":\" + getSaveDate() + \":\" + \"tags \" + listTags();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + getDate() + \") \" + listTags();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 21
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public Event(String description, LocalDate time) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        super(description, time);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String createSaveDataLine() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return \"E:\" + getStatusLetter() + \":\" + description + \":\" + getSaveDate() + \":\" + \"tags \" + listTags();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + getDate() + \") \" + listTags();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 21
    }
  },
  {
    "path": "src/main/java/duke/task/Tag.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class Tag {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public Tag(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public boolean equals(Tag otherTag) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return description \u003d\u003d otherTag.getDescription();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return \"#\" + description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 24
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    protected ArrayList\u003cTag\u003e tags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    protected Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    protected Task(String description, LocalDate date) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        if (date !\u003d null) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            return date.format(DateTimeFormatter.ofPattern(\"dd MMM uuuu\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String getSaveDate() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        if (date !\u003d null) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            return date.format(DateTimeFormatter.ISO_LOCAL_DATE);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return (isDone ? \"O\" : \"X\"); //return tick or X symbols"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String getStatusLetter() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return (isDone ? \"y\" : \"n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void addTag(String tagDescription) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        tags.add(new Tag(tagDescription));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void addTag(Tag tag) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        tags.add(tag);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String listTags() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        StringBuffer tagsBuffer \u003d new StringBuffer();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        for (int i \u003d 0; i \u003c tags.size(); i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            tagsBuffer.append(tags.get(i).toString() + \" \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return tagsBuffer.toString().trim();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public abstract String createSaveDataLine();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description + \" \" + listTags();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 78
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String createSaveDataLine() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return \"T:\" + getStatusLetter() + \":\" + description + \":\" + \"tags \" + listTags();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 18
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "\u003c?import javafx.scene.effect.Bloom?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        \u003cText fx:id\u003d\"dialog\" lineSpacing\u003d\"0.2\" stroke\u003d\"BLACK\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Text\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "         \u003ceffect\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            \u003cBloom /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "         \u003c/effect\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            \u003cInsets top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/Text\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"78.0\" fitWidth\u003d\"73.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            \u003cInsets right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "   \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "      \u003cInsets bottom\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "   \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 29
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.core.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"321.0\" promptText\u003d\"Type your commands here!\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            \u003cFont name\u003d\"Arial\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "         \u003c/font\u003e\u003c/TextField\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"321.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 23
    }
  },
  {
    "path": "src/test/java/duke/core/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.command.EmptyCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.command.EndCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private Parser p \u003d new Parser();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void byeTest() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        assertTrue(p.parse(\"bye\").getClass() \u003d\u003d EndCommand.class);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void listTest() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        assertTrue(p.parse(\"list\").getClass() \u003d\u003d ListCommand.class);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void doneTest() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        assertTrue(p.parse(\"done 1\").getClass() \u003d\u003d DoneCommand.class);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void invalidDoneTest() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        assertTrue(p.parse(\"done\").getClass() \u003d\u003d EmptyCommand.class);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 37
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private Event testEvent \u003d new Event(\"buy cake\", LocalDate.parse(\"2009-11-27\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void descriptionTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        assertEquals(testEvent.description, \"buy cake\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void toStringTest() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        assertEquals(testEvent.toString(), \"[E][✘] buy cake (at:27 Nov 2009)\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 21
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "todo buy milk"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "todo buy fish"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "deadline cs2103 assignment /by 20th August"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "event QR lecture /at 20th August 2pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "bleh"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "tigerting98": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "tigerting98": 4
    }
  }
]
