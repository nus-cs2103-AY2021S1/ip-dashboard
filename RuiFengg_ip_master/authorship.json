[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    private void userInput(TaskList taskList) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            Output output \u003d new Output();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                output.response(input, taskList);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            if (input.equals(\"bye\")) break;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    private void printWelcomeMessage() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        String welcome \u003d \"_____________________________________\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                + \"Hello! I\u0027m Ray\\n\" + \"Please input a command\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                + \"_____________________________________\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        System.out.println(welcome);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        TaskList todoList \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        printWelcomeMessage();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        userInput(todoList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        new Duke().start();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 34,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Output.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import exceptions.InvalidDescriptionException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import exceptions.InvalidTaskIndexException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import exceptions.MissingTimingException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "public class Output {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    void response(String s, TaskList taskList) throws InvalidCommandException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        if (s.equals(\"bye\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } else if (s.isEmpty()) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            System.out.println(\"Please enter a command\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } else if (s.equals(\"list\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            taskList.listAllTasks();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } else if (s.length() \u003e\u003d 4 \u0026\u0026 s.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                doneResponse(taskList, s);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            } catch (InvalidTaskIndexException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } else if (s.length() \u003e\u003d 4 \u0026\u0026 s.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            todoResponse(taskList, s);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } else if (s.length() \u003e\u003d 8 \u0026\u0026 s.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            deadlineResponse(taskList, s);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } else if (s.length() \u003e\u003d 5 \u0026\u0026 s.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            eventResponse(taskList, s);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } else if (s.length() \u003e\u003d 6 \u0026\u0026 s.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                deleteTask(taskList, s);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            } catch (InvalidTaskIndexException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            throw new InvalidCommandException(\"Please enter a valid command for me!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void doneResponse(TaskList taskList, String command) throws InvalidTaskIndexException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        int numTodos \u003d taskList.list.size();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        if (command.length() \u003c\u003d 5) throw new InvalidTaskIndexException(\"Please include the index of the task!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            int todoIndex \u003d Integer.parseInt(command.substring(5, 6));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            if (todoIndex \u003c\u003d numTodos \u0026\u0026 todoIndex \u003e 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                Task selectedTodo \u003d taskList.getTask(todoIndex);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                selectedTodo.setDone();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\\n \" + selectedTodo);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                throw new InvalidTaskIndexException(\"Oh no! Task number does not exist in task list.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            System.out.print(\"Please enter the index of the task you want to remove!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void todoResponse(TaskList taskList, String command) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            Todo todo \u003d new Todo(command.substring(4));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            taskList.add(todo);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\\n \" + todo + \"\\nNow you have \""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                    + taskList.list.size() + \" in the list\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } catch (InvalidDescriptionException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void deadlineResponse(TaskList taskList, String command) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            Deadline deadline \u003d new Deadline(command.substring(8));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            taskList.add(deadline);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                    deadline + \"\\nNow you have \" + taskList.list.size() + \" in the list\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } catch (MissingTimingException | InvalidDescriptionException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void eventResponse(TaskList taskList, String command) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            Event event \u003d new Event(command.substring(5));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            taskList.add(event);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                    event + \"\\nNow you have \" + taskList.list.size() + \" in the list\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } catch (MissingTimingException | InvalidDescriptionException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void deleteTask(TaskList taskList, String command) throws InvalidTaskIndexException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        int numTodos \u003d taskList.list.size();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        if (command.length() \u003c\u003d 7 ) throw new InvalidTaskIndexException(\"Please include the index of the task!\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            int todoIndex \u003d Integer.parseInt(command.substring(7, 8));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            if (todoIndex \u003c\u003d numTodos \u0026\u0026 todoIndex \u003e 0) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                Task selectedTodo \u003d taskList.deleteTask(todoIndex);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task:\\n \" + selectedTodo"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                        + \"\\nNow you have \" + taskList.list.size() + \" in the list.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                throw new InvalidTaskIndexException(\"Oh no! Task number does not exist in task list.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            System.out.println(\"Please enter the index of the task you want to remove!\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 111
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        this.list.add(task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return this.list.get(index - 1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public Task deleteTask(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return this.list.remove(index - 1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void listAllTasks() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        this.list.forEach(task -\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            String index \u003d String.valueOf(this.list.indexOf(task) + 1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            System.out.println(index + \". \" + task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        });"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 32
    }
  },
  {
    "path": "src/main/java/exceptions/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 7
    }
  },
  {
    "path": "src/main/java/exceptions/InvalidDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "public class InvalidDescriptionException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public InvalidDescriptionException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 7
    }
  },
  {
    "path": "src/main/java/exceptions/InvalidTaskIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "public class InvalidTaskIndexException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public InvalidTaskIndexException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 7
    }
  },
  {
    "path": "src/main/java/exceptions/MissingTimingException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "public class MissingTimingException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public MissingTimingException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 7
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import exceptions.InvalidDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import exceptions.MissingTimingException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public Deadline(String s) throws MissingTimingException, InvalidDescriptionException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        if (s.isBlank()) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            throw new InvalidDescriptionException(\"Please add a description for your deadline!\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } else if (!s.contains(\"/\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            throw new MissingTimingException(\"Don\u0027t forget to add a timing for your deadline!\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return \"[D]\" + super.toString().replace(\"/by\", \"(by:\") + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 20
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import exceptions.InvalidDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import exceptions.MissingTimingException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public Event(String s) throws MissingTimingException, InvalidDescriptionException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        if (s.isBlank()) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            throw new InvalidDescriptionException(\"Please add a description for your event!\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } else if (!s.contains(\"/\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            throw new MissingTimingException(\"Don\u0027t forget to add a timing for your event!\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return \"[E]\" + super.toString().replace(\"/at\", \"(at:\") + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 21
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public Task(String s) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        this.description \u003d s;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        this.isDone \u003d !isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        String checked \u003d (isDone ? \"[\\u2713]\" : \"[\\u2718]\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return checked + \" \" + description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 20
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import exceptions.InvalidDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public Todo(String s) throws InvalidDescriptionException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        if (s.isBlank()) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            throw new InvalidDescriptionException(\"Please add a nice description to your todo :)\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 17
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "event project meeting /at Monday 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 3,
      "-": 19
    }
  }
]
