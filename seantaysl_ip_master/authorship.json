[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.1\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 17,
      "-": 44
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "# DUKE"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "Duke bot is a **desktop app for managing tasks, optimized for use via a "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "If you can type fast, AB3 can get your contact management tasks done faster than traditional GUI apps."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "* [Quick Start](https://github.com/seantaysl/ip#quick-start)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "* [Features](https://github.com/seantaysl/ip#features)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    * [Viewing help: `help`](https://github.com/seantaysl/ip#help---shows-list-of-commands)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    * [Listing tasks: `list`](https://github.com/seantaysl/ip#list---lists-all-tasks)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    * [Finding tasks: `find`](https://github.com/seantaysl/ip#find---searches-through-all-tasks)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    * [Adding Todo task: `todo`](https://github.com/seantaysl/ip#todo---add-new-todo-task)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    * [Adding Deadline task: `deadline`](https://github.com/seantaysl/ip#deadline---add-new-deadline-task)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    * [Adding Event task: `event`](https://github.com/seantaysl/ip#event---add-new-event-task)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    * [Deleting task: `delete`](https://github.com/seantaysl/ip#delete---delete-selected-task-from-list)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    * [Updating task: `update`](https://github.com/seantaysl/ip#update---update-selected-task-in-list)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    * [Exiting bot: `bye`](https://github.com/seantaysl/ip#bye---shuts-down-duke-bot)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "1. Ensure you have java 11 or above installed in your Computer."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "2. Download the latest duke.jar from [here](https://github.com/seantaysl/ip/releases/tag/A-Release)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "3. Copy the file to the folder you want to use as the _home folder_ "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    for your Duke bot."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "4. Double-click the file to start the app. The GUI similar to the one"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    shown below should appear in a few seconds. The example below contains"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    some sample data."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    ![Image of Ui](https://github.com/seantaysl/ip/blob/master/docs/Ui.png)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "5. Type the command in the command box and press Enter to execute it."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "\u003cbr/\u003e Some example commands are listed below:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    * `list`: Lists all tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    * `help`: Shows list of commands."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    * `delete 2`: Deletes the 2nd task shown in the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    * `bye`: Exits the app."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "6. Refer to the [Features](https://github.com/seantaysl/ip#features) below for details of each command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "**Notes on the command format**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "* Words in square brackets are parameters to be supplied by the user."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "\u003cbr/\u003e eg. `todo [taskname]`, `[taskname]` is a parameter which can be used as `todo borrow book`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "* items in single inverted commas should be entered as it is."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "\u003cbr/\u003e eg. `update [index] [\u0027name\u0027 or \u0027time\u0027] [input]`, `[\u0027name\u0027 or \u0027time\u0027]` is a parameter which"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "which can be used as `update 1 name udpatedName`"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "### `help` - Shows list of commands"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "Shows a list of commands that can be used."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "Example of usage: `help`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "### `list` - Lists all tasks"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "Generates a list of current tasks."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "Example of usage: `list`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "### `find` - Searches through all tasks"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "Lists all tasks that contain input keyword."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "Format: `find [keyword]` "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "Example of usage: `find book`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "### `todo` - Add new todo task"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "Creates a new todo task and adds it to the current list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "Format: `todo [taskname]` "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "Example of usage: `todo borrow book`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "### `deadline` - Add new deadline task"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "Creates a new deadline task and adds it to the current list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "Format: `deadline [taskname] /by [yyyy-MM-dd HHmm]` "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "Example of usage: `deadline return book /by 2020-10-10 1800`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "### `event` - Add new event task"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "Creates a new event task and adds it to the current list."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "Format: `event [taskname] /at [yyyy-MM-dd HHmm]` "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "Example of usage: `event borrow book /by 2020-10-01 1800`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "### `delete` - Delete selected task from list"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "Deletes task at given index."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "Format: `delete [index or \u0027all\u0027]` "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "1. `delete 1`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "2. `delete all`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "### `update` - Update selected task in list"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "Updates name or time for task at given index."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "Format: `update [index] [\u0027name\u0027 or \u0027time\u0027] [input]` "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "1. `update 1 name udpatedName`"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "2. `update 1 time 2020-10-10 1500`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "### `bye` - Exits Duke bot"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "Shuts down Duke bot and closes the window."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "Example of usage: `bye`"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 111,
      "-": 13
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " * Represents a Deadline task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private final String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Constructor for Deadline task object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param name The name of task to be done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param by The due date of the task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public Deadline(String name, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Overloaded constructor for Deadline task object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param name The name of task to be done"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param done The boolean for task completion status"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param by The due date of the task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public Deadline(String name, boolean done, String by) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        super(name, done);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Getter method for attribute by."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return The attribute by of Deadline object"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Setter method for setting done attribute to given input."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return New Deadline task with same parameters but attribute done changed to given input"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public Deadline setDone() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return new Deadline(this.getName(), true, this.by);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Updates the time of current deadline task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param time New updated time"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return Deadline task with updated time"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public Deadline updateTime(String time) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return new Deadline(super.name, super.done, time);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Updates name of current Deadline Task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param name New update name"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return Deadline task with new name"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public Deadline updateName(String name) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return new Deadline(name, super.done, getBy());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Returns the Deadline object string."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return The Deadline object string name"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 73
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private Text dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private Label displayName;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private Circle clip \u003d new Circle(30, 30, 30);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private DialogBox(String text, Image img, String name) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        displayName.setText(name);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        displayPicture.setClip(clip);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return new DialogBox(text, img, \"User\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        var db \u003d new DialogBox(text, img, \"Duke\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 70
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " * Represents the Duke bot."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Creates a Duke bot."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        this.storage \u003d new Storage(taskList, \"duke\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public TaskList getTaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public Storage getStorage() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return storage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return Parser.parse(taskList, storage, input);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 23,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " * Exceptions class for Duke Bot related errors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Constructor for Duke Exception."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param message The message of the exception"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 12
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " * Represents an Event task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private final String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Constructor for Event task object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param name The name of event to attend"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param at The due date of the task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public Event(String name, String at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Overloaded constructor for Event task object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param name The name of task to be done"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param done The boolean for task completion status"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param at The event date"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public Event(String name, boolean done, String at) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        super(name, done);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Getter method for attribute at."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return The attribute at of Event object"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Setter method for setting done attribute to given input."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return New Event task with same parameters but attribute done changed to given input"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public Event setDone() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return new Event(this.getName(), true, this.at);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Updates the time of current Event task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param time New updated time"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return Event task with updated time"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public Event updateTime(String time) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return new Event(super.name, super.done, time);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Updates name of current Event Task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param name New update name"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return Event task with new name"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public Event updateName(String name) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return new Event(name, super.done, getAt());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Returns the Event object string."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return The Event object string name"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 73
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 7
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            stage.setTitle(\"Duke Bot\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import javafx.animation.PauseTransition;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Initializes methods when launching GUI"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        Region spacer \u003d new Region();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        spacer.setMinHeight(20);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        String text \u003d ui.startUp(duke.getTaskList(), duke.getStorage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(text, dukeImage), spacer);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        Region spacer \u003d new Region();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        spacer.setMinHeight(20);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        Region spacer2 \u003d new Region();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        spacer2.setMinHeight(20);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                spacer,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                spacer2"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        );"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        if (Parser.checkBye(input)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            Node source \u003d userInput.getParent();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            Stage stage \u003d (Stage) source.getScene().getWindow();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            PauseTransition delay \u003d new PauseTransition(Duration.seconds(0));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            delay.setOnFinished(event -\u003e stage.close());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            delay.play();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 78
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " * Represents the user input Parser handler."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private static final Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Processes the user input date and returns it in the correct format."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param s The user input date"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return The formatted date for use."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public static String parseDateTime(String s) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd MMM yyyy h:mma\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        SimpleDateFormat parser \u003d new SimpleDateFormat(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd MMM yyyy\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        SimpleDateFormat dateParser \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            if (s.contains(\" \")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                return formatter.format((parser.parse(s)));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                return dateFormatter.format(dateParser.parse(s));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            return \"Please input the time and date in\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                + dateParser.toPattern() + \" or \" + parser.toPattern() + \"\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public static boolean checkBye(String s) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return s.equals(\"bye\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public static boolean checkList(String s) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return s.equals(\"list\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private static boolean checkFind(String s) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return s.equals(\"find\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public static boolean checkDone(String s) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return s.equals(\"done\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public static boolean checkDel(String s) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return s.equals(\"delete\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private static boolean checkHelp(String s) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return s.equals(\"help\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private static boolean checkUpdate(String s) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return s.equals(\"update\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Parses the user input and calls the appropriate functions."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param taskList The list of tasks handler"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param storage The storage call handler"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param text The user input"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return String for command executed"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public static String parse(TaskList taskList, Storage storage, String text) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        if (text.contains(\" \")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            int i \u003d text.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            String test \u003d text.substring(0, i).toLowerCase();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            String next \u003d text.substring(i + 1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            if (checkFind(test)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                return taskList.findTask(next);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            } else if (checkUpdate(test)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    output \u003d taskList.updateTask(next);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    storage.updateFile();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    return output;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    return e.getMessage();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            } else if (checkDone(test)) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    output \u003d taskList.doneTask(next);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    storage.updateFile();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    return output;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    return e.getMessage();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            } else if (checkDel(test)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    output \u003d taskList.delTask(next);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    storage.updateFile();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    return output;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    return e.getMessage();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    output \u003d taskList.addTask(test, next);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    storage.updateFile();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    return output;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    return e.getMessage();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            if (checkBye(text.toLowerCase())) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                return ui.exitLine();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            } else if (checkList(text)) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                return taskList.displayList();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            } else if (checkHelp(text.toLowerCase())) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                return ui.helpLine();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                return ui.unknownInputLine();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 121
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " * Represents the Storage handler for the bot."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private final String pathname;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private final File file;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Constructor for class Storage."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param taskList The task list of the bot"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param name The name of the text file used to store the save data"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public Storage(TaskList taskList, String name) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        pathname \u003d Storage.getStoragePath(name);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        file \u003d new File(pathname);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Checks and makes save file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public void createOrLoadFile() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            File f \u003d new File(pathname);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            f.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            if (!f.createNewFile()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                loadFile();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            System.out.println(\"Something went wrong! Backup could not be made.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Saves current task list state to save file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public void saveFile() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            List\u003cTask\u003e storageCopy \u003d this.taskList.getList();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            String split \u003d \"_\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            int index \u003d 0;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            while (!storageCopy.isEmpty()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                Task curr \u003d storageCopy.remove(index);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                String currString \u003d curr.toString();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                String type \u003d currString.substring(currString.indexOf(\"[\") + 1, currString.indexOf(\"]\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                boolean completed \u003d curr.isDone();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                String name \u003d curr.getName();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                fw.write(type + split);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                fw.write(completed + split);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                fw.write(name + split);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    Event event \u003d (Event) curr;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    fw.write(event.getAt() + System.lineSeparator());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    Deadline deadline \u003d (Deadline) curr;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    fw.write(deadline.getBy() + System.lineSeparator());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    fw.write(\"mark\" + System.lineSeparator());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            System.out.println(\"Oops. Something went wrong while saving data.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Loads state from save file."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public void loadFile() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            Scanner scan \u003d new Scanner(file);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            while (scan.hasNext()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                String curr \u003d scan.nextLine();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                String[] data \u003d curr.split(\"_\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                String type \u003d data[0];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                boolean done \u003d Boolean.parseBoolean(data[1]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                String name \u003d data[2];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                String time \u003d null;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                if (!data[3].equals(\"mark\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    time \u003d data[3];"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    taskList.getList().add(new Event(name, done, time));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    taskList.getList().add(new Deadline(name, done, time));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    taskList.getList().add(new ToDo(name, done));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Updates save file."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public void updateFile() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        boolean fileDeleted \u003d file.delete();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        assert fileDeleted : \"file not deleted\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        saveFile();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        loadFile();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Returns the file path of the save file."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param name The name of the save file"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return The absolute path to the save file"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public static String getStoragePath(String name) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return System.getProperty(\"user.dir\")"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            + File.separator + \"data\" + File.separator + name + \".txt\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Getter method for file attribute."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return The file attribute of Storage object"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public File getFile() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return file;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 144
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    protected final String name;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    protected final boolean done;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public Task(String name, boolean done) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    abstract Task setDone();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    abstract Task updateTime(String time);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    abstract Task updateName(String name);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return (done ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        String statusIcon \u003d \"[\" + this.getStatusIcon() + \"] \";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return statusIcon + this.getName();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 38
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " * Represents the task list handler."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private static final List\u003cTask\u003e storage \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Constructor for TaskList Object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Displays the task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String displayList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        if (storage.isEmpty()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            return \"Your list is empty!\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            int listLen \u003d storage.size();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            String output \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d listLen; i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                Task curr \u003d storage.get(i - 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                output \u003d output.concat(i + \".\" + curr + \"\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Adds task to the task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param s The type of task to add"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param next The remaining task description"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return Task addition string"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @throws DukeException The Exception of Duke bot"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String addTask(String s, String next) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        Task toAdd;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        if (s.matches(\"todo|deadline|event|done|delete|update\") \u0026\u0026 next.equals(\"\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of \" + s + \" cannot be empty.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        switch (s) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            ToDo todo \u003d new ToDo(next);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            storage.add(todo);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            toAdd \u003d todo;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            if (next.contains(\"/by \")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                String[] ls \u003d next.split(\" /by \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                String date \u003d Parser.parseDateTime(ls[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                if (date.contains(\"Please input the time and date in\\n\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    return date;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    toAdd \u003d new Deadline(ls[0], date);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    storage.add(toAdd);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                throw new DukeException(\"Sorry, please specify expected deadline after \\\"/by\\\".\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            if (next.contains(\"/at \")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                String[] ls \u003d next.split(\" /at \");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                String date \u003d Parser.parseDateTime(ls[1]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                if (date.contains(\"Please input the time and date in\\n\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    return date;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    toAdd \u003d new Event(ls[0], date);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    storage.add(toAdd);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                throw new DukeException(\"Sorry, please specify event date after \\\"/at\\\".\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :(\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        assert toAdd !\u003d null : \"Nothing added!\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return ui.addTaskLine(toAdd, storage.size());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Completes given from the task list."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param s Index of task to be completed on the list"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return Task done String"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @throws DukeException The Exception of Duke bot"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String doneTask(String s) throws DukeException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            int index \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            boolean isWithinSizeLimit \u003d index \u003e storage.size();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            boolean isLowerThanSizeMin \u003d index \u003c 1;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            if (isLowerThanSizeMin || isWithinSizeLimit) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                throw new DukeException(\"You have entered an invalid number: \" + index"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    + \". Please try again.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                Task t \u003d storage.get(index - 1);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                Task completed \u003d t.setDone();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                storage.set(index - 1, completed);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                return \"Nice! I\u0027ve marked this task as done:\\n\" + \"  \""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                        + completed + \"\\n\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            return \"Please state the completed task number after \\\"done\\\".\\n\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Deletes given task from the task list."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param s Index of task to be completed on the list"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return Task deleted String"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @throws DukeException The Exception of Duke bot"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String delTask(String s) throws DukeException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        boolean isEmptyStorage \u003d storage.size() \u003d\u003d 0;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        boolean isAll \u003d s.toLowerCase().equals(\"all\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        boolean isEmptyString \u003d s.equals(\"\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        if (isEmptyStorage || isAll) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            storage.clear();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            return \"All tasks cleared!!\\n\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        } else if (isEmptyString) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                return addTask(\"delete\", \"\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                return e.getMessage();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                int i \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                if (i \u003c 1 || i \u003e storage.size()) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    throw new DukeException(\"You have entered an invalid number: \" + i"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                        + \". Please try again.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    Task t \u003d storage.get(i - 1);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    storage.remove(i - 1);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    return ui.removeTaskLine(t, storage.size());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                return \"Please state the completed task number after \\\"delete\\\".\\n\";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Prints the list of tasks that contain the given string."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param s The string that should appear in the task"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return List of tasks found matching input s"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String findTask(String s) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        if (storage.isEmpty()) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            return \"Your list is empty!\\n\";"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            int count \u003d 1;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            String output \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            for (Task curr : storage) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                if (curr.getName().toLowerCase().contains(s.toLowerCase())) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    output \u003d output.concat(count + \".\" + curr + \"\\n\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    count++;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            if (count \u003d\u003d 1) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                return \"There was no match!\";"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                return output;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Updates current task with new name or time."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param next The remaining task description"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return Task updated String"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @throws DukeException The Exception of Duke bot"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String updateTask(String next) throws DukeException {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            String[] ls \u003d next.split(\" \");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            int index \u003d Integer.parseInt(ls[0]) - 1;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            String command \u003d ls[1].toLowerCase();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            Task oldTask \u003d storage.remove(index);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            Task updatedTask;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            case \"name\":"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                String[] splitName \u003d next.split(\" name \");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                String updatedName \u003d splitName[1];"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                updatedTask \u003d oldTask.updateName(updatedName);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                storage.add(index, updatedTask);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            case \"time\":"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                String[] splitTime \u003d next.split(\" time \");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                String updatedInput \u003d splitTime[1];"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                String updatedTime \u003d Parser.parseDateTime(updatedInput);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                if (updatedTime.contains(\"Please input the time and date in\\n\")) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    return updatedTime;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    updatedTask \u003d oldTask.updateTime(updatedTime);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    storage.add(index, updatedTask);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                throw new DukeException(\"Please choose either [name] or [time] to update.\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            return ui.updateTaskLine(oldTask, updatedTask);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            return \"Please state task number after \\\"update\\\".\\n\";"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Getter method for task list."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return The current task list of the bot"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return storage;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 230
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " * Represents the Todo Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Constructor for Todo task object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param name The name of task to be done"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Overloaded Constructor for Todo task object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param name The name of task to be done"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param done The boolean for task completion status"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public ToDo(String name, boolean done) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        super(name, done);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Setter method for setting done attribute to given input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return New ToDo task with same parameters but attribute done changed to given input"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public ToDo setDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return new ToDo(this.getName(), true);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Updates the time of current Todo task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param time New updated time"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return Todo task with updated time"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public ToDo updateTime(String time) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return new ToDo(super.name, super.done);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Updates name of current Todo Task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param name New update name"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return Todo task with new name"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public ToDo updateName(String name) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return new ToDo(name, super.done);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Returns the ToDo object string."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return The ToDo object string name"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 59
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " * Represents the Ui control object."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Prints the exit line of the bot."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return String for exit line"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String exitLine() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Returns String for Welcome message depending on the save state."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param taskList The handler for task list calls"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param storage The handler for storage calls"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return String for welcome message"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String startUp(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        storage.createOrLoadFile();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        if (!storage.getFile().exists() || storage.getFile().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            return \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    + \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            return \"Well come back!\\n\" + \"You still have \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    + taskList.getList().size() + \" tasks left to clear.\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Returns String for adding tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param toAdd The new task to add to the list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param size  The size of current list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return String for adding tasks"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String addTaskLine(Task toAdd, int size) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\" + \"  \" + toAdd + \"\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                + \"Now you have \" + size + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Returns string for removing a task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param toRemove The task to remove"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param size The size of current list"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return String for removing tasks"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String removeTaskLine(Task toRemove, int size) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return \"Noted. I\u0027ve removed this task:\\n\" + \"  \" + toRemove + \"\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    + \"Now you have \" + size + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Returns String for help command."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return String for help command"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String helpLine() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return \"Below are the list of commands:\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                + \"list\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                + \"find [keyword]\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                + \"todo [taskname]\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                + \"deadline [taskname] /by [yyyy-MM-dd HHmm]\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                + \"event [taskname] /at [yyy-MM-dd HHmm]\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                + \"delete [index or \u0027all\u0027]\\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                + \"update [index] [\u0027name\u0027 or \u0027time\u0027] [input]\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                + \"bye\\n\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Returns String for unknown input."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return String for unknown input"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String unknownInputLine() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :(\\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                + \"Type \u0027help\u0027 for list of commands.\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Returns String for updated Task."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param oldTask Previous task"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param updatedTask Updated task"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return String showing task has been updated"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String updateTaskLine(Task oldTask, Task updatedTask) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return \"The selected Task has been updated:\\n\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                + \"Prev: \" + oldTask"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                + \"\\nUpdated: \" + updatedTask;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 88
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "\u003c?import javafx.scene.layout.BorderPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"114.0\" prefWidth\u003d\"324.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "      \u003cHBox alignment\u003d\"CENTER\" prefHeight\u003d\"84.0\" prefWidth\u003d\"105.0\" style\u003d\"-fx-background-color: lightblue; -fx-background-radius: 30; -fx-border-color: black; -fx-border-radius: 2em;\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            \u003cBorderPane prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "               \u003ccenter\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                  \u003cHBox alignment\u003d\"TOP_RIGHT\" prefHeight\u003d\"73.0\" prefWidth\u003d\"187.0\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                     \u003cchildren\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                        \u003cText fx:id\u003d\"dialog\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Text\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                     \u003c/children\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                  \u003c/HBox\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "               \u003c/center\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "               \u003ctop\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                  \u003cRegion prefHeight\u003d\"9.0\" prefWidth\u003d\"200.0\" BorderPane.alignment\u003d\"CENTER\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "               \u003c/top\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "               \u003cleft\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                  \u003cRegion prefHeight\u003d\"82.0\" prefWidth\u003d\"16.0\" BorderPane.alignment\u003d\"CENTER\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "               \u003c/left\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "               \u003cright\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                  \u003cRegion prefHeight\u003d\"82.0\" prefWidth\u003d\"24.0\" BorderPane.alignment\u003d\"CENTER\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "               \u003c/right\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            \u003c/BorderPane\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "      \u003cRegion prefHeight\u003d\"118.0\" prefWidth\u003d\"9.0\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "      \u003cVBox nodeOrientation\u003d\"RIGHT_TO_LEFT\" prefHeight\u003d\"118.0\" prefWidth\u003d\"52.0\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            \u003cBorderPane prefHeight\u003d\"79.0\" prefWidth\u003d\"41.0\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "               \u003ccenter\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"65.0\" fitWidth\u003d\"60.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" BorderPane.alignment\u003d\"CENTER\" /\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "               \u003c/center\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "               \u003cbottom\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                  \u003cLabel fx:id\u003d\"displayName\" contentDisplay\u003d\"RIGHT\" text\u003d\"displayName\" textAlignment\u003d\"CENTER\" BorderPane.alignment\u003d\"CENTER\" /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "               \u003c/bottom\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            \u003c/BorderPane\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "      \u003c/VBox\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 53
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"622.0\" prefWidth\u003d\"436.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"14.0\" layoutY\u003d\"574.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Enter text ...\" AnchorPane.bottomAnchor\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"350.0\" layoutY\u003d\"574.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"569.0\" prefWidth\u003d\"434.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"416.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 19
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public void checkBye() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        assertTrue(Parser.checkBye(\"bye\"));"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public void checkDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        assertTrue(Parser.checkDone(\"done\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public void checkList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        assertTrue(Parser.checkList(\"list\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public void checkDel() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        assertTrue(Parser.checkDel(\"delete\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 25
    }
  },
  {
    "path": "src/test/java/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public void exitLine() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        String line \u003d \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        assertEquals(line, ui.exitLine());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public void helpLine() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        String line \u003d \"Below are the list of commands:\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                + \"list\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                + \"find [keyword]\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                + \"todo [taskname]\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                + \"deadline [taskname] /by [yyyy-MM-dd HHmm]\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                + \"event [taskname] /at [yyy-MM-dd HHmm]\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                + \"delete [index or all]\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                + \"bye\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        assertEquals(line, ui.helpLine());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 27
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "if [ ! -d \"./bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "if [ -e \"./text-ui-test/ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    rm ./text-ui-test/ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "if ! javac -cp ./src/main/java -Xlint:none -d ../bin ./src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "java -classpath ../bin Duke \u003c ./text-ui-test/input.txt \u003e ./text-ui-test/ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "cp ./text-ui-test/EXPECTED.TXT ./text-ui-test/EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "dos2unix ./text-ui-test/ACTUAL.TXT ./text-ui-test/EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "diff ./text-ui-test/ACTUAL.TXT ./text-ui-test/EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 8,
      "-": 30
    }
  }
]
