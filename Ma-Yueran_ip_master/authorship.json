[
  {
    "path": "src/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import input.UserInput;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import function.DukeFunction;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import data.DukeData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        DukeFunction.greet();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        while (!DukeData.exitLoop) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            String inputLine \u003d UserInput.getOneLine();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            DukeFunction.checkCommand(inputLine);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ma-Yueran": 11,
      "-": 4
    }
  },
  {
    "path": "src/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public String[] names;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public abstract void execute(String str);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ma-Yueran": 8
    }
  },
  {
    "path": "src/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import exception.IncorrectFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import ui.UIPrint;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import data.DukeData;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import function.DukeFunction;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public DeadlineCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        names \u003d new String[] { \"deadline\" };"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public void execute(String str) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        String[] splitStr \u003d str.split(\" /by \", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        checkException(splitStr);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        String description \u003d splitStr[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        String deadline \u003d splitStr[1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(UIPrint.deadlineIcon, description, deadline);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        DukeData.tasks.add(newDeadline);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        DukeFunction.reportNewTask(newDeadline);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    private void checkException(String[] splitStr) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        if (splitStr.length !\u003d 2) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            String line \u003d UIPrint.getLine(UIPrint.star, 50);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            String errMessage \u003d"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "                    line + \"\\nPlease follow the format of deadline \u003ctask description\u003e /by \u003cdeadline\u003e\\n\" + line;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            throw new IncorrectFormatException(errMessage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ma-Yueran": 38
    }
  },
  {
    "path": "src/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import exception.InvalidIndexException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import ui.UIPrint;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import data.DukeData;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import function.DukeFunction;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public DeleteCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        names \u003d new String[] { \"delete\" };"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public void execute(String str) throws InvalidIndexException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        boolean canParseInt \u003d tryParseInt(str);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        int taskIndex \u003d canParseInt ? Integer.parseInt(str) - 1 : -1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        checkException(taskIndex, str);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        Task task \u003d DukeData.tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        DukeFunction.reportDeleteTask(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    private boolean tryParseInt(String str) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            Integer.parseInt(str);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        } catch (NumberFormatException exception) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    private void checkException(int taskIndex, String str) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        if (DukeData.tasks.size() \u003c\u003d taskIndex || taskIndex \u003c 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            String line \u003d UIPrint.getLine(UIPrint.star, 50);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            String errMessage \u003d"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "                    line + \"\\nSorry \" + str + \" is not a valid index\\n\" + line;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            throw new InvalidIndexException(errMessage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ma-Yueran": 44
    }
  },
  {
    "path": "src/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import exception.InvalidIndexException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import function.DukeFunction;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import ui.UIPrint;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import data.DukeData;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public DoneCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        names \u003d new String[] { \"done\" };"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public void execute(String str) throws InvalidIndexException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        UIPrint.drawLine(UIPrint.star, 50);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        boolean canParseInt \u003d tryParseInt(str);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        int taskIndex \u003d canParseInt ? Integer.parseInt(str) - 1 : -1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        checkException(taskIndex, str);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        Task task \u003d DukeData.tasks.get(taskIndex);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        DukeFunction.reportDoneTask(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        UIPrint.drawLine(UIPrint.star, 50);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    private boolean tryParseInt(String str) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            Integer.parseInt(str);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        } catch (NumberFormatException exception) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    private void checkException(int taskIndex, String str) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        if (DukeData.tasks.size() \u003c\u003d taskIndex || taskIndex \u003c 0) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            String line \u003d UIPrint.getLine(UIPrint.star, 50);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            String errMessage \u003d"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "                    line + \"\\nSorry \" + str + \" is not a valid index\\n\" + line;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            throw new InvalidIndexException(errMessage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ma-Yueran": 49
    }
  },
  {
    "path": "src/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import exception.IncorrectFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import ui.UIPrint;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import data.DukeData;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import function.DukeFunction;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public EventCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        names \u003d new String[] { \"event\" };"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public void execute(String str) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        String[] splitStr \u003d str.split(\" /at \", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        checkException(splitStr);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        String description \u003d splitStr[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        String time \u003d splitStr[1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        Event newEvent \u003d new Event(UIPrint.eventIcon, description, time);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        DukeData.tasks.add(newEvent);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        DukeFunction.reportNewTask(newEvent);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    private void checkException(String[] splitStr) throws IncorrectFormatException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        if (splitStr.length !\u003d 2) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            String line \u003d UIPrint.getLine(UIPrint.star, 50);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            String errMessage \u003d"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "                    line + \"\\nPlease follow the format of event \u003ctask description\u003e /at \u003cevent time\u003e\\n\" + line;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            throw new IncorrectFormatException(errMessage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ma-Yueran": 38
    }
  },
  {
    "path": "src/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import function.DukeFunction;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import data.DukeData;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        names \u003d new String[] { \"bye\" };"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public void execute(String str) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        DukeFunction.reportExit();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        DukeData.exitLoop \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ma-Yueran": 18
    }
  },
  {
    "path": "src/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import function.DukeFunction;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        names \u003d new String[] { \"list\" };"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public void execute(String str) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        DukeFunction.reportCurrentTasks();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ma-Yueran": 15
    }
  },
  {
    "path": "src/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import exception.NoDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import task.ToDo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import ui.UIPrint;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import data.DukeData;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import function.DukeFunction;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public TodoCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        names \u003d new String[] { \"todo\" };"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public void execute(String str) throws NoDescriptionException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        checkException(str);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        ToDo newToDo \u003d new ToDo(UIPrint.todoIcon, str);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        DukeData.tasks.add(newToDo);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        DukeFunction.reportNewTask(newToDo);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    private void checkException(String str) throws NoDescriptionException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        if (str.isBlank()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            String line \u003d UIPrint.getLine(UIPrint.star, 50);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            String errMessage \u003d"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "                    line + \"\\nOOPS!!! The description of a todo cannot be empty.\\n\" + line;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            throw new NoDescriptionException(errMessage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ma-Yueran": 34
    }
  },
  {
    "path": "src/data/DukeCommandSet.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "package data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import exception.UnknownCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import ui.UIPrint;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "public class DukeCommandSet {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    private static DukeCommandSet instance;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public static DukeCommandSet getInstance() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        if (instance \u003d\u003d null) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            instance \u003d new DukeCommandSet();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        return instance;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    private HashMap\u003cString, Command\u003e commandSet;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public DukeCommandSet() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        commandSet \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        registerCommand(new ExitCommand());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        registerCommand(new ListCommand());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        registerCommand(new DoneCommand());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        registerCommand(new TodoCommand());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        registerCommand(new DeadlineCommand());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        registerCommand(new EventCommand());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        registerCommand(new DeleteCommand());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    private void registerCommand(Command command) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        for (String name : command.names) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            commandSet.put(name, command);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public Command getCommand(String commandName) throws UnknownCommandException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        if (!commandSet.containsKey(commandName)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            String line \u003d UIPrint.getLine(UIPrint.star, 50);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            String errMessage \u003d"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "                    line + \"\\nOOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" + line;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            throw new UnknownCommandException(errMessage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        return commandSet.get(commandName);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ma-Yueran": 51
    }
  },
  {
    "path": "src/data/DukeData.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "package data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "public class DukeData {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public static boolean exitLoop \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ma-Yueran": 11
    }
  },
  {
    "path": "src/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "public abstract class DukeException extends RuntimeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    protected DukeException(String errMessage) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        super(errMessage);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ma-Yueran": 8
    }
  },
  {
    "path": "src/exception/IncorrectFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "public class IncorrectFormatException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public IncorrectFormatException(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ma-Yueran": 8
    }
  },
  {
    "path": "src/exception/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "public class InvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public InvalidIndexException(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ma-Yueran": 8
    }
  },
  {
    "path": "src/exception/NoDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "public class NoDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public NoDescriptionException(String errMessage) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        super(errMessage);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ma-Yueran": 8
    }
  },
  {
    "path": "src/exception/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public UnknownCommandException(String errMessage) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        super(errMessage);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ma-Yueran": 8
    }
  },
  {
    "path": "src/function/DukeFunction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "package function;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import ui.UIPrint;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import data.DukeData;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import data.DukeCommandSet;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import exception.IncorrectFormatException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import exception.InvalidIndexException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import exception.NoDescriptionException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import exception.UnknownCommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "public class DukeFunction {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        System.out.println(UIPrint.logo);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        UIPrint.drawLine(UIPrint.star, 50);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        UIPrint.drawLine(UIPrint.star, 50);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public static void echo(String str) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        UIPrint.drawLine(UIPrint.star, 50);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        System.out.println(str);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        UIPrint.drawLine(UIPrint.star, 50);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public static void reportCurrentTasks() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        UIPrint.drawLine(UIPrint.star, 50);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        System.out.println(\"Current tasks:\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        for (int i \u003d 0; i \u003c DukeData.tasks.size(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            System.out.println(i + 1 + \". \" + DukeData.tasks.get(i));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        if (DukeData.tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            System.out.println(\"None\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        UIPrint.drawLine(UIPrint.star, 50);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public static void reportNewTask(Task task) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        UIPrint.drawLine(UIPrint.star, 50);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        System.out.println(\"Now you have \" + DukeData.tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        UIPrint.drawLine(UIPrint.star, 50);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public static void reportDoneTask(Task task) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        UIPrint.drawLine(UIPrint.star, 50);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        System.out.println(\"Nice, I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        UIPrint.drawLine(UIPrint.star, 50);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public static void reportDeleteTask(Task task) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        UIPrint.drawLine(UIPrint.star, 50);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        System.out.println(\"Now you have \" + DukeData.tasks.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        UIPrint.drawLine(UIPrint.star, 50);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public static void reportExit() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        UIPrint.drawLine(UIPrint.star, 50);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        String exitWords \u003d \"Bye, hope to see you again soon!\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        System.out.println(exitWords);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        UIPrint.drawLine(UIPrint.star, 50);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public static void checkCommand(String str) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        String[] inputParts \u003d str.split(\" \", 2);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        String possibleCommand \u003d inputParts[0];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        String rest \u003d inputParts.length \u003d\u003d 2 ? inputParts[1] : \"\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        Command command \u003d null;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            command \u003d DukeCommandSet.getInstance().getCommand(possibleCommand);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        } catch (UnknownCommandException exception) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            System.out.println(exception.getMessage());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        if (command !\u003d null) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "                command.execute(rest);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            } catch (NoDescriptionException | IncorrectFormatException | InvalidIndexException exception) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "                System.out.println(exception.getMessage());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ma-Yueran": 107
    }
  },
  {
    "path": "src/input/UserInput.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "package input;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "public class UserInput {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public static Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public static String getOneLine() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        String inputLine \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        return inputLine;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ma-Yueran": 13
    }
  },
  {
    "path": "src/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public Deadline(String icon, String description, String deadline) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        super(icon, description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        return super.toString() + \" (by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ma-Yueran": 16
    }
  },
  {
    "path": "src/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public Event(String icon, String description, String time) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        super(icon, description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        return super.toString() + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ma-Yueran": 16
    }
  },
  {
    "path": "src/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "import ui.UIPrint;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    private String icon;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    protected Task(String icon, String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        this.icon \u003d icon;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        String statusIcon \u003d isDone ? UIPrint.tick : UIPrint.cross;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        return icon + statusIcon + \" \" + description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ma-Yueran": 27
    }
  },
  {
    "path": "src/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public ToDo(String icon, String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        super(icon, description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ma-Yueran": 8
    }
  },
  {
    "path": "src/ui/UIPrint.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "public class UIPrint {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public static String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public static char star \u003d \u0027*\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public static String tick \u003d \"[Done]\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public static String cross \u003d \"[Not Done]\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public static String todoIcon \u003d \"[T]\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public static String deadlineIcon \u003d \"[D]\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public static String eventIcon \u003d \"[E]\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public static void drawLine(char ch, int length) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        System.out.println(getLine(ch, length));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    public static String getLine(char ch, int length) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        String line \u003d \"\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        for (int i \u003d 0; i \u003c length; i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "            line +\u003d ch;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        line +\u003d \"\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "        return line;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ma-Yueran": 31
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "event jump"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "Hahaha"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "deadline sleep"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "todo have dinner"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Ma-Yueran": 16
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ma-Yueran"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Ma-Yueran": 1,
      "-": 20
    }
  }
]
