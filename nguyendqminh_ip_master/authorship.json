[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.4.0\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.4.0\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "test {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "run {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 32
    }
  },
  {
    "path": "data/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "0"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 1
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "echo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "echo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "echo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "echo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ":init"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ":end"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 104
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "rootProject.name \u003d \u0027ip\u0027"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 1
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": " * Class to handle the Deadline task type"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    protected LocalDateTime byTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yy-M-d H:mm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            this.byTime \u003d LocalDateTime.parse(by, formatter);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            System.out.println(\"Cannot parse deadline time.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public Deadline(String description, boolean isDone, String by) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yy-M-d H:mm\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            this.byTime \u003d LocalDateTime.parse(by, formatter);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            System.out.println(\"Cannot parse deadline time, time set as null.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), this.byTime);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 35
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": " * Main class"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        String directory \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        Path filePath \u003d Paths.get(directory, \"data\", \"data.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            tasks \u003d new TaskList(storage.loadData());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            ui.displayError(e);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        ui.greetings();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        boolean isHalted \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        while (!isHalted) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                String command \u003d ui.readCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                Parser parser \u003d new Parser(command);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                String commandType \u003d parser.getCommandType();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                switch (commandType) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                case \"bye\": {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    isHalted \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                case \"list\": {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    ui.displayMessage(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    for (int i \u003d 0; i \u003c tasks.size(); ++i) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        ui.displayFormat(\"%d. %s\\n\", i + 1, tasks.get(i));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                case \"done\": {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    int index \u003d parser.getIndex();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    if (index \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        throw new DukeException(\":( OOPS!!! Task index not found.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    ui.displayMessage(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    ui.displayMessage(tasks.get(index).toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                case \"delete\": {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    int index \u003d parser.getIndex();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    if (index \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        throw new DukeException(\":( OOPS!!! Task index not found.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    ui.displayMessage(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    ui.displayMessage(tasks.get(index).toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    tasks.removeTask(index);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    ui.displayFormat(\"Now you have %d tasks in the list.\\n\", tasks.size());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                case \"add\": {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    Task newTask \u003d parser.getTask();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    tasks.addTask(newTask);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    ui.displayMessage(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    ui.displayMessage(newTask.toString());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    ui.displayFormat(\"Now you have %d tasks in the list\\n\", tasks.size());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                case \"find\": {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    String keyword \u003d parser.getDescription();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    int counter \u003d 0;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    for (Task task: tasks.getTasks()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        if (task.description.contains(keyword)) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                            if (counter \u003d\u003d 0) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                                ui.displayMessage(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                            ++counter;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                            ui.displayFormat(\"%d.%s\\n\", counter, task.toString());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    if (counter \u003d\u003d 0) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        ui.displayMessage(\"No task was found.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                default: {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    throw new Exception(\"Unexpected error\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                ui.displayError(e);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            storage.saveData(tasks.getTasks());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            ui.displayError(e);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        ui.bye();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        new Duke().execute();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 5,
      "nguyendqminh": 106
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": " * Class to handle the Event task type"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    protected LocalDateTime atTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yy-M-d H:mm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            this.atTime \u003d LocalDateTime.parse(at, formatter);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            System.out.println(\"Cannot parse event time.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public Event(String description, boolean isDone, String at) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yy-M-d H:mm\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            this.atTime \u003d LocalDateTime.parse(at, formatter);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            System.out.println(\"Cannot parse event time, time set as null.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), this.atTime);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 35
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": " * Class to handle parsing user command"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    private String commandType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     * Parse a given command string to relevant information"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     * @param command - input command by user"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public Parser(String command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        this.commandType \u003d \"undefined\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                this.commandType \u003d \"bye\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                this.commandType \u003d \"list\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            } else if (command.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                if (command.length() \u003c 5) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    throw new DukeException(\":( OOPS!!! Task index not found.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                this.commandType \u003d \"done\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                this.index \u003d Integer.parseInt(command.substring(5)) - 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            } else if (command.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                if (command.length() \u003c 7) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    throw new DukeException(\":( OOPS!!! Task index not found.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                this.commandType \u003d \"delete\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                this.index \u003d Integer.parseInt(command.substring(7)) - 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            } else if (command.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                if (command.length() \u003c 5) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    throw new DukeException(\":( OOPS!!! You need to specify a keyword to search.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                this.commandType \u003d \"find\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                this.description \u003d command.substring(5);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                Task newTask \u003d null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                if (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    if (command.length() \u003c 5) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        throw new DukeException(\":( OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    String description \u003d command.substring(5);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    newTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                } else if (command.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    if (command.length() \u003c 9) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        throw new DukeException(\":( OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    String rest \u003d command.substring(9);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    int byPosition \u003d rest.indexOf(\"/by \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    if (byPosition \u003d\u003d -1) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        throw new DukeException(\":( OOPS!!! Deadline time specification not found.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    String description \u003d rest.substring(0, byPosition - 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    String by \u003d rest.substring(byPosition + 4);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    newTask \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                } else if (command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    if (command.length() \u003c 6) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        throw new DukeException(\":( OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    String rest \u003d command.substring(6);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    int atPosition \u003d rest.indexOf(\"/at \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    if (atPosition \u003d\u003d -1) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        throw new DukeException(\":( OOPS!!! Event time specification not found.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    String description \u003d rest.substring(0, atPosition - 1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    String at \u003d rest.substring(atPosition + 4);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    newTask \u003d new Event(description, at);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                if (newTask \u003d\u003d null) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    throw new DukeException(\":( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                this.commandType \u003d \"add\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                this.task \u003d newTask;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public int getIndex() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return this.index;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public Task getTask() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return this.task;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public String getCommandType() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return this.commandType;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 99
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": " * Class to help saving data to local storage"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    private final Path filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public Storage(Path filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    private void openFile() throws Exception {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        if (!Files.exists(this.filePath)) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            Files.createDirectories(this.filePath.getParent());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            Files.createFile(this.filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     * Load data from local storage"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     * @throws Exception if unable to open local file"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     * @throws IOException if unable to read from file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public ArrayList\u003cTask\u003e loadData() throws Exception {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        openFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        BufferedReader reader \u003d Files.newBufferedReader(this.filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        int taskCount \u003d Integer.parseInt(reader.readLine());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        for (int i \u003d 0; i \u003c taskCount; ++i) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            tasks.add(TaskParser.parseTask(reader));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     * Store an array of tasks to the file"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     * @param tasks - the current container of the tasks"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     * @throws Exception if unable to open local file"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     * @throws IOException if unable to write to file"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public void saveData(ArrayList\u003cTask\u003e tasks) throws Exception {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        openFile();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        BufferedWriter writer \u003d Files.newBufferedWriter(this.filePath);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        writer.write(String.valueOf(tasks.size()));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        writer.newLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            writer.write(task.toString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            writer.newLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 60
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": " * Class to handle fields and functions universal to all task types"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return isDone ? \"O\" : \"X\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     * Mark current task as done"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public boolean markAsDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 38
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": " * Container class for Task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     * Add a Task to the end of the list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     * @param newTask - Task to add"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     * Remove a Task from the list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     * @param pos - position to remove (0-based)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public void removeTask(int pos) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        tasks.remove(pos);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     * @return the container\u0027s content"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     * @return the container\u0027s size"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     * Retrieve a Task in the specified position"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     * @param pos - position to retrieve (0-based)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     * @return the Task at position pos"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public Task get(int pos) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return this.tasks.get(pos);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 55
    }
  },
  {
    "path": "src/main/java/TaskParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": " * Utility class to handle parsing tasks from local file"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "public class TaskParser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     * Parse a task from buffered reader"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     * @param bufferedReader - input stream"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     * @return the parsed task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     * @throws DukeException if unable to interpret the input"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     * @throws IOException if unable to read from buffered reader"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public static Task parseTask(BufferedReader bufferedReader) throws Exception {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        String input \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        String taskType \u003d input.substring(0, 3);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        String status \u003d input.substring(3, 6);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        String rest \u003d input.substring(7);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        boolean isDone \u003d (status.equals(\"[O]\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        Task result;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        case \"[T]\": {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            result \u003d new Todo(rest, isDone);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        case \"[D]\": {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            int position \u003d rest.indexOf(\"(by: \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            String description \u003d rest.substring(0, position - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            String by \u003d rest.substring(position + 4, rest.length() - 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            result \u003d new Deadline(description, isDone, by);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        case \"[E]\": {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            int position \u003d rest.indexOf(\"(at: \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            String description \u003d rest.substring(0, position - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            String at \u003d rest.substring(position + 4, rest.length() - 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            result \u003d new Deadline(description, isDone, at);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        default: {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            throw new DukeException(\"Error while loading data.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 49
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": " * Class to handle the Todo task type"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 17
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": " * Class to handle UI-related features"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    private final Scanner sc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public void displayFormat(String format, Object... args) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        System.out.printf(format, args);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public void displayMessage(String message) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public void displayError(Exception e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public void greetings() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        displayMessage(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        displayMessage(\"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        displayMessage(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 42
    }
  },
  {
    "path": "src/main/java/data/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "[D][O] deadline (by: 2001-09-11T08:46)"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 2
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public void runTaskListTest() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        TaskList taskListTest \u003d new TaskList();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        taskListTest.addTask(new Todo(\"todo\"));"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        taskListTest.addTask(new Deadline(\"deadline\", \"01-9-11 8:46\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        Assertions.assertEquals(taskListTest.size(), 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        taskListTest.get(1).markAsDone();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        taskListTest.removeTask(0);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        Assertions.assertEquals(taskListTest.get(0).toString(), \"[D][O] deadline (by: 2001-09-11T08:46)\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 15
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public void runTodoTest() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        Todo todoTest \u003d new Todo(\"new todo\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        Assertions.assertEquals(todoTest.toString(), \"[T][X] new todo\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        Todo todoTestDone \u003d new Todo(\"new todo\", true);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        Assertions.assertEquals(todoTestDone.toString(), \"[T][O] new todo\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "todo cs2103 project 1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "nguyendqminh": 1
    }
  }
]
