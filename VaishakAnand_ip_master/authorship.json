[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "# juke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/juke.Duke.java` file, right-click it, and choose `Run juke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 2,
      "-": 24
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    mainClassName \u003d \"juke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 17,
      "-": 44
    }
  },
  {
    "path": "data/dukeTaskList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "E/0/Computing Day /2020-09-02"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "T/1/Write Book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "D/1/CS2103T homework /2000-02-19"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "E/0/eat snacks /2020-12-10"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "T/0/Play CoD"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "D/0/submit/2020-09-19"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 6
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "# Juke User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Welcome to the **Juke Chatbot** User Guide!\\"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Juke is an extremely convenient personal task tracker.\\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "It is suited for fast typists, with commands input via a Command line Interface (CLI), "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "with the added visual benefits of a Graphical User Interface (GUI)."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "* [Quick start](#quick-start)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "* [Features](#features)  "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "  * [Adding a Todo: `todo`](#todo---adding-a-todo-task)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "  * [Adding a Event: `event`](#event---adding-an-event-task)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "  * [Adding a Deadline: `deadline`](#deadline---adding-a-deadline-task)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "  * [Viewing all tasks: `list`](#list---listing-all-tasks)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "  * [Finding a task: `find`](#find---finding-a-task)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "  * [Completing a task: `done`](#done---marking-a-task-as-done)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "  * [Deleting a task: `delete`](#delete---deleting-a-task)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "  * [Updating a task: `update`](#update---updates-a-task)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "  * [Exiting the program: `bye`](#bye---stopping-chatbot)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "* [Command Summary](#command-summary)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "1. Ensure you have Java 11 installed on your computer."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "1. Download the latest version from [here](https://github.com/VaishakAnand/ip/releases)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "1. Copy the downloaded file to the folder you want to use as the *home folder* for Duke."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "1. Double click the file to start the app."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "1. Type commands in the text field at the bottom and click the *Send* button to execute."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "The list of commands can be found in the feature list below."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Parameters in square brackets, e.g. `[/date DATE]` are optional parameters.  "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Parameters without square brackets are required."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "### `todo` - Adding a Todo task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Adds a Todo task to list of current tasks."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Format: `todo TASK_DESCRIPTION`  "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Example of usage: `todo Boil eggs`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Expected outcome: *Boil eggs* Todo added.  "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "### `event` - Adding an Event task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Adds an Event task to list of current tasks, with an Event date (YYYY-MM-DD)."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Format: `event TASK_DESCRIPTION /at EVENT_DATE`  "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Example of usage: `event NUS Computing Day /at 2020-09-06`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Expected outcome: *NUS Computing Day on Sep 6 2020* Event added.  "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "### `deadline` - Adding a Deadline task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Adds a Deadline task to list of current tasks, with a Deadline date (YYYY-MM-DD)."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Format: `deadline TASK_DESCRIPTION /by DEADLINE_DATE`  "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Example of usage: `deadline CS2103T Homework /by 2020-09-15`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Expected outcome: *CS2103T Homework by Sep 15 2020* Deadline added.  "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "### `list` - Listing all tasks."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Shows a list of all tasks."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Format: `list`  "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "### `find` - Finding a task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Finds all the tasks that contains the given keyword in Task Description."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Format: `find KEYWORD`  "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Example of usage: `find eggs`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Expected outcome: All tasks containing keyword *eggs*.  "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "### `done` - Marking a task as done."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Marks a task from list of tasks with given list index of task, as done.  "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Index has to be a *positive* integer."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Format: `done INDEX`  "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Example of usage: `done 4`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Expected outcome: Task at list index *4* marked as done.  "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "### `delete` - Deleting a task."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Deletes a task from list of tasks with given list index of task.  "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Index has to be a *positive* integer."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Format: `delete INDEX`  "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Example of usage: `delete 4`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Expected outcome: Task at list index *4* deleted.    "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "### `update` - Updates a task."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Updates a task from list of tasks with given list index of task.  "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Index has to be a *positive* integer.  "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Can update task description, or date, or both."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Format: `update /number INDEX [/description DESCRIPTION] [/date DATE]`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Example of usage: `update /number 2 /description eat eggs /date 2020-04-19`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Expected outcome: Task at list index *4* has description updated to *eat eggs*"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "and date updated to *Apr 19 2020*"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "### `bye` - Stopping chatbot."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Saves all tasks to disk and stops chatbot."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Format: `bye`  "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Action | Format | Example"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "---|---|---"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Todo | `todo TASK_DESCRIPTION` | `todo Boil eggs`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Event | `event TASK_DESCRIPTION /at EVENT_DATE` | `event NUS Computing Day /at 2020-09-06`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "Deadline | `deadline TASK_DESCRIPTION /by DEADLINE_DATE` | `deadline CS2103T Homework /by 2020-09-15`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "list | `list` | `list`"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "find | `find KEYWORD` | `find pasta`"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "done | `done INDEX` | `done 3`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "delete | `delete INDEX` | `delete 1`"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "update | `update /number INDEX [/description DESCRIPTION] [/date DATE]` | `update /number 2 /description eat eggs /date 2020-04-19`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "bye | `bye` | `bye`"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 121,
      "-": 14
    }
  },
  {
    "path": "src/main/java/juke/Juke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents the Juke Chatbot."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Allows users to store a list of Tasks, consisting of three types,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * namely Todos, Events and Deadlines. Users input, change and delete"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * such items via text commands to the bot."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class Juke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Builds an instance of the Juke Chatbot."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public Juke() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Runs the Chatbot instance."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Chatbot will execute commands based on inputText."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private String run(String inputText) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Command command \u003d ui.parseCommand(inputText);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return command.executeCommand(tasks, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Returns response text based on user input."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return this.run(input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 44
    }
  },
  {
    "path": "src/main/java/juke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 12
    }
  },
  {
    "path": "src/main/java/juke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.ui.MainWindow;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private Juke juke \u003d new Juke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(juke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            stage.setTitle(\"Juke\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 33
    }
  },
  {
    "path": "src/main/java/juke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.command.ErrorCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.command.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.command.TaskCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.command.update.UpdateCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.command.update.UpdateDateCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.command.update.UpdateDescriptionAndDateCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.command.update.UpdateDescriptionCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.exception.EmptyTimeException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.exception.InvalidArgumentsException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.exception.UnknownCommandException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.exception.UnknownTaskException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.exception.UnknownTimeException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.task.Deadline;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.task.Event;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.task.TaskDate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.task.Todo;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents the Parser class, that interprets user input commands."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Interprets user input text, into understandable commands."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param inputText Commands input by user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Command understood by Chatbot."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public Command commandHandler(String inputText) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            String[] splitArr \u003d inputText.split(\" \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            String command \u003d splitArr[0];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            case (\"find\"):"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                return this.handleFindCommand(splitArr);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            case (\"done\"):"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                return this.handleDoneCommand(splitArr);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            case (\"list\"):"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                return this.handleListCommand();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            case (\"bye\"):"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                return this.handleExitCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            case (\"delete\"):"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                return this.handleDeleteCommand(splitArr);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            case (\"todo\"):"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                return this.handleTodoCommand(inputText);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            case (\"deadline\"):"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                return this.handleDeadlineCommand(inputText, splitArr);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            case (\"event\"):"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                return this.handleEventCommand(inputText, splitArr);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            case (\"update\"):"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                return this.handleUpdateCommand(inputText);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                throw new UnknownCommandException(\"Unknown command entered\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        } catch (EmptyDescriptionException empty) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            return new ErrorCommand(\"Mate, you\u0027ve gotta let me know what you\u0027re gonna be doing.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        } catch (UnknownCommandException com) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            return new ErrorCommand(\"Um, are you sure that\u0027s not gibberish?\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        } catch (UnknownTimeException by) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            return new ErrorCommand(\"You\u0027ve gotta let me know the time.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        } catch (EmptyTimeException at) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            return new ErrorCommand(\"There has to be a time, surely. Don\u0027t leave it blank!\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        } catch (UnknownTaskException ex) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            return new ErrorCommand(\"C\u0027mon, I don\u0027t live in your head, you gotta tell me the task number!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        } catch (InvalidArgumentsException ex) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            return new ErrorCommand(\"You haven\u0027t provided the appropriate arguments, dumbo!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            return new ErrorCommand(\"You need to provide a valid date! Check your formatting to see if it\u0027s valid.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private FindCommand handleFindCommand(String[] splitArr) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String keyword \u003d splitArr[1];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return new FindCommand(keyword);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private ExitCommand handleExitCommand() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return new ExitCommand();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private ListCommand handleListCommand() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return new ListCommand();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private DoneCommand handleDoneCommand(String[] splitArr) throws UnknownTaskException, InvalidArgumentsException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        if (splitArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            throw new UnknownTaskException(\"No task number entered\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        int taskNo \u003d Integer.parseInt(splitArr[1]) - 1;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        if (taskNo \u003c 0) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            throw new InvalidArgumentsException(\"Task Number is invalid\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return new DoneCommand(taskNo);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private DeleteCommand handleDeleteCommand(String[] splitArr) throws UnknownTaskException,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            InvalidArgumentsException {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        if (splitArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            throw new UnknownTaskException(\"No task number entered\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        int taskNo \u003d Integer.parseInt(splitArr[1]) - 1;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        if (taskNo \u003c 0) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            throw new InvalidArgumentsException(\"Task Number is invalid\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return new DeleteCommand(taskNo);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private TaskCommand handleTodoCommand(String inputText) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        if (inputText.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            throw new EmptyDescriptionException(\"No Description entered\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String description \u003d inputText.substring(5);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return new TaskCommand(new Todo(description));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private TaskCommand handleEventCommand(String inputText, String[] splitArr) throws EmptyDescriptionException,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            UnknownTimeException, EmptyTimeException, DateTimeParseException {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        if (inputText.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            throw new EmptyDescriptionException(\"No Description entered\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        } else if (splitArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            throw new UnknownTimeException(\"No at time added\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String[] newSplitArr \u003d inputText.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        if (newSplitArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            throw new EmptyTimeException(\"No time entered\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String description \u003d newSplitArr[0];"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String at \u003d newSplitArr[1];"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        TaskDate date \u003d TaskDate.parse(at);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return new TaskCommand(new Event(description, date));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private TaskCommand handleDeadlineCommand(String inputText, String[] splitArr) throws EmptyDescriptionException,"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            UnknownTimeException, EmptyTimeException, DateTimeParseException {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        if (inputText.length() \u003c\u003d 9) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            throw new EmptyDescriptionException(\"No Description entered\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        } else if (splitArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            throw new UnknownTimeException(\"No by time added\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String[] newSplitArr \u003d inputText.substring(9).split(\" /by \");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        if (newSplitArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            throw new EmptyTimeException(\"No time entered\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String description \u003d newSplitArr[0];"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String by \u003d newSplitArr[1];"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        TaskDate date \u003d TaskDate.parse(by);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return new TaskCommand(new Deadline(description, date));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private UpdateCommand handleUpdateCommand(String inputText) throws InvalidArgumentsException,"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            DateTimeParseException {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String[] splitByIndex \u003d inputText.split(\"/number \");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        if (splitByIndex.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            throw new InvalidArgumentsException(\"Index argument not provided\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String[] splitByDescription \u003d inputText.split(\"/description \");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String[] splitByDate \u003d inputText.split(\"/date \");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        boolean isUpdateDate \u003d splitByDate.length \u003e 1;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        boolean isUpdateDescription \u003d splitByDescription.length \u003e 1;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        boolean isUpdateBothDateAndDescription \u003d isUpdateDescription \u0026\u0026 isUpdateDate;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        int index \u003d Integer.parseInt(splitByIndex[1].split(\" /\")[0]) - 1;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        if (index \u003c 0) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            throw new InvalidArgumentsException(\"Task Number is invalid\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        if (isUpdateBothDateAndDescription) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            String dateText \u003d splitByDate[1].split(\"/\")[0];"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            TaskDate date \u003d TaskDate.parse(dateText);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            String description \u003d splitByDescription[1].split(\"/\")[0];"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            return new UpdateDescriptionAndDateCommand(index, description, date);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        } else if (isUpdateDate) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            String dateText \u003d splitByDate[1].split(\"/\")[0];"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            TaskDate date \u003d TaskDate.parse(dateText);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            return new UpdateDateCommand(index, date);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        } else if (isUpdateDescription) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            String description \u003d splitByDescription[1].split(\"/\")[0];"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            return new UpdateDescriptionCommand(index, description);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            throw new InvalidArgumentsException(\"Arguments not provided\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 214
    }
  },
  {
    "path": "src/main/java/juke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.exception.UnknownTaskException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.task.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.task.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.task.TaskDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.task.Todo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents a Storage class that handles all the hard-disk storage of the Tasklist."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Loads an existing stored list of tasks (if any)."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return ArrayList of Tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            String root \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            File file \u003d this.checkAndCreateFile(root);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            assert file.exists() : \"File not created\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                String[] next \u003d scanner.nextLine().split(\"/\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                Task task \u003d this.assignTask(next);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                list.add(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        } catch (UnknownTaskException ex) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            System.out.println(\"Task File Corrupted\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Checks and identifies storage file (if available), or else"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * creates a new and empty file."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param root User project root path."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Storage file."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    protected File checkAndCreateFile(String root) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            boolean directoryExists \u003d Files.exists(Paths.get(root, \"data\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            boolean fileExists \u003d Files.exists(Paths.get(root, \"data\", \"dukeTaskList.txt\"));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            if (!directoryExists) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                Files.createDirectory(Paths.get(root, \"data\"));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            if (!fileExists) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                Files.createFile(Paths.get(root, \"data\", \"dukeTaskList.txt\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            return new File(Paths.get(root, \"data\", \"dukeTaskList.txt\").toString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        } catch (IOException exc) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            System.out.println(exc.getMessage());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Saves the current list of tasks to file."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void saveTasksToFile() throws IOException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String root \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assert Files.exists(Paths.get(root, \"data\", \"dukeTaskList.txt\")) : \"File does not exist\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        FileWriter fw \u003d new FileWriter(Paths.get(root, \"data\", \"dukeTaskList.txt\").toString());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        for (int i \u003d 0; i \u003c TaskList.getListSize(); i++) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            Task task \u003d TaskList.getTask(i);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            String toAdd \u003d task.taskSaver();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            fw.write(toAdd + \"\\n\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private boolean taskIsDone(String task) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return task.equals(\"1\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private Task assignTask(String[] next) throws UnknownTaskException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        switch (next[0]) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            task \u003d new Todo(next[2]);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            task \u003d new Deadline(next[2], TaskDate.parse(next[3]));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            task \u003d new Event(next[2], TaskDate.parse(next[3]));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            throw new UnknownTaskException(\"A task seems to be corrupted\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        if (this.taskIsDone(next[1])) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 124
    }
  },
  {
    "path": "src/main/java/juke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.task.TaskDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * The TaskList class holds and manages the current list of Tasks stored"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * by the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private static ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Constructs a TaskList"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param loadedTasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e loadedTasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.list \u003d loadedTasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Returns the current total taskList size."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Total taskList size."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public static int getListSize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Returns the task located at the given index of the taskList."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param index Index position of task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return The task to be returned."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public static Task getTask(int index) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return list.get(index);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Prints a list of current tasks."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String printList() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d this.list.size(); i++) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            String toBeAppended \u003d String.format(\"%s. %s\\n\", i, this.list.get(i - 1));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            output.append(toBeAppended);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Removes a task from the list of current tasks."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param taskNo Index of task to remove."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String removeFromList(int taskNo) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assert taskNo \u003c list.size() : \"Invalid Task index\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Task removedTask \u003d this.list.remove(taskNo);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String toBeAppended \u003d String.format(\"Well, if you insist. I\u0027ve removed:\\n%s\", removedTask);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        output.append(toBeAppended);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Adds a task to the list of current tasks."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String addToList(Task task) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.list.add(task);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String toBeAppended \u003d String.format(\"Alright matey, I\u0027ve added this task:\\n%s\\nYou have %s tasks in total.\","
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                task, this.list.size());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        output.append(toBeAppended);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Marks a task in list of current tasks as completed."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param taskNo Index of Task to mark."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String markTaskAsDone(int taskNo) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assert taskNo \u003c list.size() : \"Invalid Task index\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Task toBeDone \u003d this.list.get(taskNo);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        toBeDone.markAsDone();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.list.set(taskNo, toBeDone);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String toBeAppended \u003d String.format(\"Good Job, this task is now done:\\n%s\", toBeDone);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        output.append(toBeAppended);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Finds a task based on given keyword."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param keyword Keyword to use for search."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return List of Matching tasks."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String findTasks(String keyword) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        for (int i \u003d 0; i \u003c this.list.size(); i++) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            Task task \u003d this.list.get(i);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            String description \u003d task.getDescription();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            boolean thereIsMatch \u003d description.matches(\".*\\\\b\" + keyword + \"\\\\b.*\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            boolean isFirstMatch \u003d thereIsMatch \u0026\u0026 count \u003d\u003d 0;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            if (isFirstMatch) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                output.append(\"Here are the tasks you\u0027re trying to find.\\n\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            if (thereIsMatch) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                String toBeAppended \u003d String.format(\"%s. %s\\n\", count, task);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                output.append(toBeAppended);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        boolean thereWasNoMatch \u003d count \u003d\u003d 0;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        if (thereWasNoMatch) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            output.append(\"No match found :(\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Updates a task with the given description."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     *"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param taskNo         The index position of task."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param newDescription The new description to be used."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Successful message upon change."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String updateDescription(int taskNo, String newDescription) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assert taskNo \u003c list.size() : \"Invalid Task index\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Task taskToBeUpdated \u003d list.get(taskNo);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        taskToBeUpdated.setDescription(newDescription);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String toBeAppended \u003d String.format(\"I\u0027ve changed the task description! The task now looks like this:\\n%s\","
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                taskToBeUpdated);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        output.append(toBeAppended);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Updates a task with the given date."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     *"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param taskNo  The index position of task."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param newDate The new date to be used."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Successful message upon change."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String updateDate(int taskNo, TaskDate newDate) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assert taskNo \u003c list.size() : \"Invalid Task index\";"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Task task \u003d list.get(taskNo);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            Deadline taskToBeUpdated \u003d (Deadline) task;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            taskToBeUpdated.setByDate(newDate);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            Event taskToBeUpdated \u003d (Event) task;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            taskToBeUpdated.setAtDate(newDate);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String toBeAppended \u003d String.format(\"I\u0027ve changed the task date! The task now looks like this:\\n%s\","
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                task);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        output.append(toBeAppended);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Updates a task with the given description and given date."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     *"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param taskNo         The index position of task."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param newDescription The new description to be used."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param newDate        The new Date to be used."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Successful message upon change."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String updateDescriptionAndDate(int taskNo, String newDescription, TaskDate newDate) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assert taskNo \u003c list.size() : \"Invalid Task index\";"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Task task \u003d list.get(taskNo);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.updateDescription(taskNo, newDescription);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.updateDate(taskNo, newDate);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String toBeAppended \u003d String.format("
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                \"I\u0027ve changed the task description and date! The task now looks like this:\\n%s\","
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                task);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        output.append(toBeAppended);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 218
    }
  },
  {
    "path": "src/main/java/juke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents a command to be interpreted and executed by the Juke chatbot."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Executes whats required based on the type of command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param taskList List of tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param storage Storage of tasks onto disk"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Response Text to be output by chatbot."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public abstract String executeCommand(TaskList taskList, Storage storage);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 19
    }
  },
  {
    "path": "src/main/java/juke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents the command to delete a task from the current list of tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private Integer index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Constructs a DeleteCommand for a particular task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param index Index position of task to be deleted."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Executes the removal of the task from the taskList."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param taskList List of tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param storage Storage of tasks onto disk"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Response Text to be output by chatbot upon removal."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String executeCommand(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return taskList.removeFromList(this.index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 32
    }
  },
  {
    "path": "src/main/java/juke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents the command to mark a task from the current list of tasks, as done."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    protected Integer index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Constructs a DoneCommand for a particular task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param index Index position of task to be marked as done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Executes the marking of a task as done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param taskList List of tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param storage Storage of tasks onto disk"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Response text to be output by chatbot upon marking."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String executeCommand(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return taskList.markTaskAsDone(this.index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 33
    }
  },
  {
    "path": "src/main/java/juke/command/ErrorCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents the command to display an error message to User."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class ErrorCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Constructs an ErrorCommand with the given message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param message The error message to be output to user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public ErrorCommand(String message) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Executes the output of the error message to the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param taskList List of tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param storage Storage of tasks onto disk"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Response Error Message to be output by chatbot."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String executeCommand(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 33
    }
  },
  {
    "path": "src/main/java/juke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents the command to exit the chatbot."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Executes the exiting of chatbot, upon saving of tasks to file."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param taskList List of tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param storage Storage of tasks onto disk"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Response Text to be output by chatbot upon exiting."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String executeCommand(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            storage.saveTasksToFile();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            return \"That\u0027s it? That\u0027s a shame. Well, see you later then.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            return exception.getMessage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 28
    }
  },
  {
    "path": "src/main/java/juke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents the command to search for a task based on given String."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Constructs a FindCommand with a given keyword."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param keyword A String used to search for a task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Executes the search for tasks based on keyword."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param taskList List of tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param storage Storage of tasks onto disk"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return List of tasks that match the input keyword."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String executeCommand(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return taskList.findTasks(this.keyword);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 32
    }
  },
  {
    "path": "src/main/java/juke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents the command to output list of tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Executes the listing of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param taskList List of tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param storage Storage of tasks onto disk"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return List of stored tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String executeCommand(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return taskList.printList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 22
    }
  },
  {
    "path": "src/main/java/juke/command/TaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents the command to add a task to current list of tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class TaskCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Constructs a TaskCommand with a given Task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public TaskCommand(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Executes the addition of a task to current list of Tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param taskList List of tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param storage Storage of tasks onto disk"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Output text upon addition of task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String executeCommand(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return taskList.addToList(this.task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 33
    }
  },
  {
    "path": "src/main/java/juke/command/update/UpdateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke.command.update;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents the command to update a task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public abstract class UpdateCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    protected Integer index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Constructs an UpdateCommand."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param index Index position of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public UpdateCommand(int index) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 21
    }
  },
  {
    "path": "src/main/java/juke/command/update/UpdateDateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke.command.update;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.task.TaskDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents the command to update a task\u0027s date."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class UpdateDateCommand extends UpdateCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private TaskDate newDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Constructs a UpdateDateCommand."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param index Index position of task to be modified."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param newDate New Date to be used."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public UpdateDateCommand(int index, TaskDate newDate) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(index);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.newDate \u003d newDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Executes whats required based on the type of command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param taskList List of tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param storage  Storage of tasks onto disk"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Response Text to be output by chatbot."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String executeCommand(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return taskList.updateDate(super.index, this.newDate);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 34
    }
  },
  {
    "path": "src/main/java/juke/command/update/UpdateDescriptionAndDateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke.command.update;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.task.TaskDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents the command to update both the task description and date."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class UpdateDescriptionAndDateCommand extends UpdateCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private String newDescription;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private TaskDate newDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Constructs a UpdateDescriptionAndDateCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param index Index position of Task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param newDescription New Description to be used."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param newDate New Date to be used."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public UpdateDescriptionAndDateCommand(int index, String newDescription, TaskDate newDate) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.newDescription \u003d newDescription;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.newDate \u003d newDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Executes whats required based on the type of command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param taskList List of tasks"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param storage  Storage of tasks onto disk"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Response Text to be output by chatbot."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String executeCommand(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return taskList.updateDescriptionAndDate(super.index, this.newDescription, this.newDate);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 38
    }
  },
  {
    "path": "src/main/java/juke/command/update/UpdateDescriptionCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke.command.update;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents the command to update a task\u0027s description."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class UpdateDescriptionCommand extends UpdateCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private String newDescription;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Constructs an UpdateDescriptionCommand."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param index Index position of task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param newDescription New description to be used."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public UpdateDescriptionCommand(int index, String newDescription) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(index);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.newDescription \u003d newDescription;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Executes whats required based on the type of command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param taskList List of tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param storage  Storage of tasks onto disk"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Response Text to be output by chatbot."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String executeCommand(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return taskList.updateDescription(super.index, this.newDescription);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 34
    }
  },
  {
    "path": "src/main/java/juke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents a general Exception specific to the Duke Chatbot."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Constructs a DukeException with a given message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param message Error Message to be output to the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 14
    }
  },
  {
    "path": "src/main/java/juke/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents a DukeException when a user does not input a description"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * for a Task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Constructs an EmptyDescriptionException with the appropriate message"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param message Error Message to be output to user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public EmptyDescriptionException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 15
    }
  },
  {
    "path": "src/main/java/juke/exception/EmptyTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents a DukeException when a user does not input a time"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * for a Task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class EmptyTimeException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Constructs an EmptyTimeException with the appropriate message"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param message Error Message to be output to user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public EmptyTimeException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 15
    }
  },
  {
    "path": "src/main/java/juke/exception/InvalidArgumentsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class InvalidArgumentsException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Constructs a DukeException with a given message."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param message Error Message to be output to the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public InvalidArgumentsException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 13
    }
  },
  {
    "path": "src/main/java/juke/exception/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents a DukeException when a user does not input an appropriate"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Constructs an UnknownCommandException with the appropriate message"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param message Error Message to be output to user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public UnknownCommandException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 15
    }
  },
  {
    "path": "src/main/java/juke/exception/UnknownTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents a DukeException when a user does not input a proper task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class UnknownTaskException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Constructs an UnknownTaskException with the appropriate message"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param message Error Message to be output to user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public UnknownTaskException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 14
    }
  },
  {
    "path": "src/main/java/juke/exception/UnknownTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents a DukeException when a user does not input a time"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * for a Task that requires a time."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class UnknownTimeException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Constructs an UnknownTimeException with the appropriate message"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param message Error Message to be output to user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public UnknownTimeException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 15
    }
  },
  {
    "path": "src/main/java/juke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents a Task to be done by a given deadline date."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private TaskDate by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Constructs a Deadline with an input description and by date."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param description Description of Deadline task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param by Date by which task is to be completed."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public Deadline(String description, TaskDate by) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Returns the representative text of the Deadline."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Representative text."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String taskSaver() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String type \u003d \"D\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return String.format(\"%s/%s/%s\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                type,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                super.taskSaver(),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                by.saveDateToDisk());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Sets the by date for Deadline."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param by New date to change to."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void setByDate(TaskDate by) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Outputs the Deadline as a String."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return String representation of Deadline."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                + this.by + \")\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 51
    }
  },
  {
    "path": "src/main/java/juke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents a Task that occurs at a given event date."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private TaskDate at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Constructs an Event Task with an input description and at Date."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param at"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public Event(String description, TaskDate at) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Returns the representative text of the Event."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Representative text."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String taskSaver() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String type \u003d \"E\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return String.format(\"%s/%s/%s\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                type,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                super.taskSaver(),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                at.saveDateToDisk());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Sets the At date to given date"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param at New Date to be changed to."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void setAtDate(TaskDate at) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Outputs the Event as a String."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return String representation of Event."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                + this.at + \")\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 50
    }
  },
  {
    "path": "src/main/java/juke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents a Task class with a given description"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Constructs a Task with a given description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param description Description of Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Gets the appropriate icon to represent current Done status of task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Icon String."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Marks Task as Done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Returns the representative text of the Task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Text that represents Task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String taskSaver() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String doneStatus \u003d this.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return doneStatus + \"/\" + this.description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Returns the description of Task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Description of task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Sets the Task Description"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Outputs the Task as a String."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return String representation of Task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 73
    }
  },
  {
    "path": "src/main/java/juke/task/TaskDate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class TaskDate {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private static final DateTimeFormatter BACKWARDS \u003d DateTimeFormatter.ISO_LOCAL_DATE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private static final DateTimeFormatter NORMAL \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private static final DateTimeFormatter PRINT_STYLE \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private TaskDate(LocalDate date) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Creates a TaskDate with given input text."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param dateToParse Input text to be parsed."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Parsed Task Date."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public static TaskDate parse(String dateToParse) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            return parseBackwardDate(dateToParse);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        } catch (DateTimeParseException exception) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            return parseNormalDate(dateToParse);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private static TaskDate parseBackwardDate(String dateToParse) throws DateTimeParseException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        LocalDate parsedDate \u003d LocalDate.parse(dateToParse, BACKWARDS);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return new TaskDate(parsedDate);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private static TaskDate parseNormalDate(String dateToParse) throws DateTimeParseException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        LocalDate parsedDate \u003d LocalDate.parse(dateToParse, NORMAL);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return new TaskDate(parsedDate);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String saveDateToDisk() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return this.date.format(BACKWARDS);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return this.date.format(PRINT_STYLE);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 50
    }
  },
  {
    "path": "src/main/java/juke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents a Todo class with an input description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Constructs a Todo task with the input description"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param description Description of the task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Returns the representative text of the Todo."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Representative text."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String taskSaver() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String type \u003d \"T\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return type + \"/\" + super.taskSaver();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Outputs the Todo as a String."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return String representation of Todo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 34
    }
  },
  {
    "path": "src/main/java/juke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.scene.shape.Rectangle;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Rectangle clip \u003d new Rectangle(displayPicture.getFitWidth(), displayPicture.getFitHeight());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        clip.setArcWidth(100);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        clip.setArcHeight(100);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        displayPicture.setClip(clip);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public static DialogBox getIntroMessage(Image img) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        DialogBox db \u003d new DialogBox(Ui.introMessage(), img);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 73
    }
  },
  {
    "path": "src/main/java/juke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.Juke;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private Juke juke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private Image man \u003d new Image(this.getClass().getResourceAsStream(\"/images/Man.jpg\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private Image woman \u003d new Image(this.getClass().getResourceAsStream(\"/images/Woman.jpg\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Sets up MainWindow with appropriate intro text."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                DialogBox.getIntroMessage(woman)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        );"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void setDuke(Juke d) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        juke \u003d d;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Juke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String response \u003d juke.getResponse(input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                DialogBox.getUserDialog(input, man),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                DialogBox.getDukeDialog(response, woman)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        );"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 59
    }
  },
  {
    "path": "src/main/java/juke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "package juke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " * Represents a Ui class that handles messages to be output to user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Utilises the parser to parse user commands."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @param line User input text."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * @return Command understood from user text."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public Command parseCommand(String line) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return this.parser.commandHandler(line);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     * Outputs the introduction messages to the user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public static String introMessage() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        return \"Yo what\u0027s up! The name\u0027s Juke\\nWhat do you need?\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 33
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "      \u003cHBox maxHeight\u003d\"-Infinity\" spacing\u003d\"1.0\" style\u003d\"-fx-background-color: #c9b70c;\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "              \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" textFill\u003d\"#b43636\" textOverrun\u003d\"CLIP\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                  \u003cFont name\u003d\"Cambria\" size\u003d\"14.0\"  /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "      \u003cStackPane\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "              \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 33
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c?import javafx.scene.effect.InnerShadow?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"juke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Type in a command...\" style\u003d\"-fx-background-color: #400e03; -fx-border-color: black;\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            \u003cFont name\u003d\"Verdana\" size\u003d\"17.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "         \u003c/font\u003e\u003c/TextField\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: wheat;\" text\u003d\"Send\" textAlignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                \u003cFont name\u003d\"Modern No. 20\" size\u003d\"22.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "         \u003ceffect\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            \u003cInnerShadow color\u003d\"#ab8484\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "         \u003c/effect\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        \u003c/Button\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: green;\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: black; -fx-border-color: pink; -fx-alignment: center;\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 31
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.command.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.task.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.task.Event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.task.TaskDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.task.Todo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.ui.Ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void testTodoParsing() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String stringToParse \u003d \"todo eat eggs\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String expectedText \u003d \"Alright matey, I\u0027ve added this task:\\n[T][\\u2718] eat eggs\\nYou have 1 tasks in total.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Command parsedCommand \u003d ui.parseCommand(stringToParse);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String actualText \u003d parsedCommand.executeCommand(taskList, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assertEquals(expectedText, actualText);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void testEventParsing() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String stringToParse \u003d \"event eat eggs /at 2020-09-17\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String expectedText \u003d \"Alright matey, I\u0027ve added this task:\\n[E][\\u2718] eat eggs (at: Sep 17 2020)\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                + \"You have 1 tasks in total.\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Command parsedCommand \u003d ui.parseCommand(stringToParse);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String actualText \u003d parsedCommand.executeCommand(taskList, storage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assertEquals(expectedText, actualText);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void testDeadlineParsing() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String stringToParse \u003d \"deadline eat eggs /by 2020-09-17\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String expectedText \u003d \"Alright matey, I\u0027ve added this task:\\n[D][\\u2718] eat eggs (by: Sep 17 2020)\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                + \"You have 1 tasks in total.\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Command parsedCommand \u003d ui.parseCommand(stringToParse);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String actualText \u003d parsedCommand.executeCommand(taskList, storage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assertEquals(expectedText, actualText);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void testDeleteParsing() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        taskList.addToList(new Event(\"eat eggs\", TaskDate.parse(\"2020-09-17\")));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String stringToParse \u003d \"delete 1\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String expectedText \u003d \"Well, if you insist. I\u0027ve removed:\\n[E][\\u2718] eat eggs (at: Sep 17 2020)\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Command parsedCommand \u003d ui.parseCommand(stringToParse);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String actualText \u003d parsedCommand.executeCommand(taskList, storage);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assertEquals(expectedText, actualText);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void testDoneParsing() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        taskList.addToList(new Event(\"eat eggs\", TaskDate.parse(\"2020-09-17\")));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String stringToParse \u003d \"done 1\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String expectedText \u003d \"Good Job, this task is now done:\\n[E][\\u2713] eat eggs (at: Sep 17 2020)\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Command parsedCommand \u003d ui.parseCommand(stringToParse);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String actualText \u003d parsedCommand.executeCommand(taskList, storage);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assertEquals(expectedText, actualText);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void testFindParsing() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        taskList.addToList(new Event(\"eat eggs\", TaskDate.parse(\"2020-09-17\")));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        taskList.addToList(new Deadline(\"cook eggs\", TaskDate.parse(\"2020-09-17\")));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        taskList.addToList(new Todo(\"wash dishes\"));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String stringToParse \u003d \"find dishes\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String expectedText \u003d \"Here are the tasks you\u0027re trying to find.\\n1. [T][\\u2718] wash dishes\\n\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Command parsedCommand \u003d ui.parseCommand(stringToParse);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String actualText \u003d parsedCommand.executeCommand(taskList, storage);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assertEquals(expectedText, actualText);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void testListParsing() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        taskList.addToList(new Event(\"eat eggs\", TaskDate.parse(\"2020-09-17\")));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        taskList.addToList(new Deadline(\"cook eggs\", TaskDate.parse(\"2020-09-17\")));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        taskList.addToList(new Todo(\"wash dishes\"));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String stringToParse \u003d \"list\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String expectedText \u003d \"1. [E][\\u2718] eat eggs (at: Sep 17 2020)\\n\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                + \"2. [D][\\u2718] cook eggs (by: Sep 17 2020)\\n\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                + \"3. [T][\\u2718] wash dishes\\n\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Command parsedCommand \u003d ui.parseCommand(stringToParse);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String actualText \u003d parsedCommand.executeCommand(taskList, storage);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assertEquals(expectedText, actualText);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void testUpdateDateParsing() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        taskList.addToList(new Event(\"eat eggs\", TaskDate.parse(\"2020-09-17\")));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String stringToParse \u003d \"update /number 1 /date 2020-09-30\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String expectedText \u003d \"I\u0027ve changed the task date! The task now looks like this:\\n\""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                + \"[E][\\u2718] eat eggs (at: Sep 30 2020)\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Command parsedCommand \u003d ui.parseCommand(stringToParse);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String actualText \u003d parsedCommand.executeCommand(taskList, storage);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assertEquals(expectedText, actualText);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void testUpdateDescriptionParsing() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        taskList.addToList(new Event(\"eat eggs\", TaskDate.parse(\"2020-09-17\")));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String stringToParse \u003d \"update /number 1 /description fry eggs\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String expectedText \u003d \"I\u0027ve changed the task description! The task now looks like this:\\n\""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                + \"[E][\\u2718] fry eggs (at: Sep 17 2020)\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Command parsedCommand \u003d ui.parseCommand(stringToParse);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String actualText \u003d parsedCommand.executeCommand(taskList, storage);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assertEquals(expectedText, actualText);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void testUpdateDateAndDescriptionParsing() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        taskList.addToList(new Event(\"eat eggs\", TaskDate.parse(\"2020-09-17\")));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String stringToParse \u003d \"update /number 1 /description fry eggs /date 2020-09-30\";"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String expectedText \u003d \"I\u0027ve changed the task description and date! The task now looks like this:\\n\""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                + \"[E][\\u2718] fry eggs  (at: Sep 30 2020)\";"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Command parsedCommand \u003d ui.parseCommand(stringToParse);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String actualText \u003d parsedCommand.executeCommand(taskList, storage);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assertEquals(expectedText, actualText);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void testOtherValidDateParsing() {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String stringToParse \u003d \"event eat eggs /at 17-09-2020\";"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String expectedText \u003d \"Alright matey, I\u0027ve added this task:\\n[E][\\u2718] eat eggs (at: Sep 17 2020)\\n\""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                + \"You have 1 tasks in total.\";"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Command parsedCommand \u003d ui.parseCommand(stringToParse);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String actualText \u003d parsedCommand.executeCommand(taskList, storage);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assertEquals(expectedText, actualText);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void testInvalidDateParsing() {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String stringToParse \u003d \"event eat eggs /at 09 17 2020\";"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String expectedText \u003d \"You need to provide a valid date! Check your formatting to see if it\u0027s valid.\";"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Command parsedCommand \u003d ui.parseCommand(stringToParse);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String actualText \u003d parsedCommand.executeCommand(taskList, storage);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assertEquals(expectedText, actualText);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void testInvalidCommandParsing() {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String stringToParse \u003d \"you wot\";"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String expectedText \u003d \"Um, are you sure that\u0027s not gibberish?\";"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Command parsedCommand \u003d ui.parseCommand(stringToParse);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String actualText \u003d parsedCommand.executeCommand(taskList, storage);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assertEquals(expectedText, actualText);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 219
    }
  },
  {
    "path": "src/test/java/TaskCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.command.TaskCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class TaskCommandTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void testCommandExecution() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Todo todo \u003d new Todo(\"Eat apples\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        TaskCommand taskCommand \u003d new TaskCommand(todo);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String expectedText \u003d \"Alright matey, I\u0027ve added this task:\\n[T][\\u2718] Eat apples\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                + \"You have 1 tasks in total.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String actualText \u003d taskCommand.executeCommand(taskList, storage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assertEquals(expectedText, actualText);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 27
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.task.TaskDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "import juke.task.Todo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void testAddingTask() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Event event \u003d new Event(\"eat eggs\", TaskDate.parse(\"2020-09-17\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String expectedText \u003d String.format(\"Alright matey, I\u0027ve added this task:\\n%s\\nYou have 1 tasks in total.\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                event);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String actualText \u003d taskList.addToList(event);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assertEquals(expectedText, actualText);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void testRemovingTask() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Event event \u003d new Event(\"eat eggs\", TaskDate.parse(\"2020-09-17\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        taskList.addToList(event);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String expectedText \u003d String.format(\"Well, if you insist. I\u0027ve removed:\\n%s\", event);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String actualText \u003d taskList.removeFromList(0);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assertEquals(expectedText, actualText);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void testFindTaskWithMatchingTasks() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Event event \u003d new Event(\"eat eggs\", TaskDate.parse(\"2020-09-17\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"cook eggs\", TaskDate.parse(\"2020-09-17\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Todo todo \u003d new Todo(\"wash dishes\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        taskList.addToList(event);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        taskList.addToList(deadline);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        taskList.addToList(todo);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String expectedText \u003d String.format(\"Here are the tasks you\u0027re trying to find.\\n1. %s\\n2. %s\\n\","
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                event, deadline);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String actualText \u003d taskList.findTasks(\"eggs\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assertEquals(expectedText, actualText);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void testFindTaskWithNoMatchingTasks() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Event event \u003d new Event(\"eat eggs\", TaskDate.parse(\"2020-09-17\"));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"cook eggs\", TaskDate.parse(\"2020-09-17\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Todo todo \u003d new Todo(\"wash dishes\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        taskList.addToList(event);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        taskList.addToList(deadline);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        taskList.addToList(todo);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String expectedText \u003d \"No match found :(\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String actualText \u003d taskList.findTasks(\"Madagascar\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assertEquals(expectedText, actualText);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void testUpdateDescription() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Event event \u003d new Event(\"eat eggs\", TaskDate.parse(\"2020-09-17\"));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        taskList.addToList(event);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String newDescription \u003d \"eat eggs and toast\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Event newEvent \u003d new Event(newDescription, TaskDate.parse(\"2020-09-17\"));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String expectedText \u003d String.format(\"I\u0027ve changed the task description! The task now looks like this:\\n%s\","
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                newEvent);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String actualText \u003d taskList.updateDescription(0, newDescription);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assertEquals(expectedText, actualText);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void testUpdateDate() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Event event \u003d new Event(\"eat eggs\", TaskDate.parse(\"2020-09-17\"));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        taskList.addToList(event);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        TaskDate newDate \u003d TaskDate.parse(\"2020-12-12\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Event newEvent \u003d new Event(\"eat eggs\", newDate);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String expectedText \u003d String.format(\"I\u0027ve changed the task date! The task now looks like this:\\n%s\","
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                newEvent);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String actualText \u003d taskList.updateDate(0, newDate);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assertEquals(expectedText, actualText);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    public void testUpdateDescriptionAndDate() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Event event \u003d new Event(\"eat eggs\", TaskDate.parse(\"2020-09-17\"));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        taskList.addToList(event);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String newDescription \u003d \"eat eggs and toast\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        TaskDate newDate \u003d TaskDate.parse(\"2020-12-12\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        Event newEvent \u003d new Event(newDescription, newDate);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String expectedText \u003d String.format(\"I\u0027ve changed the task description and date! \""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "                        + \"The task now looks like this:\\n%s\", newEvent);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        String actualText \u003d taskList.updateDescriptionAndDate(0, newDescription, newDate);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "        assertEquals(expectedText, actualText);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 117
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "todo Shopping"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "deadline CS2103T Project /by Thursday Night"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "event National Day Holiday /at August 9"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VaishakAnand"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java ..\\src\\main\\java\\Task.java ..\\src\\main\\java\\ToDo.java ..\\src\\main\\java\\Deadline.java ..\\src\\main\\java\\Event.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "VaishakAnand": 1,
      "-": 20
    }
  }
]
