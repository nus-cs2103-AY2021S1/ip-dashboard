[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.8\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.1\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "foongsq": 18,
      "-": 44
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": "[D][0] homework due /by 2020-08-10"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": "[T][0] piano practice #funn"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": "[D][0] iP #cs2103T /by 2020-09-10"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": "[E][0] piano exam #piano /at 2020-08-09"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": "[T][0] mum\u0027s birthday #family"
      }
    ],
    "authorContributionMap": {
      "foongsq": 6
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": "Duke is a chatbot that manages your tasks. You can use Duke to organize tasks that you need to do, deadlines and events ."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": "### Quickstart"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": "1. Make sure you have Java 11 or above installed in your computer"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": "1. Download the latest `duke.jar`."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": "1. Run the JAR file using the command `java -jar duke.jar` in the directory that the JAR file is in."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": "1. You can now use the program by typing in commands (described below)."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "foongsq"
        },
        "content": "### `todo` - Adding a todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": "Adds a task that you need to do in your to do list in Duke."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": "Format: `todo DESCRIPTION [#TAG]`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "foongsq"
        },
        "content": "Examples of usage: "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "foongsq"
        },
        "content": "* `todo do homework`"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "foongsq"
        },
        "content": "* `todo do homework #school`"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "foongsq"
        },
        "content": "### `deadline` - Adding a deadline"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "foongsq"
        },
        "content": "Adds a deadline into your to do list in Duke."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "foongsq"
        },
        "content": "Format: `deadline DESCRIPTION [#TAG] /by DATETIME` where `DATETIME` is in the format `YYYY-MM-DD HHMM`, and time is optional"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "foongsq"
        },
        "content": "Examples of usage: "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "foongsq"
        },
        "content": "* `deadline individual project /by 2020-09-17 2359`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "foongsq"
        },
        "content": "* `deadline individual project /by 2020-09-17`"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "foongsq"
        },
        "content": "* `deadline individual project #cs2103T /by 2020-09-17 2359`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "foongsq"
        },
        "content": "### `event` - Adding an event"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "foongsq"
        },
        "content": "Adds an event into your to do list in Duke."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "foongsq"
        },
        "content": "Format: `event DESCRIPTION [#TAG] /at DATETIME` where `DATETIME` is in the format `YYYY-MM-DD HHMM`, and time is optional"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "foongsq"
        },
        "content": "Examples of usage: "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "foongsq"
        },
        "content": "* `event mum’s birthday /at 2020-09-17 1800`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "foongsq"
        },
        "content": "* `event mum’s birthday /at 2020-09-17`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "foongsq"
        },
        "content": "* `event mum’s birthday #family /at 2020-09-17 1800`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "foongsq"
        },
        "content": "### `done` - Mark a task as done"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "foongsq"
        },
        "content": "Marks a task in your to do list as done."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "foongsq"
        },
        "content": "Format: `done TASKNUMBER`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "foongsq"
        },
        "content": "Example of usage: `done 2`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "foongsq"
        },
        "content": "### `delete` - Delete a task"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "foongsq"
        },
        "content": "Deletes a task from your to do list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "foongsq"
        },
        "content": "Format: `delete TASKNUMBER`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "foongsq"
        },
        "content": "Example of usage: `delete 2`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "foongsq"
        },
        "content": "### `find` - Find a task"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "foongsq"
        },
        "content": "Finds a task in your to do list according to a keyword input from the user."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "foongsq"
        },
        "content": "Format: `find KEYWORD`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "foongsq"
        },
        "content": "Example of usage: `find piano`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "foongsq"
        },
        "content": "### `list` - List all tasks"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "foongsq"
        },
        "content": "Displays all items in your to do list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "foongsq"
        },
        "content": "Example of usage: `list`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "foongsq"
        },
        "content": "### `bye` - Exit"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "foongsq"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "foongsq"
        },
        "content": "Example of usage: `bye`"
      }
    ],
    "authorContributionMap": {
      "foongsq": 67,
      "-": 14
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * Represents a bye command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @author Siqi"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @version 1.1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @since 2020-09-08"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private final String EXIT_STRING \u003d \"Bye bye!!! See you again next time :)\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param storage   The storage object that handles interactions with the"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *                  local file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param ui        The UI object that handles interactions with the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param taskList  The current list of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @return          The string to be displayed to the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @throws DukeException    When the input command is invalid."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public String execute(Storage storage, Ui ui, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        ui.printGoodbye();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        storage.write(taskList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return EXIT_STRING;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "foongsq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "foongsq": 28
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * Represents a command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @author Siqi"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @version 1.1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @since 2020-09-08"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param storage   The storage object that handles interactions with the"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *                  local file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param ui        The UI object that handles interactions with the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param taskList  The current list of tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @return          The string to be displayed to the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @throws DukeException    When the input command is invalid."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    abstract String execute(Storage storage, Ui ui, TaskList taskList) throws DukeException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "foongsq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "foongsq": 20
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * Represents a deadline task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @author Siqi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @version 1.`"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @since 2020-09-08"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "foongsq"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "foongsq"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Date in which the deadline task is due."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private LocalDate by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Time in which the deadline task is due."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     * Deadline constructor with date only."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     * @param desc   The description of the deadline task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     * @param by     The date that the deadline task is due."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    public Deadline(final String desc, final LocalDate by) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        super(desc);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        this.by \u003d by;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        this.time \u003d null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     * Deadline constructor with date and time."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     * @param desc  The description for the deadline task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     * @param by    The date that the deadline task is due."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     * @param time  The time that the deadline task is due."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    public Deadline(final String desc, final LocalDate by,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//                    final String time) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        super(desc);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        this.by \u003d by;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        this.time \u003d time;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     * Deadline constructor with date and marked as done."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     * @param desc          The description of the deadline task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     * @param isDone        The deadline task is marked as done."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     * @param by            The date that the deadline task is due."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    public Deadline(final String desc, final boolean isDone,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//                    final LocalDate by) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        super(desc, isDone);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        this.by \u003d by;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        this.time \u003d null;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Deadline constructor with date and time and marked as done."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param desc          The description of the deadline task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param isDone        The deadline task is marked as done."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param by            The date that the deadline task is due."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param time          The time that the deadline task is due."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public Deadline(final String desc, final boolean isDone,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                    final LocalDate by, final String time, final Tag tag) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        super(desc, isDone, tag);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Formats the task for display to the user."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @return The string containing the task details."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public String display() { //format time here"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        if (time \u003d\u003d null || time.isEmpty()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                    + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                    + \")\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                    + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                    + \" \" + time + \")\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                + by + (time \u003d\u003d null || time.isEmpty() ? \"\" : time)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "foongsq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "foongsq": 99
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * Represents a deadline command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @author Siqi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @version 1.1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @since 2020-09-08"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "foongsq"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "foongsq"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private final String command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private final int DEADLINE_LENGTH \u003d 8;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private final int TIME_LENGTH \u003d 4;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private final String BY_STRING \u003d \"/by\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public DeadlineCommand(String command) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private static String formatDate(String dateString) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        if (dateString.contains(\"/\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            dateString \u003d dateString.replaceAll(\"\\\\/\", \"-\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String[] dateStringArr \u003d dateString.split(\"-\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        dateString \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        for (int i \u003d 0; i \u003c dateStringArr.length; i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            if (dateStringArr[i].length() \u003c 2) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                dateStringArr[i] \u003d \"0\" + dateStringArr[i];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            if (i \u003e 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                dateString \u003d dateString + \"-\" + dateStringArr[i];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                dateString \u003d dateStringArr[i];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return dateString;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private String initiateAddDeadline(String desc, Tag tag, LocalDate dateObject,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            String timeString, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            int time \u003d Integer.parseInt(timeString);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            if (time \u003e\u003d 0000 \u0026\u0026 time \u003c\u003d 2359) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                return taskList.addDeadline(desc, tag, dateObject, timeString);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                throw new DukeException(\"Please enter a \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                        + \"valid time between 0000 and 2359\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } catch (NumberFormatException | DukeException nfe) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            throw new DukeException(\"Please input the time \""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                    + \"in the right format (eg. 1800)\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private String parseTime(String desc, Tag tag, String dateTime,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                             TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String[] dateTimeArray \u003d dateTime.split(\" \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String dateString \u003d dateTimeArray[0].trim();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String timeString \u003d dateTimeArray[1].trim();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        dateString \u003d formatDate(dateString);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        LocalDate dateObject \u003d LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        if (timeString.length() \u003d\u003d TIME_LENGTH) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return initiateAddDeadline(desc, tag, dateObject,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                    timeString, taskList);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return taskList.addDeadline(desc, tag, dateObject, \"\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private String parseDate(String desc, Tag tag, String date,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                             TaskList taskList) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String formattedDate \u003d formatDate(date);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        LocalDate dateObject \u003d LocalDate.parse(formattedDate);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return taskList.addDeadline(desc, tag, dateObject, \"\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private String parseDateTime(String desc, Tag tag, String dateTime,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                                 TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        boolean containsTimeInput \u003d dateTime.contains(\" \");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            if (containsTimeInput) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                return parseTime(desc, tag, dateTime, taskList);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                return parseDate(desc, tag, dateTime, taskList);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } catch (DateTimeException dte) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            throw new DukeException(\"Please enter your date \""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                    + \"and time in the format yyyy-mm-dd hhmm \""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                    + \"(eg. 2020-08-23 1800)\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private String splitDescTagDateTime(String descTagDateTimeString, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String[] descTagDateTimeArray \u003d descTagDateTimeString.split(BY_STRING);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String descTag \u003d descTagDateTimeArray[0].trim();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String dateTime \u003d descTagDateTimeArray[1].trim();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        boolean containsTag \u003d descTag.contains(\"#\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        if (containsTag) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            String[] descTagArray \u003d descTag.split(\"#\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            assert descTagArray.length \u003d\u003d 2 : \"descTagArray should have length of 2\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            String desc \u003d descTagArray[0].trim();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            String tagString \u003d descTagArray[1].trim();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            Tag tag \u003d new Tag(tagString);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return parseDateTime(desc, tag, dateTime, taskList);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return parseDateTime(descTag, new Tag(), dateTime, taskList);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param storage   The storage object that handles interactions with the"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *                  local file."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param ui        The UI object that handles interactions with the user."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param taskList  The current list of tasks."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @return          The string to be displayed to the user."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @throws DukeException    When the input command is invalid."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public String execute(Storage storage, Ui ui, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String descTagDateTimeString \u003d this.command.substring(DEADLINE_LENGTH).trim();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        boolean isDescTagDateTimeEmpty \u003d descTagDateTimeString.isEmpty();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        boolean containsDesc \u003d descTagDateTimeString.contains(BY_STRING) \u0026\u0026"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                !descTagDateTimeString.startsWith(BY_STRING);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        boolean containsDateTime \u003d !descTagDateTimeString.endsWith(BY_STRING);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        if (!isDescTagDateTimeEmpty"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                \u0026\u0026 containsDateTime"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                \u0026\u0026 containsDesc) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return splitDescTagDateTime(descTagDateTimeString, taskList);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            throw new DukeException(\"Please enter a valid deadline\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "foongsq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "foongsq": 137
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * Represents a delete command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @author Siqi"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @version 1.1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @since 2020-09-08"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private final String command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private final int DELETE_LENGTH \u003d 6;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public DeleteCommand(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private String initiateDeleteTask(String taskNumberString, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(taskNumberString);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        if (taskNumber \u003e\u003d 1) { //if input index is valid"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return taskList.deleteTask(taskNumber);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            throw new DukeException(\"Please enter a valid task number \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                    + \"to delete (index is not valid)\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param storage   The storage object that handles interactions with the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *                  local file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param ui        The UI object that handles interactions with the user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param taskList  The current list of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @return          The string to be displayed to the user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @throws DukeException    When the input command is invalid."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public String execute(Storage storage, Ui ui, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String taskNumberString \u003d this.command.substring(DELETE_LENGTH).trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        boolean isTaskNumberEmpty \u003d taskNumberString.isEmpty();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        boolean isTaskNumberANumber \u003d taskNumberString.matches(\"[0-9]+\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        if (!isTaskNumberEmpty \u0026\u0026 isTaskNumberANumber) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return initiateDeleteTask(taskNumberString, taskList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            throw new DukeException(\"Please enter a valid task number to\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                    + \" delete (substring doesn\u0027t match regex)\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "foongsq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "foongsq": 48
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "foongsq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "foongsq"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "foongsq"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Gets user\u0027s dialog box."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param text  The user\u0027s input."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param img   The user\u0027s character image."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @return      The user\u0027s dialog box"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Gets chatbot\u0027s dialog box."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param text  The chatbot\u0027s input."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param img   The chatbot\u0027s character image."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @return      The chatbot\u0027s dialog box"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "foongsq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "foongsq": 73
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * Represents a done command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @author Siqi"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @version 1.1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @since 2020-09-08"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private final String command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private final int DONE_LENGTH \u003d 4;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public DoneCommand(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private String initiateDoneTask(String taskNumberString, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(taskNumberString);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        if (taskNumber \u003e\u003d 1) { //if input index is valid"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return taskList.markTaskAsDone(taskNumber);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            throw new DukeException(\"Please enter a valid task number \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                    + \"to mark as done (index is not valid)\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param storage   The storage object that handles interactions with the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *                  local file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param ui        The UI object that handles interactions with the user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param taskList  The current list of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @return          The string to be displayed to the user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @throws DukeException    When the input command is invalid."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public String execute(Storage storage, Ui ui, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String taskNumberString \u003d this.command.substring(DONE_LENGTH).trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        boolean isTaskNumberEmpty \u003d taskNumberString.isEmpty();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        boolean isTaskNumberANumber \u003d taskNumberString.matches(\"[0-9]+\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        if (!isTaskNumberEmpty \u0026\u0026 isTaskNumberANumber) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return initiateDoneTask(taskNumberString, taskList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            throw new DukeException(\"Please enter a valid task number to \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                    + \"mark as done (substring doesn\u0027t match regex)\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "foongsq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "foongsq": 48
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * Represents a to do list chatbot called Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @author Siqi"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @version 1.1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @since 2020-09-08"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke  {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Storage object that handles reading and writing to local hard disk."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Task list that stores tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * UI object that handles interactions with the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private final String EXIT_STRING \u003d \"Bye bye!!! See you again next time :)\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Duke constructor."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            taskList \u003d storage.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } catch (DukeException de) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            ui.printLoadingError(de);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Duke constructor."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param filePath The path of the local copy where Duke saves list to."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public Duke(final String filePath) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            taskList \u003d storage.load();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } catch (DukeException de) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            ui.printLoadingError(de);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * This method runs Duke the chatbot by taking in commands from the user."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        ui.printGreeting();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        boolean isEnd \u003d false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        while (!isEnd) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            input \u003d ui.readCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            String resultString;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                resultString \u003d command.execute(this.storage, this.ui, this.taskList);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                resultString \u003d e.getMessage();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            isEnd \u003d resultString.equals(EXIT_STRING);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    protected String getResponse(String input) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String resultString;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            resultString \u003d command.execute(this.storage, this.ui, this.taskList);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            resultString \u003d e.getMessage();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return resultString;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * This is the main method which makes use of the run method."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param args Unused"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public static void main(final String[] args) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "foongsq": 90,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * Represents a Duke Exception."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @author Siqi"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @version 1.1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @since 2020-09-08"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * DukeException constructor."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param message   The exception message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public DukeException(final String message) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "foongsq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "foongsq": 17
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * Represents an event task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @author Siqi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @version 1.1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @since 2020-09-08"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "foongsq"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "foongsq"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * The date of the event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private LocalDate at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * The time of the event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     * Event constructor with date only."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     * @param desc   The description of the event."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     * @param at            The date of the event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    public Event(final String desc, final LocalDate at) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        super(desc);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        this.at \u003d at;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     * Event constructor with date and time."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     * @param desc          The description of the event."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     * @param at            The date of the event."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     * @param time          The time of the event."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    public Event(final String desc, final LocalDate at,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//                 final String time) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        super(desc);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        this.at \u003d at;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        this.time \u003d time;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     * Event constructor with date and marked as done."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     * @param desc   The description of the event."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     * @param isDone        The event is marked as done."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     * @param at            The date of the event."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    public Event(final String desc, final boolean isDone,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//                 final LocalDate at) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        super(desc, isDone);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        this.at \u003d at;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        this.time \u003d null;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Event constructor with date and time and marked as done."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param desc          The description of the event."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param isDone        The event is marked as done."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param at            The date of the event."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param time          The time of the event."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public Event(final String desc, final boolean isDone,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                 final LocalDate at, final String time, final Tag tag) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        super(desc, isDone, tag);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Formats the task for display to the user."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @return The string containing the task details."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public String display() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        if (time \u003d\u003d null || time.isEmpty()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                    + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                    + \")\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                    + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                    + \" \" + time + \")\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                + (time \u003d\u003d null || time.isEmpty() ? \"\" : \" \" + time)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "foongsq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "foongsq": 98
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * Represents an event command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @author Siqi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @version 1.1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @since 2020-09-08"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "foongsq"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "foongsq"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private final String command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private final int EVENT_LENGTH \u003d 5;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private final int TIME_LENGTH \u003d 4;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private final String AT_STRING \u003d \"/at\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public EventCommand(String command) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private static String formatDate(String dateString) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        if (dateString.contains(\"/\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            dateString \u003d dateString.replaceAll(\"\\\\/\", \"-\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String[] dateStringArr \u003d dateString.split(\"-\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        dateString \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        for (int i \u003d 0; i \u003c dateStringArr.length; i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            if (dateStringArr[i].length() \u003c 2) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                dateStringArr[i] \u003d \"0\" + dateStringArr[i];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            if (i \u003e 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                dateString \u003d dateString + \"-\" + dateStringArr[i];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                dateString \u003d dateStringArr[i];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return dateString;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private String initiateAddEvent(String desc, Tag tag, LocalDate dateObject,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                                       String timeString, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            int time \u003d Integer.parseInt(timeString);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            if (time \u003e\u003d 0000 \u0026\u0026 time \u003c\u003d 2359) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                return taskList.addEvent(desc, tag, dateObject, timeString);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                throw new DukeException(\"Please enter a \""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                        + \"valid time between 0000 and 2359\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            throw new DukeException(\"Please input the \""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                    + \"time in the right format (eg. 1800)\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private String parseTime(String desc, Tag tag, String dateTime,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                             TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String[] dateTimeArray \u003d dateTime.split(\" \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String dateString \u003d dateTimeArray[0].trim();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String timeString \u003d dateTimeArray[1].trim();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        dateString \u003d formatDate(dateString);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        LocalDate dateObject \u003d LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        if (timeString.length() \u003d\u003d TIME_LENGTH) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return initiateAddEvent(desc, tag, dateObject, timeString, taskList);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return taskList.addEvent(desc, tag, dateObject, \"\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private String parseDate(String desc, Tag tag, String date,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                             TaskList taskList) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String formattedDate \u003d formatDate(date);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        LocalDate dateObject \u003d LocalDate.parse(formattedDate);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return taskList.addEvent(desc, tag, dateObject, \"\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private String parseDateTime(String desc, Tag tag, String dateTime,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                                 TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        boolean containsTimeInput \u003d dateTime.contains(\" \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            if (containsTimeInput) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                return parseTime(desc, tag, dateTime, taskList);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                return parseDate(desc, tag, dateTime, taskList);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } catch (DateTimeException dte) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            throw new DukeException(\"Please enter your date \""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                    + \"and time in the format yyyy-mm-dd hhmm \""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                    + \"(eg. 2020-08-23 1800)\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private String splitDescTagDateTime(String descDateTimeString, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String[] descTagDateTimeArray \u003d descDateTimeString.split(AT_STRING);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String descTag \u003d descTagDateTimeArray[0].trim();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String dateTime \u003d descTagDateTimeArray[1].trim();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        boolean containsTag \u003d descTag.contains(\"#\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        if (containsTag) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            String[] descTagArray \u003d descTag.split(\"#\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            assert descTagArray.length \u003d\u003d 2 : \"descTagArray should have length of 2\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            String desc \u003d descTagArray[0].trim();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            String tagString \u003d descTagArray[1].trim();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            Tag tag \u003d new Tag(tagString);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return parseDateTime(desc, tag, dateTime, taskList);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return parseDateTime(descTag, new Tag(), dateTime, taskList);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param storage   The storage object that handles interactions with the"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *                  local file."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param ui        The UI object that handles interactions with the user."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param taskList  The current list of tasks."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @return          The string to be displayed to the user."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @throws DukeException    When the input command is invalid."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public String execute(Storage storage, Ui ui, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String descTagDateTimeString \u003d this.command.substring(EVENT_LENGTH).trim();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        boolean isDescDateTimeEmpty \u003d descTagDateTimeString.isEmpty();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        boolean containsDesc \u003d descTagDateTimeString.contains(AT_STRING) \u0026\u0026"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                !descTagDateTimeString.startsWith(AT_STRING);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        boolean containsDateTime \u003d !descTagDateTimeString.endsWith(AT_STRING);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        if (!isDescDateTimeEmpty \u0026\u0026 containsDesc \u0026\u0026 containsDateTime) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return splitDescTagDateTime(descTagDateTimeString, taskList);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            throw new DukeException(\"Please enter a valid event\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "foongsq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "foongsq": 134
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * Represents a find command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @author Siqi"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @version 1.1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @since 2020-09-08"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private final String command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private final int FIND_LENGTH \u003d 4;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public FindCommand(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private TaskList initiateFind(final TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String queryString \u003d this.command.substring(FIND_LENGTH).trim();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        boolean isQueryStringEmpty \u003d queryString.isEmpty();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        if (!isQueryStringEmpty) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return taskList.findTasks(queryString);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            throw new DukeException(\"Please enter a valid search item\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param storage   The storage object that handles interactions with the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *                  local file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param ui        The UI object that handles interactions with the user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param taskList  The current list of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @return          The string to be displayed to the user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @throws DukeException    When the input command is invalid."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public String execute(Storage storage, Ui ui, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        TaskList matchingTasks \u003d initiateFind(taskList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return ui.printMatchingTasks(matchingTasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "foongsq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "foongsq": 41
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @author Siqi"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @version 1.1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @since 2020-09-08"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "foongsq"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "foongsq": 14
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * Represents a list command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @author Siqi"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @version 1.1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @since 2020-09-08"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param storage   The storage object that handles interactions with the"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *                  local file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param ui        The UI object that handles interactions with the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param taskList  The current list of tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @return          The string to be displayed to the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @throws DukeException    When the input command is invalid."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public String execute(Storage storage, Ui ui, TaskList taskList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return ui.printTasks(taskList);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "foongsq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "foongsq": 23
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "foongsq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "foongsq"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @version 1.1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @since 2020-09-08"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "foongsq"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            Image img \u003d new Image(this.getClass().getResourceAsStream(\"/images/grizz.jpg\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            stage.setTitle(\"Grizz Chatbot\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            stage.getIcons().add(img);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "foongsq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "foongsq": 36
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "foongsq"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @version 1.1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @since 2020-09-08"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "foongsq"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private final String EXIT_STRING \u003d \"Bye bye!!! See you again next time :)\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/icebear.jpg\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/grizz.jpg\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Initializes a main window for Duke GUI."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                DialogBox.getDukeDialog(\"Hey there! I\u0027m Grizz.\\n\" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                                \"What can I do for you today?\\n\", dukeImage)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        );"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        boolean isEnd \u003d response.equals(EXIT_STRING);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        );"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        if (isEnd) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "foongsq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "foongsq": 65
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * Represents a parser that makes sense of user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @author Siqi"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @version 1.1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @since 2020-09-08"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "foongsq"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private final static int LABEL_LENGTH \u003d 6;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private final static String BY_STRING \u003d \"/by\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private final static String AT_STRING \u003d \"/at\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private final static String PARSE_ERROR \u003d \"Uh oh I can\u0027t read the task\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            \" you saved in your local file.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private static Deadline createDeadline(String desc, Tag tag, String dateTime,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "foongsq"
        },
        "content": "           boolean isTaskDone, boolean containsTime) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        if (containsTime) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            String[] dateTimeArray \u003d dateTime.split(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            String date \u003d dateTimeArray[0].trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            String time \u003d dateTimeArray[1].trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            LocalDate dateObject \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return new Deadline(desc, isTaskDone, dateObject, time, tag);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else if (!containsTime) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            LocalDate dateObject \u003d LocalDate.parse(dateTime);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return new Deadline(desc, isTaskDone, dateObject, \"\", tag);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            throw new DukeException(PARSE_ERROR);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private static Event createEvent(String desc, Tag tag, String dateTime,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                        boolean isTaskDone, boolean containsTime) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        if (containsTime) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            String[] dateTimeArray \u003d dateTime.split(\" \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            String date \u003d dateTimeArray[0].trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            String time \u003d dateTimeArray[1].trim();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            LocalDate dateObject \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return new Event(desc, isTaskDone, dateObject, time, tag);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else if (!containsTime) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            LocalDate dateObj \u003d LocalDate.parse(dateTime);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return new Event(desc, isTaskDone, dateObj, \"\", tag);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            throw new DukeException(PARSE_ERROR);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private static Todo parseTodoInput(String taskString) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String descTag \u003d taskString.substring(LABEL_LENGTH).trim();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        boolean isTaskDone \u003d taskString.startsWith(\"[T][1]\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        boolean containsTag \u003d descTag.contains(\"#\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        if (containsTag) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            String[] descTagArray \u003d descTag.split(\"#\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            assert descTagArray.length \u003d\u003d 2 : \"descTagArray should have length of 2\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            String desc \u003d descTagArray[0].trim();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            String tagString \u003d descTagArray[1].trim();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            Tag tag \u003d new Tag(tagString);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return new Todo(desc, isTaskDone, tag);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return new Todo(descTag, isTaskDone, new Tag());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private static Deadline parseDeadlineInput(String taskString) throws DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String[] descTagDateTimeArray \u003d taskString.substring(LABEL_LENGTH).split(BY_STRING);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String descTag \u003d descTagDateTimeArray[0].trim();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String dateTime \u003d descTagDateTimeArray[1].trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        boolean isTaskDone \u003d taskString.startsWith(\"[D][1]\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        boolean containsTime \u003d dateTime.contains(\" \");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        boolean containsTag \u003d descTag.contains(\"#\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        if (containsTag) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            String[] descTagArray \u003d descTag.split(\"#\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            assert descTagArray.length \u003d\u003d 2 : \"descTagArray should have length of 2\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            String desc \u003d descTagArray[0].trim();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            String tagString \u003d descTagArray[1].trim();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            Tag tag \u003d new Tag(tagString);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return createDeadline(desc, tag, dateTime, isTaskDone, containsTime);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return createDeadline(descTag, new Tag(), dateTime, isTaskDone, containsTime);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private static Event parseEventInput(String taskString) throws DukeException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String[] descTagDateTimeArray \u003d taskString.substring(LABEL_LENGTH).split(AT_STRING);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String descTag \u003d descTagDateTimeArray[0].trim();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String dateTime \u003d descTagDateTimeArray[1].trim();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        boolean isTaskDone \u003d taskString.startsWith(\"[E][1]\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        boolean containsTime \u003d dateTime.contains(\" \");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        boolean containsTag \u003d descTag.contains(\"#\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        if (containsTag) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            String[] descTagArray \u003d descTag.split(\"#\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            assert descTagArray.length \u003d\u003d 2 : \"descTagArray should have length of 2\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            String desc \u003d descTagArray[0].trim();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            String tagString \u003d descTagArray[1].trim();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            Tag tag \u003d new Tag(tagString);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return createEvent(desc, tag, dateTime, isTaskDone, containsTime);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return createEvent(descTag, new Tag(), dateTime, isTaskDone, containsTime);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Parses list items from the saved list."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param taskString    The string to be parsed."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param taskList      The current task list."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @return TaskList     The updated task list."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public static TaskList parseTaskFromFile(final String taskString,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                       final TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        if (taskString.startsWith(\"[T]\")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            Todo todo \u003d parseTodoInput(taskString);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            taskList.add(todo);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else if (taskString.startsWith(\"[D]\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            Deadline deadline \u003d parseDeadlineInput(taskString);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            taskList.add(deadline);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else if (taskString.startsWith(\"[E]\")){"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            Event event \u003d parseEventInput(taskString);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            taskList.add(event);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            throw new DukeException(PARSE_ERROR);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Checks the input and calls the respective parsing functions."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param input     The user input."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @return          Whether the user is done using the chatbot."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @throws DukeException When the input is not recognized."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public static Command parse(final String input) throws DukeException {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        if (input.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else if (input.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else if (input.toLowerCase().startsWith(\"done\")) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return new DoneCommand(input);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else if (input.toLowerCase().startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return new DeleteCommand(input);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else if (input.toLowerCase().startsWith(\"find\")) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return new FindCommand(input);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else if (input.toLowerCase().startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return new TodoCommand(input);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else if (input.toLowerCase().startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return new DeadlineCommand(input);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else if (input.toLowerCase().startsWith(\"event\")) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return new EventCommand(input);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            throw new DukeException(\"Sorry I don\u0027t know what that means :(\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "foongsq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "foongsq": 160
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * Represents a storage class that allows data to be stored and"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * retrieved in/from a local file."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "foongsq"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @author Siqi"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @version 1.1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @since 2020-09-08"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "foongsq"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * The path of the storage file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Storage constructor."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param filePath The path of the local file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public Storage(final String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Loads the data from a local file and returns it as a TaskList."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @return The TaskList loaded from the file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @throws DukeException When there is a problem finding/creating the file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public TaskList load() throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        File directory \u003d new File(\"data/\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        if (!directory.exists()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            directory.mkdir();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        File f \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        if (f.exists()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                while (s.hasNext()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                    String taskString \u003d s.nextLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                    if (!taskString.isEmpty()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                        Parser.parseTaskFromFile(taskString, taskList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                return taskList;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            } catch (FileNotFoundException fnfe) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                throw new DukeException(fnfe.getMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else { //file f doesn\u0027t exist"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Saves data from the program into a local file."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param listToAdd         This is the task list to be saved."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @throws DukeException    When there is a problem writing to local file."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public void write(final TaskList listToAdd) throws DukeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            FileWriter resetfw \u003d new FileWriter(this.filePath);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            resetfw.write(\"\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            resetfw.close();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.filePath, true);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            for (int i \u003d 0; i \u003c listToAdd.size(); i++) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                String task \u003d listToAdd.get(i).toString();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                task \u003d task.replace(\"(\", \"/\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                task \u003d task.replace(\")\", \"\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                task \u003d task.replace(\":\", \"\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                fw.write(\"\\n\" + task);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            throw new DukeException(ioe.getMessage());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "foongsq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "foongsq": 94
    }
  },
  {
    "path": "src/main/java/Tag.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * Represents a tag."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @author Siqi"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @version 1.1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @since 2020-09-08"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": "public class Tag {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private String tag;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public Tag() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.tag \u003d \"\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public Tag(String tag) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return this.tag;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "foongsq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "foongsq": 23
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @author Siqi"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @version 1.1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @since 2020-09-08"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Task description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private String desc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * This states whether task is done."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private Tag tag;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Task constructor that creates a task marked as not done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param desc The description of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public Task(final String desc) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.tag \u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Task constructor that creates a task marked as done."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param desc      The description of the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param isDone    Whether the task is done."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public Task(final String desc, final boolean isDone) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.tag \u003d null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public Task(final String desc, final boolean isDone, final Tag tag) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public Task(final String desc, final Tag tag) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return (isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return this.desc;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @return This returns the same task that has been marked as done."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Formats the task for display to the user."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    abstract public String display();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        boolean containsTag \u003d !this.tag.toString().isBlank();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        if (containsTag) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return \"[\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                    + this.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                    + this.desc + \" #\" + this.tag.toString();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return \"[\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                    + this.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                    + this.desc;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "foongsq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "foongsq": 91
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * Represents a task list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @author Siqi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @version 1.1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @since 2020-09-08"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "foongsq"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "foongsq"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * The list of tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * A TaskList constructor."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Gives the size of the task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @return The size of task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Returns the task at the specified index in the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param index The index of the task to be returned."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @return      The task at the specified index in the list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public Task get(final int index) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param task  Task to be added to list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public void add(final Task task) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Marks the task at the specified index of the list as done."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param index The index of the task to be marked as done."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public String markTaskAsDone(final int index) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        Task newTask \u003d this.taskList.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.taskList.set(index - 1, newTask);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return Ui.printMarkAsDone(newTask);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Deletes the task at the index in the list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param index The index of the task to be deleted."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public String deleteTask(final int index) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        Task removed \u003d this.taskList.get(index - 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.taskList.remove(index - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return Ui.printRemoveTask(removed, this.taskList);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Adds a todo task to the list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param desc  The description of the todo task to be added."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @return      String to be printed."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public String addTodo(final String desc, final Tag tag) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        Task newTask \u003d new Todo(desc, false, tag);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.taskList.add(newTask);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return Ui.printTaskAdded(newTask, taskList);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Adds a deadline task (with date and time) to the list."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param desc          The description of the deadline task."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param dateObject    The date associated with the deadline task."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param timeString    The time associated with the deadline task."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @return              The string to be printed."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public String addDeadline(final String desc, final Tag tag, final LocalDate dateObject,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                            final String timeString) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        Task newTask \u003d new Deadline(desc, false, dateObject, timeString, tag);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.taskList.add(newTask);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return Ui.printTaskAdded(newTask, this.taskList);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Adds an event task (with date and time) to the list."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param desc          The description of the event task."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param dateObject    The date associated with the event task."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param timeString    The time associated with the deadline task."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @return String to be printed."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public String addEvent(final String desc, final Tag tag, final LocalDate dateObject,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                         final String timeString) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        Task newTask \u003d new Event(desc, false, dateObject, timeString, tag);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.taskList.add(newTask);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return Ui.printTaskAdded(newTask, this.taskList);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Finds tasks that match the query."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param input The string containing query."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @return      The task list containing tasks that match query."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public TaskList findTasks(final String input) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        TaskList result \u003d new TaskList();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            String taskDescription \u003d this.taskList.get(i).getDescription();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            if (taskDescription.contains(input)) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                result.add(this.taskList.get(i));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "foongsq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "foongsq": 132
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * Represents a to do task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @author Siqi"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @version 1.1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @since 2020-09-08"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     * A basic Todo constructor."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     * @param description The description of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    public Todo(final String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     * Todo constructor that creates a todo task that is marked as done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     * @param description The description of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     * @param isDone      The task is marked as done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    public Todo(final String description, final boolean isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        super(description, isDone);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    public Todo(final String desc, final Tag tag) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        super(desc, tag);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public Todo(final String desc, final boolean isDone, final Tag tag) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        super(desc, isDone, tag);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Formats the task for display to the user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @return This returns a string containing the task details."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public String display() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "foongsq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "foongsq": 48
    }
  },
  {
    "path": "src/main/java/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * Represents a todo command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @author Siqi"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @version 1.1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @since 2020-09-08"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * The string containing information about the todo task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private final String command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * The length of the string \"todo\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private final int TODO_LENGTH \u003d 4;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Todo constructor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param command   The string containing information about the todo task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public TodoCommand(String command) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private String parseDescAndTag(String descAndTag, TaskList taskList) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        boolean containsTag \u003d descAndTag.contains(\"#\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        if (containsTag) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            String[] descAndTagArray \u003d descAndTag.split(\"#\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            assert descAndTagArray.length \u003d\u003d 2 : \"descAndTagArray should have length of 2\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            String desc \u003d descAndTagArray[0].trim();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            String tagString \u003d descAndTagArray[1].trim();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            Tag tag \u003d new Tag(tagString);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return taskList.addTodo(desc, tag);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return taskList.addTodo(descAndTag, new Tag());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param storage   The storage object that handles interactions with the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *                  local file."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param ui        The UI object that handles interactions with the user."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param taskList  The current list of tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @return          The string to be displayed to the user."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @throws DukeException    When the input command is invalid."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public String execute(Storage storage, Ui ui, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String descAndTag \u003d this.command.substring(TODO_LENGTH).trim();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        boolean isDescAndTagEmpty \u003d descAndTag.isEmpty();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        if (!isDescAndTagEmpty) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            return parseDescAndTag(descAndTag, taskList);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            throw new DukeException(\"Please enter a valid todo\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "foongsq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "foongsq": 62
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * Represents a UI class that handles interactions with the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @author Siqi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": " * @since 2020-08-25"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "foongsq"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "foongsq"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Scanner object to take in user input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * UI constructor."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Gets the next line of input from the scanner."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @return This returns the next line from the scanner."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Prints a greeting when the user starts the program."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public void printGreeting() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        System.out.println(\"Heyy, I\u0027m Grizz.\\n\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                \"What can I do for you today?\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Prints a goodbye message when the user closes the program."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public void printGoodbye() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        System.out.println(\"Bye bye!!! See you again next time :)\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Prints the error message of an exception."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param e The exception which we want to print its error message."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public void printLoadingError(final Exception e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        System.out.println(e);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Prints all the tasks in a task list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param taskList  The task list to be printed."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @return          The message to be printed."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public String printTasks(final TaskList taskList) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String result \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            System.out.println(i + 1 + \". \" + taskList.get(i).display());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            result +\u003d i + 1 + \". \" + taskList.get(i).display() + \"\\n\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Prints all the tasks in a task list that matches query."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param taskList  Task list containing tasks to be printed."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @return          The message to be printed."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public String printMatchingTasks(final TaskList taskList) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String result \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            System.out.println(taskList.get(i).display());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            result +\u003d taskList.get(i).display() + \"\\n\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Prints a message confirming that a task has been added."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param task  The task that has been added."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param list  The list to which the task has been added."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @return      The message to be printed."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public static String printTaskAdded(final Task task,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                                      final ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String taskAddedMessage \u003d \"Added task: \" + task.display()"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                + \"\\nYou have \" + list.size() + \" task(s) left in your list.\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        System.out.println(taskAddedMessage);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return taskAddedMessage;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Prints a message confirming that a task has been done."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param task  The task that has been marked as done."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @return      The message to be printed."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public static String printMarkAsDone(final Task task) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String taskDoneMessage \u003d \"Marked task as done:\\n\" + task.display();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        System.out.println(taskDoneMessage);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return taskDoneMessage;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * Prints a message confirming that a task has been deleted."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param task      The task that has been removed."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @param list      The list from which the task has been removed."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     * @return          The message to be printed."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "foongsq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public static String printRemoveTask(final Task task,"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                                       final ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        String taskRemovedMessage \u003d \"Removed task:\\n\" + task.display()"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                + \"\\nYou have \" + list.size()"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                + \" task(s) left in your list.\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        System.out.println(taskRemovedMessage);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        return taskRemovedMessage;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "foongsq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "foongsq": 131
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": "\u003cfx:root alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: cfbacf;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" lineSpacing\u003d\"1.0\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: dbd0db; -fx-background-radius: 5; -fx-padding: 10;\" text\u003d\"Label\" textOverrun\u003d\"CLIP\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                \u003cFont name\u003d\"Arial\" size\u003d\"13.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                \u003cInsets left\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "foongsq"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "foongsq": 27
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": "\u003c?import javafx.scene.control.Accordion?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "foongsq"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "foongsq"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Enter text here\" style\u003d\"-fx-background-color: dbd0db;\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "foongsq"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            \u003cFont name\u003d\"Arial\" size\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "foongsq"
        },
        "content": "         \u003c/font\u003e\u003c/TextField\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"557.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: dbd0db; -fx-background-radius: 5;\" text\u003d\"Send\" textFill\u003d\"#595159\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "foongsq"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            \u003cFont name\u003d\"Arial Bold\" size\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "foongsq"
        },
        "content": "         \u003c/font\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: a894a8;\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"554.0\" prefWidth\u003d\"388.0\" spacing\u003d\"10.0\" style\u003d\"-fx-background-color: cfbacf;\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "foongsq"
        },
        "content": "               \u003cpadding\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "foongsq"
        },
        "content": "                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "foongsq"
        },
        "content": "               \u003c/padding\u003e\u003c/VBox\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "foongsq"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "foongsq"
        },
        "content": "      \u003cAccordion /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "foongsq"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "foongsq": 32
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    public void descDateConstructor_normalInput_success(){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        LocalDate date \u003d LocalDate.parse(\"2020-08-24\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        Deadline deadline \u003d new Deadline(\"family day\", date);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        assertEquals(\"[D][0] family day (by: 2020-08-24)\", deadline.toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    public void descDateDoneConstructor_normalInput_success(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        LocalDate date \u003d LocalDate.parse(\"2020-08-24\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        Deadline deadline \u003d new Deadline(\"family day\", true, date);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        assertEquals(\"[D][1] family day (by: 2020-08-24)\", deadline.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    public void display_normalInput_success(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        LocalDate date \u003d LocalDate.parse(\"2020-08-24\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        Deadline deadline \u003d new Deadline(\"family day\", date);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        assertEquals(\"[D][0] family day (by: Aug 24 2020)\", deadline.display());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    public void descDateConstructor_emptyDesc_success(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        LocalDate date \u003d LocalDate.parse(\"2020-08-24\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        Deadline deadline \u003d new Deadline(\"\", date);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        assertEquals(\"[D][0]  (by: 2020-08-24)\", deadline.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "foongsq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "foongsq": 31
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    //tests if duke can run"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    public void dukeTest(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": "        new Duke(\"../../data/duke.txt\").run();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "foongsq": 9
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    public void descDateConstructor_normalInput_success(){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        LocalDate date \u003d LocalDate.parse(\"2020-08-24\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        Event event \u003d new Event(\"do homework\", date);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        assertEquals(\"[E][0] do homework (at: 2020-08-24)\", event.toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    public void descDateDoneConstructor_normalInput_success(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        LocalDate date \u003d LocalDate.parse(\"2020-08-24\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        Event event \u003d new Event(\"do homework\", true, date);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        assertEquals(\"[E][1] do homework (at: 2020-08-24)\", event.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    public void display_normalInput_success(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        LocalDate date \u003d LocalDate.parse(\"2020-08-24\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        Event event \u003d new Event(\"do homework\", true, date);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        assertEquals(\"[E][1] do homework (at: Aug 24 2020)\", event.display());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    public void descDateConstructor_emptyDesc_success(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        LocalDate date \u003d LocalDate.parse(\"2020-08-24\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        Event event \u003d new Event(\"\", true, date);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        assertEquals(\"[E][1]  (at: 2020-08-24)\", event.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "foongsq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "foongsq": 31
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    public void descConstructor_normalInput_success(){ //tests basic constructor"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        Todo todo \u003d new Todo(\"do homework\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        assertEquals(\"[T][0] do homework\", todo.toString());"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    public void descDoneConstructor_normalInput_success(){ //test constructor that marks task as done"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        Todo todo \u003d new Todo(\"watch youtube videos\", true);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        assertEquals(\"[T][1] watch youtube videos\", todo.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    public void display_normalInput_success(){ //tests display() method"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        Todo todo \u003d new Todo(\"watch youtube videos\", true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        assertEquals(\"[T][1] watch youtube videos\", todo.display());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    public void descConstructor_emptyDesc_success(){ //tests display() method"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        Todo todo \u003d new Todo(\"\", true);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//        assertEquals(\"[T][1] \", todo.display());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "foongsq"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "foongsq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "foongsq": 27
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "foongsq"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "foongsq"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "foongsq"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "foongsq"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "foongsq"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "foongsq"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "foongsq"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "foongsq"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "foongsq"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "foongsq": 9
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "foongsq"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "foongsq": 1,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "foongsq"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "foongsq": 1,
      "-": 37
    }
  }
]
