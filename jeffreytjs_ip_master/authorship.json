[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "D | 1 | return book | 2020-06-06"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "E | 1 | project meeting Aug | 2019-12-12 1800"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "T | 0 | join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "T | 1 | borrow book"
      }
    ],
    "authorContributionMap": {
      "jeffreytjs": 5
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public Duke(String fileName) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        this.storage \u003d new Storage(fileName);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            storage.loadData(tasks);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            ui.fileLoaded();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            ui.showErrorMsg(e);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        this.ui.sayGreeting();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                String nextCommand \u003d this.ui.getNextCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                Command c \u003d Parser.parse(nextCommand, tasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                if (c !\u003d null) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                    c.execute(this.ui, this.storage, this.tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                    isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                ui.showErrorMsg(e);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        new Duke(\"duke.txt\").run();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "jeffreytjs": 36
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeffreytjs": 5
    }
  },
  {
    "path": "src/main/java/Helper.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "public class Helper extends Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public static void addToDo(String[] line, ArrayList\u003cTask\u003e taskList) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        String description \u003d line[1];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Description of todo unclear. Here\u0027s an example: \u0027todo borrow book\u0027\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        Task task \u003d new ToDo(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        ReadWriteFile.writeToFile(taskList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                + task + \"\\n Now you have \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                + taskList.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public static void showList(ArrayList\u003cTask\u003e taskList) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            throw new DukeException(\"The list is empty! Add in some new tasks!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        for (Task item : taskList) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            System.out.println(counter + \". \" + item);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public static void markAsDone(String[] line, ArrayList\u003cTask\u003e taskList) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        if (line.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            throw new DukeException(\"Tell me which task you have done!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        if (line[1].isEmpty()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            throw new DukeException(\"Tell me which task you have done!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        int task_index \u003d Integer.parseInt(line[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        if (task_index \u003e taskList.size()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            throw new DukeException(\"Only existing tasks of index \u003c\u003d \" + taskList.size() + \" can be marked as done!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        Task task \u003d taskList.get(task_index - 1);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" + task);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public static void addDeadline(String[] line, ArrayList\u003cTask\u003e taskList) throws DukeException{"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        String[] description \u003d line[1].split(\" /by \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        if (description.length !\u003d 2) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Description of deadline unclear. Here\u0027s an example: \u0027deadline return book /by Sunday\u0027\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        String deadlineDate \u003d formatDate(description[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        Task task \u003d new Deadline(description[0], deadlineDate);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                + task + \"\\n Now you have \""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                + taskList.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public static void addEvent(String[] line, ArrayList\u003cTask\u003e taskList) throws DukeException{"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        String[] description \u003d line[1].split(\" /at \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        if (description.length !\u003d 2) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Description of event unclear. Here\u0027s an example: \u0027event project meeting /at Mon 2-4pm\u0027\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        String eventDate \u003d formatDate(description[1]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        Task task \u003d new Event(description[0], eventDate);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                + task + \"\\n Now you have \""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                + taskList.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public static void deleteTask(String[] line, ArrayList\u003cTask\u003e taskList) throws DukeException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        if (line.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            throw new DukeException(\"Tell me which task you want to delete!\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        if (line[1].isEmpty()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            throw new DukeException(\"Tell me which task you want to delete!\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        int task_index \u003d Integer.parseInt(line[1]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        if (task_index \u003e taskList.size()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            throw new DukeException(\"Only existing tasks of index \u003c\u003d \" + taskList.size() + \" can be deleted!\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        Task task \u003d taskList.get(task_index - 1);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        taskList.remove(task);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                + task + \"\\n Now you have \""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                + taskList.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    private static String formatDate(String date) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        LocalDate taskDate;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        LocalTime taskTime \u003d null;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        date \u003d date.replace(\u0027/\u0027, \u0027-\u0027);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        String[] dateArguments \u003d date.split(\" \");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        taskDate \u003d LocalDate.parse(dateArguments[0]);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        if (dateArguments.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH[:]mm\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            taskTime \u003d LocalTime.parse(dateArguments[1], formatter);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        System.out.println((taskDate));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        String output \u003d taskDate.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        if (taskTime !\u003d null) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            output +\u003d \", \" + taskTime.format(DateTimeFormatter.ofLocalizedTime(FormatStyle.SHORT));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeffreytjs": 120
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public static Command parse(String nextCommand, TaskList tasks) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        String[] line \u003d nextCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        String operation \u003d line[0];"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        switch (operation) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            System.out.println(\"Bye bye. See you again soon!\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                Helper.showList(tasks.getTasks());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                Helper.markAsDone(line, tasks.getTasks());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            if (line.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                System.out.println(\"☹ OOPS! Description for command \u0027\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                        + operation + \"\u0027 not found, try again!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            } else if (operation.equals(\"todo\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                    Helper.addToDo(line, tasks.getTasks());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            } else if (operation.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                    Helper.addDeadline(line, tasks.getTasks());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                    Helper.addEvent(line, tasks.getTasks());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                Helper.deleteTask(line, tasks.getTasks());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            System.out.println(\"☹ Sorry, I don\u0027t recognise that command! \""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                    + \"Try one of the following instead: todo, event, deadline, done or delete\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeffreytjs": 67
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    private final File dataDirectory;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    private final File dataFile;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    private final String dataFilePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public Storage(String fileName) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        String dataDirectoryPath \u003d Paths.get(\"data\").toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        dataDirectory \u003d new File(dataDirectoryPath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        dataFilePath \u003d Paths.get(\"data\", fileName).toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        dataFile \u003d new File(dataFilePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public void loadData(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        this.checkDataDirectoryExist();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        boolean toLoadDataFile \u003d this.checkDataFileExist();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        if (toLoadDataFile) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                BufferedReader br \u003d new BufferedReader(new FileReader(dataFilePath));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                String line;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                    String[] taskInputs \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                    String taskType \u003d taskInputs[0].trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                    Task t;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                    switch (taskType) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                        t \u003d new ToDo(taskInputs[2].trim());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                        t \u003d new Deadline(taskInputs[2].trim(), taskInputs[3].trim());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                        t \u003d new Event(taskInputs[2].trim(), taskInputs[3].trim());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                        throw new DukeException(\"☹ Sorry, I don\u0027t recognise that command from the data \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                                + \"file!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                    if (taskInputs[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                        t.markAsDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                    taskList.add(t);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                br.close();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            } catch (IOException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public void checkDataDirectoryExist() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            FileReader readFile \u003d new FileReader(dataDirectory);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            File newDataDirectory \u003d new File(String.valueOf(dataDirectory));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            if(!newDataDirectory.exists()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                newDataDirectory.mkdir();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public boolean checkDataFileExist() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        boolean toLoadDataFile \u003d true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            if(this.dataFile.createNewFile()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                toLoadDataFile \u003d false;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                Ui.newFileCreated();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            toLoadDataFile \u003d false;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        return toLoadDataFile;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public static void saveData(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        java.nio.file.Path path \u003d java.nio.file.Paths.get(\"data\").resolve(\"duke.txt\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            StringBuilder content \u003d new StringBuilder();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            FileWriter fw \u003d new FileWriter(path.toString());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                    String taskDetails \u003d ((ToDo) task).saveToDo();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                    content.append(taskDetails).append(\"\\n\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                    String taskDetails \u003d ((Deadline) task).saveDeadline();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                    content.append(taskDetails).append(\"\\n\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                } else if (task instanceof Event){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                    String taskDetails \u003d ((Event) task).saveEvent();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                    content.append(taskDetails).append(\"\\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            fw.write(content.toString());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeffreytjs": 112
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public void add(Task newTask) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        this.taskList.add(newTask);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        return this.taskList.get(index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public int numTask() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public void list() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        for(int i \u003d 0; i \u003c this.taskList.size(); i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            String currentLine \u003d \"      \"+ (i + 1) + \". \" + this.taskList.get(i);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "            System.out.println(currentLine);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public Task removeTask(int index) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        return this.taskList.remove(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeffreytjs": 37
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public void sayGreeting() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        System.out.println(\"Hi there, I\u0027m TARS!\\nWhat can I do for you today?\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public void sayFarewell() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        System.out.println(\"Bye bye. See you again soon!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public String getNextCommand() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        String nextCommand \u003d sc.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        return nextCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public void showErrorMsg(DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public void fileLoaded() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        System.out.println(\"I found your saved tasks. You can view them using list.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public static void newFileCreated() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        System.out.println(\"I have created a new log file to help me remember what you tell me!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public void taskAdded(Task newTask, TaskList taskList) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                + newTask + \"\\nNow you have \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                + taskList.numTask() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public void taskDeleted(Task removeTask, TaskList taskList) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        System.out.println(\"Poof! I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                + removeTask + \"\\nNow you have \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                + taskList.numTask() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public void markAsDone(int index, TaskList taskList) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + taskList.get(index));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public void listTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        System.out.println(\"Let\u0027s see what we have here:\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        taskList.list();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeffreytjs": 57
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    protected String deadlineDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public Deadline(String description, String deadlineDate) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        this.deadlineDate \u003d deadlineDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public String saveDeadline() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        return String.format(\"D | %d | %s | %s\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                this.getIsDone() ? 1 : 0, this.getDescription(), this.deadlineDate);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.deadlineDate + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeffreytjs": 19
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    protected String eventDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public Event(String description, String eventDate) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        this.eventDate \u003d eventDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public String saveEvent() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        return String.format(\"E | %d | %s | %s\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                this.getIsDone() ? 1 : 0, this.getDescription(), this.eventDate);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.eventDate + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeffreytjs": 19
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        return (this.isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or cross symbols"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public Boolean getIsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + this.description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeffreytjs": 32
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public String saveToDo() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        return String.format(\"T | %d | %s\", this.getIsDone() ? 1 : 0,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "                this.getDescription());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeffreytjs": 17
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "deadline return book /by 2019/12/12 1800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "todo"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "deadline buy snacks"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jeffreytjs": 13
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "REM resolved symbols appearing as question mark"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "REM updated pathing, compile the code into the bin folder"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeffreytjs"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "jeffreytjs": 6
    }
  }
]
