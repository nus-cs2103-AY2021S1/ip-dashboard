[
  {
    "path": "data/test.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "D | 0 | return book | June 6th"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "T | 0 | borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "E | 1 | project meeting | Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "T | 0 | go for run"
      }
    ],
    "authorContributionMap": {
      "hansebastian": 4
    }
  },
  {
    "path": "src/main/java/Commands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "public enum Commands {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "     LIST, TODO, EVENT, DEADLINE, DONE, DELETE, UNKNOWN"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hansebastian": 3
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    public Deadline(String description, boolean isDone, String by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        return \"D | \" + super.toString() + \" | \" + this.by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hansebastian": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    private static final Path storageFilePath \u003d Paths.get(\".\", \"data\", \"test.txt\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    Duke() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        System.out.println(\"Hello from Duke\\nHow may I be of service \" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                \"to you this fine day sire?\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        this.storage \u003d new Storage(Duke.storageFilePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        this.taskList \u003d this.storage.getAllTasks();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        duke.awaitInstructions();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    // Gets the command from the user"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    private static String parseCommand(String userInput) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        String[] splitString \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        return splitString[0];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    private void writeToFile() throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    private void awaitInstructions() throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                String userInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                if (userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                    System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                String userCommand \u003d parseCommand(userInput);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                Commands command;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                    command \u003d Commands.valueOf(userCommand.toUpperCase());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                    command \u003d Commands.UNKNOWN;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                switch (command) { // Determine output from user input"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                    case LIST:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                        this.listAllItems();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                    case TODO:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                        this.addToDoTask(userInput);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                    case EVENT:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                        this.addEventTask(userInput);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                    case DEADLINE:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                        this.addDeadlineTask(userInput);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                    case DONE:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                        this.markTaskAsDone(userInput);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                    case DELETE:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                        this.deleteTask(userInput);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                        throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    private static boolean emptyToDoDescription(String userInput) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        return userInput.length() \u003c\u003d 4;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    private void deleteTask(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            String taskIndex \u003d userInput.substring(7);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            int index \u003d Integer.valueOf(taskIndex) - 1; // taskIndex started from 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            Task deletedTask \u003d this.taskList.remove(index);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            this.storage.deleteTask(index);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                    deletedTask.toString() + \"\\nNow you have \" + (this.taskList.size())"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                    + (this.taskList.size() \u003e 1 ? \" tasks\" : \" task\")"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                    + \" in the list.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        } catch (IndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            throw new DukeException(\"Please enter a valid task number for me delete.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    private void addToDoTask(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        if (emptyToDoDescription(userInput)) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        String taskDescription \u003d userInput.substring(5);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        ToDo newToDoItem \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        addItem(newToDoItem); // Add to taskList"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    private void addEventTask(String userInput) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        String taskDescription \u003d userInput.substring(6, userInput.indexOf(\"/at\") - 1);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        String eventDateTime \u003d userInput.substring(userInput.indexOf(\"/at\") + 4);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        Event newEventItem  \u003d new Event(taskDescription, eventDateTime);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        addItem(newEventItem);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    private void addDeadlineTask(String userInput) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        String taskDescription \u003d userInput.substring(9, userInput.indexOf(\"/by\") - 1);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        String deadlineBy \u003d userInput.substring(userInput.indexOf(\"/by\") + 4);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        Deadline newDeadlineItem \u003d new Deadline(taskDescription, deadlineBy);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        addItem(newDeadlineItem);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    // Updates taskList attribute to indicate task as done"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    public void markTaskAsDone(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            String taskIndex \u003d userInput.substring(5);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            int index \u003d Integer.valueOf(taskIndex) - 1; // taskIndex started from 1"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            Task completedTask \u003d this.taskList.get(index);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            completedTask.markAsDone();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            this.storage.updateTask(completedTask,index);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" +"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                    completedTask.toString());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        } catch (IndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            throw new DukeException(\"Please enter a valid task number for me to mark as done.\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    // Adds a task item to Duke\u0027s taskList, which may be an Event, ToDoItem, Deadline"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    public void addItem(Task newTask) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        this.taskList.add(newTask);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        this.storage.createTask(newTask); // Add to storage database"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n   \" +"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                newTask.toString() + \"\\nNow you have \" + (this.taskList.size())"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                + (this.taskList.size() \u003e 1 ? \" tasks\" : \" task\")"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                + \" in the list.\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    private void listAllItems() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        ArrayList\u003cTask\u003e currList \u003d this.taskList;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        currList.forEach(item -\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                System.out.println((currList.indexOf(item) + 1) + \".\" + item));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hansebastian": 164,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "       super(\"☹ OOPS!!! \" + errorMessage);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hansebastian": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    public Event (String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    public Event(String description, boolean isDone, String at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        return \"E | \" + super.toString() + \" | \" + this.at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hansebastian": 18
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    private final Path pathToStorage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    private List\u003cString\u003e allTasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    public Storage(Path pathToStorage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        this.pathToStorage \u003d pathToStorage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            // Create directory if needed"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            Path parentPath \u003d pathToStorage.getParent();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            Files.createDirectories(parentPath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            if (!Files.exists(pathToStorage)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                Files.createFile(pathToStorage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            // Get stored info if any"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            this.allTasks\u003d Files.readAllLines(pathToStorage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            System.out.println(\"Can\u0027t read file \" + e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "     * Converts string from task storage file to a task list for Duke to use."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "     * @return a list of Tasks readable by Duke."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    public ArrayList\u003cTask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        // Convert string to Tasks"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        this.allTasks.forEach(taskString -\u003e {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            char taskType \u003d taskString.charAt(0);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            String taskDetails \u003d taskString.substring(taskString.lastIndexOf(\"|\") + 2);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            boolean isDone \u003d false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            if (taskString.charAt(4) \u003d\u003d \u00271\u0027) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                isDone \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            switch(taskType) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                case \u0027T\u0027:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                    taskList.add(new ToDo(taskDetails, isDone));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                case \u0027E\u0027:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                    String eventDescription \u003d taskString.substring(8, taskString.lastIndexOf(\"|\") - 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                    taskList.add(new Event(eventDescription, isDone, taskDetails));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                case \u0027D\u0027:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                    String deadlineDescription \u003d taskString.substring(8, taskString.lastIndexOf(\"|\") - 1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                    taskList.add(new Deadline(deadlineDescription, isDone, taskDetails));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                    System.out.println(\"Unable to determine type of task\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        });"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    public void writeToStorage() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            File storageFile \u003d new File(String.valueOf(pathToStorage));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            FileWriter fw \u003d new FileWriter(storageFile);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            for (String task : this.allTasks) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "                fw.write(task + \u0027\\n\u0027);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    public void createTask(Task task) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        this.allTasks.add(task.toString());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        writeToStorage();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    public void updateTask(Task task, int taskIndex) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        this.allTasks.set(taskIndex, task.toString());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        writeToStorage();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    public void deleteTask(int taskIndex) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        this.allTasks.remove(taskIndex);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        writeToStorage();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hansebastian": 97
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "     * Constructor to use when reading data from the hard disk upon Duke start up."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "     * @param description is the details of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "     * @param isDone determines whether the task is marked as completed."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        return (isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "       return this.getStatusIcon() + \" | \" + this.description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hansebastian": 37
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hansebastian"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "        return \"T | \" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hansebastian": 15
    }
  },
  {
    "path": "text-ui-test/data/test.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "D | 0 | return book | June 6th"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "T | 1 | join sports club"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "T | 0 | borrow book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "D | 0 | return book | Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "E | 0 | project meeting | Mon 2-4pm"
      }
    ],
    "authorContributionMap": {
      "hansebastian": 5
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "blah"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "done 929"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "delete"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "hansebastian": 20
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hansebastian"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "hansebastian": 1,
      "-": 20
    }
  }
]
