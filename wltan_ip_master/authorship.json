[
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wltan"
        },
        "content": "import exceptions.CommandException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wltan"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wltan"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wltan"
        },
        "content": "    EXIT_CMD    (\"bye\", true),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wltan"
        },
        "content": "    LIST_CMD    (\"list\", true),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wltan"
        },
        "content": "    DONE_CMD    (\"done\", false),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wltan"
        },
        "content": "    TODO_CMD    (\"todo\", false),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wltan"
        },
        "content": "    EVENT_CMD   (\"event\", false),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wltan"
        },
        "content": "    DEADLINE_CMD(\"deadline\", false),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wltan"
        },
        "content": "    DELETE_CMD  (\"delete\", false);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wltan"
        },
        "content": "    private final String cmdString;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wltan"
        },
        "content": "    private final boolean noArgs;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wltan"
        },
        "content": "    Command(String cmdString, boolean noArgs) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wltan"
        },
        "content": "        this.cmdString \u003d cmdString;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wltan"
        },
        "content": "        this.noArgs \u003d noArgs;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wltan"
        },
        "content": "    public String getCmdString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wltan"
        },
        "content": "        return cmdString;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wltan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wltan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wltan"
        },
        "content": "        return cmdString;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wltan"
        },
        "content": "    public String strip(String input) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wltan"
        },
        "content": "        return input.substring(cmdString.length()).strip();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wltan"
        },
        "content": "    public static Command parseCommand(String input) throws CommandException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wltan"
        },
        "content": "        return Stream.of(values())"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wltan"
        },
        "content": "                .filter(cmd -\u003e cmd.noArgs"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wltan"
        },
        "content": "                        ? input.equals(cmd.cmdString)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wltan"
        },
        "content": "                        : input.startsWith(cmd.cmdString))"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wltan"
        },
        "content": "                .findFirst()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wltan"
        },
        "content": "                .orElseThrow(() -\u003e new CommandException(input, \"Unknown command\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wltan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wltan": 44
    }
  },
  {
    "path": "src/main/java/IPbot.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wltan"
        },
        "content": "import exceptions.CommandException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wltan"
        },
        "content": "import exceptions.IPException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wltan"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wltan"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wltan"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wltan"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wltan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wltan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wltan"
        },
        "content": "import java.util.function.Function;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wltan"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wltan"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wltan"
        },
        "content": "public class IPbot {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wltan"
        },
        "content": "    // user input"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wltan"
        },
        "content": "    private static final Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wltan"
        },
        "content": "    // task list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wltan"
        },
        "content": "    private static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wltan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wltan"
        },
        "content": "     * Entry point of the program."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wltan"
        },
        "content": "     * @param args command line arguments"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wltan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wltan"
        },
        "content": "        print(\"Hello from iPbot, what can I do for you?\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wltan"
        },
        "content": "        if (!sc.hasNextLine()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wltan"
        },
        "content": "            print(\"No input found. Exiting!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wltan"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wltan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wltan"
        },
        "content": "        Stream.generate(sc::nextLine)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wltan"
        },
        "content": "            .takeWhile(input -\u003e !Command.EXIT_CMD.getCmdString().equals(input))"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wltan"
        },
        "content": "            .forEach(input -\u003e {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wltan"
        },
        "content": "                if (input.isBlank()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wltan"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wltan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wltan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wltan"
        },
        "content": "                    final String output;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wltan"
        },
        "content": "                    final Command cmd \u003d Command.parseCommand(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wltan"
        },
        "content": "                    final String stripped \u003d cmd.strip(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wltan"
        },
        "content": "                    final String[] split;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wltan"
        },
        "content": "                    switch (cmd) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wltan"
        },
        "content": "                        case LIST_CMD:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wltan"
        },
        "content": "                            output \u003d listTasks();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wltan"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wltan"
        },
        "content": "                        case DONE_CMD:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wltan"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wltan"
        },
        "content": "                                final int id \u003d Integer.parseInt(stripped);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wltan"
        },
        "content": "                                output \u003d completeTask(tasks.get(id - 1));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wltan"
        },
        "content": "                            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wltan"
        },
        "content": "                                throw new CommandException(input, \"Could not read the task ID\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wltan"
        },
        "content": "                            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wltan"
        },
        "content": "                                throw new CommandException(input, \"Task ID does not exist\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wltan"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wltan"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wltan"
        },
        "content": "                        case TODO_CMD:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wltan"
        },
        "content": "                            output \u003d addTasks(new Todo(stripped));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wltan"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wltan"
        },
        "content": "                        case EVENT_CMD:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wltan"
        },
        "content": "                            split \u003d stripped.split(\"/at\", 2);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wltan"
        },
        "content": "                            if (split.length \u003c 2) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wltan"
        },
        "content": "                                throw new CommandException(input,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wltan"
        },
        "content": "                                        \"Events should have a time specified with /at\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wltan"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wltan"
        },
        "content": "                            output \u003d addTasks(new Event(split[0].strip(), split[1].strip()));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wltan"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wltan"
        },
        "content": "                        case DEADLINE_CMD:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wltan"
        },
        "content": "                            split \u003d stripped.split(\"/by\", 2);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wltan"
        },
        "content": "                            if (split.length \u003c 2) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wltan"
        },
        "content": "                                throw new CommandException(input,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wltan"
        },
        "content": "                                        \"Deadlines should have a time due specified with /by\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wltan"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wltan"
        },
        "content": "                            output \u003d addTasks(new Deadline(split[0].strip(), split[1].strip()));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wltan"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wltan"
        },
        "content": "                        case DELETE_CMD:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wltan"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wltan"
        },
        "content": "                                final int id \u003d Integer.parseInt(stripped);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wltan"
        },
        "content": "                                output \u003d deleteTask(tasks.get(id - 1));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wltan"
        },
        "content": "                            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wltan"
        },
        "content": "                                throw new CommandException(input, \"Could not read the task ID\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wltan"
        },
        "content": "                            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wltan"
        },
        "content": "                                throw new CommandException(input, \"Task ID does not exist\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wltan"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wltan"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wltan"
        },
        "content": "                        default:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wltan"
        },
        "content": "                            throw new IllegalStateException(\"Unexpected state\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wltan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wltan"
        },
        "content": "                    print(output);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wltan"
        },
        "content": "                } catch (IPException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wltan"
        },
        "content": "                    print(e.toString());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wltan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wltan"
        },
        "content": "            });"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wltan"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wltan"
        },
        "content": "        print(\"Goodbye!\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wltan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wltan"
        },
        "content": "     * Adds a task to the list of tasks."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wltan"
        },
        "content": "     * @param toAdd the task to be added"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wltan"
        },
        "content": "     * @return String containing output generated from iPbot"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wltan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wltan"
        },
        "content": "    private static String addTasks(Task toAdd) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wltan"
        },
        "content": "        tasks.add(toAdd);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wltan"
        },
        "content": "        return String.format(\"added: %s\\nThere are now %d tasks.\","
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wltan"
        },
        "content": "                toAdd.toString(), tasks.size());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wltan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wltan"
        },
        "content": "     * Queries the list of tasks and displays them."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wltan"
        },
        "content": "     * @return String containing output generated from iPbot"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wltan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wltan"
        },
        "content": "    private static String listTasks() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wltan"
        },
        "content": "        return tasks.isEmpty()"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wltan"
        },
        "content": "                ? \"No tasks added.\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wltan"
        },
        "content": "                : tasks.stream()"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wltan"
        },
        "content": "                    .map(new Function\u003cTask, String\u003e() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wltan"
        },
        "content": "                        int id \u003d 1;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wltan"
        },
        "content": "                        public String apply(Task t) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wltan"
        },
        "content": "                            return String.format(\"%d. %s\", id++, t.toString());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wltan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wltan"
        },
        "content": "                    })"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wltan"
        },
        "content": "                    .collect(Collectors.joining(\"\\n\"));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wltan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wltan"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wltan"
        },
        "content": "     * @param toComplete the task to be marked as done"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wltan"
        },
        "content": "     * @return String containing output generated from iPbot"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wltan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wltan"
        },
        "content": "    private static String completeTask(Task toComplete) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wltan"
        },
        "content": "        if (toComplete.getDoneStatus()) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wltan"
        },
        "content": "            // already done"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wltan"
        },
        "content": "            return \"Task already done:\\n\" + toComplete;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wltan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wltan"
        },
        "content": "            // mark as done"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wltan"
        },
        "content": "            toComplete.markAsDone();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wltan"
        },
        "content": "            return \"Task done:\\n\" + toComplete;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wltan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wltan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wltan"
        },
        "content": "     * Deletes a task from the task list."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wltan"
        },
        "content": "     * @param toDelete the task to be deleted"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wltan"
        },
        "content": "     * @return String containing output generated from iPbot"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wltan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wltan"
        },
        "content": "    private static String deleteTask(Task toDelete) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wltan"
        },
        "content": "        tasks.remove(toDelete);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wltan"
        },
        "content": "        return String.format(\"Task deleted: %s\\n%d task(s) left.\","
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wltan"
        },
        "content": "                toDelete.toString(), tasks.size());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wltan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wltan"
        },
        "content": "     * Prints output generated by the bot."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wltan"
        },
        "content": "     * @param output string of output to be printed"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wltan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wltan"
        },
        "content": "    public static void print(String output) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wltan"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wltan"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wltan"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wltan"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wltan": 164,
      "-": 3
    }
  },
  {
    "path": "src/main/java/exceptions/CommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wltan"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wltan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wltan"
        },
        "content": " * Exception representing an error parsing the command strings."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wltan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wltan"
        },
        "content": "public class CommandException extends IPException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wltan"
        },
        "content": "    private final String command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wltan"
        },
        "content": "    private final String reason;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wltan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wltan"
        },
        "content": "     * Creates a new exception."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wltan"
        },
        "content": "     * @param command the command that could not be parsed"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wltan"
        },
        "content": "     * @param reason the reason why the command could not be parsed"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wltan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wltan"
        },
        "content": "    public CommandException(String command, String reason) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wltan"
        },
        "content": "        super(reason);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wltan"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wltan"
        },
        "content": "        this.reason \u003d reason;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wltan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wltan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wltan"
        },
        "content": "        return \"Sorry, I can\u0027t process this command: \" + command + \"\\nReason: \" + reason;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wltan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wltan": 26
    }
  },
  {
    "path": "src/main/java/exceptions/DataException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wltan"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wltan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wltan"
        },
        "content": " * Exception representing an error in data validation."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wltan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wltan"
        },
        "content": "public class DataException extends IPException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wltan"
        },
        "content": "    private final String command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wltan"
        },
        "content": "    private final String reason;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wltan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wltan"
        },
        "content": "     * Creates a new exception."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wltan"
        },
        "content": "     * @param field the fields with invalid data"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wltan"
        },
        "content": "     * @param reason the reason why the data is invalid"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wltan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wltan"
        },
        "content": "    public DataException(String field, String reason) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wltan"
        },
        "content": "        super(reason);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wltan"
        },
        "content": "        this.command \u003d field;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wltan"
        },
        "content": "        this.reason \u003d reason;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wltan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wltan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wltan"
        },
        "content": "        return \"Sorry, this field is invalid: \" + command + \"\\nReason: \" + reason;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wltan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wltan": 26
    }
  },
  {
    "path": "src/main/java/exceptions/IPException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wltan"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wltan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wltan"
        },
        "content": " * Parent class of all exceptions generated by iPbot."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wltan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wltan"
        },
        "content": "public class IPException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wltan"
        },
        "content": "    public IPException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wltan"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wltan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wltan": 10
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wltan"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wltan"
        },
        "content": "import exceptions.DataException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wltan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wltan"
        },
        "content": "    // task must be done by this time"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wltan"
        },
        "content": "    private final String by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wltan"
        },
        "content": "    public Deadline(String desc, String by) throws DataException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wltan"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wltan"
        },
        "content": "        if (by.isBlank()) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wltan"
        },
        "content": "            throw new DataException(\"Time Due\", \"Cannot be blank\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wltan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wltan"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wltan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wltan"
        },
        "content": "    protected char getTaskType() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wltan"
        },
        "content": "        return \u0027D\u0027;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wltan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wltan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wltan"
        },
        "content": "        return String.format(\"%s (by: %s)\", super.toString(), by);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wltan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wltan": 27
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wltan"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wltan"
        },
        "content": "import exceptions.DataException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wltan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wltan"
        },
        "content": "    // event held at this time"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wltan"
        },
        "content": "    private final String at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wltan"
        },
        "content": "    public Event(String desc, String at) throws DataException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wltan"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wltan"
        },
        "content": "        if (at.isBlank()) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wltan"
        },
        "content": "            throw new DataException(\"Event Time\", \"Cannot be blank\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wltan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wltan"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wltan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wltan"
        },
        "content": "    protected char getTaskType() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wltan"
        },
        "content": "        return \u0027E\u0027;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wltan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wltan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wltan"
        },
        "content": "        return String.format(\"%s (at: %s)\", super.toString(), at);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wltan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wltan": 27
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wltan"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wltan"
        },
        "content": "import exceptions.DataException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wltan"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wltan"
        },
        "content": "    // task description"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wltan"
        },
        "content": "    private final String desc;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wltan"
        },
        "content": "    // indicates whether the task is done or not"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wltan"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wltan"
        },
        "content": "    public Task(String desc) throws DataException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wltan"
        },
        "content": "        if (desc.isBlank()) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wltan"
        },
        "content": "            throw new DataException(\"Task Description\", \"Cannot be blank\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wltan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wltan"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wltan"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wltan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wltan"
        },
        "content": "        return desc;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wltan"
        },
        "content": "    public boolean getDoneStatus() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wltan"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wltan"
        },
        "content": "    protected abstract char getTaskType();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wltan"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wltan"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wltan"
        },
        "content": "    private char getStatusIcon() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wltan"
        },
        "content": "        // returns tick or X symbols"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wltan"
        },
        "content": "        return done ? \u0027\\u2713\u0027 : \u0027\\u2718\u0027;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wltan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wltan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wltan"
        },
        "content": "        return String.format(\"[%c][%c] %s\", getTaskType(), getStatusIcon(), getDescription());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wltan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wltan": 45
    }
  },
  {
    "path": "src/main/java/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wltan"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wltan"
        },
        "content": "import exceptions.DataException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wltan"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wltan"
        },
        "content": "    public Todo(String desc) throws DataException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wltan"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wltan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wltan"
        },
        "content": "    protected char getTaskType() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wltan"
        },
        "content": "        return \u0027T\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wltan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wltan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wltan"
        },
        "content": "        return super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wltan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wltan": 20
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wltan"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wltan"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wltan"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wltan"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wltan"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wltan"
        },
        "content": "todo"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wltan"
        },
        "content": "event return book /by Sunday"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wltan"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wltan"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wltan"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wltan"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wltan"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wltan"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "wltan": 14
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wltan"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\IPbot.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wltan"
        },
        "content": "java -classpath ..\\bin IPbot \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "wltan": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wltan"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/IPbot.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wltan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wltan"
        },
        "content": "java -classpath ../bin IPbot \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "wltan": 3,
      "-": 36
    }
  }
]
