[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "D | 0 | return book | 2019-11-10"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "E | 0 | project meeting | 2019-10-23"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "T | 0 | list 5"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "T | 1 | check 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "T | 1 | check 100"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "T | 0 | dkfdnslkfgnslg"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "D | 0 | return book | 2020-05-24"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "D | 1 | return CD | 2020-03-08"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "E | 0 | check test final | 2020-06-08"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "T | 0 | check3u48239"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 10
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        super(description, by);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + super.getNewFormatTime() + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String toStringFile() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return \"D\" + \" | \" + (isDone? \"1\" : \"0\") + \" | \" + this.description + \" | \" + super.time;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return \"Deadline\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 23
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " * Duke is a chatbot that can perform specified commands requested by clients. "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Constructor of Duke class"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param filePath address of file path"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            //ui.showLoadingError();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Runs Duke program"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @throws FileNotFoundException If the file path cannot be found"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void run() throws FileNotFoundException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            String userInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            isExit \u003d Parser.execute(tasks, ui, storage, userInput);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public static void main(String[] args) throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        new Duke(\"./data/duke.txt\").run();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 47,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " * DukeException is an exception class for Duke. "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " * It will throw an exception when user\u0027s input command cannot be recognised by Duke."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class DukeException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 11
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        super(description, at);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.getNewFormatTime() + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String toStringFile() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return \"E\" + \" | \" + (isDone? \"1\" : \"0\") + \" | \" + this.description + \" | \" + super.time;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return \"Event\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 23
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " * Parser deals with users\u0027 commands, differentiates each type of task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Command enum lists out all the types of commands."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public enum Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        BYE(\"bye\"), LIST(\"list\"), DONE(\"done\"), TODO(\"todo\"), DEADLINE(\"deadline\"), "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "              EVENT(\"event\"), DELETE(\"delete\"), FILTER(\"filter\"), FIND(\"find\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        public String value;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        Command(String value) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            this.value \u003d value;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Executes user\u0027s commands."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param tasks list of current tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param ui UI for client."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param storage save and display data from database."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param userInput user\u0027s command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @return boolean terminate when it returns true."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @throws FileNotFoundException If the file path cannot be found."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public static boolean execute(TaskList tasks, Ui ui, Storage storage, String userInput) throws FileNotFoundException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        if (userInput.equals(Command.BYE.value)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            ui.sayGoodbye();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            //isExit \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else if (userInput.equals(Command.LIST.value)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            tasks.showTasks();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else if (userInput.startsWith(Command.DONE.value)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                int taskPosition \u003d Integer.parseInt(userInput.substring(5));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                tasks.setDone(taskPosition);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                ui.showInvalidFormatCommandDescription();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                ui.showInvalidFormatCommandDescription();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else if (userInput.startsWith(Command.TODO.value)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                String description \u003d userInput.trim().substring(5);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                tasks.addToDo(description);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                storage.saveTasks(tasks.getTasksList());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                ui.showInvalidFormatCommandDescription();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else if (userInput.startsWith(Command.DEADLINE.value)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                int spacePosition \u003d userInput.indexOf(\" \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                int keywordPosition \u003d userInput.indexOf(\"/by\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                String description \u003d userInput.substring(spacePosition + 1, keywordPosition - 1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                String by \u003d userInput.substring(keywordPosition + 4);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                tasks.addDeadline(description, by);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                storage.saveTasks(tasks.getTasksList());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                ui.showInvalidFormatCommandDescription();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else if (userInput.startsWith(Command.EVENT.value)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                int spacePosition \u003d userInput.indexOf(\" \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                int keywordPosition \u003d userInput.indexOf(\"/at\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                String description \u003d userInput.substring(spacePosition + 1, keywordPosition - 1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                String at \u003d userInput.substring(keywordPosition + 4);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                tasks.addEvent(description, at);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                storage.saveTasks(tasks.getTasksList());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                ui.showInvalidFormatCommandDescription();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else if (userInput.startsWith(Command.DELETE.value)) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                int taskPosition \u003d Integer.parseInt(userInput.substring(7));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                tasks.deleteTask(taskPosition);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                storage.saveTasks(tasks.getTasksList());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                ui.showInvalidFormatCommandDescription();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else if (userInput.startsWith(Command.FILTER.value)) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            String[] inputArray \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            tasks.filterTask(inputArray);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else if (userInput.startsWith(Command.FIND.value)) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                String keyword \u003d userInput.substring(6);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                tasks.findTasks(keyword.trim());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                ui.showInvalidFormatCommandDescription();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            ui.showMeaninglessCommandDescription();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 111
    }
  },
  {
    "path": "src/main/java/duke/QueryOnTasks.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class QueryOnTasks { "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public List\u003cTask\u003e filterByDate(List\u003cTask\u003e list, String date) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return list.stream().filter(task -\u003e (task.getType().equals(\"Deadline\") || task.getType().equals(\"Event\")) "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                \u0026\u0026 task.getLocalDate().equals(LocalDate.parse(date))).collect(Collectors.toList());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public List\u003cTask\u003e filterByMonth(List\u003cTask\u003e list, String month) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return list.stream().filter(task -\u003e (task.getType().equals(\"Deadline\") || task.getType().equals(\"Event\")) "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                \u0026\u0026 Integer.toString(task.getLocalDate().getMonthValue()).equals(month)).collect(Collectors.toList());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public List\u003cTask\u003e filterByYear(List\u003cTask\u003e list, String year) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return list.stream().filter(task -\u003e (task.getType().equals(\"Deadline\") || task.getType().equals(\"Event\")) "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                \u0026\u0026 Integer.toString(task.getLocalDate().getYear()).equals(year)).collect(Collectors.toList());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 22
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " * Storage is used to store data in hardware and displays available data in client\u0027s server."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private Scanner inputSource;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Constructor of Storage class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param filePath relative address of file path"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            inputSource \u003d new Scanner(new File(filePath));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            System.out.println(\"File: \" + filePath + \" cannot be found!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Loads all data from database."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @return List list of tasks in database."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public List\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        while (inputSource.hasNextLine()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            String currentInput \u003d inputSource.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            String[] inputArray \u003d currentInput.split(\"\\\\|\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            if (inputArray[0].trim().equals(\"T\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                list.add(new Todo(inputArray[2].trim()));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            } else if (inputArray[0].trim().equals(\"D\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                list.add(new Deadline(inputArray[2].trim(), inputArray[3].trim()));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            } else if (inputArray[0].trim().equals(\"E\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                list.add(new Event(inputArray[2].trim(), inputArray[3].trim()));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            if (inputArray[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                list.get(list.size()-1).markAsDone();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Saves tasks in database."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param list list of data that clients enter."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @throws FileNotFoundException If the file path cannot be found."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void saveTasks(List\u003cTask\u003e list) throws FileNotFoundException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        PrintWriter printWriter \u003d new PrintWriter(new FileOutputStream(filePath));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        for(Task task: list) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            printWriter.println(task.toStringFile());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        printWriter.close();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 73
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " * Task represents a task by client."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " * Task is an abstract class for Todo, Deadline and Event to inherit."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "abstract class Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Constructor of Task class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Second constructor of Task class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @param time time estimated to finish the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public Task(String description, String time) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Gets status icon of the task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @return String status icon of the task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Marks the task as done. "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Gets new format of the given time frame"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @return String new format of time frame"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String getNewFormatTime() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            LocalDate newFormatTime \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            return newFormatTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            return this.time;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Gets time as LocalDate format."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @return LocalDate new format of time."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public LocalDate getLocalDate() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return LocalDate.parse(time);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Get type of the task."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * @return String type of the task."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public abstract String getType();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Get task representation in hardware as string."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public abstract String toStringFile();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 97
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public List\u003cTask\u003e getTasksList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void showTasks() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        ui.printLineBackground();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"        Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        for(int i\u003d0; i\u003ctasks.size(); i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            System.out.println(\"            \" + (i+1) + \".\" + tasks.get(i));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        ui.printLineBackground();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void setDone(int taskPosition) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        tasks.get(taskPosition - 1).markAsDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        ui.printLineBackground();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"        Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"            \" + tasks.get(taskPosition - 1));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        ui.printLineBackground();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void addToDo(String description) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        Task toDo \u003d new Todo(description);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        tasks.add(toDo);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        ui.printLineBackground();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"        Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"            \" + toDo);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"        Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        ui.printLineBackground();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void addDeadline(String description, String by) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        Task deadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        tasks.add(deadline);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        ui.printLineBackground();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"        Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"            \" + deadline);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"        Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        ui.printLineBackground();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void addEvent(String description, String at) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        Task event \u003d new Event(description, at);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        tasks.add(event);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        ui.printLineBackground();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"        Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"            \" + event);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"        Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        ui.printLineBackground();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void deleteTask(int taskPosition) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        ui.printLineBackground();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"        Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"            \" + tasks.remove(taskPosition - 1));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"        Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        ui.printLineBackground();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void filterTask(String[] inputArray) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        QueryOnTasks queryOnTasks \u003d new QueryOnTasks();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        if (inputArray[1].equals(\"date\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            List\u003cTask\u003e queryList \u003d queryOnTasks.filterByDate(tasks,inputArray[2]);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            ui.printLineBackground();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            System.out.println(\"        Here are the tasks in your query list:\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            for(int i\u003d0; i\u003cqueryList.size(); i++) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                System.out.println(\"            \" + (i+1) + \".\" + queryList.get(i));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            ui.printLineBackground();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else if (inputArray[1].equals(\"month\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            List\u003cTask\u003e queryList \u003d queryOnTasks.filterByMonth(tasks,inputArray[2]);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            ui.printLineBackground();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            System.out.println(\"        Here are the tasks in your query list:\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            for(int i\u003d0; i\u003cqueryList.size(); i++) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                System.out.println(\"            \" + (i+1) + \".\" + queryList.get(i));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            ui.printLineBackground();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        } else if (inputArray[1].equals(\"year\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            List\u003cTask\u003e queryList \u003d queryOnTasks.filterByYear(tasks,inputArray[2]);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            ui.printLineBackground();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            System.out.println(\"        Here are the tasks in your query list:\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            for(int i\u003d0; i\u003cqueryList.size(); i++) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                System.out.println(\"            \" + (i+1) + \".\" + queryList.get(i));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            ui.printLineBackground();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void findTasks(String keyword) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        ui.printLineBackground();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"        Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        for(int i\u003d0; i\u003ctasks.size(); i++) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            if(tasks.get(i).getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                System.out.println(\"        \" + (i+1) + \".\" + tasks.get(i));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        ui.printLineBackground();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 120
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String toStringFile() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return \"T\" + \" | \" + (isDone? \"1\" : \"0\") + \" | \" + this.description;  "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    } "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        return \"Todo\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 22
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " * UI class displays information to answer clients\u0027 queries."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Shows welcome message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"    ______________________________________\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"        Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"        What can I do for you?\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"    ______________________________________\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Shows goodbye message."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void sayGoodbye() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"    _______________________________________________________________________________\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"        Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"    _______________________________________________________________________________\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Shows invalid format command error message."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void showInvalidFormatCommandDescription() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"    _______________________________________________________________________________\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"        ☹ OOPS!!! The description of a done cannot be empty or in wrong format\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"    _______________________________________________________________________________\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Shows meaningless command message."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void showMeaninglessCommandDescription() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"    _______________________________________________________________________________\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"        ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"    _______________________________________________________________________________\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     * Prints out line background."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void printLineBackground() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        System.out.println(\"    _______________________________________________________________________________\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 56
    }
  },
  {
    "path": "src/test/java/duke/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import main.java.duke.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        public void testingStringConversion() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            Deadline deadline \u003d new Deadline(\"return book\", \"2020-05-24\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            assertEquals(\"[D][✘] return book (by: May 24 2020)\", deadline.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            deadline.markAsDone();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            assertEquals(\"[D][✓] return book (by: May 24 2020)\", deadline.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        public void testingStringFileConversion() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            Deadline deadline \u003d new Deadline(\"return book\", \"2020-05-24\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            assertEquals(\"D | 0 | return book | 2020-05-24\", deadline.toStringFile());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 24
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import main.java.duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void dukeTesting_filePathNotExist_exceptionThrown() throws FileNotFoundException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            Duke duke \u003d new Duke(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "            duke.run();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 16
    }
  },
  {
    "path": "src/test/java/duke/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import main.java.duke.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void testingStringConversion() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        Event event \u003d new Event(\"return book\", \"2020-05-24\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        assertEquals(\"[E][✘] return book (at: May 24 2020)\", event.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        event.markAsDone();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        assertEquals(\"[E][✓] return book (at: May 24 2020)\", event.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void testingStringFileConversion() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        Event event \u003d new Event(\"return book\", \"2020-05-24\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        assertEquals(\"E | 0 | return book | 2020-05-24\", event.toStringFile()); "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 22
    }
  },
  {
    "path": "src/test/java/duke/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import main.java.duke.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void testingStringConversion() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        Todo todo \u003d new Todo(\"return book\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        assertEquals(\"[T][✘] return book\", todo.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        todo.markAsDone();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        assertEquals(\"[T][✓] return book\", todo.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    public void testingStringFileConversion() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        Todo todo \u003d new Todo(\"return book\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "        assertEquals(\"T | 0 | return book\",todo.toStringFile());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 22
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 9
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "java -classpath ../bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duynguyen24501"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "duynguyen24501": 5,
      "-": 31
    }
  }
]
