[
  {
    "path": "src/main/java/ChatBot.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * Encapsulates the chatBot and its behavior."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public class ChatBot {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    private String logo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    private String user;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    private String botName;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    private List\u003cTask\u003e toDoList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Instantiates a chatBot with a name."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param botName the name of the chatBot"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    ChatBot(String botName) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        logo \u003d logo \u003d \"#    #   ##   # ###### ###### #    #\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + \"#   #   #  #  #     #  #      ##   #\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + \"####   #    # #    #   #####  # #  #\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + \"#  #   ###### #   #    #      #  # #\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + \"#   #  #    # #  #     #      #   ##\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + \"#    # #    # # ###### ###### #    #\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        this.botName \u003d botName;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        toDoList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Prints a welcome message for the user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void welcome() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "         String welcomeMessage \u003d \"Konichiwa! Welcome to Kaizen\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                 + \"I am \" + this.botName + \", what can I do for you today?\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        System.out.println(this.logo"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + welcomeMessage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Interacts with the user based on his input."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void getInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        boolean exitProgram \u003d false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        while (!exitProgram \u0026\u0026 sc.hasNextLine()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                String[] inputArray \u003d input.split(\" \", 2); // separates the first word from the rest"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                String command \u003d inputArray[0].toLowerCase();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                if (command.equals(UserCommand.BYE.getCommand())) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                    bye();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                    exitProgram \u003d true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                } else if (command.equals(UserCommand.LIST.getCommand())) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                    showList();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                } else if (command.equals(UserCommand.DONE.getCommand())) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                    makeTaskDone(inputArray);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                } else if (command.equals(UserCommand.TODO.getCommand())) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                    makeTodo(inputArray);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                } else if (command.equals(UserCommand.DEADLINE.getCommand())) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                    makeDeadline(inputArray);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                } else if (command.equals(UserCommand.EVENT.getCommand())) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                    makeEvent(inputArray);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                } else if (command.equals(UserCommand.DELETE.getCommand())) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                    deleteTask(inputArray);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                    throw new DukeException(\"NANI??! Please say something that I can understand!\\n\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Presents the user with the list of tasks"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void showList() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        // guard clause"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        if (this.toDoList.isEmpty()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            System.out.println(\"No tasks at the moment! Good job!\\n\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        System.out.println(this.botName + \": \""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + \"Here are your tasks!\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        for (int i \u003d 0; i \u003c toDoList.size(); i++) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            System.out.println((i+1) + \". \""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                    + toDoList.get(i));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Produce a done Task"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param taskStringArray the position of the task in the arraylist"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @throws DukeException when there is an error with task"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void makeTaskDone(String[] taskStringArray) throws DukeException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            // if length is not 2, nothing was passed in after \u0027done\u0027"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            if (taskStringArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                throw new DukeException(\"Which task are you done with? Please key in the task number!\\n\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            // check if taskNumber is a number"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(taskStringArray[1]);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            // check if taskNumber is valid"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            if (taskNumber \u003c\u003d 0 || taskNumber \u003e this.toDoList.size()) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                throw new DukeException(\"Sorry, no such task to mark as done!\\n\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            Task currentTask \u003d this.toDoList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            Task newTask \u003d currentTask.markAsDone();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            this.toDoList.set(taskNumber - 1, newTask);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            System.out.println(this.botName + \": \" + \"Sugoi! This task is done!\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            System.out.println(newTask + \"\\n\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            throw new DukeException(taskStringArray[1] + \" is not an integer!\\n\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Make a todo task"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param inputArray the string that the user input"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @throws DukeException to handle input errors"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void makeTodo(String[] inputArray) throws DukeException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        // if length is not 2, nothing was passed in after \u0027todo\u0027"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        if (inputArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            throw new DukeException(\"NANI??! Enter a description for your todo!\\n\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        String description \u003d inputArray[1];"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        Task taskToAdd \u003d new ToDo(description);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        addTask(taskToAdd);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Make a deadline task"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param inputArray the string that the user input"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @throws DukeException to handle input errors"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void makeDeadline(String[] inputArray) throws DukeException {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        // if length is not 2, nothing was passed in after \u0027deadline\u0027"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        if (inputArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            throw new DukeException(\"NANI??! Enter a description for your deadline!\\n\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        // if description is lacking a /by keyword"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        String description \u003d inputArray[1];"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        if (description.indexOf(\"/by\") \u003c 0) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            throw new DukeException(\"Please enter a valid deadline! Remember to add \u0027/by\u0027\\n\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        String[] descriptionArray \u003d description.split(\"/by\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        if (descriptionArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            throw new DukeException(\"NANI??! Enter your deadline name \u0026 an end-time!\\n\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        String deadlineName \u003d descriptionArray[0];"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        String deadlineEndTime \u003d descriptionArray[1];"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        Task taskToAdd \u003d new Deadline(deadlineName, deadlineEndTime);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        addTask(taskToAdd);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Make an event task"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param inputArray the string that the user input"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @throws DukeException to handle input errors"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void makeEvent(String[] inputArray) throws DukeException {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        // if length is not 2, nothing was passed in after \u0027makeEvent\u0027"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        if (inputArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            throw new DukeException(\"NANI??! Enter a description for your event!\\n\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        // if event is lacking a /at keyword"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        String description \u003d inputArray[1];"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        if (description.indexOf(\"/at\") \u003c 0) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            throw new DukeException(\"Please enter a valid event! Remember to add \u0027/at\u0027\\n\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        String[] descriptionArray \u003d description.split(\"/at\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        if (descriptionArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            throw new DukeException(\"NANI??! Enter your event name \u0026 an event timing!\\n\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        String eventName \u003d descriptionArray[0];"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        String eventTiming \u003d descriptionArray[1];"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        Task taskToAdd \u003d new Event(eventName, eventTiming);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        addTask(taskToAdd);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Adds a task to the todoList"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param taskToAdd the task to add to the todoList"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void addTask(Task taskToAdd) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        this.toDoList.add(taskToAdd);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        System.out.println(this.botName + \": \""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + \"Hai! I have added this task to your list:\\n\""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + taskToAdd);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        printToDoListSize();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Delete a particular task from the todo list"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param inputArray the string that the user input"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @throws DukeException to handle input errors"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void deleteTask(String[] inputArray) throws DukeException {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            // if length is not 2, nothing was passed in after \u0027done\u0027"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            if (inputArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                throw new DukeException(\"Which task do you want to delete? Please key in the task number!\\n\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            // check if taskNumber is a number"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(inputArray[1]);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            // check if taskNumber is valid"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            if (taskNumber \u003c\u003d 0 || taskNumber \u003e this.toDoList.size()) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                throw new DukeException(\"Sorry, no such task to delete!\\n\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            Task currentTask \u003d this.toDoList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            System.out.println(this.botName + \": \" + \"Hai! This task has been deleted!\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            this.toDoList.remove(currentTask);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            System.out.println(currentTask);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            printToDoListSize();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            throw new DukeException(\"\u0027\" + inputArray[1] + \"\u0027\" + \" is not an integer!\\n\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Abstracted method to print out the list size"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void printToDoListSize() {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        System.out.println(\"You now have \""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + this.toDoList.size()"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + \" tasks in your list. Gambatte!\\n\");"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Says \u0027bye\u0027 to the user."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void bye() {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        System.out.println(this.botName + \": \""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + \"Sayonara! See you again my friend!\");"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 258
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * Encapsulates a Deadline item"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    String endDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Instantiates a Deadline with a description of it."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param description the description of the deadline"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param endDate the end date of the deadline"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    Deadline(String description, String endDate) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Overloaded constructor to instantiate a deadline with customised status."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param description description of the deadline"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param done status of the deadline"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param endDate the end date of the deadline"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    Deadline(String description, boolean done, String endDate) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Marks a deadline as \u0027done\u0027."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @return a deadline that is done"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    Deadline markAsDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return new Deadline(this.description, true, this.endDate);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Overriden toString() method"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @return custom String"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return \"[DEADLINE]\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + \" \" + super.toString()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + \" (by:\" + this.endDate + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 47
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * Entry point of The program"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "         * Instantiates a new chatBot for the user to interact with"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "         */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        ChatBot chatBot \u003d new ChatBot(\"Kai\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        chatBot.welcome();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        chatBot.getInput();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "iamgenechua": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * Encapsulates the error handling and printing of messages"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Constructor for Custom Exception"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param errorMessage error message to be printed when exception is thrown"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 14
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * Encapsulates an Event task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    String timing;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Instantiates an event with a description of it."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param description description of the event"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param timing the timing of the event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    Event(String description, String timing) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Overloaded constructor to instantiate a event with customised status."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param description description of the event"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param done status of the event"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param timing the end date of the event"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    Event(String description, boolean done, String timing) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Marks a event as \u0027done\u0027."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @return a event that is done"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    Event markAsDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return new Event(this.description, true, this.timing);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Overriden toString() method"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @return custom String"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return \"[EVENT]\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + \" \" + super.toString()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + \" (at:\" + this.timing + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 47
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * Encapsulates details of a Task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Instantiates a task with a description of it."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param description an explanation of what the task is about"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Overloaded constructor to instantiate a task with customised status."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param done status of the task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    Task(String description, boolean done) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        this.isDone \u003d done;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Visualises the status of a task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @return whether or not a task is done"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    String getStatusIcon() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return \"[\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            + (isDone"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                ? \"\\u2713\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                : \"\\u2718\" ) //return tick or X symbols"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            + \"]\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Marks a task as \u0027done\u0027."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @return a task with a status of \u0027done\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    Task markAsDone() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return new Task(this.description, true);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Provides the description of the task"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @return the string representation of the task"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return this.getStatusIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 55
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * Encapsulates a stodo  ToDo item"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Instantiates a ToDo with a description of it."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param description an explanation of what the task is about"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    ToDo(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Overloaded constructor to instantiate a todo with customised status."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param description description of the todo"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param done status of the todo"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    ToDo(String description, boolean done) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Marks a todo as \u0027done\u0027."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @return a todo that is done"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    ToDo markAsDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return new ToDo(this.description, true);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Overriden toString() method"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @return custom String"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return \"[TODO]\" + \" \" + super.toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 41
    }
  },
  {
    "path": "src/main/java/UserCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * Encapsulates all the commands recognised by chaBot"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public enum UserCommand {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    BYE(\"bye\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    LIST(\"list\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    DONE(\"done\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    TODO(\"todo\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    EVENT(\"event\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    DELETE(\"delete\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    private final String command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Constructor for instantiating a user command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param command command that the user types in"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    UserCommand(String command) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Gett method for user command"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @return the user command"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    String getCommand() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return this.command;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 30
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "todo study for exams"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "todo buy food"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "done oops type wrong"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "done 69"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "todo pray"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "deadline CS2103 /by 20 August 2020"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "deadline final assignment /by 19 September 2020"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "deadline /by"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "event run /at Utown 10pm"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "event run at Utown 10pm"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "event gym /at Utown 10pm"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "event run /at"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "event dance /at school"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "todo"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "event"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "blah"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "delete"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 29
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "# cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "# diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 34,
      "iamgenechua": 5
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "../src/main/java/ConsoleColors.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "../src/main/java/ChatBot.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "../src/main/java/ToDo.java"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 7
    }
  }
]
