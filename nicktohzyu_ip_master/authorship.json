[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicktohzyu": 15,
      "-": 44
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": " * Represents a task to be completed by a certain time"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @param description Task description"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @param date Deadline for the task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    public Deadline(String description, LocalDate date) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        super(description, date);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @return String representation of the task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date.toString() + \")\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicktohzyu": 23
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": " * Main class for Duke program."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * Entry point of the duke program. Read from storage and creates a UI class instance."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * Serves as intermediate between the UI and parser."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        TaskList tasks \u003d Storage.read();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        UI ui \u003d new UI();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        ui.welcome(tasks);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        String input \u003d ui.getInput();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        Parser parser \u003d new Parser(tasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                if (input.isEmpty()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                    input \u003d ui.getInput();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                parser.parse(input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                UI.print(e.getMessage() + \"\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            input \u003d ui.getInput();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        ui.bye();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicktohzyu": 31,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": " * An exception class used for errors caused by inappropriate user input. Displays a message."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * Constructor for DukeException."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @param msg the message to be displayed."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    DukeException(String msg) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        super(\"☹ OOPS!!! \" + msg);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicktohzyu": 12
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": " * Represents a task occurring at a certain time"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @param description Task description"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @param date Date of the event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    public Event(String description, LocalDate date) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        super(description, date);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @return String representation of the task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date.toString() + \")\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicktohzyu": 23
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": " * Class that handles user input"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @param tasks TaskList to use"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    public Parser(TaskList tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * Parses the user command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @param input input from the user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    void parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        String[] words \u003d input.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        String command \u003d words[0];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        String[] subst;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        LocalDate date;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                tasks.print_tasks();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                int i \u003d Integer.parseInt(words[1]) - 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                    tasks.setDone(i, true);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                    UI.print(\"Nice! I\u0027ve marked this task as done: \\n\" + task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                    tasks.remove(i);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                    UI.print(\"Noted. I\u0027ve removed this task: \\n\" + task + tasks.numTasks());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                if (input.length() \u003c 6) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                    throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                String text \u003d input.substring(5);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                newTask \u003d new Todo(text);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                tasks.addTask(newTask);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                if (input.length() \u003c 10) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                    throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                subst \u003d input.substring(9).split(\" /by \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                if (subst.length \u003c 2) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                    throw new DukeException(\"The due date must be specified.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                    date \u003d LocalDate.parse(subst[1]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                    newTask \u003d new Deadline(subst[0], date);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                    tasks.addTask(newTask);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                    throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                if (input.length() \u003c 7) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                    throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                subst \u003d input.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                if (subst.length \u003c 2) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                    throw new DukeException(\"The event date must be specified.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                    date \u003d LocalDate.parse(subst[1]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                    newTask \u003d new Event(subst[0], date);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                    tasks.addTask(newTask);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                    throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                if (input.length() \u003c 6) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                    throw new DukeException(\"Text to search for cannot be empty.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                tasks.find(input.substring(5));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "//                        break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicktohzyu": 95
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": " * Class that provides file storage utilities"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    public static final File storage_file \u003d Paths.get(\"tasks.ser\").toFile();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * Serializes a TaskList and writes it to file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @param t tasklist to be stored"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    public static void store(TaskList t) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            //noinspection ResultOfMethodCallIgnored"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            storage_file.createNewFile(); //creates file if it does not exist"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            FileOutputStream fileOut \u003d new FileOutputStream(storage_file);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            ObjectOutputStream out \u003d new ObjectOutputStream(fileOut);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            out.writeObject(t);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            out.close();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * Reads a serialized TaskList"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @return tasklisk read from file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    public static TaskList read() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            TaskList t;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            FileInputStream fileIn \u003d new FileInputStream(storage_file);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            ObjectInputStream in \u003d new ObjectInputStream(fileIn);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            t \u003d (TaskList) in.readObject();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            in.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            fileIn.close();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            t.loadMessage \u003d \"Successfully loaded from storage. \" + t.numTasks();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            return t;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        } catch (FileNotFoundException i) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            return new TaskList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        } catch (IOException i) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            i.printStackTrace();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            return new TaskList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        } catch (ClassNotFoundException c) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            System.out.println(\"Employee class not found\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            c.printStackTrace();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            return new TaskList();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicktohzyu": 55
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": " * Represents a task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "public class Task implements java.io.Serializable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    String text;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    boolean done;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @param text Task description"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @param date Date of the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    public Task(String text, LocalDate date) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        this.text \u003d text;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @return String representation of the task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        return \"[\" + (done ? \"✓\" : \"✗\") + \"] \" + text;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicktohzyu": 26
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": " * Stores tasks and supports various operations on them."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "public class TaskList implements java.io.Serializable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    String loadMessage \u003d \"\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * Initializes a new task list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    private TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @param task the task to be added."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        UI.print(\"added: \" + task.toString() + numTasks());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        Storage.store(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @return a string describing the number of tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    public String numTasks() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        int size \u003d tasks.size();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        return \"You now have \" + size + \" task\" + (size \u003e 1 ? \"s\" : \"\") + \" in the list.\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * Prints the list of tasks through the UI class"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    public void print_tasks() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        if(tasks.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            UI.print(\"There are no tasks!\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            sb.append((i + 1) + \".\" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        UI.print(sb.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @param i Index of the task to be returned."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @return The task at index I."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    public Task get(int i) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        if (i \u003c 0 || i \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            throw new DukeException(\"invalid task number\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        return tasks.get(i);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @param i Index of the task to be removed."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    public void remove(int i) throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        if (i \u003c 0 || i \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            throw new DukeException(\"invalid task number\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        tasks.remove(i);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        Storage.store(this);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @param i the index of the task to be set."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @param value Doneness of the task to be set."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    public void setDone(int i, boolean value) throws DukeException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        if (i \u003c 0 || i \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            throw new DukeException(\"invalid task number\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        tasks.get(i).done \u003d value;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        Storage.store(this);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * Finds tasks in this tasklist that matches the provided substring, and prints them."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @param substring string to match"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    public void find(String substring) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        sb.append(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            if (t.text.contains(substring)) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                sb.append(counter + \".\" + t.toString());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        if (counter \u003e 0) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            UI.print(sb.toString());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "            UI.print(\"No match found!\\n\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicktohzyu": 112
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": " * Represents a to do task without a date"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @param description Task description"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        super(description, null);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @return String representation of the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        return \"[T]\" + super.toString() + \"\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicktohzyu": 20
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": " * Class for reading user input and user interface"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    final static String BYE \u003d \"aight imma head out\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    final static String WELCOME \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    final static String LINE \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * Prints a string of text surrounded by a line of underscores above and below"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @param str text to be printed"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    public static void print(String str) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        System.out.print(LINE + str + LINE);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * Reads user input"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @return input from user"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    String getInput() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * Prints welcome message and current number of tasks"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * @param tasks TaskList loaded from storage"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    void welcome(TaskList tasks) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        print(WELCOME + tasks.loadMessage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     * Prints goodbye message"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    void bye() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        print(BYE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicktohzyu": 49
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        Task t \u003d new Task(\"test1\", LocalDate.parse(\"2001-09-11\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "//        System.out.println(t.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        assertEquals(\"[✗] test1\", t.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicktohzyu": 14
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    public void test1(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        Todo t \u003d new Todo(\"test todo\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        System.out.println(t.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "        assertEquals(\"[T][✗] test todo\\n\", t.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicktohzyu": 14
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "event project meeting /at 2019-12-01"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "deadline return book /by 2019-12-02"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "nicktohzyu": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicktohzyu"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin --release 8 ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "nicktohzyu": 1,
      "-": 20
    }
  }
]
