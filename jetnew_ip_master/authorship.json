[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jetnew"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    String taskBy;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    Deadline(String taskName, String taskBy) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        this.taskBy \u003d taskBy;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.taskBy + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jetnew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jetnew": 15
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jetnew"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jetnew"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jetnew"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jetnew"
        },
        "content": "/** Duke is a chatbot that allows users to send input to perform tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jetnew"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        // Introduction messages"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke! I\u0027m a chatbot-based To-Do list manager.\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        System.out.println(\"My available commands are: todo, deadline, event, done, list, delete, bye\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        System.out.println(\"What can I do for you today? :)\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        // Initialise list of tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        // Declare task tokens parsed from user input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        String[] taskTokens;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        String taskName;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        // Main conversation loop"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        boolean isSpeaking \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        while (isSpeaking) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jetnew"
        },
        "content": "            // Process user input"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jetnew"
        },
        "content": "            String userInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jetnew"
        },
        "content": "            String[] userTokens \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jetnew"
        },
        "content": "            String userCommand \u003d userTokens[0];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jetnew"
        },
        "content": "            String userTask \u003d String.join(\" \", Arrays.copyOfRange(userTokens, 1, userTokens.length));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jetnew"
        },
        "content": "            // Validate command"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jetnew"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                InputValidation.validateCommand(userCommand);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jetnew"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                System.out.println(\"Sorry, that looks like an invalid command! \" + e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jetnew"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jetnew"
        },
        "content": "            switch(userCommand) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                // Exit the program"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    isSpeaking \u003d false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    System.out.println(\"Bye! Hope to see you again soon!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                // List the tasks available in taskList"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                        System.out.println(\"You have no remaining tasks! Cheers!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                            System.out.println(i + 1 + \".\" + taskList.get(i));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                // Create a to-do task"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    // Validate task"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                        InputValidation.validateTask(userCommand, userTask);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                        System.out.println(\"Sorry, I can\u0027t add that task! \" + e.getMessage());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    taskList.add(new Todo(userTask));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    System.out.println(\"  \" + taskList.get(taskList.size() - 1));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                // Create a deadline task (contains \"/by\")"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    // Validate deadline"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                        InputValidation.validateDeadline(userCommand, userTask);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                        System.out.println(\"Sorry, I can\u0027t add that deadline! \" + e.getMessage());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    taskTokens \u003d userTask.split(\" /by \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    taskName \u003d taskTokens[0];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    String taskBy \u003d taskTokens[1];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    taskList.add(new Deadline(taskName, taskBy));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    System.out.println(\"  \" + taskList.get(taskList.size() - 1));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                // Create a event task (contains \"/at\")"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    // Validate event"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                        InputValidation.validateEvent(userCommand, userTask);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                        System.out.println(\"Sorry, I can\u0027t add that event! \" + e.getMessage());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    taskTokens \u003d userTask.split(\" /at \");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    taskName \u003d taskTokens[0];"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    String taskAt \u003d taskTokens[1];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    taskList.add(new Event(taskName, taskAt));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    System.out.println(\"  \" + taskList.get(taskList.size() - 1));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                // Mark the identified task as done"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                        InputValidation.validateIdentifier(userInput, userTokens);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                        System.out.println(\"Sorry, I can\u0027t mark that as done! \" + e.getMessage());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    int id \u003d Integer.parseInt(userTokens[1]) - 1;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    taskList.get(id).setDone();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    System.out.println(\"  \" + taskList.get(id));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                // Delete a task"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                        System.out.println(\"validating delete\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                        InputValidation.validateIdentifier(userInput, userTokens);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                        System.out.println(\"Sorry, I can\u0027t delete that task! \" + e.getMessage());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    Task deletedTask \u003d taskList.remove(Integer.parseInt(userTokens[1]) - 1);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    System.out.println(\"Noted. I have removed this task:\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    System.out.println(\"  \" + deletedTask);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jetnew"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jetnew": 138,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jetnew"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jetnew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jetnew": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jetnew"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    String taskAt;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    Event(String taskName, String taskAt) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        this.taskAt \u003d taskAt;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.taskAt + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jetnew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jetnew": 13
    }
  },
  {
    "path": "src/main/java/InputValidation.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jetnew"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jetnew"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jetnew"
        },
        "content": "public class InputValidation {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    static void validateCommand(String userCommand) throws DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        List\u003cString\u003e validCommands \u003d Arrays.asList("
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jetnew"
        },
        "content": "                \"bye\", \"list\", \"done\", \"todo\", \"deadline\", \"event\", \"delete\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        if (!validCommands.contains(userCommand)) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jetnew"
        },
        "content": "            throw new DukeException(\"Invalid command: \" + userCommand);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    static void validateTask(String userCommand, String userTask) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        if (userTask.isEmpty()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jetnew"
        },
        "content": "            throw new DukeException(\"Empty task: \" + userCommand);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    static void validateDeadline(String userCommand, String userTask) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        validateTask(userCommand, userTask);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        if (!userTask.contains(\"/by\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jetnew"
        },
        "content": "            throw new DukeException(\"Invalid deadline missing \u0027/by\u0027: \" + userTask);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    static void validateEvent(String userCommand, String userTask) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        validateTask(userCommand, userTask);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        if (!userTask.contains(\"/at\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jetnew"
        },
        "content": "            throw new DukeException(\"Invalid event missing \u0027/at\u0027: \" + userTask);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    // Implement validation for identifier commands, e.g. \u0027done 1\u0027, \u0027delete 2\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    static void validateIdentifier(String userInput, String[] userTokens) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        if (userTokens.length !\u003d 2) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jetnew"
        },
        "content": "            throw new DukeException(\"Invalid identifier, requires 2 tokens: \" + userInput);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jetnew"
        },
        "content": "            Integer.parseInt(userTokens[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jetnew"
        },
        "content": "            throw new DukeException(\"Invalid identifier, requires integer: \" + userInput);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jetnew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jetnew": 45
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jetnew"
        },
        "content": "/** Task represents a task to be done."
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jetnew"
        },
        "content": " */"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jetnew"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    String taskName;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    Task(String taskName) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    // Returns a ticked check-box if done else cross"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        return (this.isDone ? \"[✓] \" : \"[✘] \") + this.taskName;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jetnew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jetnew": 20
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jetnew"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    Todo(String taskName) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jetnew"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jetnew"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jetnew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jetnew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jetnew": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jetnew"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jetnew"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jetnew"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jetnew"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jetnew"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jetnew"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jetnew"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jetnew"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jetnew": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jetnew"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "jetnew": 1,
      "-": 20
    }
  }
]
