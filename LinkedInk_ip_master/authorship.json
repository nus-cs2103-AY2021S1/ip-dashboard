[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 2,
      "-": 24
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "application {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "run{"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 51
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "# User Guide:"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "### Setting up and Running the program"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "Requires Java JDK 11 or later installed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "Double click on duke.jar to start program."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "### How to start"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "1. Start by typing anything in the text box at the bottom of the window."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "1. Instruction/error messages will guide you along."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "1. The following are the commands and how to use them."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "1. Formats have to be followed strictly."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "### Commands and instructions"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "Note: "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003cINFO\\\u003e denotes information to be filled in by the user"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "* Date formats used are of the form date/month/year"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "* Time formats used below are of a 24hr format (e.g. 2359)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "#### View all the commands"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "* _**Format**_ `!commands`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "* Displays the following list of text commands in the window."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "1) !commands | returns a list of text commands"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "1) list | lists out all the current tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "1) bye | saves the current tasks into a file and exits program"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "1) done | format: \"done \u003ctask number\u003e\", marks a task in the list as done"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "1) todo | format: \"todo \u003cdescription\u003e\", creates a todo task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "1) deadline | format: \"deadline \u003cdescription\u003e /by \u003cdd/MM/yyyy HHmm\u003e\", creates a deadline task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "1) event | format: \"event \u003cdescription\u003e /at \u003cdd/MM/yyyy HHmm\u003e\", creates an event task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "1) delete | format: \"delete \u003ctask number\u003e\", deletes a task in the list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "1) find | format: \"find \u003cstring\u003e\", finds tasks with matching string"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "#### View all the tasks in the list"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "* _**Format**_ | `list`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "* Displays the list of tasks currently in the task list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "#### Quit the program"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "* _**Format**_ `bye`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "* Saves the current tasks into a file and exits program."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "* File saved is a .txt file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "* File location will be displayed in the window as well."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "* After which programs closes in 5 seconds."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "#### Mark a task as done"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "* _**Format:**_ `done \u003cinterger task number\u003e`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "* _**Example:**_ `done 1`, marks task 1 as done."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "* Marks a designated task in the task list as done"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "#### Add a todo task"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": " "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "* _**Format:**_ `todo \u003cdescription\u003e`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "* _**Example:**_ `todo have a break`, adds a todo task with the description: \"have a break\"."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "* Adds a todo task to the task list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "#### Add a deadline task"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "* _**Format:**_ `deadline \u003cdescription\u003e /by \u003cdd/MM/yyyy HHmm\u003e`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "* _**Example:**_ `deadline assignment /by 16/9/2020 2359`, "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "adds a deadline task with the description: \"assignment\", and the time by 16/9/2020, 2359hrs."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": " "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "* Adds a deadline task to the task list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "#### Add an event task"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "* _**Format:**_ `event \u003cdescription\u003e /at \u003cdd/MM/yyyy HHmm\u003e`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "* _**Example:**_ `event birthday /at 16/9/2020 1300`, "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "adds an event with the description: \"birthday\", and the time at 16/9/2020, 1300hrs."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": " "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "* Adds an event task to the task list."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "#### Delete a task "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "* _**Format**_ `delete \u003ctask number\u003e`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "* _**Example:**_ `delete 1`, deletes task 1 from the list."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "* Deletes a designated task from the task list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "#### Find a task"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "* _**Format**_ `find \u003cstring\u003e`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "* _**Example:**_ `find test`, "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "displays all tasks with descriptions containing \"test\" partially or as a whole."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "* Display tasks with matching string.   "
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 93,
      "-": 10
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "echo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "echo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "echo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "echo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ":init"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ":end"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 104
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "rootProject.name \u003d \u0027ip\u0027"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 1
    }
  },
  {
    "path": "src/main/java/duke/CommandParserAndLogic.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.tasks.DeadLineTask;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.tasks.EventTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.tasks.TodoTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.text.TextBuilder;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.text.TextCacher;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.text.TextStore;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class CommandParserAndLogic {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    Path pathToSave;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    String[] current;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    boolean hasEnded \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public CommandParserAndLogic(TaskList taskList, Path path) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        this.pathToSave \u003d path;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Splits the string and uses commandCheck method for further logic"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @param input a string input"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void handleInput(String input) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        current \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        commandCheck(current[0]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Checks the string provided if it matches any known commands"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Follows up by calling the relevant logic"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @param string input"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private void commandCheck(String string) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        switch (string) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"!commands\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                TextCacher.cacheCommands();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                byeLogic();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                listLogic();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                doneLogic();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                deleteLogic();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                toDoLogic();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                deadLineLogic();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                eventLogic();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"find\" :"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                findLogic();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                TextCacher.cacheCommandNotFoundError();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private void byeLogic() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        FileManager.saveList(taskList, pathToSave);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        this.hasEnded \u003d true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private void listLogic() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        TextCacher.cacheTextStandard("
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                TextBuilder.buildTaskListMsg(TextStore.listOutHeader, taskList.allTasks()));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private void doneLogic() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        if (current.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            TextCacher.cacheTaskNumNotSpecifiedError();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                TextCacher.cacheTextStandard(taskList.markDone(Integer.parseInt(current[1])));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                TextCacher.cacheTaskNotFoundError();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private void toDoLogic() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        if (current.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            TextCacher.cacheDescriptionNotFoundError();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            TextCacher.cacheTextStandard(taskList.addTask(new TodoTask(current[1])));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private void deadLineLogic() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        if (current.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            TextCacher.cacheDescriptionNotFoundError();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            String[] details \u003d current[1].split(\"/by\", 2);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                TextCacher.cacheTimeNotFoundError();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    String processInfo \u003d taskList.addTask(new DeadLineTask(details[0], MyDateTime.parse(details[1])));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    TextCacher.cacheTextStandard(processInfo);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    TextCacher.cacheDateTimeFormatError();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private void eventLogic() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        if (current.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            TextCacher.cacheDescriptionNotFoundError();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            String[] details \u003d current[1].split(\"/at\", 2);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                TextCacher.cacheTimeNotFoundError();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    String processInfo \u003d taskList.addTask(new EventTask(details[0], MyDateTime.parse(details[1])));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    TextCacher.cacheTextStandard(processInfo);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    TextCacher.cacheDateTimeFormatError();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private void deleteLogic() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        if (current.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            TextCacher.cacheTaskNumNotSpecifiedError();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                TextCacher.cacheTextStandard(taskList.deleteTask(Integer.parseInt(current[1])));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                TextCacher.cacheTaskNotFoundError();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private void findLogic() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        if (current.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            TextCacher.cacheNoSearchTermError();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            TextCacher.cacheTextStandard("
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    TextBuilder.buildTaskListMsg(TextStore.searchListHeader, taskList.search(current[1])));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 161
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author Jeffry Lum-reused"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "//Code below reused from sub pages under https://se-education.org/guides/tutorials/javaFx.html with minor modifications"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture.setFitWidth(60.0);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture.setFitHeight(60.0);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 10,
      "-": 38
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        Application.launch(WindowDisplay.class);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 10
    }
  },
  {
    "path": "src/main/java/duke/FileManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.tasks.DeadLineTask;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.tasks.EventTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.tasks.TodoTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.text.TextCacher;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.rmi.server.ExportException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class FileManager {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Saves the tasks in taskList into a txt file located at the provided path"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @param taskList tasks to be saved"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @param path saved location"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void saveList(TaskList taskList, Path path) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            FileWriter fw \u003d new FileWriter(path.toFile());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            PrintWriter pw \u003d new PrintWriter(fw);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            pw.print(taskList.allSaveString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            pw.close();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            TextCacher.cacheTasksSavedToTextFile(path);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Tries to read the file from the given path and create a TaskList object from save file"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Returns a TaskList object with no tasks if file is empty or not found"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Prints relevant status messages"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @param path path to the save file"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @return TaskList object containing tasks read from the save file"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static TaskList readFromSave(Path path) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            boolean directoryExists \u003d java.nio.file.Files.exists(path);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            if (directoryExists) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                taskList \u003d readSaveToTaskListObject(path);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                TextCacher.cacheSaveFound();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                TextCacher.cacheSaveNotFound();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            TextCacher.cacheSaveCorrupted();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private static TaskList readSaveToTaskListObject(Path path) throws Exception {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        FileReader fr \u003d new FileReader(path.toFile());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        String str;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        while ((str \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            String info[] \u003d str.split(\"/break/\", 4);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            taskList.loadInTask(infoToTask(info));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private static Task infoToTask(String info[]) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        switch (info[0]) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                task \u003d new TodoTask(info[2]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    task \u003d new DeadLineTask(info[2], MyDateTime.load(info[3]));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    throw new IllegalStateException(\"Unexpected time format: \" + info[3]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    task \u003d new EventTask(info[2], MyDateTime.load(info[3]));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    throw new IllegalStateException(\"Unexpected time format: \" + info[3]);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                throw new IllegalStateException(\"Unexpected type: \" + info[0]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        if (info[1].equals(\"true\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            task.markDone();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 113,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/MyDateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class MyDateTime {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Parses date time and returns a LocalDateTime object"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Used when parsing user date time input"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @param string date time in the format of \" dd/MM/yyyy HHmm\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @return LocalDateTime object parsed from the input string"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @throws DateTimeParseException means user input is incorrect"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    // change this to increase the formats accepted for date time"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static LocalDateTime parse(String string) throws DateTimeParseException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return LocalDateTime.parse(string, DateTimeFormatter.ofPattern(\" dd/MM/yyyy HHmm\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Parses date time and returns a LocalDateTime object"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Used for loading off a text file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @param string default format of date time of the LocalDateTime class"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     *               date time in the format of \"yyyy-MM-dd\" + \"T\" + \"HH:mm\", \"T\" being just a letter in the string"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @return LocalDateTime object parsed from the input string"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @throws DateTimeParseException means safe file format no longer default"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static LocalDateTime load(String string) throws DateTimeParseException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return LocalDateTime.parse(string);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 33
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.text.TextBuilder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Adds an task object to this TaskList object"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Returns a string saying the task has been added and how many there are total"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Or alternatively task is not added because it has a duplicate"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @param task task to be added to list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @return information string"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String addTask(Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        int duplicateTaskNum \u003d findDuplicate(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        if (duplicateTaskNum \u003d\u003d -1) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            return TextBuilder.buildTaskAddedSuccessMsg(task, taskList.size());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            return TextBuilder.buildDuplicateTaskMsg(taskList.get(duplicateTaskNum), duplicateTaskNum);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Adds an task object to this TaskList object"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Used for loading from save file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @param task task to be loaded to list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void loadInTask(Task task) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Sends all the tasks in this list back in a string"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @return a ArrayList of all the tasks"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public ArrayList\u003cTask\u003e allTasks() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Finds and returns all tasks with descriptions that contains the string provided"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @param string search term"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @return a ArrayList of all the matching tasks"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public ArrayList\u003cTask\u003e search(String string) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        for (Task item: taskList) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            if (item.getDescription().contains(string)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                temp.add(item);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Constructs a string from tasks that can be saved into a text file and can be read by FileManager"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @return A long string of all the tasks to be saved"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String allSaveString() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            StringBuilder temp \u003d new StringBuilder();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                temp.append(\"\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                temp.append(task.saveString());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            return temp.substring(1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Marks a task as done with a given position of the task in the list"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @param position of task in list"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @return information string"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @throws IndexOutOfBoundsException indicating position out of bounds of list"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String markDone(int position) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        assert position \u003c taskList.size() \u0026\u0026 position \u003e\u003d 0 : \" IndexOutOfBounds when marking a task done\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        Task toBeMarked \u003d taskList.get(position - 1);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return TextBuilder.buildMarkDoneMsg(toBeMarked, position);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Deletes a task at a given position in the list"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @param position of task in list"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @return information string"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @throws IndexOutOfBoundsException indicating position out of bounds of list"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String deleteTask(int position) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        assert position \u003c taskList.size() \u0026\u0026 position \u003e\u003d 0 : \" IndexOutOfBounds when deleting task\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        Task task \u003d taskList.get(position - 1);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        taskList.remove(position - 1);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return TextBuilder.buildDeleteTaskMsg(task, position, taskList.size());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    // below are private methods"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private int findDuplicate(Task task) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            if (task.equals(taskList.get(i))) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                return i;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 124
    }
  },
  {
    "path": "src/main/java/duke/Tasks/DeadLineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class DeadLineTask extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private static String indicator \u003d \"[D]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private final LocalDateTime date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public DeadLineTask(String name, LocalDateTime date) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public boolean equals(Task task) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return task instanceof DeadLineTask \u0026\u0026"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                this.description.equals(task.description) \u0026\u0026"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                this.date.equals(((DeadLineTask) task).date);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return indicator + super.toString() + \" (By: \" + date.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\")) + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String saveString() {return \"D/break/\" + this.done + \"/break/\" + description + \"/break/\" + date;}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 30
    }
  },
  {
    "path": "src/main/java/duke/Tasks/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private static String indicator \u003d \"[E]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private final LocalDateTime date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public EventTask(String name, LocalDateTime date) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public boolean equals(Task task) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return task instanceof EventTask \u0026\u0026"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                this.description.equals(task.description) \u0026\u0026"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                this.date.equals(((EventTask) task).date);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return indicator + super.toString() + \" (At: \" + date.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\")) + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String saveString() {return \"E/break/\" + this.done + \"/break/\" + description + \"/break/\" + date;}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 30
    }
  },
  {
    "path": "src/main/java/duke/Tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.text.TextStore;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected boolean done \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return done ? TextStore.doneText + description : TextStore.notDoneText + description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public abstract String saveString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public abstract boolean equals(Task task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Marks the task as done"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @return boolean indicating if done status is changed, false if already marked as done before"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public boolean markDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            done \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 39
    }
  },
  {
    "path": "src/main/java/duke/Tasks/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private static String indicator \u003d \"[T]\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public TodoTask(String name) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public boolean equals(Task task) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return task instanceof TodoTask \u0026\u0026 this.description.equals(task.description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return indicator + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String saveString() { return \"T/break/\" + this.done + \"/break/\" + description; }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 23
    }
  },
  {
    "path": "src/main/java/duke/WindowDisplay.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.text.TextCacher;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import javafx.animation.PauseTransition;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class WindowDisplay extends Application {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private final Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private final Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private CommandParserAndLogic commandParserAndLogic;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private Stage stagePointer;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author Jeffry Lum-reused"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    //Code below reused from sub pages under https://se-education.org/guides/tutorials/javaFx.html with minor modifications"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        stage.setTitle(\"Hendey\u0027s IP Task Manager Bot\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        // My setup for this to work"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        this.mySetup(stage);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        // my stuff ends"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        // Add functionality to handle user input."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e handleUserInput());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.setOnAction((event) -\u003e handleUserInput());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author Jeffry Lum"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    // below are private methods only used in this class"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    private void mySetup(Stage stage) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        TextCacher.cacheStartMessage();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        flushTextCache();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        stagePointer \u003d stage;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        // Location of save here"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        Path pathToSave \u003d Paths.get(System.getProperty(\"user.home\"), \"ipSave.txt\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        TaskList taskList \u003d FileManager.readFromSave(pathToSave);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        flushTextCache();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        commandParserAndLogic \u003d new CommandParserAndLogic(taskList, pathToSave);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        // set up done"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        TextCacher.cachePromptMsg();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        flushTextCache();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!commandParserAndLogic.hasEnded) { // stops users from interacting if it has already ended"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            // echos input to the text row"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            // sends input into the command chain to do its logic and get a return text"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            // sends them out onto the display"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                    DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                    DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            );"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            // checks if user has ended the program with previous command"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            if (commandParserAndLogic.hasEnded) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                endLogic();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            TextCacher.cacheStopDisturb();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            flushTextCache();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sends input into the parsing and command logic"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The text cached in the TextCacher cached by the logic"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    private String getResponse(String input) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        commandParserAndLogic.handleInput(input);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        return TextCacher.getStore();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    private void endLogic() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        TextCacher.cacheEndMessage();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        flushTextCache();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        PauseTransition delay \u003d new PauseTransition(Duration.seconds(5));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        delay.setOnFinished(event -\u003e stagePointer.close());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        delay.play();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    private void flushTextCache() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogBox.getDukeDialog(new Label(TextCacher.getStore()), new ImageView(duke)));"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 35,
      "-": 141
    }
  },
  {
    "path": "src/main/java/duke/text/TextBuilder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "package duke.text;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class TextBuilder {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static String buildTaskListMsg(String header, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        StringBuilder temp \u003d new StringBuilder(header);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            temp.append(\"\\n\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            temp.append(counter).append(\". \").append(task.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return temp.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static String buildTaskAddedSuccessMsg(Task task, int size) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return (\"Got it. I\u0027ve added this task:\\n  \" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                size + \". \" + task.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                \"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static String buildDuplicateTaskMsg(Task duplicateTask, int duplicateTaskNum) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return (\"Task already exists:\\n  \" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                (duplicateTaskNum + 1) + \". \" + duplicateTask.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                \"No new task is added\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static String buildMarkDoneMsg(Task task, int position) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        if (task.markDone()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            return (\"beri gude, finish that thing liao\\n  \" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    position + \". \" + task.toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            return (\"Task alr finish liao\\n  \" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    position + \". \" + task.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static String buildDeleteTaskMsg(Task task, int position, int numTasksLeft) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return (\"Noted. I\u0027ve removed this task:\\n  \" +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                position + \". \" + task.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                \"Now you have \" + numTasksLeft + \" tasks in the list.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 47
    }
  },
  {
    "path": "src/main/java/duke/text/TextCacher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "package duke.text;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class TextCacher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private static StringBuilder store \u003d new StringBuilder();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * Returns the cached string in the class object and clears the cache"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     * @return String that was cached"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static String getStore() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        String temp \u003d store.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        store \u003d new StringBuilder();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void cacheTextStandard(String middle) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        store.append(TextStore.top).append(\"\\n\").append(middle).append(\"\\n\").append(TextStore.bottom).append(\"\\n\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void cacheErrorMsg(String details) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        store.append(TextStore.errorBling).append(\"\\n\").append(details).append(\"\\n\").append(TextStore.errorBling).append(\"\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    // Bling msgs"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void cacheStartMessage() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        cacheTextStandard(TextStore.startMessage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void cacheEndMessage() { cacheTextStandard(TextStore.endMessage);}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void cacheStopDisturb() { cacheTextStandard(TextStore.stopDisturb);}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    // Error msgs"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void cacheTaskNotFoundError() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        cacheErrorMsg(TextStore.taskNotFound);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void cacheCommandNotFoundError() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        cacheErrorMsg(TextStore.commandNotFound);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void cacheDescriptionNotFoundError() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        cacheErrorMsg(TextStore.descriptionNotFound);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void cacheTaskNumNotSpecifiedError() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        cacheErrorMsg(TextStore.taskNumNotSpecified);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void cacheTimeNotFoundError() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        cacheErrorMsg(TextStore.timeNotFound);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void cacheDateTimeFormatError() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        cacheErrorMsg(TextStore.dateTimeFormatError);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void cacheNoSearchTermError() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        cacheErrorMsg(TextStore.noSearchTermError);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void cacheSaveCorrupted() { cacheErrorMsg(TextStore.saveCorrupted); }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    // Status and info msgs"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void cacheSaveFound() { cacheTextStandard(TextStore.saveFound);}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void cacheSaveNotFound() { cacheTextStandard(TextStore.saveNotFound);}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void cacheTasksSavedToTextFile(Path path) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        cacheTextStandard(TextStore.tasksSavedToTextFile + \"\\n\" + \"file saved at:\\n\" + path.toString());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void cacheCommands() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        cacheTextStandard(TextStore.commandList);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void cachePromptMsg() { cacheTextStandard(TextStore.promptMsg); }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 83
    }
  },
  {
    "path": "src/main/java/duke/text/TextStore.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "package duke.text;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class TextStore {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    // Maybe consider changing this class into a text file of sorts and be loaded at the start as an experiment"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    // Public messages means that they are referenced outside to craft messages with other strings (ie strings from task)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    // Bling msgs"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected final static String top \u003d \"----------------Bot made by Hendey Fan----------------\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected final static String errorBling \u003d \"---------------!*!*!ERROR DETECTED!*!*!---------------\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected final static String bottom \u003d \"------------------------------------------------------------\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected final static String startMessage \u003d \" This is a task management bot made by Hendey Fan\\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            \"        Bot is currently starting up BRRRRRRRRRRR\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected final static String endMessage \u003d \"         oi don run away from ur tasks hor    \\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            \"        Window will now close in 5 seconds\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected final static String stopDisturb \u003d \"NO MORE COMMANDS FOR U \u003e.\u003c FINISH LIAO!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    // Error msgs"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected final static String taskNotFound \u003d \"Error: task not found :(\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected final static String commandNotFound \u003d \"Error: command does not exist :(\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            \"Type \u0027!commands\u0027 for list of commands and instructions\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected final static String descriptionNotFound \u003d \"Error: description of task cannot be empty\\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            \"Please check command formats using !commands\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected final static String taskNumNotSpecified \u003d \"Error: task number not specified\\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            \"Please check command formats using !commands\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected final static String timeNotFound \u003d \"Error: time not found\\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            \"Please check command formats using !commands\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected final static String dateTimeFormatError \u003d \"Error: date time in an incorrect format\\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            \"Please follow this format: \u003cdd/MM/yyyy HHmm\u003e\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected final static String noSearchTermError \u003d \"Error: search term not specified\\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            \"Please check command formats using !commands\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected final static String saveCorrupted \u003d \"Error:\\n\" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            \"Save located but is found to be corrupt.\\n\" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            \"No tasks loaded from save.\\n\" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            \"Save will be overwritten on exit with \\\"bye\\\" command.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    // Status msgs"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public final static String saveFound \u003d \"Status: previous save found and loaded\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public final static String saveNotFound \u003d \"Status: no previous save found\\n\" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            \"Will create new save when application closes\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public final static String tasksSavedToTextFile \u003d \"Status: tasks saved to text file successfully\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    // static info/display strings"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public final static String doneText    \u003d \"[Complete] \";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public final static String notDoneText \u003d \"[ToBeDone] \";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected final static String commandList \u003d"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            \"1) !commands | returns a list of text commands\\n\" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    \"2) list | lists out all the current tasks\\n\" +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    \"3) bye | saves the current tasks into a file and exits program\\n\" +"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    \"4) done | format: \\\"done \u003ctask number\u003e\\\", marks a task in the list as done\\n\" +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    \"5) todo | format: \\\"todo \u003cdescription\u003e\\\", creates a todo task\\n\" +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    \"6) deadline | format: \\\"deadline \u003cdescription\u003e /by \u003cdd/MM/yyyy HHmm\u003e\\\", creates a deadline task\\n\" +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    \"7) event | format: \\\"event \u003cdescription\u003e /at \u003cdd/MM/yyyy HHmm\u003e\\\", creates an event task\\n\" +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    \"8) delete | format: \\\"delete \u003ctask number\u003e\\\", deletes a task in the list\\n\" +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    \"9) find | format: \\\"find \u003cstring\u003e\\\", finds tasks with matching string\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected final static String promptMsg \u003d \"Type \\\"!commands\\\" for a list of commands and formats\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    // Strings used by TaskList class"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public final static String listOutHeader \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public final static String searchListHeader \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 61
    }
  },
  {
    "path": "src/test/java/duke/MyDateTimeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class MyDateTimeTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void myDateTimeWrongValue(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            MyDateTime.parse(\" 12/34/5678 1234\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            assertEquals(\"Text \u0027 12/34/5678 1234\u0027 could not be parsed: Invalid value for MonthOfYear (valid values 1 - 12): 34\", e.getMessage());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void myDateTimeWrongFormat(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            MyDateTime.parse(\" 12/wrong\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            assertEquals(\"Text \u0027 12/wrong\u0027 could not be parsed at index 4\", e.getMessage());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void myDateTimeLoadWrongValue(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            MyDateTime.load(\"1234-34-12T12:34\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            assertEquals(\"Text \u00271234-34-12T12:34\u0027 could not be parsed: Invalid value for MonthOfYear (valid values 1 - 12): 34\", e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void myDateTimeLoadWrongFormat(){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            MyDateTime.load(\"1234-wrong\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            assertEquals(\"Text \u00271234-wrong\u0027 could not be parsed at index 5\", e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 46
    }
  },
  {
    "path": "src/test/java/duke/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.tasks.DeadLineTask;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.tasks.EventTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import duke.tasks.TodoTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void todoEqualsTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        TodoTask task1 \u003d new TodoTask(\"test\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        TodoTask task2 \u003d new TodoTask(\"test\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        assertEquals(task1.equals(task2), true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void todoNotEqualsTest() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        TodoTask task1 \u003d new TodoTask(\"hello\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        TodoTask task2 \u003d new TodoTask(\"bye\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        assertEquals(task1.equals(task2), false);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void eventEqualsTest() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        EventTask task1 \u003d new EventTask(\"test\", MyDateTime.parse(\" 12/12/1234 1234\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        EventTask task2 \u003d new EventTask(\"test\", MyDateTime.parse(\" 12/12/1234 1234\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        assertEquals(task1.equals(task2), true);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void eventNotEqualsTest() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        EventTask task1 \u003d new EventTask(\"hello\", MyDateTime.parse(\" 12/12/1234 1234\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        EventTask task2 \u003d new EventTask(\"bye\", MyDateTime.parse(\" 12/12/1234 1234\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        assertEquals(task1.equals(task2), false); // only des. changed"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        EventTask task3 \u003d new EventTask(\"test\", MyDateTime.parse(\" 12/12/1234 2359\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        EventTask task4 \u003d new EventTask(\"test\", MyDateTime.parse(\" 12/12/1234 1234\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        assertEquals(task3.equals(task4), false); // only time changed"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        assertEquals(task1.equals(task3), false); // des. and time changed"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void deadlineEqualsTest() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        DeadLineTask task1 \u003d new DeadLineTask(\"test\", MyDateTime.parse(\" 12/12/1234 1234\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        DeadLineTask task2 \u003d new DeadLineTask(\"test\", MyDateTime.parse(\" 12/12/1234 1234\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        assertEquals(task1.equals(task2), true);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void deadlineNotEqualsTest() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        DeadLineTask task1 \u003d new DeadLineTask(\"hello\", MyDateTime.parse(\" 12/12/1234 1234\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        DeadLineTask task2 \u003d new DeadLineTask(\"bye\", MyDateTime.parse(\" 12/12/1234 1234\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        assertEquals(task1.equals(task2), false); // only des. changed"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        DeadLineTask task3 \u003d new DeadLineTask(\"test\", MyDateTime.parse(\" 12/12/1234 2359\"));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        DeadLineTask task4 \u003d new DeadLineTask(\"test\", MyDateTime.parse(\" 12/12/1234 1234\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        assertEquals(task3.equals(task4), false); // only time changed"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        assertEquals(task1.equals(task3), false); // des. and time changed"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 65
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "test"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "event event test /at 12/12/1234 1234"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "todo todo test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "deadline test /by 12/12/1234 1234"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 1,
      "-": 20
    }
  }
]
