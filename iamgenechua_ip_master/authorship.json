[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "-": 24,
      "iamgenechua": 2
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 44,
      "iamgenechua": 18
    }
  },
  {
    "path": "src/main/java/duke/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * Encapsulates a Add Deadline Command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Instantiates a AddDeadlineCommand."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param parsedCommand the parsed command"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public AddDeadlineCommand(String[] parsedCommand) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        super(parsedCommand);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Executes command and write to storage."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param tasks the tasklist containing tasks so far"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param ui ui to interact with user"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param storage storage to read and write to storage file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @throws DukeException if parsedCommand does not meet the requirements"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void execute(TaskList\u003cTask\u003e tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        // if length is not 2, nothing was passed in after \u0027deadline\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        if (getParsedCommand().length !\u003d 2) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            throw new DukeException(\"NANI??! Enter a description for your deadline!\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        // if description is lacking a /by keyword"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        String description \u003d getParsedCommand()[1];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        if (description.indexOf(\"/by\") \u003c 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            throw new DukeException(\"Please enter a valid deadline! Remember to add \u0027/by\u0027\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        String[] descriptionArray \u003d description.split(\"/by\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        if (descriptionArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            throw new DukeException(\"NANI??! Enter your deadline name, date \u0026 time(if any) (e.g. 2020-01-30 18:30)!\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        String deadlineName \u003d descriptionArray[0];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        String deadlineEndTime \u003d descriptionArray[1];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        // split to date and time"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        String[] deadlineEndingArray \u003d deadlineEndTime.trim().split(\" \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        // create a LocalDate object"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        String formattedDeadline;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            LocalDate lt \u003d LocalDate.parse(deadlineEndingArray[0]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            formattedDeadline \u003d lt.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            if (deadlineEndingArray.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                LocalTime t \u003d LocalTime.parse(deadlineEndingArray[1]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                formattedDeadline +\u003d \" \""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                        + DateTimeFormatter.ofPattern(\"hh:mm a\").format(t);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            throw new DukeException(\"NANI??! Enter a valid date and time(optional).\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                    + \"Date should be: yyyy-mm-dd.\\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                    + \"Time should be HH:mm\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        Task taskToAdd \u003d new Deadline(deadlineName, formattedDeadline);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        addTask(tasks, taskToAdd, ui);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Adds a task to the tasklist."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param tasks the tasklist containing tasks so far"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param taskToAdd the task to add to tasklist"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void addTask(TaskList\u003cTask\u003e tasks, Task taskToAdd, Ui ui) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        tasks.add(taskToAdd);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        ui.appendMessage(\"Hai! I have added this task to your list:\\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + taskToAdd);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        printToDoListSize(tasks, ui);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Prints list size."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param tasks the tasklists"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void printToDoListSize(TaskList\u003cTask\u003e tasks, Ui ui) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        ui.appendMessage(\"You now have \""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + tasks.size()"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + \" tasks in your list. Gambatte!\\n\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 92
    }
  },
  {
    "path": "src/main/java/duke/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * Encapsulates a Add Deadline Command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Instantiates an AddEventCommand."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param parsedCommand the parsed command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public AddEventCommand(String[] parsedCommand) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        super(parsedCommand);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Executes command and write to storage."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param tasks the tasklist containing tasks so far"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param ui ui to interact with user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param storage storage to read and write to storage file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @throws DukeException if parsedCommand does not meet the requirements"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void execute(TaskList\u003cTask\u003e tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        // if length is not 2, nothing was passed in after \u0027makeEvent\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        if (getParsedCommand().length !\u003d 2) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            throw new DukeException(\"NANI??! Enter a description for your event!\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        // if event is lacking a /at keyword"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        String description \u003d getParsedCommand()[1];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        if (description.indexOf(\"/at\") \u003c 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            throw new DukeException(\"Please enter a valid event! Remember to add \u0027/at\u0027\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        String[] descriptionArray \u003d description.split(\"/at\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        if (descriptionArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            throw new DukeException(\"NANI??! Enter your event name \u0026 an event timing!\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        String eventName \u003d descriptionArray[0];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        String eventTiming \u003d descriptionArray[1];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        Task taskToAdd \u003d new Event(eventName, eventTiming);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        addTask(tasks, taskToAdd, ui);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Adds a task to the tasklist."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param tasks the tasklist containing tasks so far"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param taskToAdd the task to add to tasklist"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void addTask(TaskList\u003cTask\u003e tasks, Task taskToAdd, Ui ui) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        tasks.add(taskToAdd);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        ui.appendMessage(\"Hai! I have added this task to your list:\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + taskToAdd + \"\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        printToDoListSize(tasks, ui);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Prints list size."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param tasks the tasklists"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void printToDoListSize(TaskList\u003cTask\u003e tasks, Ui ui) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        ui.appendMessage(\"You now have \""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + tasks.size()"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + \" tasks in your list. Gambatte!\\n\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 69
    }
  },
  {
    "path": "src/main/java/duke/AddToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * Encapsulates a Add ToDo Command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public class AddToDoCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Instantiates an AddToDoCommand."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param parsedCommand the parsed command"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public AddToDoCommand(String[] parsedCommand) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        super(parsedCommand);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Executes command and write to storage."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param tasks the tasklist containing tasks so far"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param ui ui to interact with user"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param storage storage to read and write to storage file"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @throws DukeException if parsedCommand does not meet the requirements"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void execute(TaskList\u003cTask\u003e tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        if (getParsedCommand().length !\u003d 2) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            throw new DukeException(\"NANI??! Enter a description for your todo!\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        String description \u003d getParsedCommand()[1];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        Task taskToAdd \u003d new ToDo(description);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        addTask(tasks, taskToAdd, ui);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Adds a task to the tasklist."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param tasks the tasklist containing tasks so far"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param taskToAdd the task to add to tasklist"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void addTask(TaskList\u003cTask\u003e tasks, Task taskToAdd, Ui ui) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        tasks.add(taskToAdd);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        ui.appendMessage(\"Hai! I have added this task to your list:\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + taskToAdd + \"\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        printToDoListSize(tasks, ui);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Prints list size."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param tasks the tasklists"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void printToDoListSize(TaskList\u003cTask\u003e tasks, Ui ui) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        ui.appendMessage(\"You now have \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + tasks.size()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + \" tasks in your list. Gambatte!\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 54
    }
  },
  {
    "path": "src/main/java/duke/ClearCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * Encapsulates a Clear Command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Instantiates a Clear Command"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param parsedCommand the parsed command"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public ClearCommand(String[] parsedCommand) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        super(parsedCommand);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Executes command and write to storage."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param tasks the tasklist containing tasks so far"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param ui ui to interact with user"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param storage storage to read and write to storage file"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @throws DukeException if parsedCommand does not meet the requirements"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void execute(TaskList\u003cTask\u003e tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        tasks.clearList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        ui.appendMessage(\"All your tasks have been removed!\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 27
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * Encapsulates an Abstract Command class"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    private String[] parsedCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Instantiates a Command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param parsedCommand"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public Command(String[] parsedCommand) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        this.parsedCommand \u003d parsedCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public String[] getParsedCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return parsedCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Abstract method that executes a command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param tasks tasklist containing tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param ui to interact with user"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param storage to read and write date to file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @throws DukeException if commands are not valid"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    abstract void execute(TaskList\u003cTask\u003e tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Determines if it is the end of a program."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @return boolean to indicate if end of program"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    boolean isExitProgram() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        for (String str : parsedCommand) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            result +\u003d str;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 46
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * Encapsulates a duke.Deadline item"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    private String endDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Instantiates a duke.Deadline with a description of it."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param description the description of the deadline"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param endDate the end date of the deadline"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    Deadline(String description, String endDate) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Overloaded constructor to instantiate a deadline with customised status."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param description description of the deadline"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param done status of the deadline"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param endDate the end date of the deadline"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    Deadline(String description, boolean done, String endDate) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Marks a deadline as \u0027done\u0027."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @return a deadline that is done"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    Deadline markAsDone() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return new Deadline(this.description, true, this.endDate);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Overriden toString() method"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @return custom String"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return \"[DEADLINE]\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + \" \" + super.toString()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + \"(by:\" + this.endDate + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    String toStorageRepresentation() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        String result;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        result \u003d \"duke.Deadline\" + \"|\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        result +\u003d this.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        result +\u003d \"|\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        result +\u003d this.description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        result +\u003d \"|\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        result +\u003d this.endDate;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 61
    }
  },
  {
    "path": "src/main/java/duke/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * Encapsulates a Delete Command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Instantiates a delete command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param parsedCommand command that has been parsed"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public DeleteCommand(String[] parsedCommand) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        super(parsedCommand);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Executes command and write to storage."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param tasks the tasklist containing tasks so far"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param ui ui to interact with user"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param storage storage to read and write to storage file"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @throws DukeException if parsedCommand does not meet the requirements"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void execute(TaskList\u003cTask\u003e tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            // if length is not 2, nothing was passed in after \u0027done\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            if (getParsedCommand().length !\u003d 2) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                throw new DukeException(\"Which task do you want to delete? Please key in the task number!\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            // check if taskNumber is a number"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(getParsedCommand()[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            // check if taskNumber is valid"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            if (taskNumber \u003c\u003d 0 || taskNumber \u003e tasks.size()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                throw new DukeException(\"Sorry, no such task to delete!\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            Task currentTask \u003d tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            ui.appendMessage(\"Hai! This task has been deleted!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            tasks.remove(currentTask);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            ui.appendMessage(currentTask.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            printToDoListSize(tasks, ui);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            throw new DukeException(\"\u0027\" + getParsedCommand()[1] + \"\u0027\" + \" is not an integer!\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Adds a task to the tasklist."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param tasks the tasklist containing tasks so far"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param taskToAdd the task to add to tasklist"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void addTask(TaskList\u003cTask\u003e tasks, Task taskToAdd, Ui ui) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        tasks.add(taskToAdd);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        ui.appendMessage(\"Hai! I have added this task to your list:\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + taskToAdd + \"\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        printToDoListSize(tasks, ui);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Prints list size."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param tasks the tasklists"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void printToDoListSize(TaskList\u003cTask\u003e tasks, Ui ui) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        ui.appendMessage(\"You now have \""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + tasks.size()"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + \" tasks in your list. Gambatte!\\n\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 68
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 61
    }
  },
  {
    "path": "src/main/java/duke/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * Encapsulates a Done Command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Instantiates a Done command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param parsedCommand command that has been parsed"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public DoneCommand(String[] parsedCommand) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        super(parsedCommand);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Executes command and write to storage."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param tasks the tasklist containing tasks so far"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param ui ui to interact with user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param storage storage to read and write to storage file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @throws DukeException if parsedCommand does not meet the requirements"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void execute(TaskList\u003cTask\u003e tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            // if length is not 2, nothing was passed in after \u0027done\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            if (getParsedCommand().length !\u003d 2) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                throw new DukeException(\"Which task are you done with? Please key in the task number!\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            // check if taskNumber is a number"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(getParsedCommand()[1]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            // check if taskNumber is valid"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            if (taskNumber \u003c\u003d 0 || taskNumber \u003e tasks.size()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                throw new DukeException(\"Sorry, no such task to mark as done!\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            Task currentTask \u003d tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            Task newTask \u003d currentTask.markAsDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            tasks.set(taskNumber - 1, newTask);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            ui.appendMessage(\"Sugoi! This task is done!\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            ui.appendMessage(newTask + \"\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            throw new DukeException(getParsedCommand()[1] + \" is not an integer!\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 47
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * Entry point of the program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    private TaskList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    private boolean isFirstInteraction;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Instantiates a Duke object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param filePath the directory to store data"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        isFirstInteraction \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            tasks \u003d new TaskList\u003c\u003e(storage.load());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            ui.showError(e);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public String getResponse(String userInput) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            ui.clearMessage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            Command c \u003d Parser.parse(userInput);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            return ui.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            return ui.showError(e);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 1,
      "iamgenechua": 37
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * Encapsulates the error handling and printing of messages"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Constructor for Custom Exception"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param errorMessage error message to be printed when exception is thrown"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 15
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * Encapsulates an duke.Event task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    private String timing;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Instantiates an event with a description of it."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param description description of the event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param timing the timing of the event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    Event(String description, String timing) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Overloaded constructor to instantiate a event with customised status."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param description description of the event"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param done status of the event"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param timing the end date of the event"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    Event(String description, boolean done, String timing) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Marks a event as \u0027done\u0027."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @return a event that is done"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    Event markAsDone() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return new Event(this.description, true, this.timing);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Overridden toString() method."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @return custom String"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return \"[EVENT]\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + \" \" + super.toString()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + \"(at:\" + this.timing + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    String toStorageRepresentation() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        String result;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        result \u003d \"duke.Event\" + \"|\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        result +\u003d this.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        result +\u003d \"|\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        result +\u003d this.description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        result +\u003d \"|\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        result +\u003d this.timing;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 61
    }
  },
  {
    "path": "src/main/java/duke/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * Encapsulates an Exit Command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public ExitCommand(String[] parsedCommand) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        super(parsedCommand);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Executes command and write to storage."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param tasks the tasklist containing tasks so far"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param ui ui to interact with user"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param storage storage to read and write to storage file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @throws DukeException if parsedCommand does not meet the requirements"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void execute(TaskList\u003cTask\u003e tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        ui.appendMessage(\"Sayonara! See you again my friend!\\n\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Determines if it is the end of a program."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @return false to indicate end of program"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    boolean isExitProgram() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 31
    }
  },
  {
    "path": "src/main/java/duke/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public FindCommand(String[] parsedCommand) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        super(parsedCommand);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void execute(TaskList\u003cTask\u003e tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        // if length is not 2, nothing was passed in after \u0027find\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        if (getParsedCommand().length !\u003d 2) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            throw new DukeException(\"NANI??! Tell us something to find!\\n\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        String inputDescription \u003d getParsedCommand()[1].trim();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        boolean taskFound \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        ui.appendMessage(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            if (tasks.get(i)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                    .getDescription()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                    .contains(inputDescription)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                taskFound \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                ui.appendMessage((i + 1) + \". \" + tasks.get(i) + \"\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        if (!taskFound) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            ui.appendMessage(\"Nothing matches your search!\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            ui.appendMessage(\"\\n\"); // print empty line for easier visualisation"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 32
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 12
    }
  },
  {
    "path": "src/main/java/duke/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * Encapsulates a List Command"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public ListCommand(String[] parsedCommand) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        super(parsedCommand);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Executes command and write to storage."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param tasks the tasklist containing tasks so far"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param ui ui to interact with user"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param storage storage to read and write to storage file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @throws DukeException if parsedCommand does not meet the requirements"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void execute(TaskList\u003cTask\u003e tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            ui.appendMessage(\"No tasks at the moment! Good job!\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        ui.appendMessage(\"Here are your tasks!\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            ui.appendMessage((i + 1) + \". \" + tasks.get(i) + \"\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        ui.appendMessage(\"\\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 31
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/duke.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 31
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * Controller for duke.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        if (input.toLowerCase().equals(UserCommand.BYE.getCommand())) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            TimerTask task \u003d new TimerTask() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                public void run() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            };"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            Timer timer \u003d new Timer(\"Timer\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            timer.schedule(task, 1000);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 65
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * Encapsulates duke.Parser functionality to parse user input"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Splits user input into command and description to facilitate processing."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param fullCommand full user input"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @return the appropriate duke.Command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @throws DukeException if user input is invalid"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        String[] parsedCommand \u003d fullCommand.split(\" \", 2); // separates the first word from the rest"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        String command \u003d parsedCommand[0].toLowerCase();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return callCommand(command, parsedCommand);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Invokes the correct duke.Command object based on the user\u0027s command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param command user\u0027s command input"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param parsedCommand user\u0027s parsed input"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @return the appropriate duke.Command"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @throws DukeException if user input is invalid"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    static Command callCommand(String command, String[] parsedCommand) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        if (command.equals(UserCommand.BYE.getCommand())) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            return new ExitCommand(parsedCommand);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        } else if (command.equals(UserCommand.LIST.getCommand())) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            return new ListCommand(parsedCommand);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        } else if (command.equals(UserCommand.DONE.getCommand())) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            return new DoneCommand(parsedCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        } else if (command.equals(UserCommand.TODO.getCommand())) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            return new AddToDoCommand(parsedCommand);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        } else if (command.equals(UserCommand.DEADLINE.getCommand())) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            return new AddDeadlineCommand(parsedCommand);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        } else if (command.equals(UserCommand.EVENT.getCommand())) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            return new AddEventCommand(parsedCommand);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        } else if (command.equals(UserCommand.DELETE.getCommand())) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            return new DeleteCommand(parsedCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        } else if (command.equals(UserCommand.CLEAR.getCommand())) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            return new ClearCommand(parsedCommand);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        } else if (command.equals(UserCommand.FIND.getCommand())) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            return new FindCommand(parsedCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            throw new DukeException(\"NANI??! Please say something that I can understand!\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 49
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * Encapsulates data storage functionality"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Instantiates a storage item that can read and write data."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param filePath the directory to store the data"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        file \u003d new File(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Runs upon program start-up to load data onto program."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @return An arrayList of existing tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @throws DukeException if file is not found"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            return readContentToProgram(file);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            throw new DukeException(\"File not Found\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param file path pointing to data storage file"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @return An arrayList of existing tasks"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @throws FileNotFoundException if file is not found"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    ArrayList\u003cTask\u003e readContentToProgram(File file) throws FileNotFoundException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        Scanner sc \u003d new Scanner(file); // create a Scanner using file as the source"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            // take the content and make an arraylist of tasks"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            String dataEntry \u003d sc.nextLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            String[] parsedData \u003d dataEntry.split(\"\\\\|\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            String command \u003d parsedData[0].toLowerCase();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            boolean isDone \u003d Integer.parseInt(parsedData[1]) \u003d\u003d 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            String description \u003d parsedData[2];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            if (command.equals(UserCommand.TODO.getCommand())) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                tasks.add(new ToDo(description, isDone));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            } else if (command.equals(UserCommand.DEADLINE.getCommand())) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                String timing \u003d parsedData[3];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                tasks.add(new Deadline(description, isDone, timing));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            } else if (command.equals(UserCommand.EVENT.getCommand())) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                String timing \u003d parsedData[3];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                tasks.add(new Deadline(description, isDone, timing));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Iterates through taskList and writes tasks to file storage"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param tasks the taskList containing the tasks"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void writeToFile(TaskList\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            ArrayList\u003cTask\u003e taskArrayList \u003d tasks.exportList();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            for (Task task : taskArrayList) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                fw.write(task.toStorageRepresentation() + System.lineSeparator()); // overwrite file"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            throw new DukeException(\"Error with writing tasks to storage\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 86
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * Encapsulates details of a duke.Task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Instantiates a task with a description of it."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param description an explanation of what the task is about"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Overloaded constructor to instantiate a task with customised status."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param done status of the task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    Task(String description, boolean done) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        this.isDone \u003d done;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Visualises the status of a task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @return whether or not a task is done"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    String getStatusIcon() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return \"[\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            + (isDone"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                ? \"\\u2713\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                : \"\\u2718\") //return tick or X symbols"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            + \"]\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Marks a task as \u0027done\u0027."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @return a task with a status of \u0027done\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    Task markAsDone() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return new Task(this.description, true);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Provides the description of the task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @return the string representation of the task"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return this.getStatusIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    String toStorageRepresentation() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return toString();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 65
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * Encapsulates the duke.TaskList containing the tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * @param \u003cTask\u003e the duke.Task objects"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public class TaskList\u003cTask\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Instantiates new duke.TaskList object to store Tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Instantiates duke.TaskList Object to store existing Tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Check if duke.TaskList is empty."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @return if taskList is empty or not"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    boolean isEmpty() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return taskList.isEmpty();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Checks duke.TaskList size."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @return the size of the duke.TaskList"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    int size() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Gets a task at the given position."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param position the position of the task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @return the task at the given position"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    Task get(int position) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return taskList.get(position);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Replaces a new duke.Task at given position in line with immutability."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param position the position of the task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param newTask the new task to input"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void set(int position, Task newTask) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        taskList.set(position, newTask);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Adds a duke.Task to duke.TaskList."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param taskToDo the task to be added"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void add(Task taskToDo) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        taskList.add(taskToDo);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Removes a duke.Task from the duke.TaskList."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param taskToRemove the task to be removed"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void remove(Task taskToRemove) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        taskList.remove(taskToRemove);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Exports the duke.TaskList as an arrayList for easier processing."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @return the arrayList containing the Tasks"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    ArrayList\u003cTask\u003e exportList() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Clears the entire TaskList"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void clearList() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 91
    }
  },
  {
    "path": "src/main/java/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * Encapsulates a stodo  duke.ToDo item"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Instantiates a duke.ToDo with a description of it."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param description an explanation of what the task is about"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    ToDo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Overloaded constructor to instantiate a todo with customised status."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param description description of the todo"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param done status of the todo"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    ToDo(String description, boolean done) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Marks a todo as \u0027done\u0027."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @return a todo that is done"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    ToDo markAsDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return new ToDo(this.description, true);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Overriden toString() method"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @return custom String"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return \"[TODO]\" + \" \" + super.toString();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    String toStorageRepresentation() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        String result;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        result \u003d \"Todo\" + \"|\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        result +\u003d this.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        result +\u003d \"|\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        result +\u003d this.description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 53
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * Encapsulates the duke.Ui and its behavior."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    Ui() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        this.message \u003d \"\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void clearMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        this.message \u003d \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Prints a welcome message for the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void welcome() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        this.message \u003d \"Konichiwa! Welcome to Kaizen\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                + \"I am Kai, what can I do for you today?\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    String showError(Exception e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return e.getMessage() + \"\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    void appendMessage(String str) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        message +\u003d str;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 38
    }
  },
  {
    "path": "src/main/java/duke/UserCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " * Encapsulates all the commands recognised by chaBot"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public enum UserCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    BYE(\"bye\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    LIST(\"list\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    DONE(\"done\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    TODO(\"todo\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    EVENT(\"event\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    DELETE(\"delete\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    CLEAR(\"clear\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    FIND(\"find\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    private final String command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Constructor for instantiating a user command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @param command command that the user types in"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    UserCommand(String command) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Gett method for user command"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @return the user command"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    String getCommand() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        return this.command;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 34
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 19
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Tests if the parser returns the correct Command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * @throws DukeException if fullCommand is not valid"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public void parserTestToDo() throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        String toDoString \u003d new AddToDoCommand(new String[] {\"todo\", \"eat good food\"}).toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        assertEquals(Parser.parse(\"todo eat good food\").toString(),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                toDoString);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Tests if new deadline object returns appropriate string"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public void deadlineTest() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        assertEquals(new Deadline(\"study \", \"23 November 2019\").toString(),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                \"[DEADLINE] [✘] study (by:23 November 2019)\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     * Tests if new event object returns appropriate string"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    public void eventTest() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "        assertEquals(new Event(\"Hackathon \", \"NUS U town\").toString(),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "                \"[EVENT] [✘] Hackathon (at:NUS U town)\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 37
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "clear"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "todo study for exams"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "todo buy food"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "done oops type wrong"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "done 69"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "todo pray"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "deadline CS2103 /by 20 August 2020"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "deadline final assignment /by 19 September 2020"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "deadline /by"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "event run /at Utown 10pm"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "event run at Utown 10pm"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "event gym /at Utown 10pm"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "event run /at"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "event dance /at school"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "todo"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "event"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "blah"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "delete"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "clear"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 31
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "iamgenechua": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin/ ../src/main/java/duke/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "# cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "# diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 33,
      "iamgenechua": 6
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "../src/main/java/ConsoleColors.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "../src/main/java/duke.Event.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "../src/main/java/duke.Task.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "../src/main/java/duke.Ui.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "../src/main/java/duke.Duke.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "../src/main/java/duke.Deadline.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamgenechua"
        },
        "content": "../src/main/java/duke.ToDo.java"
      }
    ],
    "authorContributionMap": {
      "iamgenechua": 7
    }
  }
]
