[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    implementation \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    //implementation \u0027org.junit.jupiter:junit-jupiter\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UnicornJin": 5,
      "-": 43
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "E"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "0"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "CS2103 lecture "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "2020-08-01"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "D"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "0"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "CS2103 project submission "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "2020-08-01"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "D"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "0"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "CS2103 tP "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "2020-08-01"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "T"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "a"
      }
    ],
    "authorContributionMap": {
      "UnicornJin": 15
    }
  },
  {
    "path": "src/main/java/seedu/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": " * Holds the deadline task and relative operations."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": " * Inherits from Task class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Stores Time(Date) information of the deadline object"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    protected LocalDate time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Initializes a deadline object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Sets the status to false(not done)."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param content Content of the deadline object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param time    Time of the deadline object, in string form, will be parsed to LocalDate."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public Deadline(String content, String time) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        super(content);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        this.time \u003d LocalDate.parse(time, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Initializes a deadline object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param status  Status of the deadline object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param content Content of the deadline object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param time    Time of the deadline object, int string form, will be parsed to LocalDate."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public Deadline(boolean status, String content, String time) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        super(status, content);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        this.time \u003d LocalDate.parse(time, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Gives the time information of the deadline object."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * In \"yyyy-MM-dd\" format, e.g. 2020-08-01."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @return The time in string type with the format \"yyyy-MM-dd\"."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        return time.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Gives the string representation of the deadline object."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @return String representation of the deadline object."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        return \"[D]\" + (super.status ? \"[√] \" : \"[×] \") + super.content + \"(by \" + time"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                .format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\" + \"  \u003c-\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UnicornJin": 61
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "import java.security.InvalidParameterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": " * Main part of logic of Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Holds the storage of data"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Manages the list of tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Parses input strings from user to task objects"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Holds the user interface part"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Initializes Duke object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Finishes essential settings."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param filePath Path of data file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        taskList \u003d new TaskList(storage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Holds management of operations."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        ui.welcomeWord();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        ui.showHistory(taskList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        Scanner inputScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        String userInput \u003d \"\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        while (!userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            userInput \u003d inputScanner.nextLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            if (userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                ui.goodBye();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            } else if (userInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                ui.listTask(taskList);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            } else if (userInput.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    int doneNumber \u003d parser.parseDoneOrder(userInput, taskList);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    taskList.markDone(doneNumber);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    ui.taskDone(taskList.getTask(doneNumber));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    ui.taskDoesNotExist();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    ui.invalidDoneOrder();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            } else if (userInput.startsWith(\"todo\") || userInput.startsWith(\"deadline\") || userInput"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    .startsWith(\"event\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    Task newTask \u003d parser.parseTask(userInput);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    taskList.addNewTask(newTask);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    ui.newTaskAdded(newTask, taskList);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                } catch (InvalidParameterException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    ui.parseFail(userInput);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            } else if (userInput.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    int deletingIndex \u003d parser.parseDeleteOrder(userInput, taskList);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    Task deletingTask \u003d taskList.getTask(deletingIndex);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    taskList.deleteTask(deletingIndex);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    ui.taskDeleted(taskList, deletingTask);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    ui.taskDoesNotExist();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    ui.invalidDeleteOrder();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            } else if (userInput.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    String keyWord \u003d parser.parseFindOrder(userInput);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    ui.showFindResult(taskList.find(keyWord));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                } catch (InvalidParameterException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    ui.invalidFindOrder();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                ui.generalError();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        inputScanner.close();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Starts Duke program."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Gives path of data file."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param args Default."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        new Duke(\"./data/duke.txt\").run();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UnicornJin": 112,
      "-": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": " * Holds the Event objects and relative operations."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": " * Inherits from Task class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Stores time(date) information of the event object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    protected LocalDate time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Initializes an event object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Sets the status to false(not done)."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param content Content of the event object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param time    Time of the event object, in string type, will be parsed to LocalDate type."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public Event(String content, String time) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        super(content);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        this.time \u003d LocalDate.parse(time, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Initializes an event object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param status  Status of the event object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param content Content of the event object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param time    Time of the event object, in string type, will be parsed to LocalDate type."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public Event(boolean status, String content, String time) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        super(status, content);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        this.time \u003d LocalDate.parse(time, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Gives time information of the event object."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * In \"yyyy-MM-dd\" format, e.g. 2020-08-01."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @return The time in string type with the format \"yyyy-MM-dd\"."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        return time.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Gives the string representation of the event object."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @return String representation of the event object."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        return \"[E]\" + (super.status ? \"[√] \" : \"[×] \") + super.content + \"(on \" + time"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                .format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\" + \"  \u003c-\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UnicornJin": 61
    }
  },
  {
    "path": "src/main/java/seedu/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "import java.security.InvalidParameterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": " * Parses user input string to objects."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Parses user input string represent Todo/Deadline/Event object to actual object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param resource User input string."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @return Represented object of user input string."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @throws InvalidParameterException If user input string is in wrong format."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public Task parseTask(String resource) throws InvalidParameterException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        Task result;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        if (resource.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                if (resource.substring(5).length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    throw new Exception();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                Todo newTodo \u003d new Todo(resource.substring(5));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                result \u003d newTodo;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                throw new InvalidParameterException();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        } else if (resource.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                String[] splited \u003d resource.substring(9).split(\"/\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                Deadline newDeadline \u003d new Deadline(splited[0], splited[1].replace(\" \", \"\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                result \u003d newDeadline;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                throw new InvalidParameterException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        } else if (resource.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                String[] splited \u003d resource.substring(6).split(\"/\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                Event newEvent \u003d new Event(splited[0], splited[1].replace(\" \", \"\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                result \u003d newEvent;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                throw new InvalidParameterException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            throw new InvalidParameterException();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Parses the done order from user."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Gives the index of target task."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param resource User input string representing done order."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param taskList TaskList object of the program."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @return Index of target task in taskList."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @throws IndexOutOfBoundsException If user inputs an index not in task list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @throws Exception                 If user inputs done order in wrong format."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public int parseDoneOrder(String resource, TaskList taskList) throws IndexOutOfBoundsException, Exception {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        if (resource.length() \u003c\u003d 4) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            throw new Exception();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        String numberString \u003d resource.substring(5).replace(\" \", \"\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            int doneNo \u003d Integer.parseInt(numberString);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            if (doneNo \u003c\u003d 0 || doneNo - 1 \u003e\u003d taskList.taskCount()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                return doneNo - 1;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Parses the delete order from user."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Gives the index of target task."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param resource User input string representing delete order."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param taskList TaskList object of the program."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @return Index of deleting task in taskList."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @throws IndexOutOfBoundsException If user inputs an index not in task list."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @throws Exception                 If user inputs deleting order in wrong format."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public int parseDeleteOrder(String resource, TaskList taskList) throws IndexOutOfBoundsException, Exception {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        if (resource.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            throw new Exception();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        String numberString \u003d resource.substring(7).replace(\" \", \"\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            int deletingNumber \u003d Integer.parseInt(numberString);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            if (deletingNumber \u003c\u003d 0 || deletingNumber - 1 \u003e\u003d taskList.taskCount()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                return deletingNumber - 1;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Parses the find Order from user."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Gives the keyword."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param resource User input string representing find order."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @return Keyword user is searching for."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @throws InvalidParameterException If there is no keyword followed."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public String parseFindOrder(String resource) throws InvalidParameterException {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        if (resource.length() \u003c\u003d 4) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            throw new InvalidParameterException();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        String findingKeyWord \u003d resource.substring(5);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        return findingKeyWord;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UnicornJin": 127
    }
  },
  {
    "path": "src/main/java/seedu/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": " * Holds the storage work of duke program."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * File object of data file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    File storageFile;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Initializes the storage object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param fileName File path and name of data file, in string format."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public Storage(String fileName) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        File temp \u003d new File(fileName);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        if (!temp.exists()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            File dir \u003d new File(temp.getParent());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            if (!dir.exists()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                dir.mkdirs();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                temp.createNewFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                storageFile \u003d temp;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            } catch (Exception e1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                e1.getStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            storageFile \u003d temp;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Loads data from data file."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Parses data to list of tasks."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * If no data in data file, gives an empty list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @return List of stored tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public List\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        List\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        Scanner storage;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            storage \u003d new Scanner(storageFile);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            while (storage.hasNext()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                String type \u003d storage.nextLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                boolean status \u003d storage.nextLine().equals(\"1\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                String content \u003d storage.nextLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    result.add(new Todo(status, content));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    String time \u003d storage.nextLine().replace(\" \", \"\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    result.add(new Event(status, content, time));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    String time \u003d storage.nextLine().replace(\" \", \"\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    result.add(new Deadline(status, content, time));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            storage.close();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Saves list of tasks into data file."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public void save(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(storageFile);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            String data \u003d \"\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                String temp \u003d \"\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                if (taskList.get(i) instanceof Todo) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    Todo holding \u003d (Todo) taskList.get(i);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    temp +\u003d \"T\\n\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    temp +\u003d (holding.isDone() ? \"1\" : \"0\") + \"\\n\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    temp +\u003d holding.getContent() + \"\\n\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    data +\u003d temp;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    temp \u003d \"\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                } else if (taskList.get(i) instanceof Event) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    Event holding \u003d (Event) taskList.get(i);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    temp +\u003d \"E\\n\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    temp +\u003d (holding.isDone() ? \"1\" : \"0\") + \"\\n\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    temp +\u003d holding.getContent() + \"\\n\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    temp +\u003d holding.getTime() + \"\\n\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    data +\u003d temp;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    temp \u003d \"\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                } else if (taskList.get(i) instanceof Deadline) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    Deadline holding \u003d (Deadline) taskList.get(i);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    temp +\u003d \"D\\n\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    temp +\u003d (holding.isDone() ? \"1\" : \"0\") + \"\\n\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    temp +\u003d holding.getContent() + \"\\n\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    temp +\u003d holding.getTime() + \"\\n\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    data +\u003d temp;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    temp \u003d \"\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            fileWriter.write(data);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            e.getStackTrace();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UnicornJin": 122
    }
  },
  {
    "path": "src/main/java/seedu/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": " * Holds the task object and relative operations."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Stores status of the task, false for Not done; true for done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    protected boolean status;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Stores the content of the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    protected String content;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Initializes the task with content."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Sets the status to false(not done)."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param content Content of the task object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public Task(String content) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        this.status \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Initializes the task with content and status."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param status  Status of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param content Content of the task object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public Task(boolean status, String content) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        this.status \u003d status;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public void done() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        this.status \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Gives whether this task is done."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @return Status of the task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        return this.status;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Gives the content of the task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @return Content of the task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public String getContent() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        return this.content;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Gives the string representation of the task."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @return String representation of the task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        return \"[\" + (status ? \"o\" : \"x\") + \"] \" + content;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UnicornJin": 74
    }
  },
  {
    "path": "src/main/java/seedu/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": " * Holds the list of tasks and the relative operations."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * List of tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Storage of data file"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Initializes the task list object with a storage."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Loads tasks from storage to list of tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param storage Storage object of data file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public TaskList(Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        this.taskList \u003d storage.load();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Gives the count of tasks in the list of tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @return Number of tasks in the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public int taskCount() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Adds a new Task to task list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Updates the data file."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param newTask New task to be added."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public void addNewTask(Task newTask) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        this.taskList.add(newTask);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        this.storage.save(taskList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Gives the task at a specific position of task list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param index Index of wanting task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @return Task founded at the given index."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @throws IndexOutOfBoundsException If the index given is out of bound."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public Task getTask(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d taskList.size()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Marks the task at a specific position as done."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Have checked index before calling this method, needn\u0027t throw exceptions."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param index Index of marking task."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public void markDone(int index) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        this.taskList.get(index).done();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        this.storage.save(taskList);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Deletes a task at specific position."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Have checked index before calling this method, needn\u0027t throw exceptions."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param index Index of deleting task."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        this.taskList.remove(index);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        this.storage.save(taskList);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Finds all tasks that contain given keyword."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Gives a list of Task that contains searching results."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param keyWord Keyword needed to match."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @return A List of result tasks."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public List\u003cTask\u003e find(String keyWord) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        List\u003cTask\u003e resultList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            if (taskList.get(i).getContent().contains(keyWord)) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                resultList.add(taskList.get(i));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        return resultList;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Gives String representation of the list of tasks."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @return String representation of the list of tasks."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            result +\u003d (i + \". \" + taskList.get(i - 1).toString() + \"\\n\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UnicornJin": 118
    }
  },
  {
    "path": "src/main/java/seedu/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": " * Holds the Todo object and relative operations."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": " * Inherits from Task class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Initializes the todo object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Sets status to false(not done)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param content Content of the todo object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public Todo(String content) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        super(content);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Initializes the todo object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param status  Status of the todo object"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param content Content of the todo object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public Todo(boolean status, String content) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        super(status, content);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Gives the string representation of the todo object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @return String representation of the todo object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        return \"[T]\" + super.toString() + \"  \u003c-\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UnicornJin": 38
    }
  },
  {
    "path": "src/main/java/seedu/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": " * Holds the interaction between user and program."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Prints welcome words to screen."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public void welcomeWord() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        System.out.println(\"//////////\\n\" + \"-\u003eHello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                \"-\u003eWhat can I do for you?\" + \"\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Prints history tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param taskList Task list with past tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public void showHistory(TaskList taskList) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        if (taskList.taskCount() !\u003d 0) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            System.out.println(\"\\n-\u003e Saved List:\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            System.out.println(taskList.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            System.out.println(\"\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Prints all tasks to screen."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * If there is no task in task list, inform the user."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param taskList List of all tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public void listTask(TaskList taskList) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        if (taskList.taskCount() \u003e 0) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            System.out.println(\"\\n-\u003e Current List:\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            System.out.println(taskList.toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            System.out.println(\"\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            System.out.println(\"\\n//////There is NO task in your list now//////\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Informs user the new task addition."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Prints information base on type of task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Informs user the count of tasks in task list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param newTask  New task adding."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param taskList List of all tasks."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public void newTaskAdded(Task newTask, TaskList taskList) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        if (newTask instanceof Todo) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            Todo newTodo \u003d (Todo) newTask;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            System.out.println("
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    \"\\n-\u003e I have added a Todo:\\n\" +"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                            newTodo.toString() +"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                            \"\\nYou have \" + taskList.taskCount() + \" tasks in your list currently.\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            );"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        } else if (newTask instanceof Event) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            Event newEvent \u003d (Event) newTask;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            System.out.println("
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    \"\\n-\u003e I have added an Event:\\n\" +"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                            newEvent.toString() +"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                            \"\\nYou have \" + taskList.taskCount() + \" tasks in your list currently.\\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            );"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        } else if (newTask instanceof Deadline) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            Deadline newDeadline \u003d (Deadline) newTask;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            System.out.println("
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                    \"\\n-\u003e I have added a Deadline:\\n\" +"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                            newDeadline.toString() +"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                            \"\\nYou have \" + taskList.taskCount() + \" tasks in your list currently.\\n\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            );"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Gives information of invalid order."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param orderName Order name of invalid order."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @return String representation of invalid order."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public String invalidOrder(String orderName) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        return \"\\n-\u003e Oops, there is an error...\\n\" +"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                \"-\u003e please add correct description to \\\"\" + orderName + \"\\\" order\\n\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Informs user with the failure of parsing inputs."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param userInput User input of order."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public void parseFail(String userInput) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        if (userInput.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            invalidTodoOrder();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        } else if (userInput.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            invalidDeadlineOrder();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        } else if (userInput.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            invalidEventOrder();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Informs user the done order is invalid."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public void invalidDoneOrder() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        System.out.println(invalidOrder(\"done\") +"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                \"-\u003e done {order of task in task list}\\n\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Informs user the adding todo order is invalid."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public void invalidTodoOrder() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        System.out.println(invalidOrder(\"todo\") +"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                \"-\u003e todo {task content}\\n\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Informs user the adding deadline order is invalid."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public void invalidDeadlineOrder() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        System.out.println(invalidOrder(\"deadline\") +"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                \"-\u003e deadline {task content} /{yyyy-mm-dd}\\n\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Informs user the adding event order is invalid."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public void invalidEventOrder() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        System.out.println(invalidOrder(\"event\") +"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                \"-\u003e event {task content} /{yyyy-mm-dd}\\n\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Informs user the delete order is invalid."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public void invalidDeleteOrder() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        System.out.println(invalidOrder(\"delete\") +"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                \"-\u003e delete {order of task in task list}\\n\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public void invalidFindOrder() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        System.out.println(invalidOrder(\"find\") +"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                \"-\u003e find {keyword}\\n\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Informs user the task operation is not exist."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public void taskDoesNotExist() {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        System.out.println(\"\\n-\u003e Sorry, this task does not exist...\\n\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Informs user the done order has been operated successfully."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param task Task marked as done."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public void taskDone(Task task) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        System.out"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                .println(\"\\n-\u003e Good job! I have marked this task as done:\\n\" + task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Informs user the delete order has been operated successfully."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param taskList     List of tasks."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param deletingTask Task being deleted"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public void taskDeleted(TaskList taskList, Task deletingTask) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        System.out.println(\"\\n-\u003e I have removed this task:\\n\" + deletingTask.toString() + \"\\n\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.taskCount() + \" tasks in your list.\" + \"\\n\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Informs user there is a general error in his input."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public void generalError() {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                \"\\n-\u003e Sorry I cannot understand, please tap in your order correctly.\" +"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                        \"\\n-\u003e todo {task content}   || add a todo task\" +"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                        \"\\n-\u003e deadline {task content} /{time}   || add a deadline task\" +"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                        \"\\n-\u003e event {task content} /{time} || add an event task\" +"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                        \"\\n-\u003e list   || list all tasks\" +"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                        \"\\n-\u003e done {order of task in task list}   || mark a task as done\\n\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Prints result of find order."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * @param resultList List of result from find order."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public void showFindResult(List\u003cTask\u003e resultList) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        System.out.println(\"//////////Matching Result In Your List///////////\\n\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        if (resultList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            System.out.println(\"No Match Result...\\n\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            for (int i \u003d 0; i \u003c resultList.size(); i++) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                System.out.println(i + \". \" + resultList.get(i).toString());"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        System.out.println(\"\\n//////////////////////////////////////////////////\\n\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     * Say Goodbye to user."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    public void goodBye() {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        System.out.println(\"\\nBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UnicornJin": 221
    }
  },
  {
    "path": "test/main/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    void testGetTime() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        assertEquals(\"2020-08-01\", (new Deadline(\"a\", \"2020-08-01\").getTime()));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        assertEquals(\"[D][√] a(by Aug 01 2020)  \u003c-\", (new Deadline(true, \"a\", \"2020-08-01\")).toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UnicornJin": 18
    }
  },
  {
    "path": "test/main/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    void testGetTime() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        assertEquals(\"2020-08-01\", (new Event(\"a\", \"2020-08-01\").getTime()));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        assertEquals(\"[E][√] a(on Aug 01 2020)  \u003c-\", (new Event(true, \"a\", \"2020-08-01\")).toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UnicornJin": 18
    }
  },
  {
    "path": "test/main/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    void parseTask_todoTask_success() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        assertEquals((new Todo(\"a\")).toString(), (new Parser()).parseTask(\"todo a\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    void parseTask_eventTask_success() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        assertEquals((new Event(\"a\", \"2020-08-01\")).toString(), (new Parser()).parseTask(\"event a/2020-08-01\").toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    void parseTask_deadlineTask_success() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        assertEquals((new Deadline(\"a\", \"2020-08-01\")).toString(), (new Parser()).parseTask(\"deadline a/2020-08-01\").toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UnicornJin": 23
    }
  },
  {
    "path": "test/main/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    void done() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    void isDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    void getContent() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UnicornJin": 24
    }
  },
  {
    "path": "test/main/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        assertEquals(\"[T][×] a  \u003c-\", new Todo(\"a\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UnicornJin": 13
    }
  },
  {
    "path": "test/main/java/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "class UiTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    void invalidOrder() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "        assertEquals(\"\\n-\u003e Oops, there is an error...\\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "                \"-\u003e please add correct description to \\\"Todo\\\" order\\n\", new Ui().invalidOrder(\"Todo\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "UnicornJin": 14
    }
  },
  {
    "path": "text-ui-test/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "T"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "go to fairprice"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "D"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "0"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "CS2103 project submission "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "2020-08-01"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "D"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "0"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "CS2103 tP "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "2020-08-01"
      }
    ],
    "authorContributionMap": {
      "UnicornJin": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "todo go to fairprice"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "event CS2103 lecture / 2020-08-01"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "deadline CS2103 project submission /    2020-08-01"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "deadline CS2103 tP /2020-08-01"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "todo "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "event CS2103"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "deadline a"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "done"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "hahahhahahhahaa"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "find CS2103"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "find"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "UnicornJin": 17
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "if exist .\\data\\duke.txt del .\\data\\duke.txt"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "UnicornJin"
        },
        "content": "java -classpath ..\\bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "UnicornJin": 3,
      "-": 20
    }
  }
]
