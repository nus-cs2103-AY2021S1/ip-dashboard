[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "D | 0 | asdfad | 2020-08-10 0600"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "E | 1 | asdfadsfa | 1010-08-10 0600"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 2
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    BYE(\"bye\"),"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    COMMANDS(\"commands\"),"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    DELETE(\"delete\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    DONE(\"done\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    EVENT(\"event\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    LIST(\"list\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    TODO(\"todo\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    UNKNOWN(\"unknown\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private String label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    Command(String label) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.label \u003d label;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return this.label;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 22
    }
  },
  {
    "path": "src/main/java/DateFormatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class DateFormatter {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    // @@author aizatazhar-reused"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    // Reused from https://stackoverflow.com/a/16990333/12003017 with minor modifications"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    private static List\u003cString\u003e dateFormats \u003d Arrays.asList("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "            \"yyyy-MM-dd hhmm\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "            \"yyyy-MM-dd\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Date extractTimestampInput(String strDate) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String format: dateFormats) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            SimpleDateFormat sdf \u003d new SimpleDateFormat(format);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                return sdf.parse(strDate);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                //intentionally empty"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        throw new DukeException(\"Invalid input for date. Given \u0027\" + strDate + \"\u0027, \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"expecting format yyyy-MM-dd hhmm or yyyy-MM-dd.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    // @@author"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public static String formatDisplay(Date date) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        DateFormat dateFormat \u003d new SimpleDateFormat(\"dd MMM yyyy HH:mm\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return dateFormat.format(date);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public static String formatSave(Date date) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        DateFormat dateFormat \u003d new SimpleDateFormat(\"yyyy-MM-dd hhmm\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return dateFormat.format(date);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 19,
      "-": 21
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return String.format(\"D | %d | %s | %s\", this.isDone ? 1 : 0, "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                this.description, DateFormatter.formatSave(this.by)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        );"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), DateFormatter.formatDisplay(this.by));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 22
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks \u003d TaskManager.readFile();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        acceptCommand(sc);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private static void greet() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        String greeting \u003d \"Hello! I\u0027m Duke \\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        printResponse(greeting);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private static void acceptCommand(Scanner sc) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        boolean shouldLoop \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        while (shouldLoop) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                Command command \u003d parseInput(input);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                    case BYE:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                        handleBye();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                        shouldLoop \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                    case COMMANDS:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                        handleCommands();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                    case DEADLINE:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                        handleDeadline(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                    case DELETE:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                        handleDelete(input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                    case DONE:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                        handleDone(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                    case EVENT:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                        handleEvent(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                    case LIST:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                        handleList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                    case TODO:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                        handleToDo(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                    case UNKNOWN:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                        handleUnknown();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                printResponse(e.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private static Command parseInput(String input) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return Command.BYE;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else if (input.equals(\"commands\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return Command.COMMANDS;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return Command.DEADLINE;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else if (input.matches(\"delete \\\\d+\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return Command.DELETE;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else if (input.matches(\"done \\\\d+\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return Command.DONE;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return Command.EVENT;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return Command.LIST;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return Command.TODO;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            return Command.UNKNOWN;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private static void handleBye() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        printResponse(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private static void handleCommands() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        String response \u003d \"Here are all the commands:\\n\\n\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                + \"bye\\n\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                + \"deadline \u003ctask\u003e /by \u003ctime\u003e\\n\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                + \"delete \u003ctask index\u003e\\n\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                + \"done \u003ctask index\u003e\\n\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                + \"event \u003ctask\u003e /at \u003ctime\u003e\\n\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                + \"list\\n\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                + \"todo \u003ctask\u003e\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        printResponse(response);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private static void handleDeadline(String command) throws InvalidDeadlineException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            String[] input \u003d command.substring(command.indexOf(\u0027 \u0027) + 1).split(\" /by \");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            String description \u003d input[0];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            String byString \u003d input[1];"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            Date by \u003d DateFormatter.extractTimestampInput(byString);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            Task task \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            TaskManager.saveFile(tasks);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            String response \u003d String.format("
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                    \"I\u0027ve added this task:\\n  %s \\nNow you have %s tasks in the list.\","
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                    task, tasks.size()"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            );"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            printResponse(response);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException | DukeException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            throw new InvalidDeadlineException();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private static void handleDelete(String command) throws InvalidDeleteIndexException {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        int index \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        if (index \u003e tasks.size() || index \u003c 1) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            throw new InvalidDeleteIndexException(tasks.size());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        Task task \u003d tasks.remove(index-1);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        TaskManager.saveFile(tasks);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        String response \u003d String.format(\"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                + \"%s\\n\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                + \"Now you have %d tasks in the list.\", task, tasks.size());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        printResponse(response);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private static void handleDone(String command) throws InvalidDoneIndexException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        int index \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        if (index \u003e tasks.size() || index \u003c 1) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            throw new InvalidDoneIndexException(tasks.size());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        Task task \u003d tasks.get(index-1);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        task.completeTask();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        TaskManager.saveFile(tasks);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        String response \u003d \"Nice! I\u0027ve marked this task as done:\\n  \" + task.toString();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        printResponse(response);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private static void handleEvent(String command) throws InvalidEventException {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            String[] input \u003d command.substring(command.indexOf(\u0027 \u0027) + 1).split(\" /at \");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            String description \u003d input[0];"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            String atString \u003d input[1];"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            Date at \u003d DateFormatter.extractTimestampInput(atString);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            Task task \u003d new Event(description, at);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            TaskManager.saveFile(tasks);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            String response \u003d String.format("
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                    \"I\u0027ve added this task:\\n  %s \\nNow you have %s tasks in the list.\","
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                    task, tasks.size()"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            );"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            printResponse(response);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException | DukeException e) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            throw new InvalidEventException();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private static void handleList() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        StringJoiner response \u003d new StringJoiner(\"\\n\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            response.add(String.format(\"%d.%s\", i+1, tasks.get(i)));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        printResponse(response.toString());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private static void handleToDo(String command) throws InvalidToDoException {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        String[] split \u003d command.split(\" \");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        if (split.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            throw new InvalidToDoException();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        String[] descriptionArray \u003d Arrays.copyOfRange(split, 1, split.length);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        String description \u003d String.join(\" \", descriptionArray);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        Task task \u003d new ToDo(description);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        TaskManager.saveFile(tasks);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        String response \u003d String.format("
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                \"I\u0027ve added this task:\\n  %s \\nNow you have %s tasks in the list.\","
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                task, tasks.size()"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        );"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        printResponse(response);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private static void handleUnknown() throws DukeException{"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        throw new DukeException();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    // Wrapper method for printing with horizontal line borders and 1 tab indent"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private static void printResponse(String string) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        String horizontalLine \u003d \"----------------------------------------------------------------\";"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        String formatted \u003d String.format(\"%s\\n%s\\n%s\", horizontalLine, string, horizontalLine)"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                .replaceAll(\"(?m)^\", \"\\t\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        System.out.println(formatted);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 200,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                + \"To see all commands, type \\\"commands\\\"\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    protected DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public Event(String description, Date at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return String.format(\"E | %d | %s | %s\", this.isDone ? 1 : 0, "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                this.description, DateFormatter.formatSave(this.at)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        );"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), DateFormatter.formatDisplay(this.at));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 22
    }
  },
  {
    "path": "src/main/java/InvalidDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class InvalidDeadlineException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    InvalidDeadlineException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(\"You entered the deadline command incorrectly :(\\n\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                + \"The command format is \\\"deadline \u003ctask\u003e /by \u003cyyyy-MM-dd hhmm OR yyyy-MM-dd\u003e\\\"\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 6
    }
  },
  {
    "path": "src/main/java/InvalidDeleteIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class InvalidDeleteIndexException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public InvalidDeleteIndexException(int tasksSize) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(String.format(\"No such task :(\\nYou have %d tasks.\", tasksSize));"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 5
    }
  },
  {
    "path": "src/main/java/InvalidDoneIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class InvalidDoneIndexException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public InvalidDoneIndexException(int tasksSize) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(String.format(\"No such task :(\\nYou have %d tasks.\", tasksSize));"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 5
    }
  },
  {
    "path": "src/main/java/InvalidEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class InvalidEventException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public InvalidEventException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(\"You entered the event command incorrectly :(\\n\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                + \"The command format is \\\"event \u003ctask\u003e /at \u003cyyyy-MM-dd hhmm OR yyyy-MM-dd\u003e\\\"\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 6
    }
  },
  {
    "path": "src/main/java/InvalidToDoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class InvalidToDoException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public InvalidToDoException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(\"The description of a todo cannot be empty :(\\n\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                + \"The command format is \\\"todo \u003ctask\u003e\\\"\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 6
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public void completeTask() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public abstract String toSaveFormat();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 24
    }
  },
  {
    "path": "src/main/java/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "import java.util.StringJoiner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private static String dirName \u003d \"data\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    private static String filePath \u003d dirName + \"/duke.txt\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public static ArrayList\u003cTask\u003e readFile() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            // Create the directory if it does not exist"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            File dir \u003d new File(dirName);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            if (!dir.exists()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                dir.mkdirs();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                String nextLine \u003d sc.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                String[] taskDetails \u003d nextLine.split(\" \\\\| \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                if (taskDetails[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                    task \u003d new ToDo(taskDetails[2]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                } else if (taskDetails[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                    task \u003d new Deadline(taskDetails[2], "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                            DateFormatter.extractTimestampInput(taskDetails[3]));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                    task \u003d new Event(taskDetails[2], "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                            DateFormatter.extractTimestampInput(taskDetails[3]));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                if (taskDetails[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                    task.completeTask();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                } "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                result.add(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            // Create the .txt file if it does not exist"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            } catch (IOException e2) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "                e2.printStackTrace();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public static void saveFile(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        StringJoiner text \u003d new StringJoiner(\"\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            text.add(task.toSaveFormat());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            fw.write(text.toString());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 72
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return String.format(\"T | %d | %s\", this.isDone ? 1 : 0, this.description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "        return String.format(\"[T][%s] %s\", getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "todo off myself"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "deadline die /by next year"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "deadline die /at next year"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "event death /at soon pls"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "event death /by soon pls"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "fake command"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "todo hello world"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 17
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aizatazhar"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "aizatazhar": 2,
      "-": 19
    }
  }
]
