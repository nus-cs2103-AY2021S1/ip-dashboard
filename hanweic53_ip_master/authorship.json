[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.1\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 17,
      "-": 44
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "D | 0 | tutorial3 | 11/10/2020, 2000 @CS2100"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "E | 0 | graded assignment | 01/01/2021, 1200"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "E | 1 | labSubmission | 12/10/2020, 2359 @CS2100"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "T | 0 | return book @NationalLibrary"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 5
    }
  },
  {
    "path": "data/dukeTest.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "D | 1 | return book | 03/10/2020, 1900"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "E | 1 | graduation ceremony | 10/10/2020, 1830"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "E | 0 | final exams | 19/11/2020, 1500"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 4
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "* [Quick Start](#quick-start)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "* [Features](#features)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    * [Add a task with a tag](#add-a-task-with-a-tag)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    * [Delete a task](#delete-a-task)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    * [Mark a task as done](#mark-a-task-as-done)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    * [List all tasks](#list-all-tasks)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    * [Find tasks with a keyword](#find-tasks-with-a-keyword)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    * [View all tags](#view-all-tags)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    * [Find tasks with a tag](#find-tasks-with-a-tag)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    * [Exit the Program](#exit-the-program)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "* [Acknowledgements](#acknowledgements)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "1. Ensure you have Java 11 or above installed in your Computer."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "2. Download the latest Duke.jar from [here](https://github.com/hanweic53/ip/releases/tag/A-Release)."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "3. Copy the file to the folder you want to use as the home folder for Duke."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "4. Double-click the file, and Duke will run. "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "### Add a task with a tag"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "Add 3 types of tasks, namely Todo, Deadline and Event."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "1. `todo DESCRIPTION [@TAG]` - Add a Todo task with a tag"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "   Todo tasks can be used to record tasks with no Date/Time involved.   "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "   Tagging is optional."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "   Example of usage: `todo homework @CS2030`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "   Expected outcome:   "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "   `Got it. I\u0027ve added this task:    `  "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "   `[T][X] homework @CS2030`   "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "   `Now you have 7 tasks in the list. `  "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "2. `deadline DESCRIPTION /by DD/MM/YYYY HHmm [@TAG]` - Add a Deadline task with a tag"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "   Deadline tasks can be used to record tasks with a Date/Time as deadline.   "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "   Tagging is optional."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "   Example of usage: `deadline homework /by 20/06/2020 1900 @CS2030`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "   Expected outcome:   "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "   `Got it. I\u0027ve added this task:   `   "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "   `[D][X] homework (by: 20 Jun 2020, 1900) @CS2030 `  "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "   `Now you have 7 tasks in the list. `"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "   "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "3. `event DESCRIPTION /at DD/MM/YYYY HHmm [@TAG]` - Add an Event task with a tag"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "   Event tasks can be used to record tasks with a Date/Time of event.   "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "   Tagging is optional."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "   Example of usage: `event graduation /at 20/06/2020 1900 @CS2030`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "   Expected outcome:   "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "   `Got it. I\u0027ve added this task:`   "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "   `[E][X] Graduation (at: 20 Jun 2020, 1900) @CS2030`  "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "   `Now you have 7 tasks in the list. `"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "### Delete a task"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "Delete a task that you no longer want on your task list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "`delete TASK_INDEX` - Delete the task with TASK_INDEX"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "Example of usage: `delete 3`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "Expected outcome:   "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "`Noted. I\u0027ve deleted this task:  `  "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "`[D][X] homework (by: 20 Jun 2020, 1900) @CS2030  `     "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "`Now you have 6 tasks in the list.`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "### Mark a task as done"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "Mark a task that you have completed as done on your task list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "`done TASK_INDEX` - Mark the task with TASK_INDEX as done"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "Example of usage: `done 3`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "Expected outcome:   "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "`Nice! I\u0027ve marked this task as done:  `    "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "`[D][✓] homework (by: 20 Jun 2020, 1900) @CS2030`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "### List all tasks"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "List out all tasks in your task list."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "`list` - list out the task list"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "Example of usage: `list`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "Expected outcome:   "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "`Here are the tasks in your list:  `    "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "`1. [D][X] homework (by: 20 Jun 2020, 1900) @CS2030`   "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "`2. [E][X] holiday (at: 20 Jun 2020, 1900) @hol`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "### Find tasks with a keyword"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "Find the tasks which descriptions contain the given keyword."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "`find KEYWORD` - Find the tasks that contain KEYWORD in description"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "Example of usage: `find book`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "Expected outcome:   "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "`Here are the tasks that matched your search:`    "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "`1. [D][X] read storybook (by: 20 Jun 2020, 1900)`  "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "`2. [D][X] return book (by: 20 Jun 2020, 1900)`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "### View all tags"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "List out all the tags in the task list."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "`tags` - List the tags in the task list"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "Example of usage: `tags`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "Expected outcome:   "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "`Here are your tags:`    "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "`1. CS2030`  "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "`2. hols`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "### Find tasks with a tag"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "Find the tasks which tags match the given tag."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "`tag TAG_NAME` - Find the tasks in the task list that match the tag"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "Example of usage: `tag CS2030`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:   "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "`Here are the tasks that matched your search:`    "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "`1. [D][X] tutorial (by: 20 Jun 2020, 1900) @CS2030`  "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "`2. [D][X] assignment (by: 20 Jun 2020, 1900) @CS2030`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "### Exit the Program"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "Exits the Program."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "Format: `bye` "
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "## Acknowledgements"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "Images used in this project:    "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "[Duke Avatar](https://www.vippng.com/preview/iiTmbmi_baby-child-monster-cartoon-cute-girl-people-cute/)     "
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "[User Avatar](https://www.pngocean.com/gratis-png-clipart-fmrfk)"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 127,
      "-": 14
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * Represents a chat-bot named Duke."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Constructs a Duke Chat-bot."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.storage \u003d new Storage(\"data\", \"data/duke.txt\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            this.taskList \u003d new TaskList(storage.readFromFile());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            this.taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param input user\u0027s input"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @return reply by Duke"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            return c.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 51,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            stage.getIcons().add(new Image(this.getClass().getResourceAsStream(\"/images/UserAvatar.png\")));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            stage.setTitle(\"Pico\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 35
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * Represents the AddCommand when users add items to TaskList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final String commandWord;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final String taskName;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Creates an AddCommand."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param commandWord the type of command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param taskName the name of the task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public AddCommand(String commandWord, String taskName) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.commandWord \u003d commandWord;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Adds To-Do, Deadline and Event tasks into TaskList."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param taskList taskList that stores Task objects"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param ui Ui that handles input and output to User"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param storage storage that handles data storage"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws IOException Ioexception"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws DukeException DukeException"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws IOException, DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            switch (commandWord) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                return taskList.addTodo(taskName, storage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                return taskList.addDeadline(taskName, storage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                return taskList.addEvent(taskName, storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                assert false : \"Task does not belong to the 3 types of tasks can be added into task list.\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                return \"\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            throw new DukeException(\"Please enter dates in this format: dd/MM/yyyy HHmm\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    + \"\\nE.g. 01/12/2020 2359\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            throw new DukeException(\"Invalid description!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Returns true if and only if it is a command to exit the program."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 71
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * Represents the different Commands."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Returns true if and only if it is a command to exit the program."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @return true or false"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Executes the command and performs operations accordingly."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param taskList taskList that stores Task objects"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param ui Ui that handles input and output to User"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param storage storage that handles data storage"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws IOException Ioexception"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws DukeException DukeException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws IOException, DukeException;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 31
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * Represents the AddCommand when users add items to TaskList."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Creates a DeleteCommand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param index index of task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Removes a task from the TaskList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param taskList taskList that stores Task objects"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param ui Ui that handles input and output to User"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param storage storage that handles data storage"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws DukeException DukeException"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return taskList.deleteTask(index, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Returns true if and only if it is a command to exit the program."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 45
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * Represents the DoneCommand when users mark items as done in TaskList."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Creates a DoneCommand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param index index of task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Marks a task in the TaskList as done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param taskList taskList that stores Task objects"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param ui Ui that handles input and output to User"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param storage storage that handles data storage"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return taskList.setDoneTask(index, storage);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Returns true if and only if it is a command to exit the program."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 44
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * Represents the ExitCommand when users wants to exit the Program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Creates an ExitCommand."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public ExitCommand() { }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Exits the program."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param tasks taskList that stores Task objects"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param ui Ui that handles input and output to User"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param storage storage that handles data storage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Returns true if and only if it is a command to exit the program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @return true"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 38
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final String keyWord;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Constructs a FindCommand object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param keyWord keyword to find tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public FindCommand(String keyWord) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        assert !keyWord.isEmpty() : \"Command description is missing.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.keyWord \u003d keyWord;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return taskList.findTasks(this.keyWord);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 30
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * Represents the ListCommand when users wants to list out the TaskList."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Creates a ListCommand."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public ListCommand() { }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Lists out the items on the TaskList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param tasks taskList that stores Task objects"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param ui Ui that handles input and output to User"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param storage storage storage that handles data storage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return tasks.listTasks();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Returns true if and only if it is a command to exit the program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 38
    }
  },
  {
    "path": "src/main/java/duke/command/ListTagCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TagList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class ListTagCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Returns true if and only if it is a command to exit the program."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @return true or false"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Executes the command and performs operations accordingly."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param taskList taskList that stores Task objects"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param ui       Ui that handles input and output to User"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param storage  storage that handles data storage"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws IOException   Ioexception"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws DukeException DukeException"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws IOException, DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return TagList.listTags();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 36
    }
  },
  {
    "path": "src/main/java/duke/command/TagCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class TagCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final String tag;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Constructs a FindCommand object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param tag to find tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public TagCommand(String tag) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        assert !tag.isEmpty() : \"Command description is missing.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return taskList.findTasksWithTag(this.tag);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 30
    }
  },
  {
    "path": "src/main/java/duke/command/UnknownCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * Represents the UnknownCommand when users enter unknown input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class UnknownCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Creates an UnknownCommand."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public UnknownCommand() { }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Replies user that the input is not being understood."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param tasks taskList that stores Task objects"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param ui Ui that handles input and output to User"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param storage storage storage that handles data storage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return \"I\u0027m sorry, but I don\u0027t know that that means!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Returns true if and only if it is a command to exit the program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 38
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 9
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.command.ListTagCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.command.TagCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.command.UnknownCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Parses the input and turn it into a Command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param input input to be parsed"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @return the Command that the input belongs to"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws DukeException DukeException"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String[] inputArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        switch (inputArr[0]) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            command \u003d new ListCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                command \u003d new DoneCommand(Integer.parseInt(inputArr[1]));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                throw new DukeException(\"Invalid format!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                throw new DukeException(\"Please include item number!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                command \u003d new FindCommand(input.substring(5));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                throw new DukeException(\"Please include description!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        case \"tag\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                command \u003d new TagCommand(input.substring(4));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                throw new DukeException(\"Please include description!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        case \"tags\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            command \u003d new ListTagCommand();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                command \u003d new DeleteCommand(Integer.parseInt(inputArr[1]));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                throw new DukeException(\"Invalid format!\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                throw new DukeException(\"Please include item number!\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                command \u003d new AddCommand(\"todo\", input.substring(5));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                throw new DukeException(\"Please include description!\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                command \u003d new AddCommand(\"deadline\", input.substring(9));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                throw new DukeException(\"Please include description!\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                command \u003d new AddCommand(\"event\", input.substring(6));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                throw new DukeException(\"Please include description!\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            command \u003d new UnknownCommand();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Parses users\u0027 input into LocalDateTime object."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param input users\u0027 input"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param hasTag boolean true if input contains a tag"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @return LocalDateTime"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public static LocalDateTime parseTime(String input, boolean hasTag) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\u0027T\u0027HHmm\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        LocalDateTime time;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (hasTag) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            time \u003d LocalDateTime.parse(input.split(\" @\")[0]"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    .replace(\u0027 \u0027, \u0027T\u0027), formatter);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            time \u003d LocalDateTime.parse(input.replace(\u0027 \u0027, \u0027T\u0027), formatter);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Parses users\u0027 input into a Tag string."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param input users\u0027 input"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @return Tag string"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws DukeException if tag is empty"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public static String parseTag(String input) throws DukeException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String tag;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            tag \u003d input.split(\" @\")[1];"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            throw new DukeException(\"Tag cannot be empty!\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return tag;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "hanweic53": 137
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TagList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final File folder;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final File file;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Creates a Storage."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param folderPath for Duke to load saved TaskList if there exists"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param filePath for Duke to load saved TaskList if there exists"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public Storage(String folderPath, String filePath) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.folder \u003d new File(folderPath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Reads from a .txt file and change the Strings into tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @return ArrayList that contains tasks"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws DukeException DukeException"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public ArrayList\u003cTask\u003e readFromFile() throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            if (!this.folder.exists()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                boolean isFolderCreated \u003d this.folder.mkdir();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                if (isFolderCreated) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    System.out.println(\"Folder did not exist. New folder was created!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    System.out.println(\"Folder did not exist but new folder was not created.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            if (!this.file.exists()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                boolean isFileCreated \u003d this.file.createNewFile();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                if (isFileCreated) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    System.out.println(\"File did not exist. New file was created!\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    System.out.println(\"Folder did not exist but new file was not created.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            Scanner sc \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                String[] taskArray;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                String stringToParse \u003d sc.nextLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                taskArray \u003d stringToParse.split(\" \\\\| \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                String taskType \u003d taskArray[0];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                String isDone \u003d taskArray[1];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                String taskName \u003d taskArray[2];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                Task task \u003d null;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                        .ofPattern(\"dd/MM/yyyy\u0027T\u0027HHmm\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                boolean hasTag \u003d stringToParse.contains(\"@\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    if (hasTag) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                        String [] taskTokens \u003d taskName.split(\" @\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                        task \u003d new Todo(taskTokens[0], taskTokens[1]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                        TagList.addTagIfNew(taskTokens[1]);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                        task \u003d new Todo(taskName, \"\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    LocalDateTime timeBy \u003d LocalDateTime.parse(taskArray[3]"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                            .split(\" @\")[0]"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                            .replace(\", \", \"T\"), formatter);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    if (hasTag) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                        String tag \u003d taskArray[3].split(\" @\")[1];"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                        task \u003d new Deadline(taskName, timeBy, tag);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                        TagList.addTagIfNew(tag);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                        task \u003d new Deadline(taskName, timeBy, \"\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    LocalDateTime timeAt \u003d LocalDateTime.parse(taskArray[3]"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                            .split(\" @\")[0]"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                            .replace(\", \", \"T\"), formatter);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    if (hasTag) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                        String tag \u003d taskArray[3].split(\" @\")[1];"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                        task \u003d new Event(taskName, timeAt, tag);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                        TagList.addTagIfNew(tag);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                        task \u003d new Event(taskName, timeAt, \"\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    assert task !\u003d null;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    task.markDone();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            throw new DukeException(\"File is empty when loading\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Appends a String to a .txt file."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param textToAppend text to append to the .txt file"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws IOException IOException"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void appendToFile(String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.file, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        fw.write(textToAppend + \"\\n\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Overwrites a .txt file."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param tasks ArrayList of tasks"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws IOException IOException"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void rewriteFile(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.file);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                fw.write(task.toText() + \"\\n\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                fw.close();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                appendToFile(task.toText());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 158
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Creates a Deadline."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param description description of deadline"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param by date and time of deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public Deadline(String description, LocalDateTime by, String tag) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        super(description, tag);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String toText() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String completionStatus \u003d \"0\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            completionStatus \u003d \"1\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (hasTag) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            return \"D\" + \" | \" + completionStatus + \" | \" + this.description + \" | \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    + by.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy, HHmm\"))"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    + tag.toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            return \"D\" + \" | \" + completionStatus + \" | \" + this.description + \" | \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    + by.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy, HHmm\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (hasTag) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            return \"[D]\" + this.getStatusIcon() + \" \" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    + by.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy, HHmm\")) + \")\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    + tag.toString();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            return \"[D]\" + this.getStatusIcon() + \" \" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    + by.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy, HHmm\")) + \")\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 48
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Creates an Event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param description description of the Event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param at date and time of the Event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public Event(String description, LocalDateTime at, String tag) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        super(description, tag);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String toText() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String completionStatus \u003d \"0\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            completionStatus \u003d \"1\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (this.hasTag) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            return \"E\" + \" | \" + completionStatus + \" | \" + this.description + \" | \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    + at.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy, HHmm\"))"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    + tag.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            return \"E\" + \" | \" + completionStatus + \" | \" + this.description + \" | \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    + at.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy, HHmm\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (this.hasTag) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            return \"[E]\" + this.getStatusIcon() + \" \" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    + at.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy, HHmm\")) + \")\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    + this.tag.toString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            return \"[E]\" + this.getStatusIcon() + \" \" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    + at.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy, HHmm\")) + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 48
    }
  },
  {
    "path": "src/main/java/duke/task/Tag.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class Tag {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private int count;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final String tagName;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Constructs a tag."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param tagName tagName"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public Tag(String tagName) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.tagName \u003d tagName;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.count \u003d 1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public int getCount() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return this.count;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void increaseCount() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.count++;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void decreaseCount() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.count--;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String getTagName() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return tagName;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return \" @\" + this.tagName;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 38
    }
  },
  {
    "path": "src/main/java/duke/task/TagList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class TagList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private static ArrayList\u003cTag\u003e tags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Adds a tag to the list of tags if tag did not exist previously."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param tagName tag"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public static void addTagIfNew(String tagName) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        int tagIndex \u003d TagList.containsTag(tagName);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (tagIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            tags.add(new Tag(tagName));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            tags.get(tagIndex).increaseCount();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Deletes a tag from the tag list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param tagName tagName"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public static void deleteTag(String tagName) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        int tagIndex \u003d TagList.containsTag(tagName);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        tags.remove(tagIndex);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Checks if list of tags contains this tag."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param tagName tag"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public static int containsTag(String tagName) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        for (Tag tag : tags) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            if (tag.getTagName().equals(tagName)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                return tags.indexOf(tag);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Lists out all the tags in the list of tags."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @return tags"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public static String listTags() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        StringBuilder reply \u003d new StringBuilder(\"Here are your tags:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        for (int i \u003d 0; i \u003c tags.size(); i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            String tagName \u003d tags.get(i).getTagName();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            reply.append(\"\\n\").append(i + 1).append(\". \").append(tagName);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return reply.toString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 62
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    protected boolean hasTag \u003d false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    protected Tag tag;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Creates a Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public Task(String description, String tag) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (!tag.isBlank()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            this.hasTag \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.tag \u003d new Tag(tag);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String toText() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 40
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * contains the task list e.g., it has operations to add/delete tasks in the list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Lists out all the tasks in the TaskList."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String listTasks() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        StringBuilder reply \u003d new StringBuilder(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            reply.append(\"\\n\").append(i + 1).append(\". \").append(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return reply.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private String printTotalNumberOfTasks() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (tasks.size() \u003c 2) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            return \"\\nNow you have \" + tasks.size() + \" task in the list.\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            return \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String setDoneTask(int index, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String reply;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            Task task \u003d tasks.get(index - 1); // index - 1 to match the index in ArrayList"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            task.markDone();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            reply \u003d Ui.getDoneMessage(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            throw new DukeException(\"Missing or invalid item number!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            storage.rewriteFile(tasks);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Deletes a Task from the TaskList and storage."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param index index of Task to be deleted from ArrayList"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param storage storage to save and load the Tasks when the program runs"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws DukeException DukeException when index number is invalid"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String deleteTask(int index, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String reply;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            Task task \u003d tasks.get(index - 1); // index -1 to match the index in ArrayList"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            tasks.remove(index - 1); // index - 1 to match the index in ArrayList"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            if (task.hasTag) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                task.tag.decreaseCount();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                if (task.tag.getCount() \u003c 1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    TagList.deleteTag(task.tag.getTagName());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            reply \u003d Ui.getDeleteMessage(task) + printTotalNumberOfTasks();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            throw new DukeException(\"Missing or invalid item number!\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            storage.rewriteFile(tasks);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param taskName  name of the Task"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param storage storage to save and load the Tasks when the program runs"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws DukeException DukeException"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws IOException IOException"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String addTodo(String taskName, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (taskName.isBlank()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            throw new DukeException(\"Description cannot be only empty spaces!\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (taskName.contains(\"@\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                String[] taskTokens \u003d taskName.split(\" @\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                task \u003d new Todo(taskTokens[0], taskTokens[1]);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                TagList.addTagIfNew(taskTokens[1]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                throw new DukeException(\"Tag cannot be empty!\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            task \u003d new Todo(taskName, \"\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        storage.appendToFile(task.toText());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return Ui.getAddSuccessMessage(task) + printTotalNumberOfTasks();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Adds a Deadline into the TaskList."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param taskName name of the Deadline to be added"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param storage storage to save and load the Tasks when the program runs"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws DukeException DukeException"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws IOException IOException"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String addDeadline(String taskName, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (taskName.isBlank()) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            throw new DukeException(\"Description cannot be only empty spaces!\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String[] taskTokens \u003d taskName.split(\" /by \");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        boolean hasTag \u003d taskName.contains(\"@\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String tag \u003d \"\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        taskName \u003d taskTokens[0];"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        LocalDateTime timeBy;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (hasTag) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            timeBy \u003d Parser.parseTime(taskTokens[1], true);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            tag \u003d Parser.parseTag(taskTokens[1]);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            TagList.addTagIfNew(tag);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            timeBy \u003d Parser.parseTime(taskTokens[1], false);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        Task task \u003d new Deadline(taskName, timeBy, tag);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        storage.appendToFile(task.toText());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return Ui.getAddSuccessMessage(task) + printTotalNumberOfTasks();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Adds an Event into the TaskList."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param taskName name of the Event to be added"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param storage storage to save and load the Tasks when the program runs"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws DukeException DukeException"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws IOException IOException"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String addEvent(String taskName, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (taskName.isBlank()) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            throw new DukeException(\"Description cannot be only empty spaces!\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String[] taskTokens \u003d taskName.split(\" /at \");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        boolean hasTag \u003d taskName.contains(\"@\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String tag \u003d \"\";"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        taskName \u003d taskTokens[0];"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        LocalDateTime timeAt;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (hasTag) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            timeAt \u003d Parser.parseTime(taskTokens[1], true);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            tag \u003d Parser.parseTag(taskTokens[1]);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            TagList.addTagIfNew(tag);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            timeAt \u003d Parser.parseTime(taskTokens[1], false);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        Task task \u003d new Event(taskName, timeAt, tag);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        storage.appendToFile(task.toText());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return Ui.getAddSuccessMessage(task) + printTotalNumberOfTasks();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Finds tasks that match the keyword."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param keyWord keyword to search for task"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String findTasks(String keyWord) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        ArrayList\u003cString\u003e matchedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            if (task.getDescription().contains(keyWord)) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                matchedTasks.add(task.toString());"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        StringBuilder reply \u003d new StringBuilder(\"Here are the tasks that matched your search:\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        for (int i \u003d 0; i \u003c matchedTasks.size(); i++) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            String string \u003d matchedTasks.get(i);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            reply.append(\"\\n\").append(i + 1).append(\". \").append(string);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return reply.toString();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Finds tasks that have this tag."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param queryTag query tag"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @return tasks"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @throws DukeException DukeException"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String findTasksWithTag(String queryTag) throws DukeException {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (TagList.containsTag(queryTag) \u003d\u003d -1) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            throw new DukeException(\"Tag does not exist!\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        ArrayList\u003cString\u003e matchedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            if (task.tag.getTagName().equals(queryTag)) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                matchedTasks.add(task.toString());"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        StringBuilder reply \u003d new StringBuilder(\"Here are the tasks that matched your search:\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        for (int i \u003d 0; i \u003c matchedTasks.size(); i++) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            String string \u003d matchedTasks.get(i);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            reply.append(\"\\n\").append(i + 1).append(\". \").append(string);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return reply.toString();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 226
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public Todo(String description, String tag) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        super(description, tag);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String toText() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String completionStatus \u003d \"0\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            completionStatus \u003d \"1\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (this.hasTag) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            return \"T\" + \" | \" + completionStatus + \" | \" + this.description"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    + this.tag.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            return \"T\" + \" | \" + completionStatus + \" | \" + this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (this.hasTag) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            return \"[T]\" + this.getStatusIcon() + \" \" + super.toString()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    + this.tag.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            return \"[T]\" + this.getStatusIcon() + \" \" + super.toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 32
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        DialogBox dialogBox \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        // Spacing between Image and Text"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        dialogBox.setSpacing(10.0);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return dialogBox;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        // Spacing between Image and Text"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        db.setSpacing(10.0);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 71
    }
  },
  {
    "path": "src/main/java/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final Image userImage \u003d new Image(this.getClass()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            .getResourceAsStream(\"/images/UserAvatar.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final Image dukeImage \u003d new Image(this.getClass()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            .getResourceAsStream(\"/images/DukeAvatar.png\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Initialises the Main Window."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        dialogContainer.setBackground(new Background(new BackgroundFill(Color.BLANCHEDALMOND, null, null)));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                DialogBox.getDukeDialog(Ui.showWelcome(), dukeImage)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        );"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            );"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 71
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public Ui() { }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Prints a welcome message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public static String showWelcome() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return \"Hello, I\u0027m Pico, no time to waste. \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                + \"\\nLet\u0027s get started!\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                + \"\\nWhat shall we do now?\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Generates a success message after task is added successfully."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param taskAdded task added to TaskList"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @return Add Success message"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public static String getAddSuccessMessage(Task taskAdded) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                + \"\\n\\t\" + taskAdded;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Generates a done message after task is marked as done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param taskDone task that was marked as done"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @return Done message"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public static String getDoneMessage(Task taskDone) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                + \"\\n\\t\" + taskDone;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * Generates a done message after task is deleted from TaskList."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @param taskDeleted task that was deleted"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     * @return Delete message"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public static String getDeleteMessage(Task taskDeleted) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return \"Noted. I\u0027ve deleted this task:\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                + \"\\n\\t\" + taskDeleted;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 52
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    \u003c!-- --\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: #dbfffe; -fx-border-color: #4280c2; -fx-border-width: 2 2; -fx-border-radius: 10; -fx-label-padding: 10; -fx-background-radius: 10;\" text\u003d\"Label\" textOverrun\u003d\"CLIP\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        \u003cStackPane id\u003d\"StackPane\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"-1.0\" prefWidth\u003d\"-1.0\" style\u003d\"-fx-background-color: blanchedalmond;\" xmlns\u003d\"http://javafx.com/javafx/2.2\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                \u003cInsets left\u003d\"10.0\" right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        \u003c!--"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        \u003cCircle fx:id\u003d\"displayPicture\" fill\u003d\"WHITE\" radius\u003d\"49.5\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" strokeWidth\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        \u003c/Circle\u003e --\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        \u003cInsets bottom\u003d\"7.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"7.0\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 32
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                   prefWidth\u003d\"524.0\" promptText\u003d\"Enter your message \" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            \u003cFont size\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "         \u003c/font\u003e\u003c/TextField\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"524.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-font-size: 15; -fx-font-weight: 700;\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    prefWidth\u003d\"600.0\" style\u003d\"-fx-border-color: #9adfe6;\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"588.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 27
    }
  },
  {
    "path": "src/test/java/duke/command/AddCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final Storage storage \u003d new Storage(\"data\", \"data/dukeTest.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            taskList \u003d new TaskList(storage.readFromFile());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void executeTest() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        AddCommand addCommand \u003d new AddCommand(\"todo\", \" \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            addCommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            assertEquals(\"Description cannot be only empty spaces!\", e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        addCommand \u003d new AddCommand(\"deadline\", \" \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            addCommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            assertEquals(\"Description cannot be only empty spaces!\", e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        addCommand \u003d new AddCommand(\"deadline\", \"homework /by 01/40/2020 1900\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            addCommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            assertEquals(\"Please enter dates in this format: dd/MM/yyyy HHmm\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    + \"\\nE.g. 01/12/2020 2359\", e.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        addCommand \u003d new AddCommand(\"deadline\", \"NotMakingSense\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            addCommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            assertEquals(\"Invalid description!\", e.getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        addCommand \u003d new AddCommand(\"event\", \" \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            addCommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            assertEquals(\"Description cannot be only empty spaces!\", e.getMessage());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        addCommand \u003d new AddCommand(\"event\", \"eat /at 01/40/2020 1900\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            addCommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            assertEquals(\"Please enter dates in this format: dd/MM/yyyy HHmm\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    + \"\\nE.g. 01/12/2020 2359\", e.getMessage());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        addCommand \u003d new AddCommand(\"event\", \"NotMakingSense\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            addCommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            assertEquals(\"Invalid description!\", e.getMessage());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void isExitTest() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        assertFalse(new AddCommand(\"todo\", \"sample\").isExit());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        assertFalse(new AddCommand(\"deadline\", \"sample \""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                + \"/by 20/10/2020 1900\").isExit());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        assertFalse(new AddCommand(\"event\", \"sample \""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                + \"/at 20/10/2020 1900\").isExit());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "hanweic53": 107
    }
  },
  {
    "path": "src/test/java/duke/command/DeleteCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class DeleteCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final Storage storage \u003d new Storage(\"data\", \"data/dukeTest.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            taskList \u003d new TaskList(storage.readFromFile());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void executeTest() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        DeleteCommand deleteCommand \u003d new DeleteCommand(7);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            deleteCommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            assertEquals(\"Missing or invalid item number!\", e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void isExitTest() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        assertFalse(new DeleteCommand(10).isExit());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 40
    }
  },
  {
    "path": "src/test/java/duke/command/ExitCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class ExitCommandTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void isExitTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        assertTrue(new ExitCommand().isExit());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "Hello World"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "todo CS2103T post-lecture quiz"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "deadline CS2103T ip /by Thursday 2359"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "event"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "event CS2103T Week 2 /at Friday 12am"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "done 6"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "delete 8"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 16
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 4,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "D:\\CS2103T\\ip\\src\\main\\java\\duke.task.Deadline.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "D:\\CS2103T\\ip\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "D:\\CS2103T\\ip\\src\\main\\java\\duke.exception.DukeException.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "D:\\CS2103T\\ip\\src\\main\\java\\duke.task.Event.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "D:\\CS2103T\\ip\\src\\main\\java\\duke.task.Task.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "D:\\CS2103T\\ip\\src\\main\\java\\duke.task.Todo.java"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 6
    }
  }
]
