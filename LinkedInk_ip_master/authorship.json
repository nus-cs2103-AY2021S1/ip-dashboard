[
  {
    "path": "src/main/java/DeadLineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class DeadLineTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private static String display \u003d \"[D]\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private final LocalDateTime date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    DeadLineTask(String name, LocalDateTime date) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return display + super.toString() + \" (by: \" + date + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String saveString() {return \"D/break/\" + this.done + \"/break/\" + name + \"/break/\" + date;}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 20
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            String home \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            java.nio.file.Path path \u003d java.nio.file.Paths.get(home, \"Documents\", \"ipSave.txt\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            boolean directoryExists \u003d java.nio.file.Files.exists(path);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            MainLogic logic;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            if (directoryExists) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                Storage storage \u003d SaveFileParser.readToStorage(path);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                logic \u003d new MainLogic(storage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                logic \u003d new MainLogic();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            logic.main();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 19,
      "-": 3
    }
  },
  {
    "path": "src/main/java/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private static String display \u003d \"[E]\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private final LocalDateTime date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    EventTask(String name, LocalDateTime date) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return display + super.toString() + \" (at: \" + date + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String saveString() {return \"E/break/\" + this.done + \"/break/\" + name + \"/break/\" + date;}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 20
    }
  },
  {
    "path": "src/main/java/MainLogic.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class MainLogic {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    boolean bye \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    String[] current;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    MainLogic(Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    MainLogic() {}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void main() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        Text.printStartMessage();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        while (!bye) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            current \u003d sc.nextLine().split(\" \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            commandCheck(current[0]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private boolean commandCheck(String string) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        switch (string) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"!command\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                Text.printCommands();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                bye \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                byeLogic();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                storage.printOut();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                doneLogic();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                deleteLogic();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                toDoLogic();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                deadlineLogic();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                eventLogic();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"find\" :"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                findLogic();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                Text.printCommandNotFoundError();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private void doneLogic() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        if (current.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            Text.printTaskNumNotSpecifiedError();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            storage.markDone(Integer.parseInt(current[1]));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private void toDoLogic() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        if (current.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            Text.printDescriptionNotFoundError();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            storage.addTask(new TodoTask(current[1]));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private void deadlineLogic() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        if (current.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            Text.printDescriptionNotFoundError();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            String[] details \u003d current[1].split(\"/by\", 2);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                Text.printTimeNotFoundError();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    storage.addTask(new DeadLineTask(details[0], MyDateTime.parse(details[1])));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    Text.printDateTimeFormatError();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private void eventLogic() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        if (current.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            Text.printDescriptionNotFoundError();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            String[] details \u003d current[1].split(\"/at\", 2);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                Text.printTimeNotFoundError();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    storage.addTask(new EventTask(details[0], MyDateTime.parse(details[1])));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    Text.printDateTimeFormatError();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private void deleteLogic() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        if (current.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            Text.printTaskNumNotSpecifiedError();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            storage.deleteTask(Integer.parseInt(current[1]));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private void byeLogic() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            String home \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            java.nio.file.Path path \u003d java.nio.file.Paths.get(home, \"Documents\", \"ipSave.txt\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            FileWriter fw \u003d new FileWriter(path.toFile());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            PrintWriter pw \u003d new PrintWriter(fw);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            pw.print(storage.allSaveString());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            pw.close();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        Text.printEndMessage();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private void findLogic() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        if (current.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            Text.printNoSearchTermError();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            storage.search(current[1]);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 149
    }
  },
  {
    "path": "src/main/java/MyDateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class MyDateTime {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static LocalDateTime parse(String string) throws DateTimeParseException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            return LocalDateTime.parse(string, DateTimeFormatter.ofPattern(\" dd/MM/yyyy HHmm\"));"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static LocalDateTime load(String string) throws DateTimeParseException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            return LocalDateTime.parse(string);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 21
    }
  },
  {
    "path": "src/main/java/SaveFileParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class SaveFileParser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    protected static Storage readToStorage(Path path) throws IOException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            FileReader fr \u003d new FileReader(path.toFile());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            String str;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            while ((str \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                String info[] \u003d str.split(\"/break/\", 4);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                storage.loadInTask(infoToTask(info));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private static Task infoToTask(String info[]) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        switch (info[0]) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                task \u003d new TodoTask(info[2]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    task \u003d new DeadLineTask(info[2], MyDateTime.load(info[3]));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    throw new IllegalStateException(\"Unexpected time format: \" + info[3]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    task \u003d new EventTask(info[2], MyDateTime.load(info[3]));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    throw new IllegalStateException(\"Unexpected time format: \" + info[3]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                throw new IllegalStateException(\"Unexpected type: \" + info[0]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        if (info[1] \u003d\u003d \"true\") {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            task.markDone();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 55
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private ArrayList\u003cTask\u003e storage \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        storage.add(task);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        Text.normalPrint(\"Got it. I\u0027ve added this task:\\n  \" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                task.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                \"Now you have \" + size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void loadInTask(Task task) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        storage.add(task);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return storage.size();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void printOut() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        String temp \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        for (Task item: storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            temp +\u003d \"\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            temp +\u003d counter + \". \" + item.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        Text.normalPrint(temp);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void search(String string) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        String temp \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        for (Task item: storage) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            if (item.getDescription().contains(string)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                temp +\u003d \"\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                temp +\u003d counter + \". \" + item.toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        Text.normalPrint(temp);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String allSaveString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        if (storage.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            String temp \u003d \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            for (Task task : storage) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                temp +\u003d \"\\n\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                temp +\u003d task.saveString();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            return temp.substring(1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void markDone(int position) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            if (storage.get(position - 1).markDone()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                Text.normalPrint(\"beri gude, finish that thing liao\\n  \" +"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                        storage.get(position - 1).toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                Text.normalPrint(\"Task alr finish liao\\n  \" +"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                        storage.get(position - 1).toString());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            Text.printTaskNotFoundError();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public void deleteTask(int position) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            Task task \u003d storage.get(position - 1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            storage.remove(position - 1);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            Text.normalPrint(\"Noted. I\u0027ve removed this task:\\n  \" +"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    task.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "                    \"Now you have \" + size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            Text.printTaskNotFoundError();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 88
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    String name;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    boolean done \u003d false;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    Task(String name) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return done ? Text.doneText + name : Text.notDoneText + name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String saveString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return \"T/break/\" + this.done + \"/break/\" + name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public boolean markDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            done \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 30
    }
  },
  {
    "path": "src/main/java/Text.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class Text {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    //Bling msgs"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private static String top \u003d \"----------Bot made by Hendey Fan----------\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private static String bottom \u003d \"------------------------------------------\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private static String startMessage \u003d \"This is a chat bot made by Hendey Fan.\\n\" +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            \"What can this magnificent bot do for you?\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private static String endMessage \u003d \"    oi don run away from ur tasks hor    \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    // Error msgs"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private static String taskNotFound \u003d \"Error: task not found :(\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private static String commandNotFound \u003d \"Error: command does not exist :(\\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            \"Type \u0027!command\u0027 for list of commands\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private static String descriptionNotFound \u003d \"Error: description of task cannot be empty\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private static String taskNumNotSpecified \u003d \"Error: task number not specified\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private static String timeNotFound \u003d \"Error: time not specified\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private static String dateTimeFormatError \u003d \"Error: date time in an incorrect format\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "            \"Please follow this format: dd/MM/yyyy HHmm\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private static String noSearchTermError \u003d \"Error: search term not defined\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    // static info/display strings"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private static String commandList \u003d \"list, bye, done, todo, deadline, event, delete, !command\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static String doneText \u003d \"[Done] \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static String notDoneText \u003d \"[Nope] \";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void normalPrint(String middle) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        System.out.println(top + \"\\n\" + middle + \"\\n\" + bottom+ \"\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void printStartMessage() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        normalPrint(startMessage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void printEndMessage() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        normalPrint(endMessage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void printTaskNotFoundError() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        normalPrint(taskNotFound);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void printCommandNotFoundError() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        normalPrint(commandNotFound);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void printDescriptionNotFoundError() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        normalPrint(descriptionNotFound);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void printTaskNumNotSpecifiedError() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        normalPrint(taskNumNotSpecified);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void printTimeNotFoundError() { normalPrint(timeNotFound);}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void printDateTimeFormatError() { normalPrint(dateTimeFormatError);}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void printCommands() { normalPrint(commandList); }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public static void printNoSearchTermError() { normalPrint(noSearchTermError);}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 61
    }
  },
  {
    "path": "src/main/java/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    private static String display \u003d \"[T]\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    TodoTask(String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "        return display + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "    public String saveString() { return \"T/break/\" + this.done + \"/break/\" + name; }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "test"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "event event test /at 12/12/1234 1234"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "todo todo test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "deadline test /by 12/12/1234 1234"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LinkedInk"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "LinkedInk": 1,
      "-": 20
    }
  }
]
