[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Elgoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Elgoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Elgoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Elgoh": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        Gel.keepingList();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Elgoh": 1,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Elgoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Elgoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Elgoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Elgoh": 14
    }
  },
  {
    "path": "src/main/java/Gel.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Elgoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "public class Gel {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    public static void keepingList() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        // initialise list and scanner"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        //List\u003cTask\u003e listOfText \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Elgoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        System.out.println(\"    Hello! I\u0027m Gel\\n    What can I do for you?\\n\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Elgoh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        label:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "            String[] inputArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "            String keyword \u003d inputArr[0];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                switch (keyword) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                case \"bye\": { //bye"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                    System.out.println(\"\\n    Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                    break label;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                case \"list\": { //list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                    taskList.showListOfTask();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                case \"done\": { //done"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                    taskList.doneTask(input);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                case \"delete\": { //delete"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                    if (inputArr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                        throw new GelException(\"    Yo tell me what you want to delete la\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                        taskList.deleteTask(inputArr[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                        throw new GelException(\"    Yoyoyo please input a valid number after delete\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                case \"deadline\": {//deadline"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                    int dateIndex \u003d input.lastIndexOf(\"/\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                    if (dateIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                        throw new GelException(\"    Bruh you need the /by tag for deadlines\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                        String[] dateDetails \u003d input.substring(dateIndex).split(\" \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                        String checkBy \u003d dateDetails[0];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                        if (!checkBy.equals(\"/by\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                            throw new GelException(\"    Bruh you need the /by tag for deadlines\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                        } else if (dateDetails.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                            throw new GelException(\"    Bruh you left out the deadline\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                    taskList.addDeadline(input, dateIndex);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                case \"event\": {//event"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                    int dateIndex \u003d input.lastIndexOf(\"/\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                    if (dateIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                        throw new GelException(\"    Bruh you need the /at tag for events\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                        String[] dateDetails \u003d input.substring(dateIndex).split(\" \");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                        String checkAt \u003d dateDetails[0];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                        if (!checkAt.equals(\"/at\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                            throw new GelException(\"    Bruh you need the /at tag for events\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                        } else if (dateDetails.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                            throw new GelException(\"    Bruh you left out the event date\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                    taskList.addEvent(input, dateIndex);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                case \"todo\": {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                    if (inputArr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                        throw new GelException(\"    Yo tell me what you want todo\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                    taskList.addTodo(input);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                default: {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                    throw new GelException();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Elgoh"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "            } catch (GelException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Elgoh": 94
    }
  },
  {
    "path": "src/main/java/GelException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "public class GelException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Elgoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    public GelException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        super(\"\\n    LOL! Please use the bye tag if you wanna waste my time \");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Elgoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    public GelException(String msg) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        super(\"\\n\" + msg);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Elgoh": 10
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Elgoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Elgoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    private String getDescription() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Elgoh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Elgoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Elgoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "            return this.getStatusIcon() + \" \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "                    + this.getDescription();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Elgoh": 27
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Elgoh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    private List\u003cTask\u003e listOfTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Elgoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        listOfTask \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Elgoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    public void showListOfTask() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        System.out.println(\"\\n    Here are the task(s) in your list:\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d listOfTask.size(); i++) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "            Task task \u003d listOfTask.get(i - 1);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "            System.out.println(\"    \" + i + \".\" + task);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Elgoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    public void doneTask(String input) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        int index \u003d Integer.parseInt(input.substring(5)) - 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        Task taskToBeDone \u003d listOfTask.remove(index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        taskToBeDone.markAsDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        listOfTask.add(index, taskToBeDone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        System.out.println(\"\\n    Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        System.out.println(\"    \" + taskToBeDone);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Elgoh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    public void deleteTask(String deleteNumber) throws Exception {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        int taskNo \u003d Integer.parseInt(deleteNumber);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        Task taskToBeDone \u003d listOfTask.remove(taskNo - 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        System.out.println(\"\\n    Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        System.out.println(\"    \" + taskToBeDone);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        System.out.println(\"    Now you have \" + listOfTask.size() + \" task(s) in the list.\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Elgoh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    public void addDeadline(String input, int dateIndex) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        String by \u003d input.substring(dateIndex + 4);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        String description \u003d input.substring(8, dateIndex);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        Deadline deadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        listOfTask.add(deadline);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        System.out.println(\"\\n    Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        System.out.println(\"      \" + deadline);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        System.out.println(\"    Now you have \" + listOfTask.size() + \" task(s) in the list.\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Elgoh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    public void addEvent(String input, int dateIndex) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        String at \u003d input.substring(dateIndex + 4);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        String description \u003d input.substring(5, dateIndex);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        Event event \u003d new Event(description, at);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        listOfTask.add(event);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        System.out.println(\"\\n    Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        System.out.println(\"      \" + event);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        System.out.println(\"    Now you have \" + listOfTask.size() + \" task(s) in the list.\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Elgoh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    public void addTodo(String input) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        String description \u003d input.substring(4);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        listOfTask.add(todo);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        System.out.println(\"\\n    Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        System.out.println(\"      \" + todo);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        System.out.println(\"    Now you have \" + listOfTask.size() + \" task(s) in the list.\\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Elgoh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Elgoh": 67
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Elgoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    public Todo (String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Elgoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Elgoh": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "deadline asdf /by sunday"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Elgoh": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Elgoh"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Elgoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Elgoh": 3,
      "-": 20
    }
  }
]
