[
  {
    "path": "src/main/java/Ultron/Commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jh123x"
        },
        "content": "package ultron.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.exceptions.ExceptionType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.exceptions.UltronException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jh123x"
        },
        "content": "public final class ByeCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Creates the bye command with arguments."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param arguments Arguments for bye command"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public ByeCommand(final String arguments) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        super(true, arguments);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Execute the instructions for bye command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param taskList Task list which holds the task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param ui       UI for Ultron"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param storage  Storage for the task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @throws UltronException"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public void execute(final TaskList taskList,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                        final UI ui,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                        final Storage storage) throws UltronException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        if (this.getArguments().trim().length() \u003e 0) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            throw new UltronException(\"bye\", ExceptionType.TOO_MUCH_ARGUMENTS);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Save the storage"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        storage.writeAll(taskList.getList());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        ui.printEnd();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jh123x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jh123x": 39
    }
  },
  {
    "path": "src/main/java/Ultron/Commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jh123x"
        },
        "content": "package ultron.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.UI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.exceptions.UltronException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jh123x"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Boolean denoting if Ultron should exit after execution."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    private final boolean isExit;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * String stroing arguments for the command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    private final String arguments;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Abstract class Command which all Commands inherit from."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param isExit    boolean denoting if Ultron should exit after executing"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param arguments Argument for the command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public Command(final boolean isExit, final String arguments) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        this.arguments \u003d arguments;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Execution for the command which inherits the class."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param taskList  List of tasks"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param ui        UI for Ultron"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param storage   Storage for Ultron"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @throws UltronException"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public abstract void execute(TaskList taskList,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                                 UI ui,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                                 Storage storage) throws UltronException;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                                 "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Checks if Ultron should exit after the command."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return boolean isExit"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Gets the arguments for the command."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return String arguments"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    protected String getArguments() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        return this.arguments;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jh123x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jh123x": 56
    }
  },
  {
    "path": "src/main/java/Ultron/Commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jh123x"
        },
        "content": "package ultron.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.exceptions.ExceptionType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.UI;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.exceptions.UltronException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jh123x"
        },
        "content": "public final class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Constructor for DeleteCommand."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param arguments Arguments for delete command"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public DeleteCommand(final String arguments) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        super(false, arguments);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Executes the Delete Command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param taskList  List of tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param ui        UI for Ultron"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param storage   Storage for Ultron"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @throws UltronException if the arguments are invalid"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public void execute(final TaskList taskList,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                        final UI ui,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                        final Storage storage) throws UltronException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Initialise index"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        int index \u003d Parser.parseInteger(this.getArguments());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Check if the index is out of range"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        if (index \u003c\u003d 0 || index \u003e\u003d taskList.size()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            //Throw an Ultron exception if it is out of range"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            throw new UltronException(\"delete\","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                    Integer.toString(index + 1),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                    ExceptionType.INVALID_ARGUMENT);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Get the task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        Task tsk \u003d taskList.get(index);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Remove the task"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Print the delete message"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        ui.print(String.format(\"What are you doing removing this?!?!\\n  \""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                        + \"%s\\nNow you have %d burdens%n\","
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                tsk,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                taskList.size()));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jh123x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jh123x": 57
    }
  },
  {
    "path": "src/main/java/Ultron/Commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jh123x"
        },
        "content": "package ultron.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.exceptions.ExceptionType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.exceptions.UltronException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jh123x"
        },
        "content": "public final class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Contructor for Done Command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param arguments"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public DoneCommand(final String arguments) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        super(false, arguments);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Execute the done command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param taskList  List of tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param ui        UI for Ultron"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param storage   Storage for Ultron"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @throws UltronException if there are too much or too little arguments"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public void execute(final TaskList taskList,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                        final UI ui,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                        final Storage storage) throws UltronException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Initialise index"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        int index \u003d Parser.parseInteger(this.getArguments());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        if (this.getArguments().trim().length() \u003c 1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            throw new UltronException(\"done\", ExceptionType.NO_ARGUMENTS_SUPPLIED);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        if (this.getArguments().trim().length() \u003e 1) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            throw new UltronException(\"done\", ExceptionType.TOO_MUCH_ARGUMENTS);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Mark the task as done"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        if (!taskList.markDone(index)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            //Throw an error if the method return false"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            throw new UltronException(\"done\","
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                    Integer.toString(index),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                    ExceptionType.INVALID_ARGUMENT);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Print the done message"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        ui.print(String.format(\"Finally! Making yourself useful\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                + \"  %s%n\", taskList.get(index)));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jh123x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jh123x": 55
    }
  },
  {
    "path": "src/main/java/Ultron/Commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jh123x"
        },
        "content": "package ultron.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.exceptions.UltronException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jh123x"
        },
        "content": "public class FindCommand extends Command{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public FindCommand(String arguments){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        super(false, arguments);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public void execute(TaskList taskList, UI ui, Storage storage) throws UltronException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        boolean printed \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        ui.print(\"Why do you always bothering me?\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        for(Task task : taskList.getList()){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            if(task.getMessage().contains(getArguments())){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                ui.print(String.format(\"%d. %s\\n\",count++, task.toString()));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                printed \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        if (!printed){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            ui.print(\"There is literally nothing here\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jh123x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jh123x": 34
    }
  },
  {
    "path": "src/main/java/Ultron/Commands/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jh123x"
        },
        "content": "package ultron.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.exceptions.ExceptionType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.exceptions.UltronException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.UI;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jh123x"
        },
        "content": "public final class HelpCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Constructor for the Help Command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param arguments Argument for the help command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public HelpCommand(final String arguments) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        super(false, arguments);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Execute the help command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param taskList  List of tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param ui        UI for Ultron"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param storage   Storage for Ultron"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @throws UltronException if the number of arguments \u003e 0"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public void execute(final TaskList taskList,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                        final UI ui,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                        final Storage storage) throws UltronException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        if (this.getArguments().trim().length() \u003e 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            throw new UltronException(\"list\", ExceptionType.TOO_MUCH_ARGUMENTS);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        ui.print(\"Heh I guess I could help an insect like you:\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                + \"- help                      : Get help for the commands\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                + \"- todo (name)               : Adds a todo to the list\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                + \"- event (name) /at (date)   : Adds an event at date\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                + \"- deadline (name) /by (date): \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                + \"Adds a deadline which expires by date\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                + \"- delete (number)           : Removes a todo from the list\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        );"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jh123x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jh123x": 44
    }
  },
  {
    "path": "src/main/java/Ultron/Commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jh123x"
        },
        "content": "package ultron.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.exceptions.ExceptionType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.exceptions.UltronException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jh123x"
        },
        "content": "public final class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Constructor for List command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param arguments Arguments needed for list command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public ListCommand(final String arguments) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        super(false, arguments);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Execute the list command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param taskList  List of tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param ui        UI for Ultron"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param storage   Storage for Ultron"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @throws UltronException if there are \u003e 0 arguments"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public void execute(final TaskList taskList,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                        final UI ui,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                        final Storage storage) throws UltronException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Check if there are arguments"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        if (this.getArguments().trim().length() \u003e 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            throw new UltronException(\"list\", ExceptionType.TOO_MUCH_ARGUMENTS);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //If the list is empty"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            //When there is no task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            ui.print(\"You have no business with me\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            //Print the starting list"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            ui.print(\"Heh, you cant even remember what you had\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            //Iterate through the task and print it"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); ++i) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                //Print out each item on the list"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                ui.print(String.format(\"%d.%s\\n\", i + 1, taskList.get(i)));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jh123x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jh123x": 59
    }
  },
  {
    "path": "src/main/java/Ultron/Commands/TaskAllocator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jh123x"
        },
        "content": "package ultron.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.exceptions.ExceptionType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.exceptions.UltronException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.UI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jh123x"
        },
        "content": "public final class TaskAllocator extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Store TaskCommand corresponding to the command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    private final TaskCommand taskCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Allocates the correct task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param command   Command given"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param arguments Arguments given"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @throws UltronException if the command is invalid"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public TaskAllocator(final String command,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                         final String arguments) throws UltronException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Call the superclass"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        super(false, arguments);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            //Get the state"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            this.taskCommand \u003d TaskCommand.valueOf(command.toLowerCase());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            //Throw a Duke exception"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            throw new UltronException(command,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                    ExceptionType.INVALID_COMMAND);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Add the correct Task to the tasklist."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param taskList  List of tasks"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param ui        UI for Ultron"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param storage   Storage for Ultron"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @throws UltronException if there are no arguments or"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     *                         if there was an error creating the task"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public void execute(final TaskList taskList,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                        final UI ui,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                        final Storage storage) throws UltronException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Init the enum states"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        String command \u003d taskCommand.name();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Trim the args"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        if (getArguments().trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            //Throw an exception when there is nothing supplied"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            throw new UltronException(command,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                    ExceptionType.NO_ARGUMENTS_SUPPLIED);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            //Create a new task"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            task \u003d taskCommand.createTask(getArguments());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        } catch (IllegalStateException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            //Throw a Duke exception"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            throw new UltronException(command,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                    ExceptionType.INVALID_COMMAND);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Add the task to the task list"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Print out the message"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        ui.print(String.format(\"Can\u0027t you keep track of \u0027%s\u0027 yourself?\\n\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                        + \"Now you have %d burdens%n\","
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                task, taskList.size()));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jh123x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jh123x": 85
    }
  },
  {
    "path": "src/main/java/Ultron/Commands/TaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jh123x"
        },
        "content": "package ultron.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import java.util.function.Function;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jh123x"
        },
        "content": "public enum TaskCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Enum for the TODO task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    todo(Todo::parseCommand),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Enum for the Event class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    event(Event::parseCommand),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Enum for the deadline class."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    deadline(Deadline::parseCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * To store the parseCommand method of the different classes."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    private final Function\u003cString, Task\u003e commandParser;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Constructor for TaskCommand."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param commandParser A function containing the parseCommand method for the classes"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    TaskCommand(final Function\u003cString, Task\u003e commandParser) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        this.commandParser \u003d commandParser;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    //Get the task given description"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Create a task based on the description."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return Task with the description"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public Task createTask(final String description) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        return commandParser.apply(description);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public Function\u003cString, Task\u003e getCommandParser() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        return commandParser;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jh123x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jh123x": 57
    }
  },
  {
    "path": "src/main/java/Ultron/Exceptions/ExceptionType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jh123x"
        },
        "content": "package ultron.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jh123x"
        },
        "content": "public enum ExceptionType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * ExceptionType when too much arguments are supplied."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    TOO_MUCH_ARGUMENTS(\"Too much arguments supplied for %s\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * ExceptionType when there are no arguments supplied."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    NO_ARGUMENTS_SUPPLIED(\"No arguments supplied for %s\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * ExceptionType when arguments are invalid."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    INVALID_ARGUMENT(\"Invalid value of %s with \u0027%s\u0027\"),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * ExceptionType when the input is not a valid number."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    INVALID_NUMBER(\"\u0027%s\u0027 is not a valid number\"),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * ExceptionType when there is no such command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    INVALID_COMMAND(\"Invalid command \u0027%s\u0027\"),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * ExceptionType when there are IO errors."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    IO_EXCEPTION(\"How do I not have permission for %s\"),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * ExceptionType when Directory cannot be created."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    DIRECTORY_NOT_CREATED(\"Unable to create directory %s\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Stores the error message for the enum."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    private final String errorMessage;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Different types of Exceptions."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param errorMessage  Error Message to be shown"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    ExceptionType(final String errorMessage) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Store the error message"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Get the message of the ExceptionType."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param inputString       Input string that the user have given"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param inputArguments    Input arguments the user have given"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return  The message to be shown"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public String getMessage(final String inputString,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                             final String inputArguments) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Return the string formatted error message"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        return String.format(this.errorMessage, inputString, inputArguments);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Get the message of the ExceptionType."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param inputString   Input string that the user have given"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return The message to be shown"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public String getMessage(final String inputString) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Return the formatted error message"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        return String.format(this.errorMessage, inputString);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jh123x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jh123x": 78
    }
  },
  {
    "path": "src/main/java/Ultron/Exceptions/UltronException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jh123x"
        },
        "content": "package ultron.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jh123x"
        },
        "content": "public class UltronException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Ultron Exception for Ultron class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param inputString   Input the user has provided"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param errorType     The error type"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public UltronException(final String inputString,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                           final ExceptionType errorType) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Call the superclass method"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        super(errorType.getMessage(inputString));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Ultron Exception for Ultron class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param inputString       Input the user has provided"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param inputArguments    The arguments provided"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param errorType         The error type"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public UltronException(final String inputString,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                           final String inputArguments,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                           final ExceptionType errorType) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Call the superclass method"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        super(errorType.getMessage(inputString, inputArguments));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jh123x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jh123x": 30
    }
  },
  {
    "path": "src/main/java/Ultron/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jh123x"
        },
        "content": "package ultron;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.commands.FindCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.commands.TaskAllocator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.commands.ByeCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.commands.ListCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.commands.HelpCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.commands.DeleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.commands.DoneCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.exceptions.UltronException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.exceptions.ExceptionType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jh123x"
        },
        "content": "public final class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * The regex pattern for checking the commands and inputs."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    private static final Pattern PATTERN \u003d"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            Pattern.compile(\"(^\\\\s?\\\\w+\\\\b) ?(.*)?$\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    private Parser() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Check the input string and arguments."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param command   Input command of the user"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param arguments Arguments provided by the user"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return Command corresponding to the input given by user"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @throws UltronException if there are errors in getting the command"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    private static Command checkInput(final String command,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                                      final String arguments)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            throws UltronException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Switch case to process the commands"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //If the user keys in bye"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            return new ByeCommand(arguments);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            return new FindCommand(arguments);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //If the user keys in list"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            return new ListCommand(arguments);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Check if the user is asking for help"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            return new HelpCommand(arguments);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Check if the user is deleting some of the items"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            return new DeleteCommand(arguments);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Check if the user is done with any task"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            return new DoneCommand(arguments);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Otherwise it will be a task to be added"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            return new TaskAllocator(command, arguments);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Parse the integer provided by the user."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return int parsedInteger"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @throws UltronException if there is an error parsing the integer"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public static int parseInteger(final String args) throws UltronException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Catch any errors in the number"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            //Get the index of the items"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            return Integer.parseInt(args) - 1;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            //Throw a new Ultron exception"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            throw new UltronException(args, ExceptionType.INVALID_NUMBER);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Parsing commands."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param input raw input of the user"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return Command corresponding to the raw input"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @throws UltronException"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public static Command parseCommand(final String input)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            throws UltronException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Use regex to get the grp"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        Matcher inputs \u003d PATTERN.matcher(input);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Find the items in the group"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        if (!inputs.find()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            //Throw an invalid command error if it is unable to find any matches"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            throw new UltronException(input, ExceptionType.INVALID_COMMAND);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Get the command"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        String inputCommand \u003d inputs.group(1);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Get the other arguments"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        String arguments \u003d inputs.group(2);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        return checkInput(inputCommand, arguments);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jh123x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jh123x": 117
    }
  },
  {
    "path": "src/main/java/Ultron/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jh123x"
        },
        "content": "package ultron;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.tasks.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.exceptions.UltronException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.exceptions.ExceptionType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.commands.TaskCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jh123x"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jh123x"
        },
        "content": " * The main Storage class for Ultron."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jh123x"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jh123x"
        },
        "content": "public final class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * To store the datafile location."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    private final File f;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * The Storage class."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * This writes the data to a file and retrieves it when needed"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param path Path to the storage file"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public Storage(final String path) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Create a new file object"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        f \u003d new File(path);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Encodes a Task to a string."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param task A Task to be encoded"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return String The encoded String of the task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    private String encode(final Task task) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jh123x"
        },
        "content": "          @param task Task to be encoded to string"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jh123x"
        },
        "content": "         * @return String containing the command"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jh123x"
        },
        "content": "         */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        return String.format(\"%s~%d~%s\", task.getType(), task.isDone() ? 1 : 0, task.getCommand());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Decodes a string to a Task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param string String to be decoded to a Task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return task A task based on the string"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @throws UltronException If the command or line is invalid"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    private Task decode(final String string) throws UltronException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Split the string according to the ,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        String[] data \u003d string.split(\"~\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        TaskCommand taskCommand;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            //Get the command based on the first entry"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            taskCommand \u003d TaskCommand.valueOf(data[0].toLowerCase());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            throw new UltronException(data[0], ExceptionType.INVALID_COMMAND);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Return the task based on the data"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        Task task \u003d taskCommand.getCommandParser().apply(data[2]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            task.markDone();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Fetches all of the data in the storage file to an arraylist of task."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return taskArrayList An Arraylist containing the tasks stored"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @throws UltronException If there is an error decoding the file"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws UltronException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            Scanner scanner \u003d new Scanner(f);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                String nextLine \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                taskArrayList.add(decode(nextLine));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            scanner.close();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            return taskArrayList;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            return taskArrayList;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Writes all the task in the tasklist to a folder."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param taskArrayList     Tasklist containing all the tasks"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @throws UltronException  If there are any IO errors"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public void writeAll(final ArrayList\u003cTask\u003e taskArrayList)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            throws UltronException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Check if the directory exist"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        if (!f.exists()) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                Files.createDirectory(Path.of(f.getParent()));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                throw new UltronException(f.getPath(),"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                        ExceptionType.DIRECTORY_NOT_CREATED);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            FileWriter fw \u003d new FileWriter(f.getPath());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            for (Task task : taskArrayList) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                fw.write(encode(task) + \"\\n\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            throw new UltronException(f.getPath(), ExceptionType.IO_EXCEPTION);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jh123x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jh123x": 132
    }
  },
  {
    "path": "src/main/java/Ultron/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jh123x"
        },
        "content": "package ultron;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jh123x"
        },
        "content": "public final class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Store the internal list of tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    private final ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * It stores all of the tasks present."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param taskArrayList Arraylist containing all the tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public TaskList(final ArrayList\u003cTask\u003e taskArrayList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Set the arraylist to the list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        list \u003d taskArrayList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Returns the arraylist of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return ArrayList containing all of the tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Gets the size of the tasklist."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return int size"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Get the size of the list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        return this.list.size();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Mark a particular task as done."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param index The index of the task to be marked"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return boolean depending on if the operation was successful"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public boolean markDone(final int index) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Check if the index is valid"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        if (index \u003c this.list.size() \u0026\u0026 index \u003e\u003d 0) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            //Mark the task at index as done"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            this.get(index).markDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            //Return true if operation is successful"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            //Otherwise operation will fail"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Remove a task from the tasklist."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param index Index of the task to be removed"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return  Boolean depending on if the operation was successful"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public boolean remove(final int index) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Check if the index is valid"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        if (index \u003c this.list.size() \u0026\u0026 index \u003e\u003d 0) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            //Remove the task at index"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            this.list.remove(index);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            //Return true if operation is successful"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            //Otherwise operation will fail"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Get the task at index."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param index Index of the task"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return  Task at the index provided"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public Task get(final int index) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        //Return the index of the arraylist"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.list.get(index);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Add the task to the tasklist."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param task Task to be added"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public void add(final Task task) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        //Add the task to the list"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        this.list.add(task);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jh123x": 89,
      "-": 20
    }
  },
  {
    "path": "src/main/java/Ultron/Tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jh123x"
        },
        "content": "package ultron.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jh123x"
        },
        "content": "public final class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Pattern string the regex for parsing the command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    private static final Pattern DATE_MATCH \u003d"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            Pattern.compile(\"^(.*) (/by) (.*)$\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    private static final DateFormat DATE_FORMAT \u003d"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            new SimpleDateFormat(\"dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * String to store the string time."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    private String at \u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * String to store the date time."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    private Date date \u003d null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * A Deadline Task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param description   Description for the task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param by            The deadline for the task in string format"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    //Constructor for the event class"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public Deadline(final String description, final String by) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Call the superclass constructor"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Store the at variable"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        at \u003d by;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * A Deadline Task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param description   Description for the task"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param by            The deadline for the task in Date format"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    //Constructor for the event class"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public Deadline(final String description, final Date by) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Call the superclass constructor"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Store the at variable"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        date \u003d by;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public static Task parseCommand(final String args) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Create the matcher"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        Matcher matcher \u003d DATE_MATCH.matcher(args);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Check for matches"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        matcher.find();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Get the date and the name"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        String name \u003d matcher.group(1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        String date \u003d matcher.group(3);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Extract the date"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            //Parse the date"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            Date date1 \u003d DATE_FORMAT.parse(date);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            //Pass the date to the constructor"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            return new Deadline(name, date1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            //Pass the 2 arguments into the function"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            return new Deadline(name, date);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * String representation of deadline."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return String representation of Deadline"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    //Getter for the date of the"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        if (at !\u003d null) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            //Return the date"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            return this.at;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            return new SimpleDateFormat(\"dd-MM-yyyy HHmm\").format(date);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        return \"DEADLINE\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        return String.format(\"%s /by %s\", getMessage(), getDate());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        return \"[D]\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                + super.toString()"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                + String.format(\" (by: %s)\", this.getDate());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jh123x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jh123x": 117
    }
  },
  {
    "path": "src/main/java/Ultron/Tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jh123x"
        },
        "content": "package ultron.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jh123x"
        },
        "content": "public final class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Store the regex for parsing the command for event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    private static final Pattern DATE_MATCH \u003d"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            Pattern.compile(\"^(.*) (/at) (.*)$\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Store the date format regex."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    private static final DateFormat DATE_FORMAT \u003d"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            new SimpleDateFormat(\"dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    //Store the variables"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Store the String form for time of event."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    private String at \u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Store a date form for time of event."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    private Date date \u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Task event."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param description   Description of the Event"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param at            Date of the event as a string"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public Event(final String description, final String at) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Call the superclass constructor"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Store the at variable"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Task Event."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param description   Description of the Event"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param at            Date of the event as a Date object"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    //Constructor for the event class"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public Event(final String description, final Date at) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Call the superclass constructor"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Store the at variable"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        this.date \u003d at;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Gets the date of the event."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return date Date of the event"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        if (at !\u003d null){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            //Return the date"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            return at;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            return new SimpleDateFormat(\"dd-MM-yyyy HHmm\").format(date);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Gets the type of the event."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return String type"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        return \"EVENT\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Gets the command representation of the event."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return String command"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        return String.format(\"%s /at %s\", getMessage(), getDate());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Parse the commands to Event class."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param args  Arguments for the Event task"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return  Event with the arguments parsed"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public static Event parseCommand(final String args) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Create the matcher"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        Matcher matcher \u003d DATE_MATCH.matcher(args);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Check for matches"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        matcher.find();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Get the date and the name"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        String name \u003d matcher.group(1);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        String date \u003d matcher.group(3);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Extract the date"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            //Parse the date"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            Date date1 \u003d DATE_FORMAT.parse(date);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            //Pass the date to the constructor"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            return new Event(name, date1);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            //Pass the 2 arguments into the function"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            return new Event(name, date);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        return \"[E]\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                + super.toString()"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                + String.format(\" (at: %s)\", this.getDate());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jh123x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jh123x": 133,
      "-": 1
    }
  },
  {
    "path": "src/main/java/Ultron/Tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jh123x"
        },
        "content": "package ultron.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jh123x"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Store the messages."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    private final String message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Boolean to check if task is completed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    private boolean completed;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Abstract task class for all Tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param description   Description of the Task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    //Constructor for Task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public Task(final String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Store the message"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        this.message \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Mark the current task as not done"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        this.markUnDone();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Get the description of the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return Message for the task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Return the message"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Check is the task is done."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return boolean denoting if the task is completed"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //returns true if the task is done"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        return this.completed;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Get the type of task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return String for type of task"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public abstract String getType();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Get the command for the class as a string."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return String for command"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public abstract String getCommand();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Mark the task as completed."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Mark the task as complete"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        this.completed \u003d true; //mark the task as done"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Mark the task as not completed."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public void markUnDone() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Mark the test as not done"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        this.completed \u003d false; //mark the task as undone"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Get the status icon denoting if the task is completed."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return Status icon as a String"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Get the statusIcon based on state"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        return (this.isDone() ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Convert the task to string format."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return String format of the task"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Convert the object to string"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        return String.format(\"[%s] %s\","
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                this.getStatusIcon(),"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                this.getMessage());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jh123x": 94,
      "-": 9
    }
  },
  {
    "path": "src/main/java/Ultron/Tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jh123x"
        },
        "content": "package ultron.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jh123x"
        },
        "content": "public final class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Todo Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param description   Description of the todo"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    //Call the constructor"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public Todo(final String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Call the superclass constructor"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Parse the arguments required for todo class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param args  Arguments for the class"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return  Todo task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public static Todo parseCommand(final String args) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        return new Todo(args);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Get the type of command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return String TODO"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        return \"TODO\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Get the Todo in the form of a command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        return String.format(\"%s\", getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Get the string representation of the todo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return  String command"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jh123x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jh123x": 52
    }
  },
  {
    "path": "src/main/java/Ultron/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jh123x"
        },
        "content": "package ultron;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jh123x"
        },
        "content": "public final class UI {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Store the scanner object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    private final Scanner scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * UI to handle all the displaying."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Create a new scanner object"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Show the error as output to System out."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param message message to be shown"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public void showError(final String message) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Wrapper when printing the error message"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        System.out.println(\"Heh, you can\u0027t even type in a correct command\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                + message"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                + \"\\nI\u0027ll give u a pity tip\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                + \"Use \u0027help\u0027 for more information\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Get a line of input from system in."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @return String input received"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Declare type"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        // Take in input"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        input \u003d this.scanner.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Return the input"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Prints a message."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param argument  message to be printed"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public void print(final String argument) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        System.out.print(argument);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Prints the end message to stdout."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public void printEnd() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        // Print the end message"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        System.out.println(\"Clearly you were not worth my time.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Prints the intro message."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public void printIntro() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        // Print the intro messages"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Logo for the mascot"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        String logo \u003d \"  _    _ _ _                   \\n\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                + \" | |  | | | |                  \\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                + \" | |  | | | |_ _ __ ___  _ __  \\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                + \" | |  | | | __| \u0027__/ _ \\\\| \u0027_ \\\\ \\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                + \" | |__| | | |_| | | (_) | | | |\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                + \"  \\\\____/|_|\\\\__|_|  \\\\___/|_| |_|\\n\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Print the intro"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        System.out.println(\"Hello lesser being, I am Ultron\\n\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                + \"What do you want?\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Prints the new line separator."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        System.out.println(\"_______________________________\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                + \"_____________________________\\n\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jh123x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jh123x": 94
    }
  },
  {
    "path": "src/main/java/Ultron/Ultron.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jh123x"
        },
        "content": "package ultron;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.exceptions.UltronException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jh123x"
        },
        "content": "public final class Ultron {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Store the UI class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    private final UI ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Store the Storage."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Task list to store the tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * The Ultron class."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param path  path to the datafile which stores the tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public Ultron(final String path) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Create the Storage object"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        storage \u003d new Storage(path);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            //Fetch all from storage"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            this.taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        } catch (UltronException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            //Initialise the blank arraylist"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            this.taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Create new instance of UI"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Mainloop to run Ultron."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public void mainLoop() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        //Print the intro"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        ui.printIntro();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        //Initialise the exit boolean"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                String fullCommand \u003d ui.getInput();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                Command c \u003d Parser.parseCommand(fullCommand);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                c.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            } catch (UltronException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jh123x"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * Entry point of the code."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     * @param args Command line arguments provided"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jh123x"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public static void main(final String[] args) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        //Create a new duke"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        Ultron ultron \u003d new Ultron(\"data/data.txt\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        //Run the main loop"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        ultron.mainLoop();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jh123x": 70,
      "-": 17
    }
  },
  {
    "path": "src/test/java/Ultron/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jh123x"
        },
        "content": "package ultron;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.commands.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.commands.DeleteCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.commands.DoneCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.commands.HelpCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.commands.ListCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.commands.TaskAllocator;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import ultron.exceptions.UltronException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jh123x"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public void checkByeInputTest() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            assert Parser.parseCommand(\"bye\") instanceof ByeCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        } catch (UltronException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public void checkListInputTest() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            assert Parser.parseCommand(\"list\") instanceof ListCommand;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        } catch (UltronException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public void checkHelpInputTest() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            assert Parser.parseCommand(\"help\") instanceof HelpCommand;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        } catch (UltronException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public void checkDeleteInputTest() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            assert Parser.parseCommand(\"delete\") instanceof DeleteCommand;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        } catch (UltronException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public void checkDoneInputTest() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            assert Parser.parseCommand(\"done\") instanceof DoneCommand;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        } catch (UltronException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public void checkTodoInputTest() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            assert Parser.parseCommand(\"todo\") instanceof TaskAllocator;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        } catch (UltronException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public void checkDeadlineInputTest() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            assert Parser.parseCommand(\"deadline\") instanceof TaskAllocator;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        } catch (UltronException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public void checkEventInputTest() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            assert Parser.parseCommand(\"event\") instanceof TaskAllocator;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        } catch (UltronException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jh123x"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jh123x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jh123x": 86
    }
  },
  {
    "path": "src/test/java/Ultron/Tasks/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jh123x"
        },
        "content": "package ultron.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jh123x"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jh123x"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public void getTypeTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        assertEquals(\"DEADLINE\", new Deadline(\"deadline\", \"12pm\").getType());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public void getDateTestString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        assertEquals(\"12pm\", new Deadline(\"hello\", \"12pm\").getDate());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public void getDateTestDate() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        assertEquals(\"02-02-2002 1800\", new Deadline(\"hello\", \"02-02-2002 1800\").getDate());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public void getCommandTestString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        assertEquals(\"hello /by 12pm\", new Deadline(\"hello\", \"12pm\").getCommand());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public void getCommandTestDate() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        assertEquals(\"hello /by 02-02-2002 1800\", new Deadline(\"hello\", \"02-02-2002 1800\").getCommand());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    public void parseCommandTest() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        Task deadline \u003d Deadline.parseCommand(\"hello /by 02-02-2002 1800\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        assertEquals(\"hello\", deadline.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        assertEquals(\"DEADLINE\", deadline.getType());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        assertEquals(\"✘\", deadline.getStatusIcon());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jh123x"
        },
        "content": "        assertEquals(\"[D][✘] hello (by: 02-02-2002 1800)\", deadline.toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jh123x"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jh123x"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jh123x": 43
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jh123x"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jh123x"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jh123x"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jh123x"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jh123x"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jh123x"
        },
        "content": "done hello"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jh123x"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jh123x"
        },
        "content": "todo"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jh123x"
        },
        "content": "todo return book"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jh123x"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jh123x"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jh123x"
        },
        "content": "event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jh123x"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jh123x"
        },
        "content": "find book"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jh123x": 14,
      "-": 2
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jh123x"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jh123x"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jh123x"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jh123x"
        },
        "content": "java -classpath ..\\bin ultron.Ultron \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jh123x"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jh123x"
        },
        "content": "pause"
      }
    ],
    "authorContributionMap": {
      "jh123x": 6,
      "-": 19
    }
  }
]
