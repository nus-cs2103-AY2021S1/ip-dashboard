[
  {
    "path": "SAVED-TASKS.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "D | 0 | return book | 06-06-2020 0900"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "E | 0 | project meeting | 06-08-2020 1400"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "T | 1 | join sports club"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "T | 0 | borrow book"
      }
    ],
    "authorContributionMap": {
      "GabriellaTeh": 4
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    implementation \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 46,
      "GabriellaTeh": 15
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": " * Deadline class that represents a Task with a deadline. Extends from the Task class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    LocalDateTime deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Constructor that creates a Deadline object that has a description of the"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * task, the date and the time of the deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param description a String representing the description of the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param deadline a LocalDateTime representing the date and the time of the deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @throws DateTimeParseException"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public Deadline(String description, String deadline) throws DateTimeParseException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.deadline \u003d LocalDateTime.parse(deadline, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Constructor that creates a Deadline object that has a description of the"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * task, the date and the time of the deadline, and whether the task has been completed."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param description a String representing the description of the task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param deadline a LocalDateTime representing the date and the time of the deadline."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param isDone boolean representing whether the task has been completed."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public Deadline(String description, String deadline, Boolean isDone) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.deadline \u003d LocalDateTime.parse(deadline, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return \"[D]\" + this.getIcon() + description + \" (by: \" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                this.deadline.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))+ \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Returns a String formatted to how a Deadline should be saved in the associated save file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @return a formatted String to be written to the save file."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return String.format(\"D | %s | %s | %s\","
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                super.doneString(), this.description, this.deadline.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\")));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabriellaTeh": 50
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabriellaTeh": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": " * Duke is a bot that functions as a user\u0027s task manager."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Constructor that creates a Duke object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param file the file task sessions will be saved in"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public Duke(String file) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.storage \u003d new Storage(file);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.parser \u003d new Parser(ui, taskList, storage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        storage.load(taskList, ui);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.storage \u003d new Storage(\".//SAVED-TASKS.txt\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.parser \u003d new Parser(ui, taskList, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        storage.load(taskList, ui);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return parser.action(input);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "GabriellaTeh": 34
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabriellaTeh": 7
    }
  },
  {
    "path": "src/main/java/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": " * Event class that represents a Task that is an event. Extends from the Task class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    LocalDateTime time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Overloaded constructor that creates an Event object that has description of the"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * task, the date and the time of the event, and whether the task has been completed."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param description a String representing the description of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param time a LocalDateTime representing the date and time of the event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @throws DateTimeParseException"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public Events(String description, String time) throws DateTimeParseException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.time \u003d LocalDateTime.parse(time, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Overloaded constructor that creates an Event object that has description of the"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * task, the date and the time of the event, and whether the task has been completed."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param description a String representing the description of the task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param time a LocalDateTime representing the date and time of the event."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param isDone a boolean representing whether the task has been completed."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public Events(String description, String time, Boolean isDone) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.time \u003d LocalDateTime.parse(time, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return \"[E]\" + this.getIcon() + description + \" (at: \" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                this.time.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\")) + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return String.format(\"E | %s | %s | %s\","
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                super.doneString(), this.description, this.time.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\")));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabriellaTeh": 48
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabriellaTeh": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            stage.setTitle(\"Chris Hemsworth bot\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabriellaTeh": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/daUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/daDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        printToUser(Ui.printWelcome());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public void setDuke(Duke duke) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.duke \u003d duke;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            closeStage();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    private void printToUser(String message) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                DialogBox.getDukeDialog(message, dukeImage)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    void closeStage() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        Stage stage \u003d (Stage) userInput.getScene().getWindow();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        stage.close();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabriellaTeh": 68
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import com.sun.java.accessibility.util.GUIInitializedListener;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": " * Parser class that deals with loading tasks from the file and"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": " * saving tasks in the file."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public Parser(Ui ui, TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Evaluates the syntax of the input command and executes it,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * throwing a DukeException if the syntax is correct."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param input the user input"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public String action(String input) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        String result;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                result \u003d Ui.printBye();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                result \u003d ui.printList(taskList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                String[] number \u003d input.split(\"done \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                int num \u003d Integer.parseInt(number[1]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                Task task \u003d taskList.getTask(num);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                storage.saveTasks(taskList, ui);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                result \u003d ui.printDone(taskList.getTask(num));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                String[] number \u003d input.split(\"delete \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                int num \u003d Integer.parseInt(number[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                Task task \u003d taskList.getTask(num);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                taskList.deleteTask(num);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                storage.saveTasks(taskList, ui);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                result \u003d ui.printDelete(taskList, task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            } else if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                String[] array \u003d input.split(\"todo \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                if (array.length \u003c 2) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    throw new DukeException(\"The description of a todo cannot be empty!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    String des \u003d array[1];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    Task todo \u003d new ToDos(des);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    taskList.addTask(todo);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    result \u003d ui.printAdd(taskList, todo);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    storage.saveTasks(taskList, ui);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                String[] array \u003d input.split(\"deadline \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                if (array.length \u003c 2) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    throw new DukeException(\"The description of a deadline cannot be empty!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    String[] arr \u003d array[1].split(\" /by \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    String des \u003d arr[0];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    if (arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                        throw new DukeException(\"The deadline of the task cannot be empty!\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                            String due \u003d arr[1];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                            Task dl \u003d new Deadline(des, due);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                            taskList.addTask(dl);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                            result \u003d ui.printAdd(taskList, dl);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                            storage.saveTasks(taskList, ui);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                            result \u003d ui.printError(\"Please use this format: \\n\" +"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                                    \"dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                String[] array \u003d input.split(\"event \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                if (array.length \u003c 2) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    throw new DukeException(\"The description of a event cannot be empty!\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    String[] arr \u003d array[1].split(\" /at \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    String des \u003d arr[0];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    if (arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                        throw new DukeException(\"The deadline of the event cannot be empty!\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                            String due \u003d arr[1];"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                            Task event \u003d new Events(des, due);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                            taskList.addTask(event);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                            result \u003d ui.printAdd(taskList, event);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                            storage.saveTasks(taskList, ui);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                            result \u003d ui.printError(\"Please use this format: \\n\" +"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                                        \"dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            } else if (input.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    String word \u003d input.split(\"find \")[1];"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    result \u003d ui.find(word, taskList);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            } else{"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            result \u003d ui.printDukeError(e);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabriellaTeh": 116
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": " * Storage class that handles the reading and writing process from a designated text file,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": " * referred to as a save file."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public final String file;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Constructor that creates a Storage object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param file the file task sessions will be saved in."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public Storage(String file) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.file \u003d file;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Writes the current TaskList to a save file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param taskList TaskList containing Tasks to write."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param ui the Ui associated to the current Duke object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public void saveTasks(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        File savedFile \u003d new File(file);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        boolean exists \u003d savedFile.exists();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            if (exists) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                StringBuilder tasks \u003d new StringBuilder();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    Task task \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    tasks.append(task.toSaveString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                    tasks.append(\"\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                writer.write(tasks.toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                writer.close();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                boolean created \u003d savedFile.createNewFile();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                ui.printHasCreated(created);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                saveTasks(taskList, ui);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                System.out.println(\"File does not exist!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            ui.printIOError(e);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Reads the save file and returns the taskList in it. Throws a DukeException"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * if the file is not found and proceeds to create one, or if a file cannot be created."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param taskList the taskList that is associated with the current Duke object."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param ui the ui that is associated to the current Duke object."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public void load(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(this.file));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            String line \u003d br.readLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                Task task \u003d loadTasks(line);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                taskList.addTask(task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                line \u003d br.readLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            ui.printIOError(e);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Creates a new Task depending on the type of Task read from the string."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param line String that is read."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @return a new Task."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public Task loadTasks(String line) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        String[] tasks \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        String task \u003d tasks[0];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        Boolean isDone \u003d tasks[1].equals(\"1\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        String desc \u003d tasks[2];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        String date \u003d null;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        if (tasks.length \u003e 3) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            date \u003d tasks[3];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        Task newTask \u003d null;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        if (task.equals(\"T\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            newTask \u003d new ToDos(desc, isDone);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        } else if (task.equals(\"E\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            newTask \u003d new Events(desc, date, isDone);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        } else if (task.equals(\"D\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            newTask \u003d new Deadline(desc, date, isDone);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabriellaTeh": 96
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": " * Task class that represents a task"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "         * Constructor that creates a task object that has a description of the task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "         * @param description a String representing the name of the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "         */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "         * Constructor that creates a task object that has a description of the task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "         * and a boolean that shows whether a task has been completed"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "         * @param description a String representing the name of the task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "         * @param isDone a boolean representing whether the task has been completed"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "         */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        public Task(String description, Boolean isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public String getIcon() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return (isDone ? \"[✓]\" : \"[✗]\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public void done() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        done();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public String doneString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            return \"1\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            return \"0\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public abstract String toSaveString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    ;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return String.format(\"%s %s\", this.getIcon(), description);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabriellaTeh": 58
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": " * TaskList class that stores the Tasks in the Duke object."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Overloaded constructor that creates an empty TaskList object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Overloaded constructor that takes in a List of Takes and creates a TaskList object"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * and adds Tasks in the List."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e(taskList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public static TaskList parse(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return new TaskList(tasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Adds a Task to the TaskList."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param task task the Task to be added."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Deletes a Task in the TaskList."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param num index of the Task to be deleted."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public void deleteTask(int num) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        taskList.remove(num - 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public Task getTask(int num) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return this.taskList.get(num - 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabriellaTeh": 53
    }
  },
  {
    "path": "src/main/java/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": " * ToDos class that represents a Task to be done. Extends from the Task class."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Overloaded constructor that creates a todo object that has a description of the"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param description a String representing the description of the task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public ToDos(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Constructor that creates a todo object that has a description of it."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * and whether the task has been completed."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param description a String representing the description of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param isDone a boolean representing whether the task has been completed."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public ToDos(String description, Boolean isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return String.format(\"%s%s%s\", \"[T]\", this.getIcon(), description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return String.format(\"T | %s | %s\", super.doneString(), this.description);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabriellaTeh": 33
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": " * Ui class that deals with interactions with the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public static String horizontal \u003d \"________________________________\" + \"\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Constructor that creates a Ui object, with a Scanner that reads user input."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public Ui() {}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Prints to user a welcome message when the program is run."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public static String printWelcome() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        String hello \u003d \"Hello! I\u0027m Chris\" + \"\\n\" + \"What can I do for you?\" + \"\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return horizontal + \"\\n\" + hello + horizontal;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Prints to user if the user has entered the terminate command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public static String printBye() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        String bye \u003d \"Bye. Hope to see you again soon!\" + \"\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return horizontal + \"\\n\" + bye + horizontal;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Prints to user if a Task has been marked as complete."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param task the Task that was marked as complete."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public String printDone(Task task) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return horizontal + \"Nice! I\u0027ve marked this task as done:\" + \"\\n\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                task.toString() + \"\\n\" + horizontal;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Prints to user if a Task has been successfully deleted from the TaskList"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * and the current number of Tasks in it."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param taskList the TaskList associated with the current Duke object."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param task the Task that was deleted from the TaskList."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public String printDelete(TaskList taskList, Task task) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return horizontal + \"Noted. I\u0027ve removed this task:\" + \"\\n\" +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                task.toString() + \"\\n\" + \"Now you have \" + taskList.size() + \" tasks in the list.\" +"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                \"\\n\" + horizontal;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Prints the list of tasks in the TaskList"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param taskList the TaskList associated with the current Duke object."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public String printList(TaskList taskList) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        StringBuilder tasks \u003d new StringBuilder();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        if (taskList.size() \u003e 0) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            tasks.append(horizontal + \"Here are the tasks in your list:\" + \"\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                Task task \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                tasks.append(i + \".\" + task.toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            tasks.append(\"You have no tasks mate!\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        tasks.append(horizontal);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return tasks.toString();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Prints the new Task that has been added."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param taskList the TaskList associated with the current Duke object."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param task the Task that is being added to the TaskList."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public String printAdd(TaskList taskList, Task task) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return horizontal + \"Got it. I\u0027ve added this task:\" + \"\\n\" + task.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                \"Now you have \" + taskList.size() + \" tasks in the list.\" + \"\\n\" + horizontal;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Prints to user if a DukeException has been caught, printing an error message."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param e a DukeException containing the error message."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public String printDukeError(DukeException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return e.getMessage() + \"\\n\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Prints to the user an error message when an I0Exception has been caught."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param e an IOException containing an error message."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public String printIOError(IOException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return e.getMessage() + \"\\n\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Prints a statement depending on whether the file has been successfully created."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param b a Boolean whether the file has been created."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public String printHasCreated(Boolean b) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        if (b) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            return \"New file created\" + \"\\n\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            return \"Failed to create file\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public String printError(String message) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return \"Oh no there seems to be an error\" + message;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Prints to user all the tasks that had been saved in the TaskList."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param taskList the TaskList associated with the current Duke object."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public static String printSaved(TaskList taskList) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        StringBuilder tasks \u003d new StringBuilder();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        if (taskList.size() \u003e 0) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            tasks.append(\"Here are your saved tasks: \\n\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                Task task \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                tasks.append(i + \". \" + task.toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "           tasks.append(\"You have no tasks mate.\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return tasks.toString();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * Prints to user the tasks that contain a match to the word."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param word the word that is being searched for."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     * @param taskList the TaskList associated with the current Duke object."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public String find(String word, TaskList taskList) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            Task task \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            if (task.description.contains(word)) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                list.addTask(task);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        StringBuilder tasks \u003d new StringBuilder();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        if (list.size() \u003e 0) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            tasks.append(horizontal + \"Here are the matching tasks in your list: \\n\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                tasks.append(String.format(\"%s. %s%n\", i, list.getTask(i).toString()))"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                        .append(\"\\n\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            tasks.append(\"There are no matching tasks.\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        return tasks.toString();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabriellaTeh": 159
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "GabriellaTeh": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "GabriellaTeh": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public void taskList_addTask() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        list.addTask(new ToDos(\"placeholder\", false));"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        list.addTask(new Events(\"birthday\", \"12-12-2020 1200\", true));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        assertEquals(list.size(), 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        assertEquals(list.getTask(1).toString(), \"[T][✗]placeholder\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public void taskList_addTask_deleteTask() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        list.addTask(new ToDos(\"do homework\", false));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        list.addTask(new Deadline(\"CS2103 project\", \"26-08-2020 2359\", false));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        list.addTask(new Events(\"Friend Outing\", \"27-08-2020 2000\", false));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        list.deleteTask(3);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        assertEquals(list.size(), 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        assertEquals(list.getTask(2).toString(), \"[D][✗]CS2103 project (by: 26-08-2020 2359)\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    public void taskList_addTask_saveString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        list.addTask(new ToDos(\"do homework\", false));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        list.addTask(new Deadline(\"CS2103 project\", \"26-08-2020 2359\", false));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        list.addTask(new Events(\"Friend Outing\", \"27-08-2020 2000\", false));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        assertEquals(list.size(), 3);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "        assertEquals(list.getTask(3).toSaveString(), \"E | 0 | Friend Outing | 27-08-2020 2000\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabriellaTeh": 34
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "deadline return book /by 06-06-2020 0900"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "event project meeting /at 06-08-2020 1400"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "GabriellaTeh": 9
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabriellaTeh"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 32,
      "GabriellaTeh": 2
    }
  }
]
