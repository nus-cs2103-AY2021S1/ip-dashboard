[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "# cs2103t Individual Project"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": "This is a project under the module CS2103t taken in the National University of Singapore."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": "## Running the Project"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "todoge"
        },
        "content": "\u003cstrong\u003eUPDATE: Deprecated method 01/09/2020: King now runs on javaFXML GUI.\u003c/strong\u003e\\"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "todoge"
        },
        "content": "Simply download JAR file in the latest release and run on your local system.\\"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "todoge"
        },
        "content": "The program requires minimum `Java SDK 11`. To run the JAR file simply run `java -jar ip.jar`. \\"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "todoge"
        },
        "content": "Refer to the fork for the project template."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "todoge"
        },
        "content": "   ____  __.__"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "todoge"
        },
        "content": "  |    |/ _|__| ____    ____"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "todoge"
        },
        "content": "  |      \u003c |  |/    \\  / ___\\"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "todoge"
        },
        "content": "  |    |  \\|  |   |  \\/ /_/  \u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "todoge"
        },
        "content": "  |____|__ \\__|___|  /\\___  /"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "todoge"
        },
        "content": "          \\/       \\//_____/"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "todoge"
        },
        "content": "  "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "todoge"
        },
        "content": "  Hello! I\u0027m King"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "todoge"
        },
        "content": "  What can I do for you?"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "todoge"
        },
        "content": "\u003cstrong\u003eGUI on JavaFXML 01/09/2020: \u003c/strong\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "todoge"
        },
        "content": "\u003cbr\u003e `javaFX` must also be downloaded on local system. Then, fork repo and run `king.launcher`.\\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "todoge"
        },
        "content": "On running the application successfully, you should see the pop-up window."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "todoge"
        },
        "content": "![GUI v0.1](data/images/king_gui_v0.1.PNG)"
      }
    ],
    "authorContributionMap": {
      "todoge": 20,
      "-": 5
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "todoge"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "todoge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "todoge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "todoge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "todoge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "todoge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "todoge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "todoge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "todoge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "todoge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "todoge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "todoge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "todoge"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "todoge"
        },
        "content": "    mainClassName \u003d \"king.King\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "todoge"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "todoge": 17,
      "-": 44
    }
  },
  {
    "path": "data/king.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "E@0@meeting@2pm"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": "T@1@there was a boy in the blue town. the blue town was blue but the people were red. There was a girl in green but her face was red. The green girl with a red face was called reen."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": "T@0@running"
      }
    ],
    "authorContributionMap": {
      "todoge": 3
    }
  },
  {
    "path": "data/test/parser/parserTest.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "E@0@test@2pm"
      }
    ],
    "authorContributionMap": {
      "todoge": 1
    }
  },
  {
    "path": "data/test/parserTest.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "E@0@test@2pm"
      }
    ],
    "authorContributionMap": {
      "todoge": 1
    }
  },
  {
    "path": "src/main/java/king/King.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": " * King is an individual project under cs2103t in the"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": " * National University of Singapore."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "todoge"
        },
        "content": " *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": " * @author Jun Siang."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "todoge"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "todoge"
        },
        "content": "package king;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "todoge"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "todoge"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "todoge"
        },
        "content": "import ui.UI;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "todoge"
        },
        "content": "public class King {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "todoge"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "todoge"
        },
        "content": "    private final Parser parser;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "todoge"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Creates the asset needed for the King program in the given file path."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param filepath file path to create the asset file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "todoge"
        },
        "content": "    King(String filepath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "todoge"
        },
        "content": "        storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "todoge"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "todoge"
        },
        "content": "        taskList.addAll(storage.load());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "todoge"
        },
        "content": "        this.parser \u003d new Parser(storage, taskList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Returns a response from King given an input"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * from the user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param input input from the user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @see Parser"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "todoge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "todoge"
        },
        "content": "            return parser.parse(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } catch (KingException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "todoge"
        },
        "content": "            return UI.kingChatBox(e.message);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Run the King program. King replies to the user."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Used to run the King Program on the terminal."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @deprecated Deprecated method since JavaFx was implemented."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "todoge"
        },
        "content": "    @Deprecated"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "todoge"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "todoge"
        },
        "content": "        String phrase;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "todoge"
        },
        "content": "        while (scanner.hasNextLine() \u0026\u0026 !(phrase \u003d scanner.nextLine()).equals(\"bye\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "todoge"
        },
        "content": "            System.out.println(getResponse(phrase));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "todoge"
        },
        "content": "        System.out.print(UI.kingChatBox(\"Bye! Hope to see you again soon.\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "todoge"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "todoge": 63,
      "-": 1
    }
  },
  {
    "path": "src/main/java/king/KingException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "package king;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": "public class KingException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": "    final String message;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "todoge"
        },
        "content": "    final Throwable error;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Create a KingException generated from the King Program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param message message for the exception generated."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param error   throwable error resulting in KingException generated."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @return KingException"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "todoge"
        },
        "content": "    KingException(String message, Throwable error) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "todoge"
        },
        "content": "        this.error \u003d error;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "todoge"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "todoge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "todoge": 19
    }
  },
  {
    "path": "src/main/java/king/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": " * Launch the King program using GUI."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": " * This is done using the JavaFx module."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "todoge"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "todoge"
        },
        "content": "package king;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "todoge"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "todoge"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "todoge"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "todoge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "todoge": 15
    }
  },
  {
    "path": "src/main/java/king/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": " * Serves as a bridge between the launcher and the"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "todoge"
        },
        "content": " * King Program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "todoge"
        },
        "content": " * Sets the scenes."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "todoge"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "todoge"
        },
        "content": "package king;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "todoge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "todoge"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "todoge"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "todoge"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "todoge"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "todoge"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "todoge"
        },
        "content": "import ui.controllers.MainWindow;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "todoge"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "todoge"
        },
        "content": "    private King king \u003d new King(\"data/king.txt\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "todoge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "todoge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "todoge"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "todoge"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "todoge"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "todoge"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "todoge"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setKing(king);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "todoge"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "todoge"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "todoge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "todoge": 36
    }
  },
  {
    "path": "src/main/java/king/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": " * Parser class handles all the commands from the King Program"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": " * and returns a reply from the commands."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "todoge"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": "package king;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "todoge"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "todoge"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "todoge"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "todoge"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "todoge"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "todoge"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "todoge"
        },
        "content": "import tasks.ToDo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "todoge"
        },
        "content": "import ui.UI;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "todoge"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "todoge"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "todoge"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Parse the commands from the King Program"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param storage  storage to save the commands to."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param taskList taskList to be manipulated from the commands."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @return Parser parser to parse commands."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "todoge"
        },
        "content": "    Parser(Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "todoge"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "todoge"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Parse the commands from the King Program."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * The parser automatically modifies the asset file in the"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * storage and the taskList according to the commands"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * given by the user."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param phrase the command given by the user."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @return String the reply from the command given."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @throws KingException kingException is thrown when phrase is invalid."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public String parse(String phrase) throws KingException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "todoge"
        },
        "content": "        int phraseLength \u003d phrase.length();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "todoge"
        },
        "content": "        String reply;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "todoge"
        },
        "content": "        if (phrase.equals(\"bye\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "todoge"
        },
        "content": "            return UI.kingChatBox(\"Bye! Come back soon.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } else if (phrase.equals(\"list\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "todoge"
        },
        "content": "            return UI.showTaskList(taskList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } else if (phrase.equals(\"clear list\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "todoge"
        },
        "content": "            taskList.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "todoge"
        },
        "content": "            reply \u003d UI.kingChatBox(\"I have cleared the list!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } else if ((phrase.startsWith(\"done\") \u0026\u0026 phraseLength \u003d\u003d 4) || phrase.startsWith(\"done \")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "todoge"
        },
        "content": "            String stringItem \u003d phrase.substring(4).trim();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "todoge"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "todoge"
        },
        "content": "                int itemNo \u003d Integer.parseInt(stringItem) - 1;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "todoge"
        },
        "content": "                Task item \u003d taskList.get(itemNo);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "todoge"
        },
        "content": "                item.markAsDone();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "todoge"
        },
        "content": "                reply \u003d UI.doneChatBox(item.toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "todoge"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "todoge"
        },
        "content": "                throw new KingException(\"Item \" + stringItem + \" not found.\", e);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "todoge"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "todoge"
        },
        "content": "                throw (stringItem.isEmpty())"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "todoge"
        },
        "content": "                        ? new KingException(\"Done must be followed by item number\", e)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "todoge"
        },
        "content": "                        : new KingException(stringItem + \" is not a valid item number!\", e);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "todoge"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "todoge"
        },
        "content": "                throw new KingException(\"Please follow the syntax: done \u003citem no.\u003e\", e);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "todoge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } else if (phrase.startsWith(\"todo \") || (phrase.startsWith(\"todo\") \u0026\u0026 phraseLength \u003d\u003d 4)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "todoge"
        },
        "content": "            String item;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "todoge"
        },
        "content": "            if (phraseLength !\u003d 4 \u0026\u0026 (item \u003d phrase.substring(5).trim()).length() !\u003d 0) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "todoge"
        },
        "content": "                ToDo todo \u003d new ToDo(item);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "todoge"
        },
        "content": "                taskList.add(todo);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "todoge"
        },
        "content": "                reply \u003d UI.addItemChatBox(todo.toString(), taskList.size());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "todoge"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "todoge"
        },
        "content": "                throw new KingException(\"Todo cannot be empty!\", new Throwable(\"empty field\"));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "todoge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } else if (phrase.startsWith(\"event \") || (phrase.startsWith(\"event\") \u0026\u0026 phraseLength \u003d\u003d 5)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "todoge"
        },
        "content": "            String item \u003d phrase.substring(5).trim();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "todoge"
        },
        "content": "            String[] tokens \u003d item.split(\" /at \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "todoge"
        },
        "content": "            if (tokens.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "todoge"
        },
        "content": "                Event event \u003d new Event(tokens[0], tokens[1]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "todoge"
        },
        "content": "                taskList.add(event);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "todoge"
        },
        "content": "                reply \u003d UI.addItemChatBox(event.toString(), taskList.size());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "todoge"
        },
        "content": "            } else if (tokens.length \u003c 2) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "todoge"
        },
        "content": "                throw new KingException(\"Event description and time CANNOT be empty!\", new Throwable(\"empty field\"));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "todoge"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "todoge"
        },
        "content": "                throw new KingException(\"Follow the syntax event: \u003cdescription\u003e /at \u003ctime\u003e\", new Throwable("
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "todoge"
        },
        "content": "                        \"bad event\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "todoge"
        },
        "content": "                ));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "todoge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } else if (phrase.startsWith(\"deadline \") || (phrase.startsWith(\"deadline\") \u0026\u0026 phraseLength \u003d\u003d 8)) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "todoge"
        },
        "content": "            String item \u003d phrase.substring(8).trim();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "todoge"
        },
        "content": "            String[] tokens \u003d item.split(\" /by \");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "todoge"
        },
        "content": "            if (tokens.length !\u003d 2) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "todoge"
        },
        "content": "                throw new KingException(\"Follow the syntax: deadline \u003cdescription\u003e /by \u003cdate\u003e \u003ctime\u003e\", new Throwable("
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "todoge"
        },
        "content": "                        \"bad deadline\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "todoge"
        },
        "content": "                ));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "todoge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "todoge"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "todoge"
        },
        "content": "                LocalDateTime datetime \u003d stringToLocalDateTime(tokens[1]);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "todoge"
        },
        "content": "                Deadline deadline \u003d new Deadline(tokens[0], datetime);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "todoge"
        },
        "content": "                taskList.add(deadline);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "todoge"
        },
        "content": "                reply \u003d UI.addItemChatBox(deadline.toString(), taskList.size());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "todoge"
        },
        "content": "            } catch (KingException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "todoge"
        },
        "content": "                throw e;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "todoge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } else if (phrase.startsWith(\"delete \") || (phrase.startsWith(\"delete\") \u0026\u0026 phraseLength \u003d\u003d 6)) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "todoge"
        },
        "content": "            String stringItem \u003d phrase.substring(6).trim();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "todoge"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "todoge"
        },
        "content": "                int itemNo \u003d Integer.parseInt(stringItem) - 1;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "todoge"
        },
        "content": "                Task item \u003d taskList.get(itemNo);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "todoge"
        },
        "content": "                taskList.delete(itemNo);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "todoge"
        },
        "content": "                reply \u003d UI.deleteItemChatBox(item.toString(), taskList.size());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "todoge"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "todoge"
        },
        "content": "                throw new KingException(\"Item \" + stringItem + \" not found.\", e);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "todoge"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "todoge"
        },
        "content": "                throw (stringItem.isEmpty())"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "todoge"
        },
        "content": "                        ? new KingException(\"delete must be followed by item number\", e)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "todoge"
        },
        "content": "                        : new KingException(stringItem + \" is not a valid item number\", e);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "todoge"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "todoge"
        },
        "content": "                throw new KingException(\"Please follow the syntax: delete \u003citem no.\u003e\", e);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "todoge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } else if (phrase.startsWith(\"find \") || (phrase.startsWith(\"find\") \u0026\u0026 phraseLength \u003d\u003d 4)) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "todoge"
        },
        "content": "            String[] keywords \u003d phrase.substring(4).trim().split(\" \");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "todoge"
        },
        "content": "            return UI.showFoundItems(storage.find(keywords));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "todoge"
        },
        "content": "            throw new KingException(\"I don\u0027t understand you!\", new Throwable(\"invalid command\"));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "todoge"
        },
        "content": "        storage.persistTaskList(taskList);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "todoge"
        },
        "content": "    // takes a Date Time string and returns a LocalDateTime"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "todoge"
        },
        "content": "    private LocalDateTime stringToLocalDateTime(String localDateTime) throws KingException {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "todoge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "todoge"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "todoge"
        },
        "content": "            return LocalDateTime.parse(localDateTime, formatter);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "todoge"
        },
        "content": "            throw new KingException(\"Date and Time must be formatted as /by \u003cdate\u003e \u003ctime\u003e. E.g. 2/1/2020 1400\","
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    new Throwable(\"bad datetime\"));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "todoge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "todoge": 145
    }
  },
  {
    "path": "src/main/java/king/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": " * Handles all Files input-output related functions."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "todoge"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": "package king;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "todoge"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "todoge"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "todoge"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "todoge"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "todoge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "todoge"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "todoge"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "todoge"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "todoge"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "todoge"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "todoge"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "todoge"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "todoge"
        },
        "content": "import tasks.ToDo;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "todoge"
        },
        "content": "import ui.UI;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "todoge"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public final String filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "todoge"
        },
        "content": "    private File data;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Creates the directories and the file given the filepath"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * if file does not exists. Then, returns Storage which handles"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * the manipulation of asset in the filepath."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param filepath file path for an existing asset or to initialise a new asset."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "todoge"
        },
        "content": "    Storage(String filepath) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "todoge"
        },
        "content": "        this.filePath \u003d filepath;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "todoge"
        },
        "content": "        String[] tokens \u003d filepath.split(\"/\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "todoge"
        },
        "content": "        int pathLength \u003d tokens.length;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "todoge"
        },
        "content": "        if (pathLength \u003d\u003d 0) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "todoge"
        },
        "content": "            System.out.println(UI.errorBox(\"Invalid file path\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "todoge"
        },
        "content": "            String path \u003d tokens[0];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "todoge"
        },
        "content": "            for (int i \u003d 1; i \u003c pathLength; i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "todoge"
        },
        "content": "                File directory \u003d new File(path);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "todoge"
        },
        "content": "                if (!directory.exists()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    directory.mkdir();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "todoge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "todoge"
        },
        "content": "                path +\u003d \"/\" + tokens[i];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "todoge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "todoge"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "todoge"
        },
        "content": "                data \u003d new File(path);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "todoge"
        },
        "content": "                data.createNewFile();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "todoge"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "todoge"
        },
        "content": "                System.out.println(UI.errorBox(\"Error occurred while loading asset.\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "todoge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Storage read the asset in the filepath and loads the"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Tasks in the asset into an ArrayList."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @return ArrayList list of tasks"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "todoge"
        },
        "content": "        ArrayList\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "todoge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "todoge"
        },
        "content": "            FileReader input \u003d new FileReader(data.getAbsoluteFile());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "todoge"
        },
        "content": "            Scanner scanner \u003d new Scanner(input);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "todoge"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "todoge"
        },
        "content": "                items.add(dataToTask(scanner.nextLine()));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "todoge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "todoge"
        },
        "content": "            input.close();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "todoge"
        },
        "content": "            scanner.close();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "todoge"
        },
        "content": "            System.out.println(UI.errorBox(\"Error occurred while reading asset.\"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "todoge"
        },
        "content": "            System.out.println(UI.errorBox(\"Asset file is corrupted.\"));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return items;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Reads the tasks in the taskList and updates the tasks in the"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * filepath."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @return boolean returns true if taskList is successfully persisted."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public boolean persistTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "todoge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "todoge"
        },
        "content": "            BufferedWriter output \u003d new BufferedWriter(new FileWriter(filePath));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "todoge"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "todoge"
        },
        "content": "                Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "todoge"
        },
        "content": "                String isLoaded \u003d task.isDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "todoge"
        },
        "content": "                if (task.getClass().isAssignableFrom(ToDo.class)) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    String s \u003d \"T@\" + isLoaded + \"@\" + task.getDescription();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    output.write(s);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "todoge"
        },
        "content": "                } else if (task.getClass().isAssignableFrom(Event.class)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    String s \u003d \"E@\" + isLoaded + \"@\" + task.getDescription() + \"@\" + ((Event) task).getTime();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    output.write(s);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "todoge"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    String s \u003d \"D@\" + isLoaded + \"@\" + task.getDescription() + \"@\" + ((Deadline) task).getBy();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    output.write(s);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "todoge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "todoge"
        },
        "content": "                output.newLine();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "todoge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "todoge"
        },
        "content": "            output.close();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "todoge"
        },
        "content": "            System.out.println(UI.errorBox(\"Error was encountered when saving list to asset.\"));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "todoge"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "todoge"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Finds a keyword in the asset file"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * and returns the corresponding tasks found in"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * a taskList."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param keywords keyword to search for."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @return TaskList containing the tasks with the keywords"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public TaskList find(String ... keywords) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "todoge"
        },
        "content": "        TaskList tasksFound \u003d new TaskList();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "todoge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "todoge"
        },
        "content": "            Scanner scanner \u003d new Scanner(data);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "todoge"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "todoge"
        },
        "content": "                String item \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "todoge"
        },
        "content": "                for (String keyword : keywords) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    if (item.contains(keyword)) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "todoge"
        },
        "content": "                        tasksFound.add(dataToTask(item));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "todoge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "todoge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "todoge"
        },
        "content": "            System.out.println(UI.errorBox(\"Error was encountered when reading asset file.\"));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return tasksFound;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Converts data to Task."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param data data stored in the asset file."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @return Task task created from data."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "todoge"
        },
        "content": "    private Task dataToTask(String data) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "todoge"
        },
        "content": "        String[] dataTokens \u003d data.split(\"@\", 4);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "todoge"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "todoge"
        },
        "content": "        switch (dataTokens[0]) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "todoge"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "todoge"
        },
        "content": "            task \u003d new ToDo(dataTokens[2]);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "todoge"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "todoge"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "todoge"
        },
        "content": "            task \u003d new Deadline(dataTokens[2], LocalDateTime.parse(dataTokens[3]));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "todoge"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "todoge"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "todoge"
        },
        "content": "            task \u003d new Event(dataTokens[2], dataTokens[3]);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "todoge"
        },
        "content": "        if (dataTokens[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "todoge"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "todoge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "todoge": 167
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "todoge"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "todoge"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "todoge"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Returns a deadline task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param description description of the deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param by          the date and time of the deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @see Task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "todoge"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "todoge"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Returns the date and time of the deadline."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @return LocalDateTime."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @see LocalDateTime"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public LocalDateTime getBy() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "todoge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "todoge"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"EEEE, MMM d, yyyy h.mm a\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + formatter.format(by) + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "todoge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "todoge": 36
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "todoge"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Returns an Event task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param description description of the event."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param time        time of the event."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @see Task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "todoge"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "todoge"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Returns the time of the event."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @return String time of event."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "todoge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "todoge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "todoge": 31
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": " * Creates an unspecified Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "todoge"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "todoge"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "todoge"
        },
        "content": "    protected TaskStates state;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "todoge"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Returns the task created."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "todoge"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "todoge"
        },
        "content": "        state \u003d TaskStates.UNDONE;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "todoge"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @return String description of task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Mark the task as Done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "todoge"
        },
        "content": "        state \u003d TaskStates.DONE;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Checks if a task is done."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @return boolean true if task is done."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return state \u003d\u003d TaskStates.DONE;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Returns the icon for the status of the task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @return String icon for task status."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return (state \u003d\u003d TaskStates.DONE ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "todoge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "todoge"
        },
        "content": "        switch (state) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "todoge"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "todoge"
        },
        "content": "            return \"[\\u2713] \" + description;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "todoge"
        },
        "content": "        case UNDONE:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "todoge"
        },
        "content": "            return \"[\\u2718] \" + description;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "todoge"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "todoge"
        },
        "content": "            return description;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "todoge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "todoge": 65
    }
  },
  {
    "path": "src/main/java/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "todoge"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "todoge"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "todoge"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Clears the task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public void clear() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "todoge"
        },
        "content": "        taskList.clear();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Returns the size of task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @return int size of task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Adds all items in a given list to the task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param list list of objects to be added to the task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @return boolean true if added successfully."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public boolean addAll(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return taskList.addAll(list);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Add a task to the task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param task task to be added."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @return boolean true if added successfully."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public boolean add(Task task) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return taskList.add(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Get an item in the task list in the specified position."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param index index of item."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @return task task in the given index."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @see Task"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Deletes a task in the given index."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param position position of the task to be deleted."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @return Task task deleted in the position."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @see Task"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public Task delete(int position) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return taskList.remove(position);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "todoge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "todoge": 67
    }
  },
  {
    "path": "src/main/java/tasks/TaskStates.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "todoge"
        },
        "content": " * State of the tasks"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "todoge"
        },
        "content": "public enum TaskStates {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "todoge"
        },
        "content": "    DONE, UNDONE"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "todoge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "todoge": 8
    }
  },
  {
    "path": "src/main/java/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Returns a ToDo task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param description description of todo."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @see Task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "todoge"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "todoge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "todoge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "todoge": 19
    }
  },
  {
    "path": "src/main/java/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "todoge"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "todoge"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "todoge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "todoge"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "todoge"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "todoge"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "todoge"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "todoge"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "todoge"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "todoge"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "todoge"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "todoge"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "todoge"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "todoge"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "todoge"
        },
        "content": "import ui.controllers.MainWindow;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "todoge"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "todoge"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "todoge"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "todoge"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "todoge"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "todoge"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "todoge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "todoge"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "todoge"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "todoge"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "todoge"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "todoge"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "todoge"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "todoge"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public static DialogBox getKingDialog(String text, Image img) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "todoge"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "todoge"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "todoge"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "todoge"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "todoge"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "todoge"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "todoge"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "todoge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "todoge": 62
    }
  },
  {
    "path": "src/main/java/ui/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": " * Handles all the UI design of the replies generated by King."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": " * The text decorations are all handled by the UI."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "todoge"
        },
        "content": " * Long texts are automatically wrapped by the UI and texts"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": " * are wrapped with a buffer to maintain the words in the text."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "todoge"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "todoge"
        },
        "content": " * @author jun siang"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "todoge"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "todoge"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "todoge"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "todoge"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "todoge"
        },
        "content": "    // maximum number of characters across a screen"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public static final int CHAT_WIDTH \u003d 35;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "todoge"
        },
        "content": "    // Buffer to wrap text to the next line if the text if too long."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "todoge"
        },
        "content": "    // This buffer helps to keep words intact while wrapping the text"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "todoge"
        },
        "content": "    // to the next line."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public static final int BUFFER \u003d CHAT_WIDTH - 6;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Returns the Welcome message and logo."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @return String welcome message."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public static String welcome() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "todoge"
        },
        "content": "        String logo \u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "todoge"
        },
        "content": "                \" ____  __.__\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "todoge"
        },
        "content": "                        + \"|    |/ _|__| ____    ____\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "todoge"
        },
        "content": "                        + \"|      \u003c |  |/    \\\\  / ___\\\\\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "todoge"
        },
        "content": "                        + \"|    |  \\\\|  |   |  \\\\/ /_/  \u003e\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "todoge"
        },
        "content": "                        + \"|____|__ \\\\__|___|  /\\\\___  /\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "todoge"
        },
        "content": "                        + \"        \\\\/       \\\\//_____/\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return logo + \"\\n\" + \"Hello! I\u0027m King!\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Returns a chat box for KING wrapped around a given text."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param chatContent text string."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @return String chat box around text."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @see king.King"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public static String kingChatBox(String chatContent) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return \"\\t\" + printString(\"King says\", 5, \u0027-\u0027) + \"\\n\\t\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "todoge"
        },
        "content": "                + formatStringIfLong(chatContent) + \"\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "todoge"
        },
        "content": "                + \"\\t\" + printString(\"\", CHAT_WIDTH, \u0027-\u0027) + \"\\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Returns a chat box for KING wrapped around a given text."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param chatContent text string."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @return String chat box around text."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @see king.King"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public static String userChatBox(String chatContent) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return \"\\t\" + printString(\"\", CHAT_WIDTH, \u0027\u003d\u0027) + \"\\n\\t\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "todoge"
        },
        "content": "                + formatStringIfLong(chatContent) + \"\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "todoge"
        },
        "content": "                + \"\\t\" + printString(\"\", CHAT_WIDTH, \u0027\u003d\u0027) + \"\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Returns an error box wrapped around an error message."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param error error message."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @return String error box around error message."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public static String errorBox(String error) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return printString(\"Error Encountered\", 4, \u0027\u003d\u0027) + \"\\n\\t\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "todoge"
        },
        "content": "                + formatStringIfLong(error) + \"\\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "todoge"
        },
        "content": "                + printString(\"\", CHAT_WIDTH, \u0027\u003d\u0027) + \"\\n\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Returns a chat box wrap around a message when the user successfully adds an item."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param chatContent text String."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param numOfItems  number of items in the new TaskList."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @return String chat box after adding item."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public static String addItemChatBox(String chatContent, int numOfItems) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return kingChatBox(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "todoge"
        },
        "content": "                + \"\\t\\t\" + chatContent"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "todoge"
        },
        "content": "                + \"\\n\\t Now you have \" + numOfItems + \" tasks in the list.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Returns a chat box wrap around a message when the user successfully deletes an item."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param chatContent    text String."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param numOfItemsLeft number of items left in the new TaskList."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @return String chat box around text."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public static String deleteItemChatBox(String chatContent, int numOfItemsLeft) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return kingChatBox(\"I have deleted the following item:\\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "todoge"
        },
        "content": "                + \"\\t\\t\" + chatContent"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "todoge"
        },
        "content": "                + \"\\n\\tYou got \" + numOfItemsLeft + \" task(s) left.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Returns a chat box wrap around a message when the user sets an item as DONE."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param chatContent text String."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @return String chat box around text."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @see tasks.Task"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public static String doneChatBox(String chatContent) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return kingChatBox(\"Nice! I\u0027ve marked this task as done:\\n\\t\\t\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "todoge"
        },
        "content": "                + chatContent"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "todoge"
        },
        "content": "        );"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Returns a formatted chat string containing the items in the TaskList."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param taskList the task list to be printed."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @return String formatted String with items in the taskList."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public static String showTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "todoge"
        },
        "content": "        StringBuilder formatted \u003d new StringBuilder();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "todoge"
        },
        "content": "        int len \u003d taskList.size();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "todoge"
        },
        "content": "        for (int number \u003d 0; number \u003c len; number++) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "todoge"
        },
        "content": "            formatted.append(\"\\n\\t  \" + (number + 1) + \". \" + taskList.get(number).toString());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return kingChatBox(\"There are \" + len + \" items in your list:\""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "todoge"
        },
        "content": "                + formatted.toString());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Returns a formatted string containing items found in the list."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @param taskList taskList of the items found."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @return String formatted printable list"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public static String showFoundItems(TaskList taskList) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "todoge"
        },
        "content": "        StringBuilder formatted \u003d new StringBuilder();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "todoge"
        },
        "content": "        int len \u003d taskList.size();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "todoge"
        },
        "content": "        for (int number \u003d 0; number \u003c len; number++) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "todoge"
        },
        "content": "            formatted.append(\"\\n\\t  \" + (number + 1) + \". \" + taskList.get(number).toString());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return kingChatBox(\"I found \" + len + \" items with the given keyword(s):\""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "todoge"
        },
        "content": "                + formatted.toString());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "todoge"
        },
        "content": "    // folds a string if it is too long to fit into the chat box"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "todoge"
        },
        "content": "    private static String formatStringIfLong(String unformattedString) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "todoge"
        },
        "content": "        int len \u003d unformattedString.length();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "todoge"
        },
        "content": "        if (len \u003e CHAT_WIDTH) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "todoge"
        },
        "content": "            StringBuilder longString \u003d new StringBuilder(unformattedString);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "todoge"
        },
        "content": "            int processedLength \u003d 0;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "todoge"
        },
        "content": "            int pos \u003d 0;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "todoge"
        },
        "content": "            while (pos !\u003d longString.length()) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "todoge"
        },
        "content": "                char c \u003d longString.charAt(pos);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "todoge"
        },
        "content": "                if (c \u003d\u003d \u0027\\n\u0027) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    processedLength \u003d 0;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    pos++;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "todoge"
        },
        "content": "                } else if (c \u003d\u003d \u0027\\t\u0027) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    pos++;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "todoge"
        },
        "content": "                } else if ((processedLength \u003e\u003d BUFFER \u0026\u0026 c \u003d\u003d \u0027 \u0027) || processedLength \u003d\u003d CHAT_WIDTH) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    longString.insert(pos, \"\\n\\t\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    pos +\u003d 4;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    processedLength \u003d 1;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "todoge"
        },
        "content": "                } else if (processedLength \u003d\u003d 0 \u0026\u0026 c \u003d\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    longString.deleteCharAt(pos);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "todoge"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    pos++;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    processedLength++;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "todoge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "todoge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "todoge"
        },
        "content": "            return longString.toString();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "todoge"
        },
        "content": "            return unformattedString;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "todoge"
        },
        "content": "    private static String printString(String text, int posOfText, char symbol) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "todoge"
        },
        "content": "        StringBuilder result \u003d new StringBuilder();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "todoge"
        },
        "content": "        for (int i \u003d 0; i \u003c posOfText; i++) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "todoge"
        },
        "content": "            result.append(symbol);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "todoge"
        },
        "content": "        result.append(text);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "todoge"
        },
        "content": "        for (int i \u003d result.length(); i \u003c CHAT_WIDTH; i++) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "todoge"
        },
        "content": "            result.append(symbol);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "todoge"
        },
        "content": "        return result.toString();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "todoge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "todoge": 193
    }
  },
  {
    "path": "src/main/java/ui/controllers/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": " * */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": "package ui.controllers;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "todoge"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "todoge"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "todoge"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "todoge"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "todoge"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "todoge"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "todoge"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "todoge"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "todoge"
        },
        "content": "import king.King;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "todoge"
        },
        "content": "import ui.DialogBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "todoge"
        },
        "content": "import ui.UI;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "todoge"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "todoge"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "todoge"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "todoge"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "todoge"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "todoge"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "todoge"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "todoge"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "todoge"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "todoge"
        },
        "content": "    private King king;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "todoge"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/gunter.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "todoge"
        },
        "content": "    private Image kingImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/king.jpg\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "todoge"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "todoge"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getKingDialog(UI.welcome(),kingImage));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "todoge"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public void setKing(King king) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "todoge"
        },
        "content": "        this.king \u003d king;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "todoge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * Takes the user input and returns a"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * dialog. Then take the input and parse it through King,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * taking the result and return a king dialog."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "todoge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "todoge"
        },
        "content": "     * @see UI"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "todoge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "todoge"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "todoge"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "todoge"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "todoge"
        },
        "content": "        String response \u003d king.getResponse(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "todoge"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "todoge"
        },
        "content": "                DialogBox.getUserDialog(UI.userChatBox(input), userImage),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "todoge"
        },
        "content": "                DialogBox.getKingDialog(response, kingImage)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "todoge"
        },
        "content": "        );"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "todoge"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "todoge"
        },
        "content": "        if (response.equals(king.getResponse(\"bye\"))) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "todoge"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "todoge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "todoge": 64
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "todoge"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "todoge"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "todoge"
        },
        "content": "\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "todoge"
        },
        "content": "         prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "todoge"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "todoge"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "todoge"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "todoge"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "todoge"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "todoge"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "todoge"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "todoge"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "todoge": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "todoge"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "todoge"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "todoge"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "todoge"
        },
        "content": "\u003cAnchorPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "todoge"
        },
        "content": "            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "todoge"
        },
        "content": "            fx:controller\u003d\"ui.controllers.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "todoge"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "todoge"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "todoge"
        },
        "content": "                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "todoge"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "todoge"
        },
        "content": "                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "todoge"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "todoge"
        },
        "content": "                    vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "todoge"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "todoge"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "todoge"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "todoge"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "todoge"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "todoge"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "todoge": 23
    }
  },
  {
    "path": "src/test/data/test/parser/parserTest.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "E@0@test@2pm"
      }
    ],
    "authorContributionMap": {
      "todoge": 1
    }
  },
  {
    "path": "src/test/data/test/storage/loadTest.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "T@1@test1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": "T@1@test2"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": "T@1@test3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "todoge"
        },
        "content": "T@1@test4"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": "T@1@test5"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "todoge"
        },
        "content": "T@1@test6"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "todoge"
        },
        "content": "T@1@test7"
      }
    ],
    "authorContributionMap": {
      "todoge": 7
    }
  },
  {
    "path": "src/test/java/king/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "package king;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "todoge"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "todoge"
        },
        "content": "import tasks.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "todoge"
        },
        "content": "import ui.UI;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "todoge"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "todoge"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "todoge"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "todoge"
        },
        "content": "    TaskList tasklist \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "todoge"
        },
        "content": "    Storage storage \u003d new Storage(\"data/test/parser/parserTest.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "todoge"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public void parseTodoTest() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "todoge"
        },
        "content": "        String testCommand \u003d \"todo read book\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "todoge"
        },
        "content": "        Parser parser \u003d new Parser(storage, tasklist);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "todoge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "todoge"
        },
        "content": "            String actual \u003d parser.parse(testCommand);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "todoge"
        },
        "content": "            ToDo todo \u003d new ToDo(\"read book\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "todoge"
        },
        "content": "            String expected \u003d UI.addItemChatBox(todo.toString(), tasklist.size());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "todoge"
        },
        "content": "            assertEquals(actual, expected);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "todoge"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "todoge"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public void parseEventTest() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "todoge"
        },
        "content": "        String testCommand \u003d \"event test /at 2pm\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "todoge"
        },
        "content": "        Parser parser \u003d new Parser(storage, tasklist);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "todoge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "todoge"
        },
        "content": "            String actual \u003d parser.parse(testCommand);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "todoge"
        },
        "content": "            Event testEvent \u003d new Event(\"test\", \"2pm\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "todoge"
        },
        "content": "            String expected \u003d UI.addItemChatBox(testEvent.toString(), tasklist.size());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "todoge"
        },
        "content": "            assertEquals(actual, expected);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "todoge"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "todoge"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "todoge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "todoge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "todoge": 44
    }
  },
  {
    "path": "src/test/java/king/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "package king;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "todoge"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "todoge"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "todoge"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "todoge"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public void loadTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "todoge"
        },
        "content": "        Storage testStorage \u003d new Storage(\"data/test/storage/loadTest.txt\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "todoge"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "todoge"
        },
        "content": "        taskList.addAll(testStorage.load());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "todoge"
        },
        "content": "        assertEquals(7, taskList.size());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "todoge"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "todoge"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "todoge"
        },
        "content": "    public void persistTaskList_invalidFilePath_false() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "todoge"
        },
        "content": "        Storage testStorage \u003d new Storage(\"data/test/storage/invalidStorage.txt\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "todoge"
        },
        "content": "        boolean actual \u003d testStorage.persistTaskList(null);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "todoge"
        },
        "content": "        assertEquals(false, actual);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "todoge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "todoge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "todoge": 24
    }
  },
  {
    "path": "text-ui-test/data/king.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "D@1@return book@2020-03-02T14:00"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": "E@0@project meeting@Mon 2-4pm"
      }
    ],
    "authorContributionMap": {
      "todoge": 2
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "todoge"
        },
        "content": "clear list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "todoge"
        },
        "content": "blah"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "todoge"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "todoge"
        },
        "content": "deadline return book /by 2/03/2020 1400"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "todoge"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "todoge"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "todoge"
        },
        "content": "todo"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "todoge"
        },
        "content": "event"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "todoge"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "todoge"
        },
        "content": "delete"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "todoge"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "todoge"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "todoge"
        },
        "content": "done 10"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "todoge"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "todoge": 14
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "todoge"
        },
        "content": "C:\\Program\\ Files\\Java\\jdk-11.0.5\\bin\\java -classpath ..\\bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "todoge": 1,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "todoge"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "todoge"
        },
        "content": "/c/Program\\ Files/Java/jdk-11.0.5/bin/java -classpath ../bin king.King \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "todoge": 2,
      "-": 36
    }
  }
]
