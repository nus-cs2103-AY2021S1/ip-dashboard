[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "printinghelloworld": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public static void invalidInput() throws DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public static void printMessage(String s) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        String output \u003d String.format(\"____________________________________________________________\\n%s\\n\" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                \"____________________________________________________________\\n\",s);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public static Task createTask(String firstWord, String input) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        if (firstWord.equals(\"todo\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            String[] arr \u003d input.split(\"todo \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            if (arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                String tsk \u003d arr[1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                newTask \u003d new ToDo(tsk);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        } else if (firstWord.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            String[] arr \u003d input.split(\"deadline \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            if (arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                String[] split \u003d input.split(\"/by \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                if (split.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    throw new DukeException(\"By when??? You didn\u0027t include your deadline.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    String deadline \u003d split[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    String tsk \u003d split[0].split(\"deadline \")[1];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    newTask \u003d new Deadline(tsk, deadline);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            String[] arr \u003d input.split(\"event \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            if (arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                String[] split \u003d input.split(\"/at \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                if (split.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    throw new DukeException(\"At??? You didn\u0027t include the time of the event.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    String at \u003d split[1];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    String tsk \u003d split[0].split(\"event \")[1];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    newTask \u003d new Event(tsk, at);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public static void mainLogic(Scanner sc, ArrayList\u003cTask\u003e lst) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            String firstWord \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            String output \u003d \"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                output +\u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                for (int i \u003d 0; i \u003c lst.size(); i ++) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    Task currentTask \u003d lst.get(i);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    String num \u003d Integer.toString(i + 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    output +\u003d \"\\n\" + num + \".\" + currentTask;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            } else if (firstWord.matches(\"done|delete\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                String[] splitted \u003d input.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                int taskIndex \u003d Integer.parseInt(splitted[1]) - 1;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                Task selectedTask \u003d lst.get(taskIndex);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                if (firstWord.equals(\"done\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    selectedTask.markAsDone();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    output +\u003d \"Nice! I\u0027ve marked this task as done:\\n  \" + selectedTask;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    lst.remove(taskIndex);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    output +\u003d \"Noted. I\u0027ve removed this task:\\n  \" + selectedTask;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                output +\u003d \"\\nNow you have \" + lst.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            } else if (firstWord.matches(\"todo|deadline|event\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                Task newTask;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    newTask \u003d createTask(firstWord, input);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    lst.add(newTask);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    output +\u003d \"Got it. I\u0027ve added this task:\\n  \" + newTask;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    output +\u003d \"\\nNow you have \" + lst.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    printMessage(output);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    output +\u003d \"☹ OOPS!!! \" + e.getMessage();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    printMessage(output);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                } finally {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    mainLogic(sc, lst);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    invalidInput();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    output +\u003d \"☹ OOPS!!! \" + e.getMessage();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    printMessage(output);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                } finally {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                    mainLogic(sc, lst);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "            printMessage(output);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        String goodbyeMessage \u003d \"Bye. Take care!\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        printMessage(goodbyeMessage);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        String greetings \u003d \"Hello! I\u0027m Duke, your personal assistant.\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        printMessage(greetings);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        ArrayList\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        mainLogic(sc, lst);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 5,
      "printinghelloworld": 118
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    DukeException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "printinghelloworld": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "printinghelloworld": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return (isDone ? \" ✓\" : \"✘\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "printinghelloworld": 27
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "printinghelloworld": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "printinghelloworld": 8
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "printinghelloworld"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "printinghelloworld": 1
    }
  }
]
