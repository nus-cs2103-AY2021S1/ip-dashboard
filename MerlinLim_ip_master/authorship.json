[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "T/true/something"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 1
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import Duke.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import Duke.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import Duke.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        //Destination"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String dest \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        //Initialise Storage"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Storage data \u003d new Storage(dest);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        // Show Welcome"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        // Start process"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        boolean exit \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            // Creates list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            TaskList list \u003d new TaskList(data.load());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            while (!exit) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                    String input \u003d ui.readLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                    Parser.Mode mode \u003d parser.mode(input);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                    if (mode \u003d\u003d Parser.Mode.TODO || mode \u003d\u003d Parser.Mode.DEADLINE || mode \u003d\u003d Parser.Mode.EVENT) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                        // Create and add task to task list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                        Task task \u003d parser.task(input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                        list.add(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                        // Write data"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                        data.addData(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                        // System output"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                        ui.showAddTask(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                        ui.showTotalTasks(list.getSize());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                    } else if (mode \u003d\u003d Parser.Mode.DONE) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                        // Mark Task as Done"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                        int order \u003d parser.order(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                        Task task \u003d list.markDone(order);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                        data.markDoneData(order, task.getParsedData());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                        ui.showDoneTask(task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                    } else if (mode \u003d\u003d Parser.Mode.DELETE) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                        // Delete Task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                        int order \u003d parser.order(input);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                        Task task \u003d list.remove(order);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                        data.deleteData(order);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                        ui.showRemovedTask(task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                        ui.showTotalTasks(list.getSize());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                    } else if (mode \u003d\u003d Parser.Mode.LIST) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                        // List all tasks"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                        System.out.print(list.listToString());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                    } else if (mode \u003d\u003d Parser.Mode.BYE) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                        // Exit now"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                        exit \u003d true;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                    ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        } catch(IOException e){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }finally{"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            ui.goodbye();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            ui.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "MerlinLim": 77
    }
  },
  {
    "path": "src/main/java/Duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    final static private DateTimeFormatter MYDATEFORMATTER \u003d"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            DateTimeFormatter.ofPattern(\"LLL dd uuuu\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    protected String byFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public Deadline(String name, String by) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        this.date \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        this.byFormat \u003d this.date.format(MYDATEFORMATTER);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public String getParsedData() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return \"D\" + \"/\" + String.valueOf(super.done) + \"/\" + super.name + \"/\" + this.by;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.byFormat + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 30
    }
  },
  {
    "path": "src/main/java/Duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 7
    }
  },
  {
    "path": "src/main/java/Duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public Event(String name, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public String getParsedData() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return \"E\" + \"/\" + String.valueOf(super.done) + \"/\" + super.name + \"/\" + this.at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 20
    }
  },
  {
    "path": "src/main/java/Duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public enum Mode{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        LIST, BYE, DONE, DELETE, TODO, DEADLINE, EVENT;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public Mode mode(String input) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String command \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                return Mode.TODO;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                return Mode.DEADLINE;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                return Mode.EVENT;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                return Mode.BYE;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                return Mode.DONE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                return Mode.DELETE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                return Mode.LIST;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public Task task(String input) throws DukeException{"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String command \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        switch(command) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                return toDo(input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                return deadline(input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                return event(input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but this is an invalid command :-(\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private ToDo toDo(String input) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String[] inputSplit \u003d input.split(\" \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        if (inputSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            // Throw new error message that todo has no desc"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            throw (new DukeException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            String name \u003d input.split(\"todo \")[1];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            return new ToDo(name);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private Deadline deadline(String input) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String name \u003d input.split(\" /by \")[0].split(\"deadline \")[1];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String by \u003d input.split(\" /by \")[1];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return new Deadline(name, by);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private Event event(String input) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String name \u003d input.split(\" /at \")[0].split(\"event \")[1];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String at \u003d input.split(\" /at \")[1];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return new Event(name, at);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public int order(String input){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return Integer.parseInt(input.split(\" \")[1]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 75
    }
  },
  {
    "path": "src/main/java/Duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    // Read file"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private File f;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private String path;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        this.f \u003d new File(path);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException{"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        ArrayList\u003cTask\u003e dukeList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        while(sc.hasNextLine()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            String[] inputSplit \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            switch (inputSplit[0]) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                    // two inputs"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                    task \u003d new ToDo(inputSplit[2]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                    //three inputs"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                    task \u003d new Deadline(inputSplit[2], inputSplit[3]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                    //three inputs"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                    task \u003d new Event(inputSplit[2], inputSplit[3]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            if (Boolean.parseBoolean(inputSplit[1])) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                task.markDone();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            dukeList.add(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return dukeList;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void addData(Task task) throws IOException{"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        writeData(task.getParsedData() + \"\\n\", true);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void markDoneData(int order, String parsedData) throws IOException{"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String newData \u003d \"\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Scanner reader \u003d new Scanner(f);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        for (int i \u003d 0; reader.hasNextLine(); i++){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            if (i \u003d\u003d order - 1) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                newData \u003d newData + parsedData + \"\\n\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                reader.nextLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                newData \u003d newData + reader.nextLine() + \"\\n\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        writeData(newData, false);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void deleteData(int order) throws IOException{"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        //New text"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Scanner reader \u003d new Scanner(f);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String newData \u003d \"\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        for (int i \u003d 0; reader.hasNextLine(); i++){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            if(i !\u003d order - 1){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                newData \u003d newData + reader.nextLine() + \"\\n\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                reader.nextLine();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        writeData(newData, false);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void writeData(String text, Boolean appendMode) throws IOException{"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        BufferedWriter bw \u003d new BufferedWriter(new FileWriter(this.path, appendMode));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        bw.write(text);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        bw.close();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 96
    }
  },
  {
    "path": "src/main/java/Duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public final static String TICK \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public final static String CROSS \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void markDone(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public boolean getDone(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return this.done;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public String getName(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public String getParsedData(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return String.valueOf(this.done) + \"/\" + this.name;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String symbol \u003d done ? Task.TICK : Task.CROSS;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return \"[\" + symbol + \"] \" + name;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 36
    }
  },
  {
    "path": "src/main/java/Duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private ArrayList\u003cTask\u003e dukeList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        this.dukeList.addAll(list);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void add(Task task){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        // Add to List"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        dukeList.add(task);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public Task remove(int order){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return dukeList.remove(order - 1);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public Task markDone(int order){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Task task \u003d dukeList.get(order - 1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        task.markDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public String listToString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        for (int i \u003d 0; i \u003c dukeList.size(); i++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            output \u003d output + (i + 1) + \". \" + dukeList.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public int getSize(){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return dukeList.size();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 38
    }
  },
  {
    "path": "src/main/java/Duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public String getParsedData() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return \"T\" + \"/\" + String.valueOf(super.done) + \"/\" + super.name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 17
    }
  },
  {
    "path": "src/main/java/Duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public Ui(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void showWelcome(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                \"What can I do for you?\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public String readLine(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void close(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        this.sc.close();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void goodbye(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void showAddTask(Task task){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        System.out.println(\"Go it. I\u0027ve added this task:\\n\" + task.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void showDoneTask(Task task){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void showRemovedTask(Task task){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + task.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void showTotalTasks(int size){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String plural \u003d size !\u003d 1 ? \"tasks\" : \"task\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        System.out.println(\"Now you have \" + size + \" \" + plural + \" in the list.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void printMessage(String output){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 54
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import Duke.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import Duke.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import Duke.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import Duke.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import Duke.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import Duke.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.io.ByteArrayInputStream;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private final static String sysLineSep \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void setUpStreams(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void restoreStream() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        System.setOut(originalOut);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"data/duke.txt\", false);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            fw.write(\"\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            System.out.println(\"file not loaded\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void testTaskList1(){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        // Loading tasks"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        ArrayList\u003cTask\u003e testList \u003d new ArrayList\u003c\u003e(Arrays.asList("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                new ToDo(\"Punch\"),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                new Deadline(\"Fight\", \"2019-03-04\"),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                new Event(\"Join Fight Club\", \"Saturday\")"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        TaskList taskList \u003d new TaskList(testList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        System.out.print(taskList.listToString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String expectedList \u003d \"1. [T][✘] Punch\\n\" +"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                \"2. [D][✘] Fight (by: Mar 04 2019)\\n\" +"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                \"3. [E][✘] Join Fight Club (at: Saturday)\\n\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        assertEquals(expectedList,outContent.toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void testCase2(){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        ByteArrayInputStream in \u003d new ByteArrayInputStream(\"todo nothing\\nbye\\n\".getBytes());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        System.setIn(in);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        // Run main"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Duke.main(new String[0]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String expectedResponse \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\" + sysLineSep +"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                \"Go it. I\u0027ve added this task:\\n[T]\" + \"[\" + Task.CROSS + \"]\" + \" nothing\" + sysLineSep +"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                \"Now you have 1 task in the list.\" + sysLineSep +"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                \"Bye. Hope to see you again soon!\" + sysLineSep;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        assertEquals(expectedResponse, outContent.toString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void testTaskList2(){"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        //Adding and removing tasks"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        ToDo a \u003d new ToDo(\"Punch\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Deadline b \u003d new Deadline(\"Fight\", \"2019-03-04\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Event c \u003d new Event(\"Join Fight Club\", \"Saturday\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        // Check Add"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        taskList.add(a);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        assertEquals(taskList.listToString(), \"1. [T][✘] Punch\\n\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        // Check add + Remove"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        taskList.add(b);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        taskList.remove(1);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        assertEquals(taskList.listToString(), \"1. [D][✘] Fight (by: Mar 04 2019)\\n\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        // Check markingDone"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        taskList.add(c);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        taskList.markDone(1);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        taskList.markDone(2);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        assertEquals(taskList.listToString(),"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                \"1. [D][✓] Fight (by: Mar 04 2019)\\n\" +"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                        \"2. [E][✓] Join Fight Club (at: Saturday)\\n\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void parserTestCase(){"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String input1 \u003d \"deadline go home /by 2019-05-06\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String input2 \u003d \"event orbital /at tomorrow and later\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String input3 \u003d \"todo nothing\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Deadline d \u003d new Deadline(\"go home\", \"2019-05-06\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Event e \u003d new Event(\"orbital\", \"tomorrow and later\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        ToDo t \u003d new ToDo(\"nothing\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Parser p \u003d new Parser();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            assertEquals(d.toString(), p.task(input1).toString());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            assertEquals(e.toString(), p.task(input2).toString());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            assertEquals(t.toString(), p.task(input3).toString());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }catch (DukeException ex){"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 129
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "todo return book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "deadline go home /by monday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "event go to school /at monday to friday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 4
    }
  }
]
