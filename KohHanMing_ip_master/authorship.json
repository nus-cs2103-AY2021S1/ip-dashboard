[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " * Supports the creation of Deadline objects."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-CodingStandard"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Creates a Deadline object"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param dateAndTime Date and time of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskType Type of task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    Deadline(String description, String dateAndTime, TaskType taskType) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String[] dateAndTimeSplit \u003d dateAndTime.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String[] dateSplit \u003d dateAndTimeSplit[0].split(\"/\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.date \u003d LocalDate.of(Integer.parseInt(dateSplit[2]),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                Integer.parseInt(dateSplit[1]),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                Integer.parseInt(dateSplit[0]));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String timeUnformatted \u003d dateAndTimeSplit[1];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String timeFormatted \u003d timeUnformatted.substring(0, 2)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \":\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + timeUnformatted.substring(2, 4);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.time \u003d LocalTime.parse(timeFormatted);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Creates a Deadline object with extra parameters that defines date and time separately, and whether"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * task is done or not."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskType Type of task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param isDone Whether task is done or not."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param date Date of task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param time Time that task is due."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    Deadline(String description, TaskType taskType, boolean isDone, LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(description, taskType, isDone);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Returns string representation of the Deadline object."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @return String representation of the Deadline object."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return \"[Deadline]\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + super.toString()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"(by: \" + this.date + \" \" + this.time + \")\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 61
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " * Starts Duke which a user can give"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " * text commands to."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Creates a Duke object"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param filePath  Location of file where data is stored."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        taskList \u003d TaskList.generateTaskList(storage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Starts the Duke application."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param args Array of command-line arguments."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        new Duke(\"./data/tasks.txt\").run();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        ui.start(taskList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "KohHanMing": 29
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class EmptyDescriptionException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public EmptyDescriptionException(String errorMsg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 5
    }
  },
  {
    "path": "src/main/java/EmptyListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class EmptyListException extends IllegalStateException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public EmptyListException(String errorMsg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " * Supports the creation of Event objects."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected LocalTime timeStart;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected LocalTime timeEnd;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Creates an Event object"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param dateAndTime Date and time of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskType Type of task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    Event(String description, String dateAndTime, TaskType taskType) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String[] dateAndTimeSplit \u003d dateAndTime.split(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String[] dateSplit \u003d dateAndTimeSplit[0].split(\"/\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.date \u003d LocalDate.of(Integer.parseInt(dateSplit[2]),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                Integer.parseInt(dateSplit[1]),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                Integer.parseInt(dateSplit[0]));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String[] timeSplit \u003d dateAndTimeSplit[1].split(\"-\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String timeStartUnformatted \u003d timeSplit[0];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String timeStartFormatted \u003d timeStartUnformatted.substring(0, 2)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \":\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + timeStartUnformatted.substring(2, 4);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String timeEndUnformatted \u003d timeSplit[1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String timeEndFormatted \u003d timeEndUnformatted.substring(0, 2)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \":\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + timeEndUnformatted.substring(2, 4);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.timeStart \u003d LocalTime.parse(timeStartFormatted);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.timeEnd \u003d LocalTime.parse(timeEndFormatted);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Creates an Event object with extra parameters that defines date and time separately, and whether"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * task is done or not."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskType Type of task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param isDone Whether task is done or not."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param date Date of task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param timeStart Starting time of task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param timeEnd Ending time of task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    Event(String description, TaskType taskType, boolean isDone, LocalDate date, LocalTime timeStart, LocalTime timeEnd) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(description, taskType, isDone);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.timeStart \u003d timeStart;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.timeEnd \u003d timeEnd;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Returns string representation of the Event object."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @return String representation of the Event object."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return \"[Event]\" + super.toString()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"(at: \" + this.date + \" \" + this.timeStart + \"-\" + this.timeEnd + \")\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 65
    }
  },
  {
    "path": "src/main/java/InvalidDoneCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class InvalidDoneCommandException extends IllegalStateException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public InvalidDoneCommandException(String errorMsg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 5
    }
  },
  {
    "path": "src/main/java/InvalidTaskTypeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class InvalidTaskTypeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public InvalidTaskTypeException(String errorMsg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 5
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public static void parse(Ui ui, TaskList taskList) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String input \u003d sc.nextLine().toLowerCase();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            ui.printDivider();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                if (input.equals(\"help\")) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    ui.printHelp();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                } else if (input.equals(\"add\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    Parser.processAdd(taskList, sc, ui);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    Storage.saveTaskChanges(taskList);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                        throw new EmptyListException(\"There are no tasks on your list\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    ui.printList(taskList);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                } else if (input.equals(\"done\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                        throw new EmptyListException(\"There are no tasks on your list\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    Parser.processDone(taskList, sc, ui);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    Storage.saveTaskChanges(taskList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                } else if (input.equals(\"delete\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                        throw new EmptyListException(\"There are no tasks on your list\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    Parser.processDelete(taskList, sc, ui);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    Storage.saveTaskChanges(taskList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                } else if (input.equals(\"find\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                        throw new EmptyListException(\"There are no tasks on your list\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    Parser.processFind(taskList, sc, ui);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    throw new UnknownCommandException(\"Sorry I didn\u0027t understand that :(\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            } catch (UnknownCommandException e1) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                ui.showUnknownCommandException(e1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            } catch (EmptyListException e2) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                ui.showEmptyListException(e2);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            ui.printAdditionActionMessage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            input \u003d sc.nextLine().toLowerCase();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        ui.printGoodbyeMessage();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public static void processAdd(TaskList taskList, Scanner sc, Ui ui) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        ui.printTaskTypes();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            String type \u003d sc.nextLine().toLowerCase();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            TaskType taskType;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            switch (type.toLowerCase()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    taskType \u003d TaskType.TODO;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    ui.printEnterTaskPrompt();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    taskType \u003d TaskType.DEADLINE;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    ui.printDeadlineExample();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    taskType \u003d TaskType.EVENT;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    ui.printEventExample();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    throw new InvalidTaskTypeException(\"Oops that wasn\u0027t a valid task type!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            processTaskType(taskList, taskType, sc, ui);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } catch (InvalidTaskTypeException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            ui.showInvalidTaskTypeException(e);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public static void processTaskType(TaskList taskList, TaskType taskType, Scanner sc, Ui ui)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            throws ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String inputToAdd \u003d sc.nextLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            if (inputToAdd.isEmpty()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                throw new EmptyDescriptionException(\"Oops, the description can\u0027t be empty!\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    taskList.addTask(new Todo(inputToAdd, taskType));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    String[] deadlineSplit \u003d inputToAdd.split(\",\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    taskList.addTask(new Deadline(deadlineSplit[0], deadlineSplit[1], taskType));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    String[] eventSplit \u003d inputToAdd.split(\",\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    taskList.addTask(new Event(eventSplit[0], eventSplit[1], taskType));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            ui.printAddAcknowledgement(taskList);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } catch (EmptyDescriptionException e1) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            ui.showEmptyDescriptionException(e1);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e2) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            ui.showWrongFormat(e2);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public static void processDone(TaskList taskList, Scanner sc, Ui ui) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        ui.printDonePrompt();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        int taskNum \u003d sc.nextInt();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        sc.nextLine();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            if (taskList.getTask(taskNum - 1).isDone()) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                throw new InvalidDoneCommandException(\"This task is already done!\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                taskList.getTask(taskNum - 1).markAsDone();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                ui.printDoneAcknowledgement(taskList, taskNum);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } catch (IndexOutOfBoundsException e1) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            ui.showIndexOutOfBoundsException(e1);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } catch (InvalidDoneCommandException e2) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            ui.showInvalidDoneCommandException(e2);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public static void processDelete(TaskList taskList, Scanner sc, Ui ui) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        ui.printDeletePrompt();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        int taskNum \u003d sc.nextInt();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        sc.nextLine();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            Task task \u003d taskList.getTask(taskNum - 1);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            taskList.removeTask(taskNum - 1);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            ui.printDeleteAcknowledgement(taskList, task);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            ui.showIndexOutOfBoundsException(e);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public static void processFind(TaskList taskList, Scanner sc, Ui ui) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        ui.printFindPrompt();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String keyword \u003d sc.next();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        sc.nextLine();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        ui.printFoundTasksHeader();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getTaskListSize(); i++) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            Task task \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                ui.printTask(taskList, i);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 152
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected String filepath;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public List\u003cTask\u003e load() throws IOException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        File taskLocation \u003d new File(filepath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        FileReader fileReader \u003d new FileReader(taskLocation);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        BufferedReader bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        List\u003cString\u003e strings \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            strings.add(line);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        fileReader.close();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        List\u003cTask\u003e tasks \u003d buildTasks(strings);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public static void saveTaskChanges(TaskList taskList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        File taskDir \u003d new File(\"./data\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        if (!taskDir.exists()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            taskDir.mkdir();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        File tasks \u003d new File(\"./data/Tasks.txt\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            if (!tasks.exists()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                tasks.createNewFile();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(\"./data/Tasks.txt\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            for (int j \u003d 0; j \u003c taskList.getTaskListSize(); j++) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                writer.write(taskList.getTask(j).toString() + \"\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            System.out.println(\"Invalid file name\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public static List\u003cTask\u003e buildTasks(List\u003cString\u003e strings) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        for (String taskString : strings) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            String[] taskStringSplit \u003d taskString.split(\" \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            if (taskStringSplit.length \u003e 1) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                String[] descriptionSplit \u003d taskStringSplit[0].split(\"]\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                String statusIcon \u003d descriptionSplit[1].substring(1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                boolean isDone \u003d statusIcon.equals(\"\\u2713\") ? true : false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                String taskDescription \u003d descriptionSplit[2] + \" \";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(taskStringSplit[2]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                int timeStringLength \u003d taskStringSplit[3].length();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                String timeString \u003d taskStringSplit[3].substring(0, timeStringLength - 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                if (timeString.length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    LocalTime time \u003d LocalTime.parse(timeString);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    Task deadline \u003d new Deadline(taskDescription, TaskType.DEADLINE, isDone, date, time);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    tasks.add(deadline);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    LocalTime timeStart \u003d LocalTime.parse(timeString.split(\"-\")[0]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    LocalTime timeEnd \u003d LocalTime.parse(timeString.split(\"-\")[1]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    Task event \u003d new Event(taskDescription, TaskType.DEADLINE, isDone, date, timeStart, timeEnd);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    tasks.add(event);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                String[] descriptionSplit \u003d taskStringSplit[0].split(\"]\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                String statusIcon \u003d descriptionSplit[1].substring(1);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                String taskDescription \u003d descriptionSplit[2];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                boolean isDone \u003d statusIcon.equals(\"\\u2713\") ? true : false;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                Task todo \u003d new Todo(taskDescription, TaskType.TODO, isDone);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                tasks.add(todo);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 81
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " * Supports creation of Task objects and Task actions."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected TaskType taskType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Creates a Task object"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param description  Description of task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskType Type of task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public Task(String description, TaskType taskType) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Creates a Task object with extra parameter that defines whether"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * task is done or not."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskType Type of task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param isDone Whether task is done or not."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public Task(String description, TaskType taskType, boolean isDone) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Returns a tick if isDone is true and a cross otherwise."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @return Either a tick or cross."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @return Description of task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Changes the task\u0027s isDone to true."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Checks if task is done or not."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @return Either true or false."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public boolean isDone(){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Returns the type of task."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @return Type of task."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Returns string representation of the Task object."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @return String representation of the Task object."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return \"[\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + this.getStatusIcon()"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"]\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + this.getDescription();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 90
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " * Supports actions involving adding, removing and storing tasks in a list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Creates an empty TaskList object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Creates a TaskList object using an existing list of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskArr List of tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskArr) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.tasks \u003d taskArr;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Generates a TaskList object by loading a saved list and generates"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * an empty TaskList object otherwise."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param storage Object containing filepath to saved list of tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @return TaskList object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public static TaskList generateTaskList(Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return new TaskList(storage.load());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            System.out.println(\"Could not load file. Generating blank Task List.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            return new TaskList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Removes a task at a specified index from the task list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param i Index of task to be removed."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void removeTask(int i) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        tasks.remove(i);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Returns the task at a specific index of the task list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param i Index of task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @return Task at specified index."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public Task getTask(int i) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return tasks.get(i);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Returns the last task on the task list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @return Task at the end of the task list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public Task getMostRecentTask() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return tasks.get(tasks.size() - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Returns the size of the task list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @return Size of task list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public int getTaskListSize() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Checks if the task list is empty or not."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @return Either true or false."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return tasks.isEmpty();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 88
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    EVENT"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 5
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " * Supports the creation of Todo objects."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Creates a Todo object"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskType Type of task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public Todo(String description, TaskType taskType) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Creates a Todo object with extra parameter that defines whether"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * task is done or not."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskType Type of task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param isDone Whether task is done or not."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public Todo(String description, TaskType taskType, boolean isDone) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(description, taskType, isDone);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Returns string representation of the Todo object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @return String representation of the Todo object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        return \"[Todo]\" + super.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 35
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " * Supports interactions with user."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected static final String[] CMD_ARR \u003d {\"help\", \"add\", \"list\", \"done\", \"delete\", \"date\", \"bye\"};"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected static final String DIVIDER \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    protected static final String LOGO \u003d \" __________________________________________________________\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            + \"|                                                          |\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            + \"|  ____     _     _____   ____  _   _ ____   ____ _______  |\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            + \"| |  _ \\\\   / \\\\   |  __ \\\\ / __ \\\\| \\\\ | |  _ \\\\ / __ \\\\__   __| |\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            + \"| | |_) | /   \\\\  | |__) | |  | |  \\\\| | |_) | |  | | | |    |\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            + \"| |  _ \u003c / /_\\\\ \\\\ |  _  /| |  | | . ` |  _ \u003c| |  | | | |    |\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            + \"| | |_) / _____ \\\\| | \\\\ \\\\| |__| | |\\\\  | |_) | |__| | | |    |\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            + \"| |____/_/     \\\\_\\\\_|  \\\\_\\\\\\\\____/|_| \\\\_|____/ \\\\____/  |_|    |\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            + \"|                                                          |\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            + \"|__________________________________________________________|\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays the startup UI and prompts user to enter input."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void start(TaskList taskList) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.printDivider();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(LOGO);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.printDivider();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"Hello, I am BaronBot!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.printDivider();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        Parser.parse(this, taskList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays the exception message for an empty list and prompts the user to"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * enter additional input."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param e EmptyListException."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void showEmptyListException(EmptyListException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"Use the \u0027add\u0027 command to start adding tasks!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays the exception message for unknown commands and prompts the user to"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * enter correct input."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param e UnknownCommandException."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void showUnknownCommandException(UnknownCommandException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"How about entering \u0027help\u0027 instead?\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays the exception message for invalid task types."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param e InvalidTaskTypeException."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void showInvalidTaskTypeException(InvalidTaskTypeException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays the exception message for empty descriptions being entered by"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * the user."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param e EmptyDescriptionException."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void showEmptyDescriptionException(EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays the exception message for entering the wrong task format and prompts the user to"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * enter correct input."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param e ArrayIndexOutOfBoundsException."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void showWrongFormat(ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"Hmmm, looks like the format didn\u0027t work\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"Refer to the example for help! :P\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays the divider that separates different actions."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void printDivider() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays a prompt for the user to enter additional input."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void printAdditionActionMessage() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.printDivider();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"What else would you like to do?\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.printDivider();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays the goodbye message."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void printGoodbyeMessage() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.printDivider();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"Bye! See you around :)\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        this.printDivider();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays the list of commands the user can enter."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void printHelp() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"Here are the commands you can use:\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        for (int i \u003d 0; i \u003c CMD_ARR.length; i++) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            System.out.println((i + 1) + \". \" + CMD_ARR[i]);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays the types of tasks the user can enter."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void printTaskTypes() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"What kind of task is it?\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.print(\" - Todo\\n\""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \" - Deadline\\n\""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \" - Event\\n\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays the prompt for the user to enter the task."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void printEnterTaskPrompt() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"Please enter the task\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays the example for the deadline format."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void printDeadlineExample() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"Please enter the task followed by the date and time of the deadline\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"e.g., submit report ,11/10/2019 1700\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays the example for the Event format."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void printEventExample() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"Please enter the event followed by the date and time of the event\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"e.g., team project meeting ,2/10/2019 1400-1600\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays the acknowledgement of the user\u0027s added task."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void printAddAcknowledgement(TaskList taskList) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"Alright, I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(taskList.getMostRecentTask().toString());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"You now have \" + taskList.getTaskListSize() + \" tasks on your list\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays the tasks currently on the list of tasks."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void printList(TaskList taskList) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"These are the tasks on your list:\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        for (int j \u003d 0; j \u003c taskList.getTaskListSize(); j++) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "            System.out.println((j + 1)"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    + \". \""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                    + taskList.getTask(j).toString());"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays the prompt for the user to specify which task is done."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void printDonePrompt() {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"Which task do you want to mark as done?\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays the acknowledgement of a task status being changed to done."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskNum Task specified to be changed to done."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void printDoneAcknowledgement(TaskList taskList, int taskNum) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"Good job! This task is now marked as done:\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(taskList.getTask(taskNum - 1).toString());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays the exception message for trying to reference an out of bounds index and"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * prompts the user to enter correct input."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param e ArrayIndexOutOfBoundsException."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void showIndexOutOfBoundsException(IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"Sorry that task doesn\u0027t exist :/\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"Try using \u0027list\u0027 to find out what tasks you have!\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays the exception message for trying to mark a task that is already done as done again"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * and prompts the user to enter correct input."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param e InvalidDoneCommandException."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void showInvalidDoneCommandException(InvalidDoneCommandException e) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"Check out each task\u0027s status by using \u0027list\u0027!\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays the prompt for the user to delete a task."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void printDeletePrompt() {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"Which task do you want to delete?\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * Displays the acknowledgement of the task that the user deleted from the list of tasks."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     * @param task Task that was deleted."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void printDeleteAcknowledgement(TaskList taskList, Task task) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"Alright, the following task has been removed:\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(task.toString());"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"You now have \" + taskList.getTaskListSize() + \" tasks on your list\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void printFindPrompt() {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"What are you trying to find? Search using a keyword.\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void printFoundTasksHeader() {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println(\"These are the tasks that match the keyword:\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void printTask(TaskList taskList, int taskNum) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.out.println((taskNum + 1)"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \". \""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + taskList.getTask(taskNum).toString());"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 245
    }
  },
  {
    "path": "src/main/java/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class UnknownCommandException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public UnknownCommandException(String errorMsg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 5
    }
  },
  {
    "path": "src/test/java/DukeTaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class DukeTaskListTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void generateEmptyTaskListTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        assertEquals(true, taskList.isEmpty());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void addTasksTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        taskList.addTask(new Todo(\"Finish Drawing\", TaskType.TODO));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        taskList.addTask(new Deadline(\"Essay \", \"11/10/2020 1800\", TaskType.DEADLINE));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        taskList.addTask(new Event(\"Meeting \", \"20/06/2020 1400-1600\", TaskType.EVENT));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String todo \u003d \"[Todo][✘]Finish Drawing\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String deadline \u003d \"[Deadline][✘]Essay (by: 2020-10-11 18:00)\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String event \u003d \"[Event][✘]Meeting (at: 2020-06-20 14:00-16:00)\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        assertEquals(todo, taskList.getTask(0).toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        assertEquals(deadline, taskList.getTask(1).toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        assertEquals(event, taskList.getTask(2).toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 27
    }
  },
  {
    "path": "src/test/java/DukeUiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "public class DukeUiTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private final PrintStream standardOut \u003d System.out;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.setOut(new PrintStream(outputStreamCaptor));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void userCommandTest() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        String help \u003d \"Here are the commands you can use:\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"1. help\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"2. add\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"3. list\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"4. done\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"5. delete\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"6. date\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "                + \"7. bye\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        ui.printHelp();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        assertEquals(help.trim(), outputStreamCaptor.toString().trim().replace(\"\\r\", \"\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    public void tearDown() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "        System.setOut(standardOut);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 37
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "aaaaaa"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "add"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "read book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "add"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "assigment ,2pm"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "add"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "lunch with the boys , 12-1pm"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "done"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "KohHanMing": 18
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "SET MY_PATH\u003dC:\\Users\\kohha\\Desktop\\git\\ip"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "if not exist \"%MY_PATH%\\bin\" mkdir \"%MY_PATH%\\bin\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "javac  -cp \"%MY_PATH%\\src\\main\\java\" -Xlint:none -d \"%MY_PATH%\\bin\" \"%MY_PATH%\\src\\main\\java\\Duke.java\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KohHanMing"
        },
        "content": "java -classpath \"%MY_PATH%\\bin\" Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "KohHanMing": 6
    }
  }
]
