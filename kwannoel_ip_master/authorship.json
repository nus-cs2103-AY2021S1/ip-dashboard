[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "## Testing"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "```shell script"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "cd text-ui-test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "# chmod +x # Only needed first time"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "./runtest.sh"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "```"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "## Running Jar file"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "Simply recompile the program."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "The run:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "```shell script"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "java -jar out/artifacts/ip_jar/ip.jar"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "```"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "## Input commands"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "##### Misc"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "```"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "bye # exit program"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "```"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "##### Viewing \u0026 querying tasks"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "```"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "list # List task details: id, description, time stamp etc..."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "find,\u003ckeywords\u003e # Search for matches in tasks, return the id"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "```"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "##### Updating tasks"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "```"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "done,\u003ctask id\u003e # Indicate a task is complete"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "delete,\u003ctask id\u003e # Delete a task"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "```"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "##### Creating tasks"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "```"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "todo,\u003ctask name\u003e # Add a task to todos"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "deadline,\u003ctask name\u003e,\u003ctime\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "event,\u003ctask name\u003e,\u003ctime\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 44,
      "-": 26
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 14,
      "-": 46
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": " * Interface for program commands"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    // Execute the command and return the response"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public String execute();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 9
    }
  },
  {
    "path": "src/main/java/duke/CommandInvalidArgumentFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "// Thrown if the arguments are wrong format"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class CommandInvalidArgumentFormatException extends RuntimeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 5
    }
  },
  {
    "path": "src/main/java/duke/CommandMissingArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": " * Thrown if command missing arguments"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class CommandMissingArgumentException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 7
    }
  },
  {
    "path": "src/main/java/duke/CompleteTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class CompleteTaskCommand implements Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public CompleteTaskCommand(TaskList tasks, int taskIndex) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        return tasks.completeTask(taskIndex);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 14
    }
  },
  {
    "path": "src/main/java/duke/CreateTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class CreateTaskCommand implements Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public CreateTaskCommand(TaskList tasks, Task task) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        String message \u003d String.format(\"Added: %s\", task.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 18
    }
  },
  {
    "path": "src/main/java/duke/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    private Date time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public DeadlineTask("
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            Boolean isDone,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            String name,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            Date time"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    ) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        super(isDone, name);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        return String.format(\"[D],%s,%s\", super.toString(), time);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 19
    }
  },
  {
    "path": "src/main/java/duke/DeleteTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class DeleteTaskCommand implements Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    int taskIndex;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public DeleteTaskCommand(TaskList tasks, int taskIndex) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        tasks.deleteTask(taskIndex);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        return \"Deleted\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 16
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 47
    }
  },
  {
    "path": "src/main/java/duke/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class DoneCommand implements Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    Storage store;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public DoneCommand(Storage store) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        this.store \u003d store;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        return \"Done\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 12
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwannoel"
        },
        "content": " * Entry point for application, initializes the UI"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwannoel"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        // Start the UI handlers, store etc..."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        });"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        });"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        );"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    private String getResponse(String input) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        return this.ui.handleInput(input);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        String welcomeGraphic \u003d \"                      .,,uod8B8bou,,.\\n\" +"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"              ..,uod8BBBBBBBBBBBBBBBBRPFT?l!i:.\\n\" +"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"         ,\u003dm8BBBBBBBBBBBBBBBRPFT?!||||||||||||||\\n\" +"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"         !...:!TVBBBRPFT||||||||||!!^^\\\"\\\"\u0027   ||||\\n\" +"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"         !.......:!?|||||!!^^\\\"\\\"\u0027            ||||\\n\" +"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"         !.........||||                     ||||\\n\" +"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"         !.........||||       Welcome!      ||||\\n\" +"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"         !.........||||                     ||||\\n\" +"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"         !.........||||      I am your      ||||\\n\" +"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"         !.........||||  personal assistant ||||\\n\" +"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"         !.........||||       Zachary       ||||\\n\" +"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"         `.........||||                    ,||||\\n\" +"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"          .;.......||||               _.-!!|||||\\n\" +"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"   .,uodWBBBBb.....||||       _.-!!|||||||||!:\u0027\\n\" +"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"!YBBBBBBBBBBBBBBb..!|||:..-!!|||||||!iof68BBBBBb....\\n\" +"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"!..YBBBBBBBBBBBBBBb!!||||||||!iof68BBBBBBRPFT?!::   `.\\n\" +"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"!....YBBBBBBBBBBBBBBbaaitf68BBBBBBRPFT?!:::::::::     `.\\n\" +"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"!......YBBBBBBBBBBBBBBBBBBBRPFT?!::::::;:!^\\\"`;:::       `.\\n\" +"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"!........YBBBBBBBBBBRPFT?!::::::::::^\u0027\u0027...::::::;         iBBbo.\\n\" +"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"`..........YBRPFT?!::::::::::::::::::::::::;iof68bo.      WBBBBbo.\\n\" +"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"  `..........:::::::::::::::::::::::;iof688888888888b.     `YBBBP^\u0027\\n\" +"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"    `........::::::::::::::::;iof688888888888888888888b.     `\\n\" +"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"      `......:::::::::;iof688888888888888888888888888888b.\\n\" +"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"        `....:::;iof688888888888888888888888888888888899fT!\\n\" +"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"          `..::!8888888888888888888888888888888899fT|!^\\\"\u0027\\n\" +"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"            `\u0027 !!988888888888888888888888899fT|!^\\\"\u0027\\n\" +"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"                `!!8888888888888888899fT|!^\\\"\u0027\\n\" +"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"                  `!988888888899fT|!^\\\"\u0027\\n\" +"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"                    `!9899fT|!^\\\"\u0027\\n\\n\\n\";"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        System.out.println(welcomeGraphic);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        ui.run();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 163,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    Date time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public EventTask("
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            Boolean isDone,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            String name,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            Date time"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    ) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        super(isDone, name);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        return String.format(\"[E],%s,%s\", super.toString(), time);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 20
    }
  },
  {
    "path": "src/main/java/duke/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class ExitCommand implements Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        return \"Goodbye!\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 9
    }
  },
  {
    "path": "src/main/java/duke/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class FindCommand implements Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    TaskList taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    String text;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public FindCommand(TaskList taskList, String text) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        ArrayList\u003cTask\u003e Tasks \u003d taskList.find(text);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        String taskStrings \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        for (Task task : Tasks) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            taskStrings +\u003d \"\\n\" + task.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        };"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        return taskStrings;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 22
    }
  },
  {
    "path": "src/main/java/duke/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class InvalidCommand implements Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        return \"Invalid command\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 8
    }
  },
  {
    "path": "src/main/java/duke/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class InvalidCommandException extends RuntimeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 4
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 11
    }
  },
  {
    "path": "src/main/java/duke/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class ListCommand implements Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public ListCommand(TaskList tasks) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        return tasks.list();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 13
    }
  },
  {
    "path": "src/main/java/duke/MissingTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class MissingTaskException extends RuntimeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 4
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import java.io.StreamCorruptedException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public static Integer parseInt(String str) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            return Integer.parseInt(str);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            throw new CommandInvalidArgumentFormatException();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public static Date parseDate(String dateStr)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd-MM-YYYY\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        Date date \u003d format.parse(dateStr);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     * Parses a single line of input from stdin into a command"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public static Command parseLine(TaskList tasks, String string)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            throws ParseException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        String[] tokens \u003d string.split(\",\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        String type \u003d tokens[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            case \"t\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            case \"todo\": {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // Todo task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                String taskName \u003d tokens[1];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                if (taskName.equals(\"\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                    throw new CommandMissingArgumentException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // Create the task"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                Task task \u003d new TodoTask(false, taskName);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                return new CreateTaskCommand(tasks, task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            case \"e\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            case \"event\": {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // Event task"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                if (tokens.length \u003c\u003d 2"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                        || tokens[1].equals(\"\")"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                        || tokens[2].equals(\"\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                    throw new CommandMissingArgumentException();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // Otherwise create the task"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                Task task \u003d new EventTask("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                        false,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                        tokens[1],"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                        parseDate(tokens[2])"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                );"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                return new CreateTaskCommand(tasks, task);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            case \"de\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            case \"deadline\": {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // Deadline task"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // Arguments"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                if (tokens.length \u003c\u003d 2"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                        || tokens[1].equals(\"\")"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                        || tokens[2].equals(\"\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                    throw new CommandMissingArgumentException();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // Otherwise create the task"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                Task task \u003d new DeadlineTask("
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                        false,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                        tokens[1],"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                        parseDate(tokens[2])"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                );"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                return new CreateTaskCommand(tasks, task);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            case \"b\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            case \"bye\": {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            case \"l\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            case \"list\": {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                return new ListCommand(tasks);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            case \"f\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            case \"find\": {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // Find task"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                if (tokens.length \u003c\u003d 1"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                        || tokens[1].equals(\"\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                    throw new CommandMissingArgumentException();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                return new FindCommand(tasks, tokens[1]);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            case \"do\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            case \"done\": {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // Handle incorrect argument lengths"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                if (tokens.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                    throw new CommandMissingArgumentException();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                Integer taskIndex \u003d Parser.parseInt(tokens[1]) - 1;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                return new CompleteTaskCommand(tasks, taskIndex);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            case \"del\":"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            case \"delete\": {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // Handle incorrect argument lengths"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                if (tokens.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                    throw new CommandMissingArgumentException();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                Integer taskIndex \u003d Parser.parseInt(tokens[1]) - 1;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                return new DeleteTaskCommand(tasks, taskIndex);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                return new InvalidCommand();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 135
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwannoel"
        },
        "content": " * Provides a handle to hard disk storage"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwannoel"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    protected FileWriter writeHandle;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    protected File fileHandle;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    protected TaskList taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            // Initializes storage folder \u0026 file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            File storageFolder \u003d new File(\"./data\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            if (!storageFolder.exists()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                storageFolder.mkdir(); // creates folder if it doesn\u0027t exist"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            this.fileHandle \u003d new File(\"./data/duke.ser\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            if (fileHandle.exists()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // Try to open the file and parse the contents"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                FileInputStream fileIn \u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                        new FileInputStream(\"./data/duke.ser\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                ObjectInputStream in \u003d new ObjectInputStream(fileIn);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                this.taskList \u003d (TaskList) in.readObject();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                in.close();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                fileIn.close();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            System.out.println(\"Failed to initialize storage\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            System.out.println(e.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            System.exit(1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     * Sync all tasks"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public boolean syncTasks() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            FileOutputStream fileOut \u003d"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                    new FileOutputStream(\"./data/duke.ser\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            ObjectOutputStream out \u003d new ObjectOutputStream(fileOut);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            out.writeObject(taskList);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            out.close();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            fileOut.close();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            System.out.println(\"Serialized data is saved in ./data/duke.ser\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            System.out.println(e.toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            System.out.println(\"Sync failed\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public TaskList getTaskList() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 69
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class Task implements java.io.Serializable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    private Boolean isDone; // Whether a task is complete"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    private String name; // The task name"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public Task(Boolean isDone, String name) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public void done() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        String taskString \u003d String.format(\"%s,%s\", this.showStatus(), name);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        return taskString;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public String showStatus() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            return \"1\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            return \"0\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 33
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class TaskList implements java.io.Serializable {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    private ArrayList\u003cTask\u003e store;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e store) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        this.store \u003d store;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        this.store \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        store.add(task);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        assert store.size() \u003e\u003d 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public void deleteTask(int taskIndex) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        if (taskIndex \u003c 0 || taskIndex \u003e\u003d store.size()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            throw new MissingTaskException();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        Task task \u003d store.remove(taskIndex);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        assert store.size() \u003e\u003d 0;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        System.out.println(\"duke.Task deleted:\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public String completeTask(Integer taskIndex) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        // If the task doesn\u0027t exist (It\u0027s index is missing)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        if (taskIndex \u003c 0 || taskIndex \u003e\u003d store.size()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            throw new MissingTaskException();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        // Set the task to done"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        Task task \u003d store.get(taskIndex);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        task.done();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        return String.format(\"duke task marked as complete: %s\", task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public String list() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        String listText \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        for (int i \u003d 0; i \u003c store.size(); i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            listText +\u003d String.format(\"\\n %d. %s\", i + 1, store.get(i));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        return listText;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public String dumpTasks() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        // Format the store output as a string"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        String data \u003d \"\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        for ( Task task : store ) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            data +\u003d task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        return data;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public ArrayList\u003cTask\u003e find(String text) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        List\u003cTask\u003e matchedTasks \u003d store.stream().filter("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                task -\u003e task.getName().contains(text)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        ).collect(Collectors.toList());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        return new ArrayList\u003c\u003e(matchedTasks);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 67
    }
  },
  {
    "path": "src/main/java/duke/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public TodoTask("
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            Boolean isDone,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            String name"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    ) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        super(isDone, name);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        return \"[T],\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 15
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": " * Implements User interface"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    private Storage store;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    private Scanner reader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     * Initialize personal assistant with a store for user input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        store \u003d new Storage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        tasks \u003d store.getTaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        reader \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        System.out.println(\"\u003e What can I do for you?\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        getUserCommands();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     * Gets user input from STDIN, executes it"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public void getUserCommands() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            System.out.println(\"\\nEnter your command or \\\"bye\\\" to exit: \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            // Tokenize the input"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            String input \u003d reader.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            Command command \u003d Parser.parseLine(tasks, input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            // After every command, save to disk"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            store.syncTasks();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            this.getUserCommands();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        } catch (CommandMissingArgumentException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            System.out.println(\"Missing arguments!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        } catch (CommandInvalidArgumentFormatException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            System.out.println(\"Invalid arguments!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        } catch (MissingTaskException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            System.out.println(\"Missing task!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            System.out.println(e.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            this.getUserCommands();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     * Gets user input from STDIN, executes it"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public String handleInput(String input) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        String result \u003d input;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            // Parse the commands"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            Command command \u003d Parser.parseLine(tasks, input);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            // Execute the object"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            result \u003d command.execute();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            // After every command, save to disk"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            store.syncTasks();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            System.out.println(\"successful\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        } catch (CommandMissingArgumentException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            System.out.println(\"Missing arguments!\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        } catch (CommandInvalidArgumentFormatException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            System.out.println(\"Invalid arguments!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        } catch (MissingTaskException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            System.out.println(\"Missing task!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            System.out.println(e.toString());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 85
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public void parseInt() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        assertEquals(Parser.parseInt(\"123\"), 123);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public void parseDate() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            Calendar calendar \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            assertEquals("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                    Parser.parseDate(\"12-04-1998\").getTime(),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                    883238400000L"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                    );"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 26
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "todo one"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "event x /at two"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "deadline y /by three"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "invalid command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "todo"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "event x"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "deadline y"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "event /at"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "deadline /by"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "if ! javac -encoding utf8 -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 1,
      "-": 37
    }
  }
]
