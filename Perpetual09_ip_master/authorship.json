[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "mainClassName \u003d \u0027duke.Launcher\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        attributes \"Main-Class\": \"$mainClassName\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    implementation \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    implementation \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "test {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "application {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "run{"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 68
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "﻿# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "Duke is a convenient task manager that allow users to add, store, delete, and find tasks so that they can better manage their time!"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "![Duke](./Ui.png)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "### Add Tasks "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "Users can add a todo task, a task with deadline, a task that will happen at a fixed time, and a task with a fixed duration into Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "### View Tasks"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "Users can view the list of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "### Mark as Done"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "Users can mark a certain task as done."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "### Delete Tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "Users can delete a particular task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "### Search Tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "User can search a task by typing in a keyword."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "### `list` - view the task list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "this comamnd is for viewing the task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "**Example of usage:** "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "```1.[T][Y] task1```"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "### `done NUMBER` - mark a task as done"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "this comamnd is for changing the status of a task to done. A success message will be sent after execution. "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "**Example of usage:** "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "```"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "1.[T][Y] task1"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "```"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "### `delete NUMBER` - delete a task"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "this comamnd is for deleting a task. A success message with the number of remaining tasks will be sent after execution."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "**Example of usage:** "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "```"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "1.[T][Y] task1   "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "```"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "### `todo TASK_NAME` - add a todo task"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "this comamnd is for adding a todo task. A success message with the number of remaining tasks will be sent after execution. "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "**Example of usage:**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "`todo task`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "```"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "1.[T][N] task "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "```"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "### `deadline TASK_NAME /by DD/MM/YYYY/ HHMM` - add a deadline task"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "this comamnd is for adding a dealine task. A success message with the number of remaining tasks will be sent after execution."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "**Example of usage:** "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "**Format:** deadline name /by day/month/year time"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "`deadline task /by 1/1/2020 1200`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "```"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "Got it. I\u0027ve added this task:`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "1.[D][N] task (by: JAN 1 2020 12:00)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "```   "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "### `event TASK_NAME /at DD/MM/YYYY/ HHMM` - add an event task"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "this comamnd is for adding an event task. A success message with the number of remaining tasks will be sent after execution."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "**Example of usage:** "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "**Format:** event name /at day/month/year time"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "`event task /at 1/1/2020 1200`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "```"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "1.[E][N] task (at: JAN 1 2020 12:00) "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "```"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "### `durationtask NUMBER` - add a duration task"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "this comamnd is for adding a duration task with a number indicating the duration time. A success message with the number of remaining tasks will be sent after execution."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "**Example of usage:** "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "`durationtask task 10`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "```"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "1.[U][N] task (10 hours) "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "```"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "### `find KEYWORD` - find a matched task"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "this comamnd is for finding a matched task. A list of matched results will be shown."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "**Example of usage:** "
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "`find task`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "```"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "1.[U][N] task (10 hours) "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "```"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "### `bye` - exit the program"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "this comamnd is for exiting the program. The program will exit and nothing will be shown."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "**Example of usage:** "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 140,
      "-": 14
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "echo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "echo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "echo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "echo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ":init"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ":end"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 103
    }
  },
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.logic.CommandParser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.model.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " * Represents a todo manager bot."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private final CommandParser parser;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Constructs a Duke bot."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param filePath the path of the file which store the previous data."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            tasks \u003d new TaskList(storage.readFile());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        parser \u003d new CommandParser(ui, storage, tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Displays response in GUI."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param input is the command input."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return the response for the command."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String res \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            res \u003d parser.parse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            res \u003d ui.showNumberFormatError();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            res \u003d ui.showDukeError(e);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            res \u003d ui.showFileNotFoundError();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            res \u003d ui.showDateTimeError();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 58
    }
  },
  {
    "path": "src/main/java/Duke/Exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " * Represents an exception which may occur during the execution."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Constructs a DukeException instance."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param s is the error information."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 14
    }
  },
  {
    "path": "src/main/java/Duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 12
    }
  },
  {
    "path": "src/main/java/Duke/Logic/CommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.model.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.model.DurationTask;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.model.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.model.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.model.Todo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " * Encapsulates a parser that will parse the command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class CommandParser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private final TaskList tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Creates a parser object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param ui is the UI component."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param storage is the storage component."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param tasks is the task list component."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public CommandParser(Ui ui, Storage storage, TaskList tasks) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * parses the command and do the corresponding operation."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param input is the command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return the output message."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws FileNotFoundException if file is not found."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws DukeException if the command is not recognized."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws DateTimeException handles date and time error."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String parse(String input) throws FileNotFoundException, DukeException, DateTimeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            return ui.printList(tasks.getData());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            int n \u003d DoneCommandParser.run(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            return tasks.done(n, ui, storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            int n \u003d DeleteCommandParser.run(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            return tasks.delete(n, ui, storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        } else if (input.startsWith(\"durationtask\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            DurationTask task \u003d DurationTaskCommandParser.run(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            return tasks.durationTask(task, ui, storage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        } else if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            Todo task \u003d TodoCommandParser.run(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            return tasks.todo(task, ui, storage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            Deadline task \u003d DeadlineCommandParser.run(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            return tasks.deadline(task, ui, storage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            Event task \u003d EventCommandParser.run(input);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            return tasks.event(task, ui, storage);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        } else if (input.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            String keyword \u003d FindCommandParser.run(input);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            return tasks.find(keyword, ui);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        } else if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            throw new DukeException(\"      OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 73
    }
  },
  {
    "path": "src/main/java/Duke/Logic/DeadlineCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.model.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class DeadlineCommandParser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Parse Deadline command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param input the input from the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return a Deadline object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws DukeException handles the exception when running the Duke bot."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws DateTimeException handles date and time error."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public static Deadline run(String input) throws DukeException, DateTimeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (input.length() \u003c\u003d 9) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            throw new DukeException(\"      OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String[] ss \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (ss.length !\u003d 4 || !ss[1].startsWith(\"by \") || !ss[0].endsWith(\" \")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            throw new DukeException(\"      OOPS!!! Please following the format: \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                    + \"      deadline XXX /by DD/MM/YYYY HHMM\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (ss[0].substring(9).trim().equals(\"\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            throw new DukeException(\"      OOPS!!! Description cannot be empty.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        int year \u003d Integer.parseInt(ss[3].split(\" \")[0]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        int month \u003d Integer.parseInt(ss[2]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        int day \u003d Integer.parseInt(ss[1].substring(3));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String[] time \u003d ss[3].split(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (time.length \u003d\u003d 1 || time[1].length() !\u003d 4) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            throw new DukeException(\"      OOPS!!! Please following the format: \\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                    + \"      deadline XXX /by DD/MM/YYYY HHMM\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        int hour \u003d Integer.parseInt(ss[3].split(\" \")[1].substring(0, 2));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        int minute \u003d Integer.parseInt(ss[3].split(\" \")[1].substring(2));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        Deadline task \u003d new Deadline(ss[0].substring(9), LocalDateTime.of(year, month, day, hour, minute));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 42
    }
  },
  {
    "path": "src/main/java/Duke/Logic/DeleteCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class DeleteCommandParser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Parse Delete command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param input the input from the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return the number which task will be deleted."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws DukeException handles the exception when running the Duke bot."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public static int run(String input) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (input.length() \u003c\u003d 7) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            throw new DukeException(\"      OOPS!!! The description of delete is incomplete.\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        int n \u003d Integer.parseInt(input.substring(7)) - 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return n;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 19
    }
  },
  {
    "path": "src/main/java/Duke/Logic/DoneCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class DoneCommandParser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Parse Done command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param input the input from the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return the number which task will marked as done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws DukeException handles the exception when running the Duke bot."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public static int run(String input) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (input.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            throw new DukeException(\"      OOPS!!! The description of done is incomplete.\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        int n \u003d Integer.parseInt(input.substring(5)) - 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return n;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 19
    }
  },
  {
    "path": "src/main/java/Duke/Logic/DurationTaskCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.model.DurationTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class DurationTaskCommandParser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Parse DurationTask command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param input the input from the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return a DurationTask object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws DukeException handles the exception when running the Duke bot."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public static DurationTask run(String input) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (input.length() \u003c\u003d 13) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            throw new DukeException(\"      OOPS!!! The description of a duration task cannot be empty.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String[] ss \u003d input.split(\" \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (ss.length \u003c 3) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            throw new DukeException(\"      OOPS!!! Please following the format: durationtask XXX HH\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        for (int i \u003d 1; i \u003c ss.length - 1; i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            description +\u003d ss[i] + \" \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (description.trim().equals(\"\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            throw new DukeException(\"      OOPS!!! Description cannot be empty.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return new DurationTask(description.substring(0, description.length() - 1),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                Integer.parseInt(ss[ss.length - 1]));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 31
    }
  },
  {
    "path": "src/main/java/Duke/Logic/EventCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.model.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class EventCommandParser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Parse Event command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param input the input from the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return a Event object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws DukeException handles the exception when running the Duke bot."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws DateTimeException handles date and time error."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public static Event run(String input) throws DukeException, DateTimeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (input.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            throw new DukeException(\"      OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String[] ss \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (ss.length !\u003d 4 || !ss[1].startsWith(\"at \") || !ss[0].endsWith(\" \")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            // Exception: eg. event meeting /Mon"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            throw new DukeException(\"      OOPS!!! Please following the format: \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                    + \"      event XXX /at DD/MM/YYYY HHMM\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (ss[0].substring(6).trim().equals(\"\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            throw new DukeException(\"      OOPS!!! Description cannot be empty.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        int year \u003d Integer.parseInt(ss[3].split(\" \")[0]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        int month \u003d Integer.parseInt(ss[2]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        int day \u003d Integer.parseInt(ss[1].substring(3));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String[] time \u003d ss[3].split(\" \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (time.length \u003d\u003d 1 || time[1].length() !\u003d 4) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            throw new DukeException(\"      OOPS!!! Please following the format: \\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                    + \"      event XXX /at DD/MM/YYYY HHMM\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        int hour \u003d Integer.parseInt(ss[3].split(\" \")[1].substring(0, 2));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        int minute \u003d Integer.parseInt(ss[3].split(\" \")[1].substring(2));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        Event task \u003d new Event(ss[0].substring(6), LocalDateTime.of(year, month, day, hour, minute));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 43
    }
  },
  {
    "path": "src/main/java/Duke/Logic/FindCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class FindCommandParser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Finds all the tasks that contains the keyword."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param input the input from the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return the keyword."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws DukeException handles the exception when running the Duke bot."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public static String run(String input) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (input.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            throw new DukeException(\"      OOPS!!! The keyword cannot be empty.\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String keyword \u003d input.substring(5);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return keyword;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 19
    }
  },
  {
    "path": "src/main/java/Duke/Logic/TodoCommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.model.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class TodoCommandParser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Parse Todo command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param input the input from the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return a Todo object;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws DukeException handles the exception when running the Duke bot."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public static Todo run(String input) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (input.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            // Exception: eg. todo"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            throw new DukeException(\"      OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (input.substring(5).trim().equals(\"\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            throw new DukeException(\"      OOPS!!! Description cannot be empty.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        Todo task \u003d new Todo(input.substring(5));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 24
    }
  },
  {
    "path": "src/main/java/Duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.ui.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.scene.layout.Pane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private Duke duke \u003d new Duke(\"log.txt\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            Pane root \u003d new Pane();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            stage.getIcons().add(new Image(this.getClass().getResourceAsStream(\"/images/icon.png\")));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            scene.getStylesheets().add(\"/view/MainWindow.css\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 38
    }
  },
  {
    "path": "src/main/java/Duke/Model/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "package duke.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " * Represents an event with a deadline."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Constructs an event with a deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param description the description of the event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param by the deadline of the event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Constructs an event with a deadline."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param description the description of the event."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param by the deadline of the event."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param isDone whether the task is done or not."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public Deadline(String description, LocalDateTime by, boolean isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Returns a string representation of the object."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return a string representation of the object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String part \u003d \"[D]\" + super.toString() + \"(by: \" + by.getMonth().toString().substring(0, 3) + \" \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                + by.getDayOfMonth() + \" \" + by.getYear() + \" \";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (by.getMinute() \u003e\u003d 10) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            return part + String.format(\"%d:%d\", by.getHour(), by.getMinute()) + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            return part + by.getHour() + \":0\" + by.getMinute() + \")\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 47
    }
  },
  {
    "path": "src/main/java/Duke/Model/DurationTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "package duke.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " * Represents a Duration Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class DurationTask extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private int hours;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Constructs a duration task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param description is the description of a duration task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public DurationTask(String description, int hours) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        this.hours \u003d hours;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Constructs a duration task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param description is the description of a duration task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param hours is the duration (in hours)."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param isDone whether the task in done or not."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public DurationTask(String description, int hours, boolean isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        this.hours \u003d hours;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Returns a string representation of the object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return a string representation of the object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return \"[U]\" + super.toString() + \" (\" + this.hours + \" hours)\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 38
    }
  },
  {
    "path": "src/main/java/Duke/Model/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "package duke.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " * Represents an event which will happen at a fixed time."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Constructs an event with a deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param description the description of the event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param at the happening time of the event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public Event(String description, LocalDateTime at) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Constructs an event with a deadline."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param description the description of the event."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param at the happening time of the event."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param isDone whether the task is done or not."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public Event(String description, LocalDateTime at, boolean isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Returns a string representation of the object."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return a string representation of the object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String part \u003d \"[E]\" + super.toString() + \"(at: \" + at.getMonth().toString().substring(0, 3) + \" \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                + at.getDayOfMonth() + \" \" + at.getYear() + \" \";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (at.getMinute() \u003e\u003d 10) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            return part + String.format(\"%d:%d\", at.getHour(), at.getMinute()) + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            return part + at.getHour() + \":0\" + at.getMinute() + \")\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 48
    }
  },
  {
    "path": "src/main/java/Duke/Model/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "package duke.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " * Represents a general task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Constructs a new task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Returns a status icon to indicate the status of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return a status icon."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return (isDone ? \"Y\" : \"N\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return the description of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Sets the status of the task to Done."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void done() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Returns a string representation of the object."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return a string representation of the object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 49
    }
  },
  {
    "path": "src/main/java/Duke/Model/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "package duke.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " * Represents the list of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    protected List\u003cTask\u003e data;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Constructs an empty task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        data \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Constructs an task list with given data."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param data the existing data needed to initialize the task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public TaskList(List\u003cTask\u003e data) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        this.data \u003d data;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Returns the task list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return the task list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public List\u003cTask\u003e getData() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return data;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Sets the status of a certain event to done."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param n is the number of which task will be marked done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param ui user interaction object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param storage storage object."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return String result for GUI."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws DukeException handles the exception when running the Duke bot."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws FileNotFoundException handles the exception of file not found."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String done(int n, Ui ui, Storage storage) throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String res;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (n \u003c 0 || n \u003e\u003d data.size()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            throw new DukeException(\"      OOPS!!! The index is out of bounds.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        data.get(n).done();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        res \u003d ui.printDone(data, n);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        storage.writeFile(data);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Deletes a certain event from the list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param n is the number which task will be deleted."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param ui user interaction object."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param storage storage object."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return String result for GUI."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws DukeException handles the exception when running the Duke bot."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws FileNotFoundException handles the exception of file not found."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String delete(int n, Ui ui, Storage storage) throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String res;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (n \u003c 0 || n \u003e\u003d data.size()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            throw new DukeException(\"      OOPS!!! The index is out of bounds.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        res \u003d ui.printDeletePre(data, n);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        data.remove(n);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        res +\u003d ui.printDeletePost(data, n);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        storage.writeFile(data);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Adds a duration task into the list."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param t is a DurationTask object."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param ui user interaction object."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param storage storage object."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return String result for GUI."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws FileNotFoundException handles the exception of file not found."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String durationTask(DurationTask t, Ui ui, Storage storage) throws FileNotFoundException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String res \u003d \"\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        data.add(t);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        res \u003d ui.printTask(data, t);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        storage.writeFile(data);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Adds a todo event into the list."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param task is a Todo object."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param ui user interaction object."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param storage storage object."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return String result for GUI."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws FileNotFoundException handles the exception of file not found."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String todo(Todo task, Ui ui, Storage storage) throws FileNotFoundException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String res;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        data.add(task);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        res \u003d ui.printTask(data, task);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        storage.writeFile(data);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Adds an event with a deadline into the list."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param task is a Deadline object."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param ui user interaction object."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param storage storage object."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return String result for GUI."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws FileNotFoundException handles the exception of file not found."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String deadline(Deadline task, Ui ui, Storage storage) throws FileNotFoundException {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String res;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        data.add(task);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        res \u003d ui.printTask(data, task);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        storage.writeFile(data);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Adds an event that will happen at a fixed time into the list."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param task is an Event object."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param ui user interaction object."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param storage storage object."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return String result for GUI."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws FileNotFoundException handles the exception of file not found."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String event(Event task, Ui ui, Storage storage) throws FileNotFoundException {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String res;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        data.add(task);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        res \u003d ui.printTask(data, task);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        storage.writeFile(data);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Finds all the tasks that contains the keyword."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param keyword is the searching keyword."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param ui user interaction object."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return String result for GUI."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws DukeException handles the exception when running the Duke bot."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String find(String keyword, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String res \u003d \"\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        List\u003cTask\u003e filteredData \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        for (Task task : data) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            findMatch(task, filteredData, keyword);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        res \u003d ui.printFind(filteredData);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * find all the results that match the keyword."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param task is a particular task."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param filteredData stores the matched result."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param keyword is the searching keyword."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private void findMatch(Task task, List\u003cTask\u003e filteredData, String keyword) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            filteredData.add(task);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 175
    }
  },
  {
    "path": "src/main/java/Duke/Model/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "package duke.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " * Represents a todo event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Constructs a todo event."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param description is the description of a todo event."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Constructs a todo event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param description is the description of a todo event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param isDone whether the task is done or not."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Returns a string representation of the object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return a string representation of the object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 33
    }
  },
  {
    "path": "src/main/java/Duke/Storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.model.Deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.model.DurationTask;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.model.Event;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.model.Task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.model.Todo;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " * Encapsulates the operations related to the I/O of the log file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private final String pathname;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private List\u003cTask\u003e data \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Constructs a storage object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param path the file path."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        this.pathname \u003d path;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Reads data from the log file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return data that represented by a list of Task objects."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws IOException if cannot read files."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public List\u003cTask\u003e readFile() throws IOException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        File filename \u003d new File(pathname);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        InputStreamReader reader \u003d new InputStreamReader(new FileInputStream(filename));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(reader);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        line \u003d br.readLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        while (line !\u003d null) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            char type \u003d line.charAt(8);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            boolean isDone \u003d line.charAt(11) \u003d\u003d \u0027Y\u0027;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            case \u0027T\u0027:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                readTask(line, isDone);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            case \u0027U\u0027:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                readDurationTask(line, isDone);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            case \u0027D\u0027:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                readDeadline(line, isDone);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            case \u0027E\u0027:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                readEvent(line, isDone);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                throw new IOException();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            line \u003d br.readLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return this.data;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Writes the data into the log file."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param data the data that will be stored in the file."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws FileNotFoundException if cannot write into file."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void writeFile(List\u003cTask\u003e data) throws FileNotFoundException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        final PrintStream oldStdout \u003d System.out;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        PrintStream ps \u003d new PrintStream(pathname);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        for (int i \u003d 0; i \u003c data.size(); i++) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            System.out.printf(\"     %d.%s\\n\", i + 1, data.get(i).toString());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        System.setOut(oldStdout);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Converts the words of month into corresponding numbers."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param month word representation of months."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return number representation of months."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws IOException if encounter unrecognised character."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public static int getMonth(String month) throws IOException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        switch (month) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        case \"JAN\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        case \"FEB\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            return 2;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        case \"MAR\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            return 3;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        case \"APR\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            return 4;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        case \"MAY\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            return 5;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        case \"JUN\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            return 6;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        case \"JUL\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            return 7;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        case \"AUG\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            return 8;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        case \"SEP\":"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            return 9;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        case \"OCT\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            return 10;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        case \"NOV\":"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            return 11;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        case \"DEC\":"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            return 12;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            throw new IOException();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * reads in a Task."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param line contains information for Task."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param isDone indicates whether it is done or not."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private void readTask(String line, boolean isDone) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        Todo t \u003d new Todo(line.substring(14), isDone);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        data.add(t);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * reads in a DurationTask."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param line contains information for DurationTask."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param isDone indicates whether it is done or not."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private void readDurationTask(String line, boolean isDone) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String[] parts \u003d line.substring(5).split(\" \");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        int length \u003d parts.length;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        for (int i \u003d 1; i \u003c length - 2; i++) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            description +\u003d parts[i] + \" \";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        DurationTask u \u003d new DurationTask(description,"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                Integer.parseInt(parts[parts.length - 2].substring(1)), isDone);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        data.add(u);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * reads in a Deadline task."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param line contains information for Deadline task."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param isDone indicates whether it is done or not."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws IOException if encounter unrecognised character."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void readDeadline(String line, boolean isDone) throws IOException {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String[] parts \u003d line.substring(5).split(\" \");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        int length \u003d parts.length;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        int year \u003d Integer.parseInt(parts[length - 2]);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        int month \u003d getMonth(parts[length - 4]);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        int day \u003d Integer.parseInt(parts[length - 3]);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        int hour \u003d Integer.parseInt(parts[length - 1].split(\":\")[0]);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        int minute \u003d Integer.parseInt(parts[length - 1].split(\":\")[1].substring("
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                0, parts[length - 1].split(\":\")[1].length() - 1));"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        for (int i \u003d 1; i \u003c length - 5; i++) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            description +\u003d parts[i] + \" \";"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        Deadline d \u003d new Deadline(description, LocalDateTime.of(year, month, day, hour, minute), isDone);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        data.add(d);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * reads in an Event task."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param line contains information for Event task."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param isDone indicates whether it is done or not."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @throws IOException if encounter unrecognised character."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void readEvent(String line, boolean isDone) throws IOException {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String[] parts \u003d line.substring(5).split(\" \");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        int length \u003d parts.length;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        int year \u003d Integer.parseInt(parts[length - 2]);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        int month \u003d getMonth(parts[length - 4]);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        int day \u003d Integer.parseInt(parts[length - 3]);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        int hour \u003d Integer.parseInt(parts[length - 1].split(\":\")[0]);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        int minute \u003d Integer.parseInt(parts[length - 1].split(\":\")[1].substring("
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                0, parts[length - 1].split(\":\")[1].length() - 1));"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        for (int i \u003d 1; i \u003c length - 5; i++) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            description +\u003d parts[i] + \" \";"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        Event e \u003d new Event(description, LocalDateTime.of(year, month, day, hour, minute), isDone);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        data.add(e);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 196
    }
  },
  {
    "path": "src/main/java/Duke/Ui/DukeDialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class DukeDialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private DukeDialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DukeDialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Gets the dialog of Duke."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param text the text of the dialog."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param img the image of Duke."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return a dialog box containing the text and the image of Duke."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public static DukeDialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        var db \u003d new DukeDialogBox(text, img);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 63
    }
  },
  {
    "path": "src/main/java/Duke/Ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * initializes main window."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String response \u003d \"     Hello, I\u0027m Duke! \\n     I can help you manage tasks!\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                + \"     What can I do for you?\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                DukeDialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        );"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Sets a Duke object."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param d Duke object."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private void handleUserInput() throws DukeException, InterruptedException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                UserDialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                DukeDialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        );"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        if (input.equals((\"bye\"))) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 69
    }
  },
  {
    "path": "src/main/java/Duke/Ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.model.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " * Encapsulates the user interaction."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Displays the loading error."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return String result for GUI"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return \"Failed to load the file.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Displays the number format error."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return String result for GUI"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String showNumberFormatError() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return \"      OOPS!!! Please follow the correct format.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Displays the potential error when running the Duke bot."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param e an exception object which contains the error message."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return String result for GUI"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String showDukeError(DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return e.toString().substring(30);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Displays the file not found error."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return String result for GUI"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String showFileNotFoundError() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return \"      OOPS!!! File is not found.\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Display the date time error."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return String result for GUI"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String showDateTimeError() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return \"      OOPS!!! Please enter a valid date and time.\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Displays the list of the todo events."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param data the list of the todo events."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return String result for GUI"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String printList(List\u003cTask\u003e data) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String res \u003d \"\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        res +\u003d \"     Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        for (int i \u003d 0; i \u003c data.size(); i++) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            res +\u003d \"     \" + (i + 1) + \".\" + data.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Displays the message to inform the success of Done operation."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param data the list of the events."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param n the label of the event that will set to be done."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return String result for GUI"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String printDone(List\u003cTask\u003e data, int n) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return \"    Nice! I\u0027ve marked this task as done: \\n     \""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                + data.get(n).toString();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Displays the first part of the message to inform the success of Delete operation."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param data the list of the events."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param n the label of the event that will be deleted."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return String result for GUI"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String printDeletePre(List\u003cTask\u003e data, int n) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return \"     Noted. I\u0027ve removed this task: \\n     \""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                + data.get(n).toString();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Displays the second part of the message to inform the success of Delete operation."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param data the list of the events."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param n the label of the event that will be deleted."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return String result for GUI"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String printDeletePost(List\u003cTask\u003e data, int n) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return \"\\n     Now you have \" + data.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Displays the message to inform the success of adding task operation."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param data the list of the task."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param t the task that will be added."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return String result for GUI."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String printTask(List\u003cTask\u003e data, Task t) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return \"     Got it. I\u0027ve added this task: \\n       \" + t.toString() + \"\\n\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                + \"     Now you have \" + data.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Displays the result of all the tasks that contains the keyword."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param data the list of the events."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return String result for GUI"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public String printFind(List\u003cTask\u003e data) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        String res \u003d \"\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        res +\u003d \"     Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        for (int i \u003d 0; i \u003c data.size(); i++) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            res +\u003d \"     \" + (i + 1) + \".\" + data.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 123
    }
  },
  {
    "path": "src/main/java/Duke/Ui/UserDialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class UserDialogBox extends HBox {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    private UserDialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/UserDialogBox.fxml\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * Gets the dialog of User."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param text the text of the dialog."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @param img the image of User."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     * @return a dialog box containing the text and the image of User."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public static UserDialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        UserDialogBox db \u003d new UserDialogBox(text, img);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 47
    }
  },
  {
    "path": "src/main/resources/view/DukeDialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "         minHeight\u003d\"-Infinity\" prefWidth\u003d\"500.0\" style\u003d\"-fx-background-radius: 15px;\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/\" xmlns:fx\u003d\"http://javafx.com/fxml/\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" styleClass\u003d\"dialogText\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "           stylesheets\u003d\"@DukeDialogBox.css\" text\u003d\"Label\" textFill\u003d\"#4d4c4c\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "  \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "  \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 19
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            prefHeight\u003d\"600.0\" prefWidth\u003d\"500.0\" xmlns\u003d\"http://javafx.com/javafx/\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            xmlns:fx\u003d\"http://javafx.com/fxml/\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"406.0\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "               promptText\u003d\"Enter your command here...\" styleClass\u003d\"textFieldStyle\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "               stylesheets\u003d\"@MainWindow.css\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"406.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            prefHeight\u003d\"41.0\" prefWidth\u003d\"94.0\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            style\u003d\"-fx-background-radius: 10; -fx-background-color: #8EE5EE; -fx-font-weight: bold;\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            styleClass\u003d\"buttonStyle\" stylesheets\u003d\"@MainWindow.css\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            text\u003d\"Send\" textAlignment\u003d\"JUSTIFY\" textFill\u003d\"#3368a0\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "         \u003c/font\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"500.0\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "                style\u003d\"-fx-background-color: #DCDCDC;\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"559.0\" prefWidth\u003d\"499.0\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "              style\u003d\"-fx-background-image: url(\u0026quot;/images/bp.jpg\u0026quot;);\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 33
    }
  },
  {
    "path": "src/main/resources/view/UserDialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "         minHeight\u003d\"-Infinity\" prefWidth\u003d\"500.0\" style\u003d\"-fx-background-radius: 15px;\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/\" xmlns:fx\u003d\"http://javafx.com/fxml/\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" styleClass\u003d\"dialogText\" stylesheets\u003d\"@UserDialogBox.css\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "           text\u003d\"Label\" textFill\u003d\"#4d4c4c\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "            \u003cFont size\u003d\"16.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "         \u003c/font\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "  \u003cpadding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "  \u003c/padding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 23
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import duke.model.Todo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void test1() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        Todo t \u003d new Todo(\"Task1\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        assertEquals(t.toString(), \"[T][N] Task1\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    public void test2() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        Todo t \u003d new Todo(\"Task2\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        t.done();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "        assertEquals(t.toString(), \"[T][Y] Task2\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 19
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Perpetual09": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "Perpetual09": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Perpetual09"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "Perpetual09": 1
    }
  }
]
