[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00276.0.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 17,
      "-": 44
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "1.[T][✓] study"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "2.[T][✘] work"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "3.[T][✘] read"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "ethanso56": 4
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * Represents a task that has a deadline."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public Deadline(String name, String date) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        this.date \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return \"[D]\" + super.getStatusIcon() + \" \" + super.getTaskName() + \" (by: \" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")) + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 23
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 62
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * Represents a task manager bot named Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private Gui gui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public Duke(String filePath) throws IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            tasks \u003d new TaskList(storage.loadTask());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public Duke() throws IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        gui \u003d new Gui();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        storage \u003d new Storage(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            tasks \u003d new TaskList(storage.loadTask());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            gui.showLoadingError();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static void main(String[] args) throws DukeException, IOException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        new Duke(\"data/tasks.txt\").runBot();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void runBot() throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        ui.introduce();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            parser.interpret(input, tasks, storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        ui.printExit();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public String getResponseGui(String input) throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        GuiParser guiParser \u003d new GuiParser();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return guiParser.interpretGui(input, tasks, storage);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 59,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeEmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * Represents exception signifying an empty description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class DukeEmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @param command String of command to be executed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public DukeEmptyDescriptionException(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        super(\"OOPS!!! The description of a \" + command + \" cannot be empty.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 15
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 9
    }
  },
  {
    "path": "src/main/java/duke/DukeInvalidTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * Represents exception that signifies an invalid task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class DukeInvalidTaskException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public DukeInvalidTaskException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        super(\"List does not have that task.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 14
    }
  },
  {
    "path": "src/main/java/duke/DukeLoadTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * Represents an exception that signifies an error when loading tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class DukeLoadTaskException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public DukeLoadTaskException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that line in the txt file means.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 14
    }
  },
  {
    "path": "src/main/java/duke/DukeUnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * Represents exception signifying an unknown command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class DukeUnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public DukeUnknownCommandException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means. Please enter your task \" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \"with the starting keyword \\\"todo\\\" or \\\"deadline\\\" or \\\"event\\\".\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 15
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * Represents a task that takes place on a date."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public Event(String name, String date) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        this.date \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return \"[E]\" + super.getStatusIcon() + \" \" + super.getTaskName() + \" (at: \" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")) + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 23
    }
  },
  {
    "path": "src/main/java/duke/Gui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class Gui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public Gui() {}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return \"The test file cannot be loaded properly.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 10
    }
  },
  {
    "path": "src/main/java/duke/GuiParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * Represents a parser object that interprets user inputs."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class GuiParser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public GuiParser() {}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Interprets the given user input with the current task list and storage."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @param input Current input string of the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @param taskList Current list of tasks of the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @param storage Current storage of the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public String interpretGui(String input, TaskList taskList, Storage storage)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assert taskList !\u003d null : \"TaskList should not be null\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assert storage !\u003d null : \"Storage should not be null\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d taskList.getList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            return showListGui(list);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (input.equals(\"help\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            return helpInterface();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (input.contains(\" \")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            int i \u003d input.indexOf(\" \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            String firstWord \u003d input.substring(0, i);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            switch (firstWord) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    return setDoneGui(input, i, list, storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    return dealWithDeleteGui(input, i, taskList, list, storage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    return dealWithTodoGui(input, i, taskList, list, storage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    return dealWithDeadlineGui(input, i, taskList, list, storage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    return dealWithEventGui(input, i, taskList, list, storage);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    return dealWithFindGui(input, i, list);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    throw new DukeUnknownCommandException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            switch (input) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    throw new DukeEmptyDescriptionException(\"todo\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    throw new DukeEmptyDescriptionException(\"deadline\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    throw new DukeEmptyDescriptionException(\"event\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    throw new DukeUnknownCommandException();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Returns a help interface."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private String helpInterface() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String helpInterface \u003d \"List of available commands: \\ntodo - creates a todo (e.g todo read book)\" +"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \"\\ndeadline - creates a deadline with a date (e.g deadline return book /by 2019-10-15)\" +"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \"\\nevent - creates an event with a date (e.g event go library /at 2019-10-15)\" +"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \"\\ndone - sets item at index to done (e.g done 1)\" +"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \"\\ndelete - deletes item at index (e.g delete 1)\" +"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \"\\nfind - finds task (e.g find book)\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return helpInterface;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private String showListGui(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assert list !\u003d null : \"List object should not be null\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            return \"List is empty.\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            StringBuilder listOutput \u003d new StringBuilder();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            for (int j \u003d 0; j \u003c list.size(); j++) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                int num \u003d j + 1;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                Task task \u003d list.get(j);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                listOutput.append(num + \".\" + task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            return listOutput.toString();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private String setDoneGui(String input, int indexOfSpace, ArrayList\u003cTask\u003e list, Storage storage) throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assert indexOfSpace \u003e -1 : \"Index of space should not be negative\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        int num \u003d Integer.parseInt(input.substring(indexOfSpace + 1));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (list.size() \u003c num) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            throw new DukeInvalidTaskException();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            Task taskToSetToDone \u003d list.get(num - 1);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            taskToSetToDone.setDone();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            storage.update(list);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            return \"Nice! I\u0027ve marked this task as done:\" + \"\\n\" + taskToSetToDone.toString();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private String dealWithDeleteGui(String input, int indexOfSpace, TaskList taskList, ArrayList\u003cTask\u003e list, Storage storage)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assert indexOfSpace \u003e -1 : \"Index of space should not be negative\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        int num \u003d Integer.parseInt(input.substring(indexOfSpace + 1));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (list.size() \u003c num) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            throw new DukeInvalidTaskException();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            Task taskToDelete \u003d list.get(num - 1);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            taskList.remove(num - 1);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            storage.update(list);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            return \"Noted. I\u0027ve removed this task:\" + \"\\n\" + taskToDelete.toString() + \"\\n\" + \"Now you have \" +"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    list.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private String dealWithTodoGui(String input, int indexOfSpace, TaskList taskList, ArrayList\u003cTask\u003e list, Storage storage)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            throws FileNotFoundException {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assert indexOfSpace \u003e -1 : \"Index of space should not be negative\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String todoName \u003d input.substring(indexOfSpace + 1);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Todo newTodo \u003d new Todo(todoName);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        taskList.add(newTodo);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        storage.update(list);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String str \u003d \"Got it. I\u0027ve added this task:\" + \"\\n\" + newTodo.toString() + \"\\n\" + \"Now you have \" +"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                list.size() + \" task in the list.\";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private String dealWithDeadlineGui(String input, int indexOfSpace, TaskList taskList, ArrayList\u003cTask\u003e list, Storage storage)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            throws FileNotFoundException {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assert indexOfSpace \u003e -1 : \"Index of space should not be negative\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        int index \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String deadlineName \u003d input.substring(indexOfSpace + 1, index);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String deadlineTime \u003d input.substring(index + 4);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(deadlineName, deadlineTime);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        taskList.add(newDeadline);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        storage.update(list);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String str \u003d \"Got it. I\u0027ve added this task:\" + \"\\n\" + newDeadline.toString() + \"\\n\" + \"Now you have \" +"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                list.size() + \" task in the list.\";"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private String dealWithEventGui(String input, int indexOfSpace, TaskList taskList, ArrayList\u003cTask\u003e list, Storage storage)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            throws FileNotFoundException {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assert indexOfSpace \u003e -1 : \"Index of space should not be negative\";"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        int index \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String eventName \u003d input.substring(indexOfSpace + 1, index);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String eventTime \u003d input.substring(index + 4);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Event newEvent \u003d new Event(eventName, eventTime);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        taskList.add(newEvent);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        storage.update(list);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String str \u003d \"Got it. I\u0027ve added this task:\" + \"\\n\" + newEvent.toString() + \"\\n\" + \"Now you have \" +"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                list.size() + \" task in the list.\";"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private String dealWithFindGui(String input, int indexOfSpace, ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assert indexOfSpace \u003e -1 : \"Index of space should not be negative\";"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String nameOfItemToBeFound \u003d input.substring(indexOfSpace + 1);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        // search the list of the item to be found, add them to a new list and print them out"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        for (Task task: list) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            Boolean found \u003d Arrays.asList(task.getTaskName().split(\" \")).contains(nameOfItemToBeFound);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            if (found) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                newList.add(task);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (newList.isEmpty()) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            return \"We are unable to find any task that match your query.\";"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            StringBuilder listOutput \u003d new StringBuilder();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            for (int j \u003d 0; j \u003c newList.size(); j++) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                int num \u003d j + 1;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                Task task \u003d newList.get(j);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                listOutput.append(num + \".\" + task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            String str \u003d \"Here are the matching tasks in your list:\" + \"\\n\" + listOutput;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            return str;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 206
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Application.launch(Main.class, args);    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 11
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public Main() throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 35
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/ethan.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/anotherEthan.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        printIntro();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private void handleUserInput() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String response \u003d duke.getResponseGui(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private void printIntro() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        DialogBox intro \u003d DialogBox.getDukeDialog(\"Hello from Duke! What can I do for you?\", new Image(this.getClass().getResourceAsStream(\"/images/anotherEthan.png\")));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        dialogContainer.getChildren().addAll(intro);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 60
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * Represents a parser object that interprets user inputs."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public Parser() {}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Interprets the given user input with the current task list and storage."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @param input Current input string of the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @param taskList Current list of tasks of the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @param storage Current storage of the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void interpret(String input, TaskList taskList, Storage storage)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assert taskList !\u003d null : \"TaskList should not be null\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assert storage !\u003d null : \"Storage should not be null\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d taskList.getList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            showList(list);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (input.equals(\"help\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            showHelpInterface();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (input.contains(\" \")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            int i \u003d input.indexOf(\" \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            String firstWord \u003d input.substring(0, i);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            switch (firstWord) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    setDone(input, i, list, storage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    dealWithDelete(input, i, taskList, list, storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    dealWithTodo(input, i, taskList, list, storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    dealWithDeadline(input, i, taskList, list, storage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    dealWithEvent(input, i, taskList, list, storage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    dealWithFind(input, i, list);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    throw new DukeUnknownCommandException();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            switch (input) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    throw new DukeEmptyDescriptionException(\"todo\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    throw new DukeEmptyDescriptionException(\"deadline\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    throw new DukeEmptyDescriptionException(\"event\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    throw new DukeUnknownCommandException();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Prints the help interface."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private void showHelpInterface() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        System.out.println(\"List of available commands: \\ntodo - creates a todo (e.g todo read book)\" +"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \"\\ndeadline - creates a deadline with a date (e.g deadline return book /by 2019-10-15)\" +"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \"\\nevent - creates an event with a date (e.g event go library /at 2019-10-15)\" +"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \"\\ndone - sets item at index to done (e.g done 1)\" +"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \"\\ndelete - deletes item at index (e.g delete 1)\" +"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \"\\nfind - finds task (e.g find book)\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private void showList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assert list !\u003d null : \"List object should not be null\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            System.out.println(\"List is empty.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            StringBuilder listOutput \u003d new StringBuilder();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            for (int j \u003d 0; j \u003c list.size(); j++) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                int num \u003d j + 1;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                Task task \u003d list.get(j);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                listOutput.append(num + \".\" + task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            System.out.println(listOutput);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private void setDone(String input, int indexOfSpace, ArrayList\u003cTask\u003e list, Storage storage)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assert indexOfSpace \u003e -1 : \"Index of space should not be negative\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        int num \u003d Integer.parseInt(input.substring(indexOfSpace + 1));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (list.size() \u003c num) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            throw new DukeInvalidTaskException();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            Task taskToSetToDone \u003d list.get(num - 1);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            taskToSetToDone.setDone();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\" + \"\\n\" + taskToSetToDone.toString());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            storage.update(list);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private void dealWithDelete(String input, int indexOfSpace, TaskList taskList, ArrayList\u003cTask\u003e list, Storage storage)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assert indexOfSpace \u003e -1 : \"Index of space should not be negative\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        int num \u003d Integer.parseInt(input.substring(indexOfSpace + 1));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (list.size() \u003c num) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            throw new DukeInvalidTaskException();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            taskList.remove(num-1);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            storage.update(list);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private void dealWithTodo(String input, int indexOfSpace, TaskList taskList, ArrayList\u003cTask\u003e list, Storage storage)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            throws FileNotFoundException {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assert indexOfSpace \u003e -1 : \"Index of space should not be negative\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String todoName \u003d input.substring(indexOfSpace + 1);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Todo newTodo \u003d new Todo(todoName);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        taskList.add(newTodo);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        storage.update(list);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private void dealWithDeadline(String input, int indexOfSpace, TaskList taskList, ArrayList\u003cTask\u003e list, Storage storage)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            throws FileNotFoundException {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assert indexOfSpace \u003e -1 : \"Index of space should not be negative\";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        int index \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String deadlineName \u003d input.substring(indexOfSpace + 1, index);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String deadlineTime \u003d input.substring(index + 4);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(deadlineName, deadlineTime);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        taskList.add(newDeadline);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        storage.update(list);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private void dealWithEvent(String input, int indexOfSpace, TaskList taskList, ArrayList\u003cTask\u003e list, Storage storage)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            throws FileNotFoundException {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assert indexOfSpace \u003e -1 : \"Index of space should not be negative\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        int index \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String eventName \u003d input.substring(indexOfSpace + 1, index);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String eventTime \u003d input.substring(index + 4);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Event newEvent \u003d new Event(eventName, eventTime);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        taskList.add(newEvent);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        storage.update(list);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private void dealWithFind(String input, int indexOfSpace, ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assert indexOfSpace \u003e -1 : \"Index of space should not be negative\";"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String nameOfItemToBeFound \u003d input.substring(indexOfSpace + 1);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        for (Task task: list) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            Boolean found \u003d Arrays.asList(task.getTaskName().split(\" \")).contains(nameOfItemToBeFound);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            if (found) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                newList.add(task);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (newList.isEmpty()) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            System.out.println(\"We are unable to find any task that match your query.\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            StringBuilder listOutput \u003d new StringBuilder();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            for (int j \u003d 0; j \u003c newList.size(); j++) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                int num \u003d j + 1;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                Task task \u003d newList.get(j);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                listOutput.append(num + \".\" + task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            System.out.println(listOutput);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 193
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * Represents a storage object that deals with outputting and inputting tasks from a tasks.txt file."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private BufferedReader br;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private PrintWriter printWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private ArrayList\u003cduke.Task\u003e list;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public BufferedReader getBr() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return br;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public PrintWriter getPrintWriter() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return printWriter;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void setBr(BufferedReader br) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        this.br \u003d br;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void setPrintWriter(PrintWriter printWriter) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        this.printWriter \u003d printWriter;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void setList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void setFilePath(String filePath) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public Storage(String filePath) throws IOException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assert filePath !\u003d null : \"FilePath should not be null\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            setFilePath(filePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            setBr(new BufferedReader(new FileReader(filePath)));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            setFilePath(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            String directoryName \u003d \"data\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            String fileName \u003d \"tasks.txt\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            File directory \u003d new File(directoryName);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            if (!directory.exists()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                directory.mkdir();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            File file \u003d new File(directoryName + \"/\" + fileName);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            setBr(new BufferedReader(new FileReader(\"data/tasks.txt\")));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            setPrintWriter(new PrintWriter(\"data/tasks.txt\"));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Loads the tasks.txt file when the bot is run."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @throws DukeLoadTaskException"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public ArrayList\u003cTask\u003e loadTask() throws IOException, DukeLoadTaskException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String lineOfText \u003d getBr().readLine();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (lineOfText \u003d\u003d null) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        while (!lineOfText.isEmpty()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            boolean isDone \u003d String.valueOf(lineOfText.charAt(6)).equals(\"\\u2713\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            String icon \u003d String.valueOf(lineOfText.charAt(3));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            switch (icon) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    loadTodo(lineOfText, isDone, list);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    loadDeadline(lineOfText, isDone, list);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    loadEvent(lineOfText, isDone, list);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                    throw new DukeLoadTaskException();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            lineOfText \u003d this.br.readLine();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        setList(list);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Loads an Event into the storage."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @param lineOfText A line of text in the text file."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @param isDone Whether the event is done."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @param list Task list."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private void loadEvent(String lineOfText, boolean isDone, ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        int indexOfColon \u003d lineOfText.indexOf(\":\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String name \u003d lineOfText.substring(9, indexOfColon - 4);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String date \u003d lineOfText.substring(indexOfColon + 2, lineOfText.length() - 1);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Event event \u003d new Event(name, date);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            event.setDone();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        list.add(event);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Loads a Deadline into the storage."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @param lineOfText A line of text in the text file."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @param isDone Whether the deadline is done."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @param list Task list."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private void loadDeadline(String lineOfText, boolean isDone, ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        int indexOfColon \u003d lineOfText.indexOf(\":\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String name \u003d lineOfText.substring(9, indexOfColon - 4);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String date \u003d lineOfText.substring(indexOfColon + 2, lineOfText.length() - 1);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Deadline deadline \u003d new Deadline(name, date);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            deadline.setDone();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        list.add(deadline);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Loads a Todo into the storage."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @param lineOfText A line of text in the txt file."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @param isDone Whether the task is done."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @param list Task list."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private void loadTodo(String lineOfText, boolean isDone, ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Todo todo \u003d new Todo(lineOfText.substring(9));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            todo.setDone();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        list.add(todo);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Updates the tasks.txt file whenever a task is added or removed from the task list."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     *"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @param list Task list."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void update(ArrayList\u003cTask\u003e list) throws FileNotFoundException {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        setPrintWriter(new PrintWriter(filePath));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        setList(list);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        StringBuilder listOutput \u003d new StringBuilder();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        for (int j \u003d 0; j \u003c list.size(); j++) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            int num \u003d j + 1;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            Task task \u003d list.get(j);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            listOutput.append(num + \".\" + task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String text \u003d listOutput.toString();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        getPrintWriter().println(text);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        getPrintWriter().close();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 171
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * Represents a task object."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private Boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @return String that represents a tick or X icon."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return this.getStatusIcon() + \" \" + this.getTaskName();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 35
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * Represents a list of tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Adds a task to the end of the list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assert task !\u003d null : \"Task should not be null\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        getList().add(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String strToPrint \u003d \"Got it. I\u0027ve added this task:\" + \"\\n\" + task.toString() + \"\\n\" + \"Now you have \" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                list.size() + \" task in the list.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        System.out.println(strToPrint);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Removes the task at the specified index from the list of tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * @param index Index of task to be removed from list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void remove(int index) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assert index \u003e -1 : \"Index should not be negative\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        Task taskToDelete \u003d list.get(index);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        getList().remove(index);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\" + \"\\n\" + taskToDelete.toString() + \"\\n\" + \"Now you have \" +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 51
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * Represents a task that does not have a date attached to it."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        return \"[T]\" + super.getStatusIcon() + \" \" + super.getTaskName();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 16
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " * Represents the user interface that outputs information to the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public Ui() {}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        System.out.println(\"The test file cannot be loaded properly.\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     * Introduces the bot."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void introduce() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void printExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 30
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"1.7976931348623157E308\"  prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" \u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" maxHeight\u003d\"Infinity\"/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" maxHeight\u003d\"Infinity\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" maxHeight\u003d\"Infinity\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 19
    }
  },
  {
    "path": "src/test/java/duke/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertEquals(\"[D][\\u2718] return book (by: 2019-10-15)\", new Deadline(\"return book\", \"2019-10-15\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 13
    }
  },
  {
    "path": "src/test/java/duke/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertEquals(\"[E][\\u2718] Sister birthday (at: 2019-10-15)\", new Event(\"Sister birthday\", \"2019-10-15\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 12
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import org.junit.jupiter.api.DynamicTest;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "//    public void test() throws IOException, DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "//        assertEquals(new duke.DukeException(\"OOPS!!! The description of a todo cannot be empty.\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "//                new Parser().interpret(\"todo\", new duke.TaskList(), new duke.Storage(\"data/tasks.txt\")));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 16
    }
  },
  {
    "path": "src/test/java/duke/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethanso56"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "        assertEquals(\"[T][\\u2718] read book\", new Todo(\"read book\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "todo borrow book"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethanso56"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "ethanso56": 1,
      "-": 37
    }
  }
]
