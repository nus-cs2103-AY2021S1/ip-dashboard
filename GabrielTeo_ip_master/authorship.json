[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    systemProperty \"file.encoding\", \"utf-8\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    systemProperty \"file.encoding\", \"utf-8\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "compileJava.options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "tasks.withType(JavaCompile) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 27,
      "-": 44
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "[T] @ [✓] @ borrow book @ "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "[T] @ [✓] @ read book @ "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "[D] @ [✘] @ return book @ Jun 6 2020"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "[E] @ [✘] @ project meeting @ Aug 6th 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "[T] @ [✓] @ join sports club @ "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "[D] @ [✘] @ CS2103T tutorial @ Sep 13 2020 1159 PM"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "[E] @ [✘] @ lunch with friends @ Sunday 12pm"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "[D] @ [✘] @ submit report @ Sep 23 2020 1100 PM"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 8
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " * The Deadline class represents tasks that have a deadline."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Constructor which takes in a description of the task name and stores a LocalDate."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param description name of the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param date date of deadline"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public Deadline(String description, LocalDate date) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        symbol \u003d \"[D]\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Constructor which takes in a description of the task name"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * and stores a LocalDateTime for time-specific tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param description name of the task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param dateTime date and time of deadline"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public Deadline(String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        symbol \u003d \"[D]\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return (getSymbol() + super.toString() + \" (by: \" + getDate() + \")\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 40
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        db.setMinSize(DialogBox.USE_PREF_SIZE, DialogBox.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        db.setMinSize(DialogBox.USE_PREF_SIZE, DialogBox.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 64
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " * The Duke program implements an application that stores and keeps track of tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Constructor to take in a specified filepath to create a Duke object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public Duke() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        storage \u003d new Storage(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Calls the Duke UI to initialise and run."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @throws IOException produced by failed or interrupted I/O operations"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @throws DukeException thrown if the Duke program does not recognise user input"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void run() throws IOException, DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        Parser parser \u003d new Parser(ui);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        parser.parse(tasks, Storage.getFilePath());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public String getResponse(String input) throws IOException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return Parser.parse(input, tasks, Storage.getFilePath());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Creates a new Duke object with a specified filepath and runs it."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param args arguments for main function"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            new Duke().run();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 54,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " * The DukeException class throws an exception if the Duke program"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " * does not recognise an input from the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    DukeException(String s) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 11
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " * The Event class represents tasks that have a duration period."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Constructor which takes in a description of the task name and stores a duration period."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param description name of the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param by period of the event duration"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public Event(String description, String by) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        symbol \u003d \"[E]\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return (getSymbol() + super.toString() + \" (at: \" + getDate() + \")\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 24
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public Main() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 35
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Initializes the window when Duke starts up."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        String logo \u003d \"      ▄▀▄     ▄▀▄\\n\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    \"     ▄█░░▀▀▀▀▀░░█▄\\n\" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    \" ▄▄  █░░░░░░░░░░░█  ▄▄\\n\" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    \"█▄▄█ █░░▀░░┬░░▀░░█ █▄▄█\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        logo +\u003d \"\\n█▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀█\\uD83C\\uDF3C\\n\" +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                \"█░░╦─╦╔╗╦─╔╗╔╗╔╦╗╔╗░░█\\uD83C\\uDF3C\\n\" +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                \"█░░║║║╠─║─║─║║║║║╠─░░█\\uD83C\\uDF3C\\n\" +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                \"█░░╚╩╝╚╝╚╝╚╝╚╝╩─╩╚╝░░█\\uD83C\\uDF3C\\n\" +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                \"█▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄█\\uD83C\\uDF3C\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        String welcome \u003d logo + \"\\nHello! I\u0027m Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(welcome, dukeImage));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private void handleUserInput() throws IOException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        );"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 70
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " * The Parser class deals with making sense of the user command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private static TaskList taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private static String filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Constructor which takes in a UI and initialises its ui field member."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param ui a UI for the Duke object"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public Parser(Ui ui) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Decides on the relevant actions to execute based on the input of the user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param taskList TaskList object that contains a list of tasks"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param filePath the path location of the load or save file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @throws DukeException thrown if the Duke program does not recognise user input"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @throws IOException   produced by failed or interrupted I/O operations"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public static void parse(TaskList taskList, String filePath) throws DukeException, IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        label:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            String[] arrOfStr \u003d line.split(\" \", 0);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            String identifier \u003d arrOfStr[0];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            switch (identifier) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    ui.exit();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    break label;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    ui.list(taskList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                case \"done\": {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    // mark as done"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    int index \u003d Integer.parseInt(arrOfStr[1]) - 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    ui.markDone(taskList, index);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    Storage.updateFile(filePath, taskList);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                case \"delete\": {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    // delete"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    int index \u003d Integer.parseInt(arrOfStr[1]) - 1;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    taskList.delete(index);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    // find"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    String textToMatch \u003d arrOfStr[1];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    ui.findMatching(taskList, textToMatch);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                case \"help\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    // help"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    ui.help();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    // add to list"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    if ((identifier.equals(\"todo\") || identifier.equals(\"deadline\") || identifier.equals(\"event\"))"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                            \u0026\u0026 arrOfStr.length \u003c 2) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of a \" + identifier + \" cannot be empty.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        Task task;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        switch (identifier) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                            case \"todo\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                String[] newArrOfStr \u003d line.split(\" \", 2);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                task \u003d new Todo(newArrOfStr[1]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                            case \"deadline\": {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                String[] firstSplit \u003d line.split(\" /by \", 2);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                String[] secondSplit \u003d firstSplit[0].split(\" \", 2);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                String description \u003d secondSplit[1];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                String date \u003d firstSplit[1];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                String[] dateSplit \u003d date.split(\" \", 0);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                if (dateSplit.length \u003e 1) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                    LocalDateTime localDateTime \u003d LocalDateTime.parse(date, formatter);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                    task \u003d new Deadline(description, localDateTime);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                    LocalDate localDate \u003d LocalDate.parse(date, formatter);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                    task \u003d new Deadline(description, localDate);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                            case \"event\": {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                String[] firstSplit \u003d line.split(\" /at \", 2);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                String by \u003d firstSplit[1];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                String[] secondSplit \u003d firstSplit[0].split(\" \", 2);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                String description \u003d secondSplit[1];"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                task \u003d new Event(description, by);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                            default:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                                + \"Type \\\"help\\\" for a list of commands\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        taskList.add(task);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private static String executeByeCommand() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return (\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private static String executeListCommand() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        if (taskList.getTasks().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            output +\u003d \"You have no tasks in your list!\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            output +\u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            for (Task task : taskList.getTasks()) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                int index \u003d taskList.getTasks().indexOf(task) + 1;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                output +\u003d (index + \".\" + task + \"\\n\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        assert taskList.getTasks().size() \u003e\u003d 0;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private static String executeDoneCommand(String[] arrOfStr) throws IOException {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        int index \u003d Integer.parseInt(arrOfStr[1]) - 1;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        Task oldTask \u003d taskList.getTasks().get(index);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        Task newTask \u003d oldTask.markAsDone();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        taskList.replace(oldTask, newTask);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        Storage.updateFile(filePath, taskList);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        String output \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        output +\u003d (newTask.getStatusIcon() + \" \" + newTask.description);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private static String executeDeleteCommand(String[] arrOfStr) throws IOException {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        int index \u003d Integer.parseInt(arrOfStr[1]) - 1;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        Task task \u003d taskList.getTasks().get(index);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        taskList.delete(index);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        List\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        String output \u003d (\"Noted. I\u0027ve removed this task:\\n\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        output +\u003d (task + \"\\n\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        output +\u003d (\"Now you have \" + (tasks.size() !\u003d 1"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                ? tasks.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                : tasks.size() + \" task in the list.\"));"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        assert taskList.getTasks().size() \u003e\u003d 0;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private static String executeFindCommand(String[] arrOfStr) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        boolean canFind \u003d false;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        String textToMatch \u003d arrOfStr[1];"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        String output \u003d (\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        for (Task task : taskList.getTasks()) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            String description \u003d task.getDescription();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            if (description.contains(textToMatch)) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                output +\u003d (index + \".\" + task + \"\\n\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                canFind \u003d true;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        if (!canFind) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            output \u003d (\"There are no matching tasks in your list!\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private static String executeHelpCommand() {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        String output \u003d \" Command │       Description        │                   Usage\\n\""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                + \"─────────┼──────────────────────────┼───────────────────────────────────────────\\n\""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                + \"bye      │ exits the program        │ bye\\n\""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                + \"list     │ list all current tasks   │ list\\n\""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                + \"done     │ marks a task done        │ done {task number}\\n\""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                + \"delete   │ deletes a task           │ delete {task number}\\n\""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                + \"find     │ finds all matching tasks │ find {text to match}\\n\""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                + \"help     │ displays help menu       │ help\\n\""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                + \"todo     │ adds a todo task         │ todo {task name}\\n\""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                + \"deadline │ adds a deadline task     │ deadline {task name} /by {dd/MM/yyyy HHmm}\\n\""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                + \"event    │ adds an event task       │ event {task name} /at {duration}\";"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private static String executeEmptyDescriptionCommand(String identifier) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return (\"☹ OOPS!!! The description of a \" + identifier + \" cannot be empty.\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private static String executeTodoCommand(String input) throws IOException {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        String[] newArrOfStr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        task \u003d new Todo(newArrOfStr[1]);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        List\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        String output \u003d (\"Got it. I\u0027ve added this task:\\n\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        output +\u003d (task + \"\\n\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        output +\u003d (\"Now you have \" + (tasks.size() !\u003d 1"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                ? tasks.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                : tasks.size() + \" task in the list.\"));"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        assert taskList.getTasks().size() \u003e\u003d 0;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private static String executeDeadlineCommand(String input) throws IOException {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        String[] firstSplit \u003d input.split(\" /by \", 2);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        String[] secondSplit \u003d firstSplit[0].split(\" \", 2);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        String description \u003d secondSplit[1];"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        String date \u003d firstSplit[1];"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        String[] dateSplit \u003d date.split(\" \", 0);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        if (dateSplit.length \u003e 1) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            LocalDateTime localDateTime \u003d LocalDateTime.parse(date, formatter);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            task \u003d new Deadline(description, localDateTime);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            LocalDate localDate \u003d LocalDate.parse(date, formatter);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            task \u003d new Deadline(description, localDate);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        List\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        String output \u003d (\"Got it. I\u0027ve added this task:\\n\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        output +\u003d (task + \"\\n\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        output +\u003d (\"Now you have \" + (tasks.size() !\u003d 1"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                ? tasks.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                : tasks.size() + \" task in the list.\"));"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        assert taskList.getTasks().size() \u003e\u003d 0;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private static String executeEventCommand(String input) throws IOException {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        String[] firstSplit \u003d input.split(\" /at \", 2);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        String by \u003d firstSplit[1];"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        String[] secondSplit \u003d firstSplit[0].split(\" \", 2);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        String description \u003d secondSplit[1];"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        task \u003d new Event(description, by);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        List\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        String output \u003d (\"Got it. I\u0027ve added this task:\\n\");"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        output +\u003d (task + \"\\n\");"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        output +\u003d (\"Now you have \" + (tasks.size() !\u003d 1"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                ? tasks.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                : tasks.size() + \" task in the list.\"));"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        assert taskList.getTasks().size() \u003e\u003d 0;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private static String executeWrongInputCommand() {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        String output \u003d (\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        output +\u003d (\"Type \\\"help\\\" for a list of commands\");"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Alternative interact method for GUI."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Decides on the relevant actions to execute based on the input of the user."
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param input    user input to be parsed"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param newTaskList TaskList object that contains a list of tasks"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param newFilePath the path location of the load or save file"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @throws IOException produced by failed or interrupted I/O operations"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public static String parse(String input, TaskList newTaskList, String newFilePath) throws IOException {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        taskList \u003d newTaskList;"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        filePath \u003d newFilePath;"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        String[] arrOfStr \u003d input.split(\" \", 0);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        String identifier \u003d arrOfStr[0];"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        switch (identifier) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                return executeByeCommand();"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            case \"list\": {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                return executeListCommand();"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            case \"done\": {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                return executeDoneCommand(arrOfStr);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            case \"delete\": {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                return executeDeleteCommand(arrOfStr);"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            case \"find\": {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                return executeFindCommand(arrOfStr);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            case \"help\": {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                return executeHelpCommand();"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                // add to list"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                if ((identifier.equals(\"todo\") || identifier.equals(\"deadline\")"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        || identifier.equals(\"event\")) \u0026\u0026 arrOfStr.length \u003c 2) {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    return executeEmptyDescriptionCommand(identifier);"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    switch (identifier) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        case \"todo\":"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                            return executeTodoCommand(input);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        case \"deadline\": {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                            return executeDeadlineCommand(input);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        case \"event\": {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                            return executeEventCommand(input);"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        default:"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                            return executeWrongInputCommand();"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 329
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " * The Storage class deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private static String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Constructor which takes in a specified filepath to create a Storage object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param filePath the path location of the load or save file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Reads from the file specified by the filepath and creates each Task object"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * to be stored a List of tasks so it can be passed as a parameter into"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * a TaskList object so that it can be tracked."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @return a List of tasks"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @throws IOException produced by failed or interrupted I/O operations"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public List\u003cTask\u003e load() throws IOException, DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        if (!f.exists()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            f.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            String[] arrOfStr \u003d line.split(\" @ \", 0);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            String symbol \u003d arrOfStr[0];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            String status \u003d arrOfStr[1];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            String description \u003d arrOfStr[2];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            Task newTask;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            assert symbol.equals(\"[T]\") || symbol.equals(\"[D]\") || symbol.equals(\"[E]\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            switch (symbol) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                case \"[T]\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    newTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                case \"[D]\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    String date \u003d arrOfStr[3];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    String[] dateSplit \u003d date.split(\" \", 0);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    if (dateSplit.length \u003e 3) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hhmm a\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        LocalDateTime localDateTime \u003d LocalDateTime.parse(date, formatter);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        newTask \u003d new Deadline(description, localDateTime);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        LocalDate localDate \u003d LocalDate.parse(date, formatter);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        newTask \u003d new Deadline(description, localDate);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                case \"[E]\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    String by \u003d arrOfStr[3];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    newTask \u003d new Event(description, by);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    throw new DukeException(\"Invalid task type detected - unable to load\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            if (status.equals(\"[✓]\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                newTask.markAsDone();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            tasks.add(newTask);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Returns the filepath of the specified file."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @return the filepath"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public static String getFilePath() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Prints out the contents of a file."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param filePath the path location of the load or save file"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @throws FileNotFoundException thrown when an attempt to open the specified file has failed"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public static void printFileContents(String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the file as the source"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            System.out.println(s.nextLine());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Writes content to a file based on the text specified and overwrites the file."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param filePath  the path location of the load or save file"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param textToAdd the text to be written to the file"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @throws IOException produced by failed or interrupted I/O operations"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Appends information to a file based on the text specified and overwrites the file."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param filePath     the path location of the load or save file"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param textToAppend the text to be appended to the file"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @throws IOException produced by failed or interrupted I/O operations"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public static void appendToFile(String filePath, String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Overwrites the file by adding in all the tasks from a list of tasks specified."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param filePath the path location of the load or save file"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param taskList TaskList object that contains a list of tasks"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @throws IOException produced by failed or interrupted I/O operations"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public static void updateFile(String filePath, TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        writeToFile(filePath, \"\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        for (Task tsk : taskList.getTasks()) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            String textToAppend \u003d tsk.getSymbol() + \" @ \" + tsk.getStatusIcon() + \" @ \""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                    + tsk.getDescription() + \" @ \" + tsk.getDate() + \"\\n\";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            appendToFile(filePath, textToAppend);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 152
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " * The Task class stores information about a particular task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    protected String symbol;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Constructor which takes in a description of the task name."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param description name of the task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        by \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        date \u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        dateTime \u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Returns the status of the task, done or undone."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @return the status of the task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @return this task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Returns the name or description of the task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @return the name or description of the task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Returns the type of task in for form of a modifier or symbol."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @return the type of task in for form of a modifier or symbol"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public String getSymbol() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return symbol;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Returns the date of the task requirements, depending on the type of task."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @return the date of the task requirements, depending on the type of task"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        if (dateTime !\u003d null) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            return dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hhmm a\"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        } else if (date !\u003d null) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            return by;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return (getStatusIcon() + \" \" + description);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 88
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " * The TaskList class contains a list of tasks and keeps track of it while Duke is running."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private static final String BORDER \u003d \"-----------------------------------------------------------\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private static final String INDENTATION \u003d \"    \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Constructor to initialise a new list of tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Constructor which takes in a list of tasks and stores it as a field member."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param tasks list of tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Prints the formatting for the Duke application."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public static void printBorder() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        System.out.println(INDENTATION + BORDER);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Returns a list of tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @return a list of tasks"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Adds a task to the list of tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param task the task to be added"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @throws IOException produced by failed or interrupted I/O operations"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void add(Task task) throws IOException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        String textToAppend \u003d task.getSymbol() + \" @ \" + task.getStatusIcon() + \" @ \""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                + task.getDescription() + \" @ \" + task.getDate() + \"\\n\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        Storage.appendToFile(Storage.getFilePath(), textToAppend);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        assert tasks.size() \u003e\u003d 0;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        System.out.println(INDENTATION + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        System.out.println(INDENTATION + INDENTATION + task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        System.out.println(INDENTATION + \"Now you have \" + (tasks.size() !\u003d 1"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                ? tasks.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                : tasks.size() + \" task in the list.\"));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Removes a task from the list of tasks."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param index position of the task in the list of tasks to be deleted"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @throws IOException produced by failed or interrupted I/O operations"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void delete(int index) throws IOException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        tasks.remove(task);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        Storage.updateFile(Storage.getFilePath(), this);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        assert tasks.size() \u003e\u003d 0;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        System.out.println(INDENTATION + \"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        System.out.println(INDENTATION + INDENTATION + task);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        System.out.println(INDENTATION + \"Now you have \" + (tasks.size() !\u003d 1"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                ? tasks.size() + \" tasks in the list.\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                : tasks.size() + \" task in the list.\"));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Replaces a task with another task in the list of tasks."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param oldTask old task to be replaced"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param newTask new task to replace the old task"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void replace(Task oldTask, Task newTask) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        int index \u003d tasks.indexOf(oldTask);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        tasks.set(index, newTask);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 103
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " * The Todo class represents tasks that do not have a specified time."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Constructor which takes in a description of the task name."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param description name of the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        symbol \u003d \"[T]\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        return (getSymbol() + super.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 22
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " * The Ui class deals with interactions with the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private static final String BORDER \u003d \"-----------------------------------------------------------\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private static final String INDENTATION \u003d \"    \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Prints the formatting for the Duke application."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void printBorder() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        System.out.println(INDENTATION + BORDER);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Greets the user when Duke starts up."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        System.out.println(INDENTATION + \"Hello! I\u0027m Duke\\n    What can I do for you?\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Says goodbye to the user before terminating."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        System.out.println(INDENTATION + \"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Displays a list of all the tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param taskList a TaskList object containing a list of tasks"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void list(TaskList taskList) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        assert taskList.getTasks().size() \u003e\u003d 0;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        if (taskList.getTasks().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            System.out.println(INDENTATION + \"You have no tasks in your list!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            System.out.println(INDENTATION + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            for (Task task : taskList.getTasks()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                int index \u003d taskList.getTasks().indexOf(task) + 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                System.out.println(INDENTATION + index + \".\" + task);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Mark a task as done."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param taskList a TaskList object containing a list of tasks"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param index position of the task in the list of tasks to be marked done"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void markDone(TaskList taskList, int index) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        assert taskList.getTasks() !\u003d null;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        Task oldTask \u003d taskList.getTasks().get(index);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        Task newTask \u003d oldTask.markAsDone();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        taskList.replace(oldTask, newTask);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        System.out.println(INDENTATION + \"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        System.out.println(INDENTATION + INDENTATION + newTask.getStatusIcon() + \" \" + newTask.description);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Find all tasks containing search keyword(s)."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param taskList a TaskList object containing a list of tasks"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * @param textToMatch the text to be used to find matching tasks"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void findMatching(TaskList taskList, String textToMatch) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        boolean canFind \u003d false;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        String output \u003d (INDENTATION + \"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        for (Task task : taskList.getTasks()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            String description \u003d task.getDescription();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            if (description.contains(textToMatch)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                output +\u003d (INDENTATION + index + \".\" + task + \"\\n\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                canFind \u003d true;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        if (!canFind) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            output \u003d (INDENTATION + \"There are no matching tasks in your list!\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     * Displays help menu."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void help() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        String output \u003d \" Command │       Description        │                   Usage\\n\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                + \"─────────┼──────────────────────────┼───────────────────────────────────────────\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                + \"bye      │ exits the program        │ bye\\n\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                + \"list     │ list all current tasks   │ list\\n\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                + \"done     │ marks a task done        │ done {task number}\\n\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                + \"delete   │ deletes a task           │ delete {task number}\\n\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                + \"find     │ finds all matching tasks │ find {text to match}\\n\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                + \"help     │ displays help menu       │ help\\n\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                + \"todo     │ adds a todo task         │ todo {task name}\\n\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                + \"deadline │ adds a deadline task     │ deadline {task name} /by {dd/MM/yyyy HHmm}\\n\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                + \"event    │ adds an event task       │ event {task name} /at {duration}\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 117
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "\u003c?import javafx.geometry.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "\u003c?import javafx.scene.effect.*?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "\u003c?import javafx.scene.image.*?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "\u003c?import javafx.scene.paint.*?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "\u003c?import javafx.scene.text.*?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-background-image: url(\u0027file:src/main/resources/images/maple6.png\u0027);\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            \u003cFont name\u003d\"Consolas Bold\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "         \u003ctextFill\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            \u003cRadialGradient centerX\u003d\"0.5\" centerY\u003d\"0.5\" radius\u003d\"0.5\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "               \u003cstops\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                  \u003cStop\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                     \u003ccolor\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        \u003cColor /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                     \u003c/color\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                  \u003c/Stop\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                  \u003cStop offset\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                     \u003ccolor\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        \u003cColor /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                     \u003c/color\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                  \u003c/Stop\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "               \u003c/stops\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            \u003c/RadialGradient\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "         \u003c/textFill\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "   \u003ceffect\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "      \u003cGlow /\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "   \u003c/effect\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 47
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"663.0\" style\u003d\"-fx-background-color: #35FF40;\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"2.0\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"582.0\" style\u003d\"-fx-background-color: #150000; -fx-border-color: #35FF40;\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"585.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #150000; -fx-border-color: #35FF40;\" text\u003d\"Send\" textFill\u003d\"#35ff40\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"663.0\" style\u003d\"-fx-background-color: #35FF40; -fx-border-color: #35FF40;\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" blendMode\u003d\"SRC_ATOP\" prefHeight\u003d\"553.0\" prefWidth\u003d\"659.0\" style\u003d\"-fx-background-color: #150000; -fx-border-color: #35FF40; -fx-background-image: url(\u0027file:src/main/resources/images/maple5.png\u0027);\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 16
    }
  },
  {
    "path": "src/test/java/duke/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private final Task task \u003d new Event(\"read book\", \"31 Dec 2020\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        assertEquals(\"[E][✘] read book (at: 31 Dec 2020)\", task.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 15
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private final TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private final String filePath \u003d \"./data/duke.txt\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void testInteract_bye() throws IOException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        assertEquals(\"Bye. Hope to see you again soon!\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                Parser.parse(\"bye\", taskList, filePath));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void testInteract_list() throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        assertEquals(\"You have no tasks in your list!\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                Parser.parse(\"list\", taskList, filePath));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void testInteract_find() throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        assertEquals(\"There are no matching tasks in your list!\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                Parser.parse(\"find book\", taskList, filePath));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void testInteract_emptyDescription() throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        assertEquals(\"☹ OOPS!!! The description of a deadline cannot be empty.\","
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                Parser.parse(\"deadline\", taskList, filePath));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void testInteract_invalidCommand() throws IOException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        assertEquals(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                        \"Type \\\"help\\\" for a list of commands\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "                Parser.parse(\"blah\", taskList, filePath));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 44
    }
  },
  {
    "path": "src/test/java/duke/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private final Storage storage \u003d new Storage(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void testGetFilePath() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        assertEquals(\"./data/duke.txt\", storage.getFilePath());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 15
    }
  },
  {
    "path": "src/test/java/duke/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    private final Task task \u003d new Todo(\"read book\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "        assertEquals(\"[T][✘] read book\", task.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "todo"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "SET JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GabrielTeo"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "GabrielTeo": 3,
      "-": 20
    }
  }
]
