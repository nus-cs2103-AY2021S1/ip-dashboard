[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Deadline is a subtype of Task which has a stipulated deadline"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * for the task to be completed by."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /** The deadline of the task. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructor for Deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param by the deadline of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 25
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Duke is a personal chatbot with the following functionalities:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * (i) Adding and removing of Tasks to a list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * (ii) Checking Tasks as completed"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * (iii) Viewing current task list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * @author Andy Wu"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * The implementation and main driver of the chatbot."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /** Flag which acts as a switch for the program. */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private boolean isRunning;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /** List which stores the Tasks. */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructor for initializing the bot."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Creates a new empty list and sends a greetings message."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param name the string name of the bot."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.isRunning \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        sendMessage(\"Hello! Tebby lives to serve :)\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *  Flags the bot as no longer running and sends an exit message."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        isRunning \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        sendMessage(\"Bye!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Formats all messages with the following:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * 1) Enclose messages with two lines"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * 2) Indents messages"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * and prints the formatted output."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param message the raw string to be formatted."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void sendMessage(String message) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        // Pads all messages with 4-spaces indentation"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String line \u003d \"    ________________________________________________________\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(message);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        int offset \u003d 0;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            int nextIndex \u003d sb.indexOf(\"\\n\", offset);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            if (nextIndex !\u003d -1) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                sb.insert(nextIndex + 1, \"    \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                offset \u003d nextIndex + 5;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        System.out.println(line + \"\\n    \" + sb + \"\\n\" + line);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Private method to generate the message for informing number of Tasks in list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the String message."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private String getTaskReportMessage() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        int size \u003d list.size();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String task \u003d size \u003d\u003d 1 ? \"task\" : \"tasks\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String num \u003d size \u003d\u003d 0 ? \"no\" : String.valueOf(size);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return \"Now you have \" + num + \" \" + task + \" in the list!\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Creates a Task and adds to the list. Tasks have the following subtypes:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * 1) todo - a task with a description"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * 2) event - a task with a description and occurrence time"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * 3) deadline - a task with a deadline time"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Task creation fails if the user input is of an incorrect format."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param type the type of task as extracted from user input."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the description of task as extracted from user input."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void addToList(String type, String description) throws DukeException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            Task task \u003d createTask(type, description);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            list.add(task);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String msg \u003d \"Okay I\u0027ve added:\\n    \" + task + \"\\n\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            msg +\u003d getTaskReportMessage();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            sendMessage(msg);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException de) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw de;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Helper method to create valid Task objects."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param type the subtype of Task"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the description of the task"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return new Task object"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private Task createTask(String type, String description) throws DukeException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String[] split;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String desc;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        description \u003d description.trim();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Description cannot be empty!\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                task \u003d new Todo(description);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    split \u003d description.split(\" /by \");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    desc \u003d split[0];"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    String by \u003d split[1];"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    task \u003d new Deadline(desc, by);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    throw new DukeException(\"Invalid \" + type + \" description!\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    split \u003d description.split(\" /at \");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    desc \u003d split[0];"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    String at \u003d split[1];"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    task \u003d new Event(desc, at);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    throw new DukeException(\"Invalid \" + type + \" description!\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                task \u003d new Task(description);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Marks the Task of the given task number as completed."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param si the task number as extracted from user input."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void markTaskDone(String si) throws DukeException {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            int i \u003d Integer.parseInt(si);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            int index \u003d i - 1;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            Task t \u003d list.get(index);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            if (t.getDone()) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                throw new DukeException(\"That task is already done!\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                t.markAsDone();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                sendMessage(\"Okay I\u0027ve marked this task as done:\\n    \" + t);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Sorry, I don\u0027t know what that means :(\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Invalid task number!\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Removes the Task of the given task number from the list."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param si the task number as extracted from user input."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void deleteTask(String si) throws DukeException {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            int i \u003d Integer.parseInt(si);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            int index \u003d i - 1;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            Task task \u003d list.get(index);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            list.remove(task);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String msg \u003d \"Okay I\u0027ve deleted:\\n    \" + task + \"\\n\";"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            msg +\u003d getTaskReportMessage();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            sendMessage(msg);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Sorry, I don\u0027t know what that means :(\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Invalid task number!\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Sends the user a formatted message of the tasks in the list."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void displayList() {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            sendMessage(\"Your list is empty!\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            int num \u003d 1;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            StringBuilder msg \u003d new StringBuilder((list.size() \u003e 1)"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    ? \"Here are the tasks in your list:\\n\""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    : \"Here\u0027s your one and only task:\\n\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            for (Task task: list) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                msg.append(String.format(\"%d. %s\", num, task));"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                if (num \u003c list.size()) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    msg.append(\"\\n\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                num++;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            sendMessage(msg.toString());"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * The main algorithm of the bot which runs indefinitely as long as"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * the running flag is true. The bot takes in user input, processes"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * it and detects command/keywords."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        while (isRunning) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String[] inputSplit \u003d input.split(\" \");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String command \u003d inputSplit[0];"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            switch(command.toLowerCase()) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    exit();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    displayList();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        String si \u003d inputSplit[1];"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        markTaskDone(si);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        sendMessage(e.getMessage());"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        String[] descArr \u003d Arrays.copyOfRange(inputSplit,"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                                1, inputSplit.length);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        String desc \u003d String.join(\" \", descArr);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        addToList(command, desc);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        sendMessage(e.getMessage());"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        String si \u003d inputSplit[1];"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        deleteTask(si);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        sendMessage(e.getMessage());"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        sendMessage("
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                                new DukeException(\"Give me a task number to delete!\")"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                                .getMessage()"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        );"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    sendMessage("
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                            new DukeException(\"Sorry, I don\u0027t know what that means :(\")"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                            .getMessage());"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Prints a display of the bot\u0027s logo, level, and name,"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * before instantiating and running the bot."
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param args optional and will be treated as the first user input."
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String lvl \u003d \"6\";"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String logo \u003d \"                                                 _     _\\n\""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \" _______  _______  _______  _______  __   __    (c).-.(c)\\n\""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"|       ||       ||  _    ||  _    ||  | |  |    / ._. \\\\ \\n\""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"|_     _||    ___|| |_|   || |_|   ||  |_|  |  __\\\\( Y )/__\\n\""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"  |   |  |   |___ |       ||       ||       | (_.-/\u0027-\u0027\\\\-._)\\n\""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"  |   |  |    ___||  _   | |  _   | |_     _|    || \" + lvl + \" || \\n\""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"  |   |  |   |___ | |_|   || |_|   |  |   |    _.\u0027 `-\u0027 \u0027._\\n\""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"  |___|  |_______||_______||_______|  |___|   (.-./`-\u0027\\\\.-.)\\n\""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"                                               `-\u0027     `-\u0027\\n\""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"Level: \" + lvl;"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 300,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Since Duke has specific keywords or command formats required from"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * the user input to function as intended, and user inputs can deviate"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * from expected formats due to an array of errors i.e. number format error,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * wrong command error, non-existing command error, command format error,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * the DukeException helps to standardize all Duke related errors."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructor which prepends a Duke error signature"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * to the given message for standardization."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param message the error message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(\"!!Whoops!! \" + message);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 19
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Event is a subtype of Task which represents a task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * which requires an attendance at a given time."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /** The time of the event. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructor for Event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param at the time of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 25
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The Task class encapsulates tasks which are pieces of work"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * to be done. This is used by the Duke chatbot for creating"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * of tasks which can be marked as completed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /** The description of the task */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /** Flags if a task has been completed */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructor for the Task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Tasks are created to be not completed."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the description of the task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Gets the completion flag of the task and generates the"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * unicode string representation of the task status;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * a tick for completed, a cross for not completed."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the unicode of the completion flag."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Checks if the task is completed based on the completion flag."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return boolean value for completion flag."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Marks a task as completed by setting completion flag to true."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Gets the string description of the task, which is the same"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * string used during initialization."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "      * @return description of the task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 63
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Todo is a subtype of Task which has a description"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * of the task to be done. This task is rather similar"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * to the parent Task class, but is necessary to have it"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * be on the same level as the other subtypes of Task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructor for Todo."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 22
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "todo todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": "event event at some date"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "event event /at some date"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "deadline deadline /by some date"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "done two"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "delete 200"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "sudogene": 12
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "sudogene": 1,
      "-": 37
    }
  }
]
