[
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WM71811"
        },
        "content": "todo|✘|read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WM71811"
        },
        "content": "deadline|✓|do this|Mon 1pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WM71811"
        },
        "content": "event|✘|do that|Tue 2-5pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WM71811"
        },
        "content": "todo|✘|do those"
      }
    ],
    "authorContributionMap": {
      "WM71811": 4
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WM71811"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    public Deadline(String deadlineName, String deadlineTime) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        super(deadlineName, deadlineTime);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        return \"deadline\" + \"|\" + this.getStatusSymbol() + \"|\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                + this.taskName + \"|\" + this.completeBy;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        TimeParser timeParser \u003d new TimeParser(localDate);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        String formattedTime \u003d timeParser.getFormattedTime();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + formattedTime + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WM71811"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WM71811": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WM71811"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WM71811"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    private static final String logo \u003d \"      ____        _        \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"     |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"     | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"     | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"     |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    private static final Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    private static final String LINE_DIVIDER \u003d \"     _____________________________________\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    private static ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        Storage storage \u003d new Storage(\"data/tasks.txt\", \"data\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        storage.read(listOfTasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                String userCommand \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                if (userCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                    exit();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                    scanner.close();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                    if (userCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                        getList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                        String[] wordArray \u003d userCommand.split(\" \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                        int noOfWords \u003d wordArray.length;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                        if (noOfWords \u003d\u003d 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            throw new InvalidInputException(\"I don\u0027t know what you need \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                    + \"me to do since the command is empty!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                        if (wordArray[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            if (noOfWords \u003d\u003d 1) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                throw new InvalidRequestException(\"Please tell me which task you want \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                        + \"to be marked as done.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            if (noOfWords \u003e 2) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                throw new InvalidRequestException(\"I can only handle one request to \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                        + \"mark a task as DONE once! Please check your command.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            Integer index \u003d Integer.parseInt(wordArray[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            if (listOfTasks.size() \u003c index || index \u003c 0) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                throw new InvalidRequestException(\"You have entered an invalid task \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                        + \"number! Please try again.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            Task theTask \u003d listOfTasks.get(index - 1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            theTask.setTaskToBeDone();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            System.out.println(\"     Great! The task below is marked as done:\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                    + \"        \" + theTask.toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                        } else if (wordArray[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            if (noOfWords \u003d\u003d 1) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                throw new InvalidRequestException(\"Please tell me which task you want \""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                        + \"to delete!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            if (noOfWords \u003e 2) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                throw new InvalidRequestException(\"I can only handle one request to \""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                        + \"delete a task at once! Please check your command.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            Integer index \u003d Integer.parseInt(wordArray[1]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            if (listOfTasks.size() \u003c index || index \u003c 0) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                throw new InvalidRequestException(\"You have entered an invalid task \""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                        + \"number! Please try again.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            Task theTask \u003d listOfTasks.get(index - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            listOfTasks.remove(index - 1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            System.out.println(\"     Okay. The task below is deleted from your list:\\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                    + \"        \" + theTask.toString());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            if (listOfTasks.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                System.out.println(\"     Now there is 1 task in total in your list.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                System.out.println(\"     Now there are \" + listOfTasks.size() + \" tasks \""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                        + \"in total in your list.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            Task newTask;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            if (wordArray[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                if (noOfWords \u003d\u003d 1) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                    throw new InvalidTodoException(\"Please tell me the name \""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                            + \"of the todo task! Or else I cannot add it into list.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                String taskName \u003d userCommand.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                newTask \u003d new Todo(taskName);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            } else if (wordArray[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                if (noOfWords \u003d\u003d 1) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                    throw new InvalidDeadlineException(\"Please tell me the name \""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                            + \"and the time due of the deadline task! Or else I \""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                            + \"cannot add it into list.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                String body \u003d userCommand.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                if (body.split(\" /by\").length \u003c 2) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                        throw new InvalidDeadlineException(\"Please tell me both the name and\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                                + \" the time due of the deadline task in the correct form! \""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                                + \"Don\u0027t forget to include the time by using /by.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                String taskName \u003d body.split(\" /by \")[0];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                String time \u003d body.split(\" /by \")[1];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                newTask \u003d new Deadline(taskName, time);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            } else if (wordArray[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                if (noOfWords \u003d\u003d 1) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                    throw new InvalidEventException(\"Please tell me the name and time period\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                            + \" of the event task! Or else I cannot add it into the list.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                String body \u003d userCommand.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                if (body.split(\" /at\").length \u003c 2) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                        throw new InvalidEventException(\"Please tell me both the name and \""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                                + \"the time period of the event task in the correct form! \""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                                + \"Don\u0027t forget to include the time by using /at.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                String taskName \u003d body.split(\" /at \")[0];"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                String time \u003d body.split(\" /at \")[1];"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                newTask \u003d new Event(taskName, time);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                throw new InvalidInputException(\"I cannot understand your command! \""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                        + \"Please ensure your command follows the rules.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            listOfTasks.add(newTask);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            System.out.println(\"     Noted! The task below is added into the list:\\n\""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                    + \"        \" + newTask);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            int noOfTasks \u003d listOfTasks.size();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            if (noOfTasks \u003d\u003d 1) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                System.out.println(\"     There is 1 task in total in your list.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                System.out.println(\"     There are \" + listOfTasks.size()"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                                        + \" tasks in total in your list.\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            ;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                storage.write(listOfTasks);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            } catch (InvalidInputException e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                System.out.println(\"     \" +e.getMessage());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        private static void greet() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            System.out.println(\"     Hi, I am\\n\" + logo);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            System.out.println(\"     Is there anything I could help with?\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        private static void exit() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            System.out.println(\"     Bye! I look forward to meeting you next time!\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        private static void getList() {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            int noOfTasks \u003d listOfTasks.size();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            if (noOfTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                System.out.println(\"     There is no task in the list yet!\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                System.out.println(\"     Here are the tasks in the list:\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                for (int i \u003d 0; i \u003c noOfTasks; i++) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                    Task task \u003d listOfTasks.get(i);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                    System.out.println(\"     \" + (i + 1) + \".\" + task);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WM71811": 171,
      "-": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WM71811"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    public Event(String eventName, String eventTime) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        super(eventName, eventTime);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        return \"event\" + \"|\" + this.getStatusSymbol() + \"|\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                + this.taskName + \"|\" + this.timePeriod;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        TimeParser timeParser \u003d new TimeParser(localDate);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        String formattedTime \u003d timeParser.getFormattedTime();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + formattedTime + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WM71811"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WM71811": 19
    }
  },
  {
    "path": "src/main/java/InvalidDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WM71811"
        },
        "content": "public class InvalidDeadlineException extends InvalidInputException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    public InvalidDeadlineException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WM71811"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WM71811": 5
    }
  },
  {
    "path": "src/main/java/InvalidEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WM71811"
        },
        "content": "public class InvalidEventException extends InvalidInputException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    public InvalidEventException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WM71811"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WM71811": 5
    }
  },
  {
    "path": "src/main/java/InvalidFilePathException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WM71811"
        },
        "content": "public class InvalidFilePathException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    public InvalidFilePathException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WM71811"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WM71811": 5
    }
  },
  {
    "path": "src/main/java/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WM71811"
        },
        "content": "public class InvalidInputException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    public InvalidInputException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WM71811"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "WM71811": 6
    }
  },
  {
    "path": "src/main/java/InvalidRequestException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WM71811"
        },
        "content": "public class InvalidRequestException extends InvalidInputException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    public InvalidRequestException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WM71811"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WM71811": 5
    }
  },
  {
    "path": "src/main/java/InvalidTodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WM71811"
        },
        "content": "public class InvalidTodoException extends InvalidInputException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    public InvalidTodoException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WM71811"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WM71811": 5
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WM71811"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WM71811"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WM71811"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WM71811"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WM71811"
        },
        "content": "import java.nio.channels.FileLockInterruptionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WM71811"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WM71811"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    /** The default file path if the user does not provide the file path.**/"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    private static final String DEFAULT_FILE_PATH \u003d \"data/tasks.txt\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    private String directoryPath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    public Storage(String filePath, String directoryPath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            File directory \u003d new File(directoryPath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            if (!isValidFilePath(filePath)) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                throw new InvalidFilePathException(\"The storage file should end with \u0027.txt\u0027\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                if (!directory.exists()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                    directory.mkdir();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                    throw new InvalidFilePathException(\"The directory does not exist at the start.\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                            + \" a directory to store the data would be created.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                this.directoryPath \u003d directoryPath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        } catch (InvalidFilePathException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                e.getMessage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    private static boolean isValidFilePath(String filepath) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        return filepath.endsWith(\".txt\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    public void read(ArrayList\u003cTask\u003e listOfTasks) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            File storageFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            //FileReader fileReader \u003d new FileReader(storageFile);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            Scanner scanner \u003d new Scanner(storageFile);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                String currentLine \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                String[] wordsParsed \u003d currentLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                String whetherIsDone \u003d wordsParsed[1].equals(\"\\u2713\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                        ? \"true\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                        : \"false\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                switch (wordsParsed[0]) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                    Task todo \u003d new Todo(wordsParsed[2]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                    todo.setWhetherTaskDone(whetherIsDone);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                    listOfTasks.add(todo);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                    Task deadline \u003d new Deadline(wordsParsed[2], wordsParsed[3]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                    deadline.setWhetherTaskDone(whetherIsDone);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                    listOfTasks.add(deadline);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                    Task event \u003d new Event(wordsParsed[2], wordsParsed[3]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                    event.setWhetherTaskDone(whetherIsDone);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                    listOfTasks.add(event);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            scanner.close();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            System.out.println(e.toString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    public void write( ArrayList\u003cTask\u003e listOfTasks) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            for (Task task : listOfTasks) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                fileWriter.write(task.writeToFile() + \"\\n\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            System.out.println(e.toString());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WM71811"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WM71811": 89
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WM71811"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WM71811"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WM71811"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    protected LocalDate localDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    public Task(String taskName, String time) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        this.localDate \u003d LocalDate.parse(time.trim());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        return this.taskName;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    public void setTaskToBeDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    public String getStatusSymbol() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            return \"\\u2713\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            return \"\\u2718\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    public void setWhetherTaskDone(String whetherIsDone) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WM71811"
        },
        "content": "         isDone \u003d whetherIsDone.equals(\"true\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        return this.getStatusSymbol() + \"|\" + this.taskName;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        return \"[\" +"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                this.getStatusSymbol() + \"] \" + taskName;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WM71811"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WM71811": 52
    }
  },
  {
    "path": "src/main/java/TimeParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WM71811"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WM71811"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WM71811"
        },
        "content": "public class TimeParser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    private LocalDate localDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    public TimeParser(LocalDate localDate) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        this.localDate \u003d localDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    public String getFormattedTime() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            String formattedTime \u003d localDate.format(formatter);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            return formattedTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WM71811"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WM71811"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "WM71811": 22
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WM71811"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        return \"todo\" + \"|\" + this.getStatusSymbol() + \"|\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WM71811"
        },
        "content": "                + this.taskName;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WM71811"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WM71811"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WM71811"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WM71811": 18
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WM71811"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WM71811"
        },
        "content": "deadline return book /by Monday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WM71811"
        },
        "content": "event project meeting /at Tue 10-12am"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WM71811"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WM71811"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WM71811"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WM71811"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WM71811"
        },
        "content": "todo"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WM71811"
        },
        "content": "blah"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WM71811"
        },
        "content": "done"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WM71811"
        },
        "content": "done 7"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WM71811"
        },
        "content": "deadline get book"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WM71811"
        },
        "content": "event presentation preparation"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WM71811"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "WM71811": 14
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WM71811"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WM71811"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WM71811"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WM71811"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "WM71811": 5,
      "-": 37
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WM71811"
        },
        "content": "../src/main/java/InvalidDeadlineException.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WM71811"
        },
        "content": "../src/main/java/InvalidEventException.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WM71811"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WM71811"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WM71811"
        },
        "content": "../src/main/java/InvalidInputException.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WM71811"
        },
        "content": "../src/main/java/InvalidRequestException.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WM71811"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WM71811"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WM71811"
        },
        "content": "../src/main/java/Todo.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WM71811"
        },
        "content": "../src/main/java/InvalidTodoException.java"
      }
    ],
    "authorContributionMap": {
      "WM71811": 10
    }
  }
]
