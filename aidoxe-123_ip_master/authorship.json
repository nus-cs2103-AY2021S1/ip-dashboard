[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    //implementation \u0027org.junit.jupiter:junit-jupiter\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    //implementation \u0027org.junit.jupiter:junit-jupiter\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "tasks.withType(JavaCompile) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 46,
      "aidoxe-123": 6
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "D ND test4 /time 14/02/2020"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "E D test /time 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "T ND finish this            "
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 3
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Main class, responsible for running the program."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates a \u003ccode\u003eDuke\u003c/code\u003e object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param filePath The path of the data file that this object interacts with"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            ui.showFileLoadingError();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Runs the program."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                String fullCommand \u003d ui.requestCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                storage.write(tasks); // temporary until having better implementation"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Main function."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        // file path"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String FILEPATH \u003d System.getProperty(\"user.dir\")"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + (System.getProperty(\"user.dir\").endsWith(\"text-ui-test\")"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                ? \"/test_data/duke.txt\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                : \"/data/duke.txt\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        new Duke(FILEPATH).run();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 64,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Is responsible for handling commands"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Created when the command does not belong to any other types of command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public Command() {}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Returns whether this command terminates the program."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return An indicator that helps the program know when to stop (default is keep running)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks A list of tasks"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param ui An Ui object that correspond to interacting with the user"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param storage A database that stores the task list locally when the program is not running"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @throws DukeException When facing errors parsing or running the program"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        ui.showUnrecognizedCommandMessage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 38
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Is responsible for handling commands starting with \u003ccode\u003edeadline\u003c/code\u003e."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class DeadlineCommand extends TaskCreationCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public final static String COMMAND \u003d \"deadline\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public final static String TIME_SPECIFIER \u003d \"/by\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates a \u003ccode\u003eDeadlineCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param description The description of the task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param time The time by which the task is due"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public DeadlineCommand(String description, String time) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates a new \u003ccode\u003eDeadline\u003c/code\u003e task and add pass it to \u003ccode\u003eTaskCreationCommand\u003c/code\u003e\u0027s execute method"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * to add the task to the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks A list of tasks"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param ui An Ui object that correspond to interacting with the user"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param storage A database that stores the task list locally when the program is not running"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Task task \u003d new Deadline(description, time);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        super.execute(task, ui, tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 43
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Is responsible for handling commands starting with \u003ccode\u003edelete\u003c/code\u003e."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public final static String COMMAND \u003d \"delete\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates a \u003ccode\u003eDeleteCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param string The position of the task being deleted"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @throws InvalidIndexException If cannot parse the string into integer"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public DeleteCommand(String string) throws InvalidIndexException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            index \u003d Integer.parseInt(string) - 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Deletes the task in the specified position."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks A list of tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param ui An Ui object that correspond to interacting with the user"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param storage A database that stores the task list locally when the program is not running"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @throws InvalidIndexException If that position is out of the range of the \u003ccode\u003eTaskList\u003c/code\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidIndexException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            ui.showDeleteTask(tasks.remove(index), tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 46
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Is responsible for handling commands stating with \u003ccode\u003edone\u003c/code\u003e."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class DoneCommand extends Command{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public final static String COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates a \u003ccode\u003eDoneCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param string The position of the task being marked as done"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @throws InvalidIndexException If cannot parse the string into integer"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public DoneCommand(String string) throws InvalidIndexException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            index \u003d Integer.parseInt(string) - 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Marks the task in the specified position as done."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks A list of tasks"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param ui An Ui object that correspond to interacting with the user"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param storage A database that stores the task list locally when the program is not running"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @throws InvalidIndexException If that position is out of the range of the \u003ccode\u003eTaskList\u003c/code\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidIndexException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            tasks.markAsDone(index);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            ui.showMarkAsDoneTask(tasks.get(index));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 48
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Is responsible for handling commands starting with \u003ccode\u003eevent\u003c/code\u003e."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class EventCommand extends TaskCreationCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public final static String COMMAND \u003d \"event\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public final static String TIME_SPECIFIER \u003d \"/at\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates an \u003ccode\u003eEventCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param description The description of the task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param time The time by which the task happens"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public EventCommand(String description, String time) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates a new \u003ccode\u003eEvent\u003c/code\u003e task and add pass it to \u003ccode\u003eTaskCreationCommand\u003c/code\u003e\u0027s execute method"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * to add the task to the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks A list of tasks"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param ui An Ui object that correspond to interacting with the user"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param storage A database that stores the task list locally when the program is not running"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Task task \u003d new Event(description, time);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        super.execute(task, ui, tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 43
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Is responsible for handing commands starting with \u003ccode\u003ebye\u003c/code\u003e."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class ExitCommand extends Command{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public final static String COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates an \u003ccode\u003eExitCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Stops the program."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return An indicator that helps the program know when to stop"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Copies tasks from temporary TaskList to local storage, then say goodbye."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks A list of tasks"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param ui An Ui object that correspond to interacting with the user"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param storage A database that stores the task list locally when the program is not running"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        storage.write(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        ui.showGoodbye();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 43
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.exception.InvalidDateFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.parser.DateParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Is responsible for handing commands starting with \u003ccode\u003efind\u003c/code\u003e."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public final static String COMMAND \u003d \"find\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates a \u003ccode\u003eFindCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param keyword The searching keyword"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Finds all the tasks that happen or due on that day or contaning the keyword,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * and pass them to the \u003ccode\u003eUi\u003c/code\u003e to print them out."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks A list of tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param ui An Ui object that correspond to interacting with the user"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param storage A database that stores the task list locally when the program is not running"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @throws InvalidDateFormatException If the date cannot be parsed"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidDateFormatException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Optional\u003cLocalDate\u003e optDate \u003d DateParser.parse(keyword);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (optDate.isPresent()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            LocalDate date \u003d optDate.get();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            TaskList filtered \u003d tasks.filter((task) -\u003e "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    ((task instanceof Deadline \u0026\u0026 ((Deadline) task).isDueOn(date))"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    || (task instanceof Event \u0026\u0026 ((Event) task).isOccuringOn(date))));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            ui.showFindResult(filtered);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            TaskList filtered \u003d tasks.filter((task) -\u003e "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    task.toString().toLowerCase().contains(keyword.toLowerCase()));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            ui.showFindResult(filtered);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 55
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Is responsible for handing commands starting with \u003ccode\u003elist\u003c/code\u003e."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public final static String COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates a \u003ccode\u003eListCommand\u003c/code\u003e object"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Passes all the tasks to the \u003ccode\u003eUi\u003c/code\u003e to print them out."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks A list of tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param ui An Ui object that correspond to interacting with the user"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param storage A database that stores the task list locally when the program is not running"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        ui.showTasks(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 32
    }
  },
  {
    "path": "src/main/java/duke/command/TaskCreationCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Helps handle commands that include adding tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "abstract class TaskCreationCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Adds the \u003ccode\u003eTask\u003c/code\u003e to the \u003ccode\u003eTaskList\u003c/code\u003e, then pass on to the ui to print them out."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param task the task to be added"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param ui An Ui object that correspond to interacting with the user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks a list to which the \u003ccode\u003eask\u003c/code\u003e will be added"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void execute(Task task, Ui ui, TaskList tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        ui.showAddSuccessful(task, tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 22
    }
  },
  {
    "path": "src/main/java/duke/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Is responsible for handing commands starting with \u003ccode\u003etodo\u003c/code\u003e."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class ToDoCommand extends TaskCreationCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public final static String COMMAND \u003d \"todo\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates a \u003ccode\u003eToDoCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public ToDoCommand(String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates a new \u003ccode\u003eToDo\u003c/code\u003e task and add pass it to \u003ccode\u003eTaskCreationCommand\u003c/code\u003e\u0027s execute method"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * to add the task to the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks A list of tasks"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param ui An Ui object that correspond to interacting with the user"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param storage A database that stores the task list locally when the program is not running"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Task task \u003d new ToDo(description);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        super.execute(task, ui, tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 39
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Throws when there is any unexpected behavior in the execution of Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates a \u003ccode\u003eDukeException\u003c/code\u003e object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param message The message of the description"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/InadequateCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Throws when a command that create task is input but missing some supporting info"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class InadequateCommandException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private String typeOfTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private String[] missingSections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates an \u003ccode\u003eInadequateCommandException\u003c/code\u003e object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param typeOfTask The type of the task intended to create (\u003ccode\u003eTodo\u003c/code\u003e, \u003ccode\u003eDeadline\u003c/code\u003e,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     *                   or \u003ccode\u003eEvent\u003c/code\u003e)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param missingSections The missing information sections in the input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public InadequateCommandException(String typeOfTask, String[] missingSections) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        super(\"\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.typeOfTask \u003d typeOfTask;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.missingSections \u003d missingSections;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Returns the message of the exception"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return The message describing the missing sections."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String listing \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        for (int i \u003d 0; i \u003c missingSections.length - 1; i++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            listing +\u003d missingSections[i] + \", \";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        listing +\u003d missingSections[missingSections.length - 1];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return \"OOPS, the \" + listing + \" of a \" + typeOfTask + \" cannot be empty\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 35
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidDateFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Throws when the date is in incorrect format."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class InvalidDateFormatException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static String INCORRECT_DATE_MSG \u003d \"Sorry, I cannot understand the date, \""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            + \"try to format it in the format: yyyy-MM-dd\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates an \u003ccode\u003eInvalidDateFormatException\u003c/code\u003e object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public InvalidDateFormatException() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        super(INCORRECT_DATE_MSG);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 16
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Throws when the index is not an integer, smaller than 0 or larger than the size of the task list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class InvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates an \u003ccode\u003eInvalidIndexException\u003c/code\u003e object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public InvalidIndexException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        super(\"Invalid index\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 13
    }
  },
  {
    "path": "src/main/java/duke/parser/DateParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Parses a date string to a \u003ccode\u003eLocalDate\u003c/code\u003e object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class DateParser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Parses a date string to a \u003ccode\u003eLocalDate\u003c/code\u003e object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param dateStr The string representing the date"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return An \u003ccode\u003eOptional\u003c/code\u003e of \u003ccode\u003eLocalDate\u003c/code\u003e parsed."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public static Optional\u003cLocalDate\u003e parse(String dateStr) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String[] formats \u003d {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                \"yyyy-MM-dd\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                \"yyyy-M-dd\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                \"yyyy-M-d\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                \"dd-MM-yyyy\", "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                \"dd-M-yyyy\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                \"d-M-yyyy\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                \"dd MMM yyyy\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                \"d MMM yyyy\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                \"yyyy/MM/dd\", "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                \"dd/MM/yyyy\", "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                \"dd/M/yyyy\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                \"d/M/yyyy\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        };"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        for (int i \u003d 0; i \u003c formats.length; i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(dateStr, DateTimeFormatter.ofPattern(formats[i]));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                return Optional.of(date);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            } catch (DateTimeParseException e) {}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return Optional.empty();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 42
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.exception.InadequateCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Parses the input from the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Parses the input from the user"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param fullCommand The input from the user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return A \u003ccode\u003eCommand\u003c/code\u003e object that can later be executed"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @throws DukeException If the parsing process faces any problem"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException { "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String[] splitted \u003d fullCommand.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        // command: bye"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (splitted[0].equals(ExitCommand.COMMAND)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        // command: list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (splitted[0].equals(ListCommand.COMMAND)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        // command: delete [index]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (splitted[0].equals(DeleteCommand.COMMAND)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            if (splitted.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                throw new InvalidIndexException();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return new DeleteCommand(splitted[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        // command: done [index]"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (splitted[0].equals(DoneCommand.COMMAND)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            if (splitted.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                throw new InvalidIndexException();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return new DoneCommand(splitted[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        //command: find [date]"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (splitted[0].equals(FindCommand.COMMAND)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            if (splitted.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                throw new DukeException(\"Missing date\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                return new FindCommand(splitted[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        // command: todo [description]"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (splitted[0].equals(ToDoCommand.COMMAND)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            if (splitted.length \u003d\u003d 1 || splitted[1].equals(\"\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                throw new InadequateCommandException(\"todo\", new String[] {\"description\"});"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return new ToDoCommand(splitted[1]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        // command: deadline [description] /by [time] "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        // or: event [description] /at [time]"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (splitted[0].equals(DeadlineCommand.COMMAND) || splitted[0].equals(EventCommand.COMMAND)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            String type, timeSpecifier;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            boolean isDeadline;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            if (splitted[0].equals(DeadlineCommand.COMMAND)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                type \u003d \"deadline\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                timeSpecifier \u003d DeadlineCommand.TIME_SPECIFIER;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                isDeadline \u003d true;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                type \u003d \"event\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                timeSpecifier \u003d EventCommand.TIME_SPECIFIER;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                isDeadline \u003d false;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            if (splitted.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                throw new InadequateCommandException(type, new String[] {\"description\", \"time\"});"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                String content \u003d splitted[1];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                String[] split2Test \u003d content.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                int timeIdx \u003d content.indexOf(\" \" + timeSpecifier);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                if (split2Test.length \u003d\u003d 0 ||"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                        (split2Test.length \u003d\u003d 1 \u0026\u0026"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                                (split2Test[0].equals(timeSpecifier) || split2Test[0].equals(\"\"))"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                        )"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                ) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    String[] missing \u003d {\"description\", \"time\"};"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    throw new InadequateCommandException(type, missing);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                if (timeIdx \u003d\u003d 0 || content.indexOf(timeSpecifier) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    throw new InadequateCommandException(type, new String[]{\"description\"});"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                if (timeIdx \u003d\u003d -1 || timeIdx + 5 \u003e\u003d content.length()) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    throw new InadequateCommandException(type, new String[]{\"time\"});"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                String description \u003d content.substring(0, timeIdx);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                String time \u003d content.substring(timeIdx + 5);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                if (time.split(\"\\\\s+\").length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    throw new InadequateCommandException(type, new String[]{\"time\"});"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                // return"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                if (isDeadline) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    return new DeadlineCommand(description, time);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    return new EventCommand(description, time);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return new Command();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 120
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Retrieves data from the database and write new data to it."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creats a new \u003ccode\u003eStorage\u003c/code\u003e object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param filePath The path of the file that this object interacts with"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.filePath \u003d filePath;    "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Read the data from the file at the file path."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return An \u003ccode\u003eArrayList\u003c/code\u003e containing the \u003ccode\u003eTask\u003c/code\u003es in the database"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @throws DukeException If there is any unexpected error in the loading process"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                String nextTask \u003d sc.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                String[] splitted \u003d nextTask.split(\"\\\\s+\", 3);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                String type \u003d splitted[0];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                boolean isDone \u003d splitted[1].equals(\"D\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                Task newTask;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    String description \u003d splitted[2];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    newTask \u003d new ToDo(description);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    int timeIdx \u003d splitted[2].indexOf(\" /time\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    String description \u003d splitted[2].substring(0, timeIdx);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    String time \u003d splitted[2].substring(timeIdx + 7);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                        newTask \u003d new Deadline(description, time);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                        newTask \u003d new Event(description, time);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                if (isDone) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    newTask.markAsDone();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                tasks.add(newTask);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            sc.close();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } catch (FileNotFoundException e){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                String DIRECTORY_PATH \u003d filePath.substring(0, filePath.length() - 8);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                File directory \u003d new File(DIRECTORY_PATH);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                if (!directory.exists()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    directory.mkdir();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            } catch (IOException e1) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                throw new DukeException(\"Cannot read file\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Writes the data to the file at the file path."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks The data to be written"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void write(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            if (f.exists()) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                f.delete();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                String type, description, time, status;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                description \u003d task.getDescription();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                status \u003d task.isDone() ? \"D\" : \"ND\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                time \u003d task.getTime().equals(\"\") ? \"\" : \"/time \" + task.getTime();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    type \u003d \"T\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    type \u003d \"D\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    type \u003d \"E\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                String dataPresentation \u003d type + \" \" + status + \" \" + description + \" \" + time + \"\\n\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                fw.write(dataPresentation);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            throw new DukeException(\"Cannot write file\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 121
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.parser.DateParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Represents a deadline task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private String dueTimeStr;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private LocalDate dueTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private boolean isInDateFormat;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Create a \u003ccode\u003eDeadline\u003c/code\u003e object"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param description The description of the task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param dueTime The time at which the task is due."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public Deadline(String description, String dueTime) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.dueTimeStr \u003d dueTime;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Optional\u003cLocalDate\u003e optDate \u003d DateParser.parse(dueTime);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (optDate.isPresent()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            this.dueTime \u003d optDate.get();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            isInDateFormat \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            isInDateFormat \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Represents the type of this task through an icon."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return An icon"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Converts the task to string."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return The string representation of this task"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return getTypeIcon() + \" \" + super.getStatusIcon() + \" \" + super.description + \" (by: \" "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + (isInDateFormat "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                        ? dueTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                        : dueTimeStr)    "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Checks whether this task is due on a specified day."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param cmpDate A date that is being queried"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return True if this task is due on that day, false otherwise"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public boolean isDueOn(LocalDate cmpDate) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (!isInDateFormat) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return cmpDate.isEqual(dueTime);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Gets the time that this task is due."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return The time string input by the user"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return dueTimeStr;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 77
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.parser.DateParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Represents an event task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private String eventTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private LocalDate startTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private LocalDate endTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private boolean isInDateFormat;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates an \u003ccode\u003eEvent\u003c/code\u003e object"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param description The description of the event"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param eventTime The duration which the event happens"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public Event(String description, String eventTime) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        isInDateFormat \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        int idx \u003d eventTime.indexOf(\" to \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (idx !\u003d -1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            Optional\u003cLocalDate\u003e optStart \u003d DateParser.parse(eventTime.substring(0, idx));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            Optional\u003cLocalDate\u003e optEnd \u003d DateParser.parse(eventTime.substring(idx + 4));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            if (optStart.isPresent() \u0026\u0026 optEnd.isPresent()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                startTime \u003d optStart.get();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                endTime \u003d optEnd.get();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                isInDateFormat \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Represents the type of this task through an icon."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return An icon"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Converts the task to string."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return The string representation of this task"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return getTypeIcon() + \" \" + super.getStatusIcon() + \" \" + super.description + \" (at: \" "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + (isInDateFormat "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    ? \"from \" + startTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"))"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                        + \" to \" + endTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"))"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                    : eventTime) "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Checks whether this task is occuring on a specified day."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param cmpDate A date that is being queried"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return True if this task occurs on that day, false otherwise"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public boolean isOccuringOn(LocalDate cmpDate) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (!isInDateFormat) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return cmpDate.compareTo(startTime) \u003e 0 \u0026\u0026 cmpDate.compareTo(endTime) \u003c 0;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Gets the time that this task is due."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return The time string input by the user"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return eventTime;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 83
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Represents the task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates a \u003ccode\u003eTask\u003c/code\u003e object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return A new task that has been marked as done"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Represents the done status of the task through icon."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return An icon"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        //return \"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"]\"; //return tick or X symbols"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return \"[\" + (isDone ? \"Done\" : \"Not done\") + \"]\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Notifies whether this task is done."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return True if this task is done, False otherwise"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return this.isDone;    "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Gets the description of this task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return The description of this task"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Gets the time which this task happens."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return An empty String if the task is of type Todo, else return the time string input by the user"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Represents the type of this task through an icon."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return An icon"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public abstract String getTypeIcon();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Converts the task to string."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return The string representation of this task"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 73
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Keeps track of the tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates a task list with elements."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks Elements of the task list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.tasks \u003d tasks;    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Creates a task list with no elements."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param task The task to be added"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Removes the task at the specified position and returns it."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param index The position of the task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return The removed task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return tasks.remove(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Gets the task at the specified position without removing it."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param index The position of the task"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return The task at that position"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Marks the task at the specified position as done."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param index The position of the task"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void markAsDone(int index) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        tasks.set(index, tasks.get(index).markAsDone());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Returns the size of the task list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return The size of the task list"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Converts the task list to string."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return The string representation of the task list"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String str \u003d \"\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            str +\u003d (i + 1) + \". \" + tasks.get(i).toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        str +\u003d tasks.size() + \". \" + tasks.get(tasks.size() - 1);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Selects tasks that matches the predicate."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param predicate The condition that the selected tasks have to fulfill"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return A new \u003ccode\u003eTaskList\u003c/code\u003e of the selected tasks"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public TaskList filter(Predicate\u003cTask\u003e predicate) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        ArrayList\u003cTask\u003e filtered \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            if (predicate.test(task)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                filtered.add(task);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return new TaskList(filtered);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 98
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Represents a todo task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Create a \u003ccode\u003eToDo\u003c/code\u003e object"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param description The description of the task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Represents the type of this task through an icon."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return An icon"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Converts the task to string."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return The string representation of this task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return getTypeIcon() + \" \" + super.getStatusIcon() + \" \" + super.description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 32
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " * Interacts with the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static String horizontalLine \u003d \"________________________________________\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Prints the welcome message"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String logo \u003d \" ____        _\" + System.lineSeparator()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____\" + System.lineSeparator()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\" + System.lineSeparator()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\" + System.lineSeparator()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\" + System.lineSeparator();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String greeting \u003d \"Hello human, I\u0027m Duke the supporting chatbot\" + System.lineSeparator()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + \"What can I do for you?\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Waits for the user to insert command and reads it."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @return A string represents the user\u0027s input"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public String requestCommand() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        System.out.println(\"Your command:\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Shows the items in the task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks The list of items to be shown"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void showTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String lazyHumanBash \u003d \"You have nothing in your list. Find something to do you human!\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String showTasksMsg \u003d \"Here are the task(s) in your list:\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            System.out.println(lazyHumanBash);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            System.out.println(showTasksMsg);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            System.out.println(tasks);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Notifies the user that the file cannot be loaded."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void showFileLoadingError() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        System.out.println(\"Data cannot be loaded\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Prints out any error message that passed in "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param errorMessage The error message to be printed "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Says goodbye to the user."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        System.out.println(\"Bye human. See you again soon!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Prints out the number of item in the task."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks The task"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void taskReport(TaskList tasks) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        System.out.println(\"You have \" + tasks.size() + \" task(s) in your list\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Notifies the user after successfully deleting a task."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param task The deleted task"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks The remaining task list"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void showDeleteTask(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve deleted this task:\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        taskReport(tasks);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Notifies the user after successfully marking a task as done."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param task The task being marked as done"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void showMarkAsDoneTask(Task task) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        System.out.println(\"Good job bud! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Notifies the user whenever the system cannot understand the input command."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void showUnrecognizedCommandMessage() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        System.out.println(\"I don\u0027t understand a single word you say, human!\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        System.out.println(\"Speak robot language pls\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Notifies the user after successfully add a task into a task list."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param task The added task"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks The task list"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void showAddSuccessful(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        taskReport(tasks);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * Show the user the result of a find command."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     * @param tasks The list of tasks that fulfill the requirement"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void showFindResult(TaskList tasks) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        System.out.println(\"Here are the matching task(s) in your list: \");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "            System.out.println(tasks.get(i));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 138
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assertEquals(2,2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 12
    }
  },
  {
    "path": "src/test/java/duke/command/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static final String TICK_ICON \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static final String CROSS_ICON \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void undoneDeadlineToString_taskDescription_stringPresentation() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Task test \u003d new Deadline(\"test task\", \"5 o\u0027clock\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String expected \u003d \"[D] [\" + CROSS_ICON + \"] test task (by: 5 o\u0027clock)\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String actual \u003d test.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void doneTaskToString_taskDescription_stringPresentation() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Task test \u003d new Deadline(\"test task\", \"5 o\u0027clock\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String expected \u003d \"[D] [\" + TICK_ICON + \"] test task (by: 5 o\u0027clock)\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String actual \u003d test.markAsDone().toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void doneTaskToString_validDateInput1_stringPresentation() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Task test \u003d new Deadline(\"test task\", \"20/04/2019\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String expected \u003d \"[D] [\" + CROSS_ICON + \"] test task (by: 20 Apr 2019)\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String actual \u003d test.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void doneTaskToString_validDateInput2_stringPresentation() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Task test \u003d new Deadline(\"test task\", \"20/4/2019\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String expected \u003d \"[D] [\" + CROSS_ICON + \"] test task (by: 20 Apr 2019)\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String actual \u003d test.toString();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 44
    }
  },
  {
    "path": "src/test/java/duke/command/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static final String TICK_ICON \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static final String CROSS_ICON \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void undoneTaskToString_taskDescription_stringPresentation() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Task test \u003d new ToDo(\"test task\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String expected \u003d \"[T] [\" + CROSS_ICON + \"] test task\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String actual \u003d test.toString(); "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void doneTaskToString_taskDescription_stringPresentation() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        Task test \u003d new ToDo(\"test task\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String expected \u003d \"[T] [\" + TICK_ICON + \"] test task\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String actual \u003d test.markAsDone().toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 29
    }
  },
  {
    "path": "src/test/java/duke/ui/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static final String TICK_ICON \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private static final String CROSS_ICON \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    // @author aidoxe-123"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    // As reference from https://github.com/nus-cs2103-AY2021S1/forum/issues/65"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    // Reused from https://www.baeldung.com/java-testing-system-out-println with minor modifications"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private final PrintStream standardOut \u003d System.out;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        System.setOut(new PrintStream(outputStreamCaptor));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void tearDown() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        System.setOut(standardOut);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    Task[] tasks \u003d {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "      new ToDo(\"read book\"),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "      new Deadline(\"submit project\", \"20/4/2019\"),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "      new Event(\"shoppee\", \"12/4/2019 to 02/9/2019\")      "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    };"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    ArrayList\u003cTask\u003e testSample \u003d new ArrayList\u003c\u003e(Arrays.asList(tasks));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    public void showTasks_3typesOfTasks_success() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        new Ui().showTasks(new TaskList(testSample));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String expected \u003d \"Here are the task(s) in your list:\" + System.lineSeparator()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + \"1. [T] [\" + CROSS_ICON + \"] read book\" + System.lineSeparator()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + \"2. [D] [\" + CROSS_ICON + \"] submit project (by: 20 Apr 2019)\" + System.lineSeparator()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                + \"3. [E] [\" + CROSS_ICON + \"] shoppee (at: from 12 Apr 2019 to 2 Sep 2019)\" + System.lineSeparator();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        String actual \u003d outputStreamCaptor.toString();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "        assertEquals(expected.replaceAll(\"\\\\p{Cntrl}\", \" \"), "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "                actual.replaceAll(\"\\\\p{Cntrl}\", \" \"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 56,
      "-": 1
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "deadline /by"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "deadline book /by"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "deadline book"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "deadline /by Sunday"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "event /at"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "event project meeting /at"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "event project meeting"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "event project /at"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "event /at Mon 2-4pm"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "done something else"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "delete 10"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "delete something else"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 24
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "REM delete the old data"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "del .\\test_data\\duke.txt"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "aidoxe-123": 6
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "# delete data from previous run"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "if [ -e \"./test_data/duke.txt\" ]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    rm ./test_data/duke.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "fi"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "if"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "    javac -cp ../src/main/java -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "  )"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "aidoxe-123": 14
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/command/Command.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/command/DeadlineCommand.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/command/DeleteCommand.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/command/DoneCommand.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/command/EventCommand.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/command/ExitCommand.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/command/FindCommand.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/command/ListCommand.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/command/TaskCreationCommand.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/command/ToDoCommand.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/Duke.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/exception/DukeException.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/exception/InadequateCommandException.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/exception/InvalidDateFormatException.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/exception/InvalidIndexException.java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/parser/DateParser.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/parser/Parser.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/storage/Storage.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/task/Deadline.java"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/task/Event.java"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/task/Task.java"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/task/TaskList.java"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/task/ToDo.java"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "../src/main/java/duke/ui/Ui.java"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 24
    }
  },
  {
    "path": "text-ui-test/test_data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "T D borrow book "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aidoxe-123"
        },
        "content": "E ND project meeting /time Mon 2-4pm"
      }
    ],
    "authorContributionMap": {
      "aidoxe-123": 2
    }
  }
]
